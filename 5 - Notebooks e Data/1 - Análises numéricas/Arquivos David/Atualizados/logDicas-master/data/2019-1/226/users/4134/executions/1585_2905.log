== TEST (2019-03-22 13:38:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

ladoa = int(input("Insira o lado a: "))
ladob = int(input("Insira o lado b: "))
ladoc = int(input("Insira o lado c: "))

semip = int(ladoa + ladob + ladoc)/2

area = (semip(semip-ladoa)*(semip - ladob)(semip - ladoc))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    ladoa = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:39:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

ladoa = int(input("Insira o lado a: "))
ladob = int(input("Insira o lado b: "))
ladoc = int(input("Insira o lado c: "))

semip = int(ladoa + ladob + ladoc)/2

area = float(semip(semip-ladoa)*(semip - ladob)(semip - ladoc))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    ladoa = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:40:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Insira o lado a: "))
b = int(input("Insira o lado b: "))
c = int(input("Insira o lado c: "))

s = (ladoa + ladob + ladoc)/2

area = float(s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:40:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Insira o lado a: "))
b = int(input("Insira o lado b: "))
c = int(input("Insira o lado c: "))

s = (a+b+c)/2

area = float(s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:41:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Insira o lado a: "))
b = int(input("Insira o lado b: "))
c = int(input("Insira o lado c: "))

s = (a+b+c)/2

area = (s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 13:41:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a+b+c)/2

area = (s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- EXECUTION TIME:
0.171117
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1585/2905/main.py", line 11, in <module>
    area = (s(s-a)*(s-b)(s-c))**0.5
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:42:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a+b+c)/2

area = (s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    area = (s(s-a)*(s-b)(s-c))**0.5
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:42:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2

area = (s(s-a)*(s-b)(s-c))**0.5

print(round(area, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    area = (s(s-a)*(s-b)(s-c))**0.5
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:43:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2

area = (s*(s-a)*(s-b)*(s-c))**0.5

print(round(area, 2))

-- OUTPUT:
69.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 13:43:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2

area = (s*(s-a)*(s-b)*(s-c))**0.5

print(round(area, 2))

-- EXECUTION TIME:
0.149246
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.42
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.17
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:45:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2

from math import*

area = sqrt((s*(s-a)*(s-b)*(s-c)))



-- OUTPUT:
69.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:46:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2

from math import*

area = sqrt((s*(s-a)*(s-b)*(s-c)))

print(area)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:46:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


print(s)


-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:47:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


from math import*

area = math.sqrt((s*(s-a)*(s-b)*(s-c)))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    area = math.sqrt((s*(s-a)*(s-b)*(s-c)))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:47:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = math.sqrt((s*(s-a)*(s-b)*(s-c)))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    area = math.sqrt((s*(s-a)*(s-b)*(s-c)))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:48:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = math.sqrt((s*(s-a)*(s-b)*(s-c)))

print(area)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:50:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = math.sqrt(s*(s-a)*(s-b)*(s-c))

print(area)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:55:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = math.sqrt(s*(s-a)*(s-b)*(s-c))

print(area)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:56:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = math.sqrt(s*(s-a)*(s-b)*(s-c))

print(area)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:56:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = int(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(area)

-- OUTPUT:
69
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 13:56:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = int(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(area)

-- EXECUTION TIME:
0.16219
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:57:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 13:57:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- EXECUTION TIME:
0.13328
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:58:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:59:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


from <math> import

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- ERROR:
File "XXXX", line 12
    from <math> import
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 13:59:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


from math import

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- ERROR:
File "XXXX", line 12
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:12:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:13:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 11:13:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = (a + b + c)/2


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- EXECUTION TIME:
0.136776
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:13:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = float((a + b + c)/2)


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:13:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Insira o lado a: "))
b = float(input("Insira o lado b: "))
c = float(input("Insira o lado c: "))

s = float((a + b + c)/2)


import math

area = float(math.sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
