== TEST (2019-03-21 12:24:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = float(input("Dividendo: "))
var2 = float(input("Divisor: "))
var3 = (var1//var2)
var4 = (var1%var2)



-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:26:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
print(quociente = (var1//var2))
print(resto = (var1%var2))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(quociente = (var1//var2))
TypeError: 'quociente' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:27:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
quociente = (var1//var2)
resto = (var1%var2)

print(quociente)
print(resto)

-- OUTPUT:
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:27:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
quociente = (var1//var2)
resto = (var1%var2)

print(quociente)
print(resto)

-- EXECUTION TIME:
0.216926
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
173
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:28:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
quociente = (var1//var2)
resto = (var1%var2)

print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(dividendo)
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:29:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
dividendo = var1
divisor = var2
quociente = (var1//var2)
resto = (var1%var2)

print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 12:29:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
dividendo = var1
divisor = var2
quociente = (var1//var2)
resto = (var1%var2)

print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 12:29:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input("Dividendo: "))
var2 = int(input("Divisor: "))
dividendo = var1
divisor = var2
quociente = (var1//var2)
resto = (var1%var2)

print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- EXECUTION TIME:
0.171238
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
