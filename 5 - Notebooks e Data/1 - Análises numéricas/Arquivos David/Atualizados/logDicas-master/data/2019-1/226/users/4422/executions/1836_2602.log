== TEST (2019-06-27 10:20:06) 
-- CODE:
from numpy import *
from numpy.linalg import *
ali = int(input("Dimensao da matriz: "))

cons = array([[ 2, 1], [ 1, 2], [ 2, 3]])
cons = cons.T

res = dot(inv(ali), cons)

print("estafilococo: ", round(res[0], 1))
print("salmonela: ", round(res[1], 1))
print("coli: ", round(res[2], 1))

if(res[0] == min(ali)):
	print("estafilococo")
elif(res[1] == min(ali)):
	print("salmonela")
else:
	print("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:21:14) 
-- CODE:
from numpy import *
from numpy.linalg import *
ali = array(eval(input("Dimensao da matriz: "))

cons = array([[ 2, 1], [ 1, 2], [ 2, 3]])
cons = cons.T

res = dot(inv(ali), cons)

print("estafilococo: ", round(res[0], 1))
print("salmonela: ", round(res[1], 1))
print("coli: ", round(res[2], 1))

if(res[0] == min(ali)):
	print("estafilococo")
elif(res[1] == min(ali)):
	print("salmonela")
else:
	print("coli")

-- ERROR:
File "XXXX", line 5
    cons = array([[ 2, 1], [ 1, 2], [ 2, 3]])
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:21:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
ali = array(eval(input("Dimensao da matriz: "))

cons = array([[ 2, 1], [ 1, 2], [ 2, 3]])
cons = cons.T

res = dot(inv(ali), cons)

print("estafilococo: ", round(res[0], 1))
print("salmonela: ", round(res[1], 1))
print("coli: ", round(res[2], 1))

if(res[0] == min(ali)):
	print("estafilococo")
elif(res[1] == min(ali)):
	print("salmonela")
else:
	print("coli")

-- ERROR:
File "XXXX", line 5
    cons = array([[ 2, 1], [ 1, 2], [ 2, 3]])
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:21:43) 
-- CODE:
from numpy import *
from numpy.linalg import *
ali = array(eval(input("Dimensao da matriz: "))

cons = array([[2, 1], [1, 2], [2, 3]])
cons = cons.T

res = dot(inv(ali), cons)

print("estafilococo: ", round(res[0], 1))
print("salmonela: ", round(res[1], 1))
print("coli: ", round(res[2], 1))

if(res[0] == min(ali)):
	print("estafilococo")
elif(res[1] == min(ali)):
	print("salmonela")
else:
	print("coli")

-- ERROR:
File "XXXX", line 5
    cons = array([[2, 1], [1, 2], [2, 3]])
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:29:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("X,Y,Z: ")))
comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]]

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")			  
-- ERROR:
File "XXXX", line 7
    aliment = dot(inv(comid), ali.T)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:29:47) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("X,Y,Z: ")))
ali = ali.T
comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]]

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")			  
-- ERROR:
File "XXXX", line 8
    aliment = dot(inv(comid), ali.T)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:30:31) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("X,Y,Z: ")))
ali = ali.T
comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]]

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")			  
-- ERROR:
File "XXXX", line 8
    aliment = dot(inv(comid), ali.T)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:31:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("manda: ")))
ali = ali.T
comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]]

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")			  
-- ERROR:
File "XXXX", line 8
    aliment = dot(inv(comid), ali.T)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:32:50) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("manda: ")))
ali = ali.T

comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]]

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 9
    aliment = dot(inv(comid), ali.T)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:34:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("manda: ")))
ali = ali.T

comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 10:34:52) 
-- CODE:
from numpy import *
from numpy.linalg import *

ali = array(eval(input("manda: ")))
ali = ali.T

comid = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])

aliment = dot(inv(comid), ali.T)
				  
print("estafilococo: ", round(aliment[0], 1))
print("salmonela: ", round(aliment[1], 1))
print("coli: ", round(aliment[2], 1))
				  
if(aliment[0] == min(aliment)):
	print("estafilococo")
elif(aliment[1] == min(aliment)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.0792
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
