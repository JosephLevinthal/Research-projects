== TEST (2019-04-10 21:54:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*


V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g
	  


-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:54:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*


V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g
	  
print(r)

-- ERROR:
File "XXXX", line 15
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:54:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*


V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g
print(r)

-- ERROR:
File "XXXX", line 14
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:55:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*


V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g

	  print(r)

-- ERROR:
File "XXXX", line 15
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:55:30) 
-- CODE:
from math import*


V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g

print(r)

-- ERROR:
File "XXXX", line 12
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:56:04) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((v0**2) * (sin*(2*rad))/g

print(r)

-- ERROR:
File "XXXX", line 11
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:59:24) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

r = ((V0**2) * (sin*(2*rad))/g

print(r)

-- ERROR:
File "XXXX", line 11
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:00:01) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = ((V0**2) * (sin*(2*rad))/g

print(R)

-- ERROR:
File "XXXX", line 11
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:00:27) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = (((V0**2) * (sin*(2*rad))/g)

print(R)

-- ERROR:
File "XXXX", line 11
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:03:16) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = V0**2 * (sin*(2*rad))/g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = V0**2 * (sin*(2*rad))/g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:03:49) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = V0**2 * (sin*(2*rad))/g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = V0**2 * (sin*(2*rad))/g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:04:17) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = (V0**2) * (sin*(2*rad))/g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = (V0**2) * (sin*(2*rad))/g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:04:32) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = (V0**2) * (sin*(2*rad)) / g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = (V0**2) * (sin*(2*rad)) / g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:05:28) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = (V0 ** 2) * (sin * (2 * rad)) / g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = (V0 ** 2) * (sin * (2 * rad)) / g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:06:51) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))

rad = radians(a)
g = 9.8

R = ((V0)** 2) * (sin * (2 * rad)) / g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = ((V0)** 2) * (sin * (2 * rad)) / g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:09:23) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distanci horizontal: "))

rad = radians(a)
g = 9.8

R = ((V0)** 2) * (sin * (2 * rad)) / g

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R = ((V0)** 2) * (sin * (2 * rad)) / g
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:11:48) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distanci horizontal: "))

g = 9.8

R = (V0** 2) * (sin * (2 * radians(a)) / g

print(R)

-- ERROR:
File "XXXX", line 11
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:12:04) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distanci horizontal: "))

g = 9.8

R = (V0** 2)*(sin*(2 * radians(a))/g

print(R)

-- ERROR:
File "XXXX", line 11
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:12:15) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distanci horizontal: "))

R = (V0** 2)*(sin*(2 * radians(a))/9.8

print(R)

-- ERROR:
File "XXXX", line 9
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:12:28) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = (V0** 2)*(sin*(2 * radians(a))/9.8

print(R)

-- ERROR:
File "XXXX", line 9
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:12:46) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = (V0** 2)*(sin*(2*(radians(a))/9.8

print(R)

-- ERROR:
File "XXXX", line 9
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:12:59) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = (sin*(2*(radians(a))/9.8

print(R)

-- ERROR:
File "XXXX", line 9
    print(R)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:14) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = sin*radians(a)

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:24) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = sin*radians(a)

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:34) 
-- CODE:
from math import*

V0 = float(input("velocidade inicial: "))
a = float(input("angulo: "))
d = float(input(" distancia horizontal: "))

R = sin*radians(a)

print(R)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:49) 
-- CODE:
from math import*


a = float(input("angulo: "))
R = sin*radians(a)

print(R)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:55) 
-- CODE:
from math import*


a = float(input("angulo: "))
R = sin*radians(a)

print(R)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:13:59) 
-- CODE:
from math import*


a = float(input("angulo: "))
R = sin*radians(a)

print(R)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:14:02) 
-- CODE:
from math import*


a = float(input("angulo: "))
R = sin*radians(a)

print(R)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    R = sin*radians(a)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:14:18) 
-- CODE:
from math import*


a = float(input("angulo: "))

R = sin(*radians(a))

print(R)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    R = sin(*radians(a))
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:14:36) 
-- CODE:
from math import*


a = float(input("angulo: "))

R = sin(radians(a))

print(R)



-- OUTPUT:
0.18223552549214747
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:17:28) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sen(2*(radians(a)))) / 9.8

print(r)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    r = (v0**2) * (sen(2*(radians(a)))) / 9.8
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:17:44) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

print(r)

-- OUTPUT:
11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:23:32) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d)

if (r == 20)
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- ERROR:
File "XXXX", line 12
    if (r == 20)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:23:43) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d)

if (r == 20):
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:23:51) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d)

if (r == 20):
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 22:24:10) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d)

if (r == 20):
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- EXECUTION TIME:
0.14711
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 22:26:29) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 20):
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- EXECUTION TIME:
0.166205
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:26:32) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 20):
	mesagem = "sim"
else:
	mensagem = "nao"
print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:27:01) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 20):
	mesagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:27:19) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 20):
	mesagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:27:52) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 0.1)
	mesagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- ERROR:
File "XXXX", line 12
    if (D == 0.1)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:27:58) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(d-r)

if (D == 0.1):
	mesagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:51:11) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r)

if (D == r ):
	mesagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:51:40) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r)

if (D == r ):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:52:34) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r)

if (d == D ):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 00:52:49) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r)

if (d == D ):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- EXECUTION TIME:
0.188011
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:52:52) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r)

if (d == D ):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:54:08) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r - d)

if ( D > 0.1):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 00:54:30) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r - d)

if ( D < 0.1):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 00:54:47) 
-- CODE:
from math import*


v0 = float(input("velocidade: "))
a = float(input("angulo: "))
d = float(input("distancia: "))

r = (v0**2) * (sin(2*(radians(a)))) / 9.8

D = abs(r - d)

if ( D < 0.1):
	mensagem = "sim"
else:
	mensagem = "nao"

print(mensagem)

-- EXECUTION TIME:
0.144782
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
