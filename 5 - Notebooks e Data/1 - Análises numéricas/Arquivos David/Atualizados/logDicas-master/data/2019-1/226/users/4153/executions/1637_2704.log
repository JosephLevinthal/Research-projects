== TEST (2019-04-09 10:38:49) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N))


-- ERROR:
File "XXXX", line 2
    bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N))
                                                                         ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:42:01) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N)")

if(bonificacao.upper() == S):
	acrescimo = nota + (nota * 0.10)
else:
	acrescimo = nota

print(acrescimo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(bonificacao.upper() == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:42:42) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N)")

if(bonificacao.upper() == S):
	acrescimo = nota + (nota * 0.10)
else:
	acrescimo = nota

print(acrescimo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(bonificacao.upper() == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:26) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N)")

if(bonificacao.upper() == "S):
	acrescimo = nota + (nota * 0.10)
else:
	acrescimo = nota

print(acrescimo)
-- ERROR:
File "XXXX", line 4
    if(bonificacao.upper() == "S):
                                 ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:43:38) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N)")

if(bonificacao.upper() == "S"):
	acrescimo = nota + (nota * 0.10)
else:
	acrescimo = nota

print(acrescimo)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:43:46) 
-- CODE:
nota = float(input("Insira a nota do aluno: "))
bonificacao = input("Diga se o alura vai receber a bonificacao: (S/N)")

if(bonificacao.upper() == "S"):
	acrescimo = nota + (nota * 0.10)
else:
	acrescimo = nota

print(acrescimo)
-- EXECUTION TIME:
0.140756
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
