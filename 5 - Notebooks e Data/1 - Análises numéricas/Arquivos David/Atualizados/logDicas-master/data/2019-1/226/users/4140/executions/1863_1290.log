== TEST (2019-07-02 11:09:11) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,6,12],[12,8,12],[15,12,18]])
vet=array(eval(input()))
vet=vet/60
vet=vet.T

a=dot(inv(mat),vet)
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:12:50) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:15:33) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet

a=dot(inv(mat),vet)
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:15:56) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:18:53) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:19:25) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:19:51) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:21:05) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60
vet=vet.T

a=dot(inv(mat),vet)
print(a[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:27:01) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:'round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- EXECUTION TIME:
0.666004
-- ERROR:
  File "/home/codebench/codes/1863/1290/main.py", line 11
    print('mesa:'round(a[2],0))
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:27:53) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:'round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- ERROR:
File "XXXX", line 11
    print('mesa:'round(a[2],0))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:14) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:28:20) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- EXECUTION TIME:
0.96107
-- TEST CASE 1:
---- input:
[337.95,255.26666667,392.5]
---- correct output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
mesa
---- user output:
cadeira: -28698.0
bau: 36439.0
mesa: -8667.0
-- TEST CASE 2:
---- input:
[697.25,467.33333333,706.1]
---- correct output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
bau
---- user output:
cadeira: -3168.0
bau: 7352.0
mesa: -981.0
-- TEST CASE 3:
---- input:
[3179.23333333,2196.4,3770.2]
---- correct output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
cadeira
---- user output:
cadeira: -154828.0
bau: 206547.0
mesa: -49302.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:28:23) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,8]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:29:09) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,18]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- EXECUTION TIME:
0.886803
-- TEST CASE 1:
---- input:
[337.95,255.26666667,392.5]
---- correct output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
mesa
---- user output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
-- TEST CASE 2:
---- input:
[697.25,467.33333333,706.1]
---- correct output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
bau
---- user output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
-- TEST CASE 3:
---- input:
[3179.23333333,2196.4,3770.2]
---- correct output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
cadeira
---- user output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:29:14) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,18]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print(mesa)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:29:46) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,18]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print('mesa')
-- EXECUTION TIME:
1.03222
-- TEST CASE 1:
---- input:
[337.95,255.26666667,392.5]
---- correct output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
mesa
---- user output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
-- TEST CASE 2:
---- input:
[697.25,467.33333333,706.1]
---- correct output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
bau
---- user output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
-- TEST CASE 3:
---- input:
[3179.23333333,2196.4,3770.2]
---- correct output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
cadeira
---- user output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 11:29:57) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,18]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(vet):
	print("cadeira")
elif a[1]==max(vet):
	print("bau")
elif a[2]==max(vet):
	print('mesa')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 11:30:43) 
-- CODE:
from numpy import *
from numpy.linalg import*
mat=array([[10,12,15],[6,8,12],[12,12,18]])
vet=array(eval(input()))
vet=vet*60


a=dot(inv(mat),vet.T)
print("cadeira:",round(a[0],0))
print("bau:",round(a[1],0))
print('mesa:',round(a[2],0))
if a[0]==max(a):
	print("cadeira")
elif a[1]==max(a):
	print("bau")
elif a[2]==max(a):
	print('mesa')
-- EXECUTION TIME:
0.89064
-- TEST CASE 1:
---- input:
[337.95,255.26666667,392.5]
---- correct output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
mesa
---- user output:
cadeira: 192.0
bau: 326.0
mesa: 963.0
mesa
-- TEST CASE 2:
---- input:
[697.25,467.33333333,706.1]
---- correct output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
bau
---- user output:
cadeira: 102.0
bau: 3265.0
mesa: 109.0
bau
-- TEST CASE 3:
---- input:
[3179.23333333,2196.4,3770.2]
---- correct output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
cadeira
---- user output:
cadeira: 9512.0
bau: 1122.0
mesa: 5478.0
cadeira
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
