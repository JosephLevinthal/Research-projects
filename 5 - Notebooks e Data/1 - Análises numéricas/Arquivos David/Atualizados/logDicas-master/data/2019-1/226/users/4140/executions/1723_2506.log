== TEST (2019-05-13 15:00:09) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qrestirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    tmbq1=tmbq1+soma-qretirada
NameError: name 'qretirada' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:00:55) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:01:11) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.199697
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:01:29) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:01:53) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.143099
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:02:03) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:03:06) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<=12000 and tmbq1>=0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.225248
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:10) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<=12000 and tmbq1>=0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:36) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=float(input())
i=0
while(tmbq1<=12000 and tmbq1>=0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:03:53) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<=12000 and tmbq1>=0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.209685
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:04:08) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<=12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:04:15) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<=12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.147653
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:06:14) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:06:26) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:07:04) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:07:46) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:08:44) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:08:57) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- EXECUTION TIME:
0.16103
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:08:58) 
-- CODE:
#ate 12.000 tmbq
#crescimento =taxa de nascimento-taxa de morte 
#retirada anual

tmbq1=int(input())
percres=float(input())
qretirada=int(input())
i=0
while(tmbq1<12000 and tmbq1>0):
	soma=tmbq1*(percres/100)
	tmbq1=tmbq1+soma-qretirada
	i=i+1
if(tmbq1<=0):
	print("EXTINCAO")
if(tmbq1>=12000):
	print("LIMITE")
	print(i)

-- OUTPUT:
EXTINCAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:22:09) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")

-- OUTPUT:
EXTICAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:22:15) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")

-- OUTPUT:
EXTICAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:22:56) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")

-- EXECUTION TIME:
0.182935
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:30:28) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.211681
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:30:33) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- OUTPUT:
EXTICAO
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:15:37) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.192198
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:24:42) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.165948
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:25:17) 
-- CODE:
tmbq=int(input())
tcresc=float(input())

i=0
while(tmbq<12000 and tmbq>0):
	qvendida=int(input())
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.19627
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2506/main.py", line 6, in <module>
    qvendida=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:25:38) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>=12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.139642
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:09:41) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000):
	print("LIMITE")
	print(i)
else:
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.119081
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:12:38) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0)
	print("EXTICAO")
	print(i)

-- ERROR:
File "XXXX", line 12
    if(tmbq<=0)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:13:29) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0)
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.183162
-- ERROR:
  File "/home/codebench/codes/1723/2506/main.py", line 12
    if(tmbq<=0)
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:13:33) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0)
	print("EXTICAO")
	print(i)

-- ERROR:
File "XXXX", line 12
    if(tmbq<=0)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:13:44) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0):
	print("EXTICAO")
	print(i)

-- EXECUTION TIME:
0.216769
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTICAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:13:49) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0):
	print("EXTICAO")
	print(i)

-- OUTPUT:
EXTICAO
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 10:15:57) 
-- CODE:
tmbq=int(input())
tcresc=float(input())
qvendida=int(input())
i=0
while(tmbq<=12000 and tmbq>0):
	soma=tmbq*(tcresc/100)
	tmbq=soma+tmbq-qvendida
	i=i+1
if(tmbq>12000 ):
	print("LIMITE")
	print(i)
if(tmbq<=0):
	print("EXTINCAO")
	print(i)

-- EXECUTION TIME:
0.122171
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
