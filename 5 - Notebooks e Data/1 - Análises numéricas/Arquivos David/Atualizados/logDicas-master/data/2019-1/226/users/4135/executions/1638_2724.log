== TEST (2019-04-16 01:44:08) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio<n2<n3):
	meio = n2
if (meio<n3<n2):
	meio = 3
print (meio)	
-- OUTPUT:
258.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 01:44:16) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio<n2<n3):
	meio = n2
if (meio<n3<n2):
	meio = 3
print (meio)	
-- EXECUTION TIME:
0.15616
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
258
---- user output:
258.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
77
---- user output:
99.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
456
---- user output:
456.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 01:44:31) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio<n2<n3):
	meio = n2
if (meio<n3<n2):
	meio = n3
print (meio)	
-- EXECUTION TIME:
0.14997
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
258
---- user output:
258.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
77
---- user output:
99.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
456
---- user output:
456.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 01:44:43) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio<n2<n3):
	meio = n2
if (meio<n3<n2):
	meio = n3
print (meio)	
-- EXECUTION TIME:
0.145629
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
258
---- user output:
258.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
77
---- user output:
99.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
456
---- user output:
456.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:46:12) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (n2<meio<n3):
	meio = n1
if (meio<n2<n3):
	meio = n2
if (meio<n3<n2):
	meio = n3
print (meio)	
-- OUTPUT:
258.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:51:53) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (n2<meio):
	meio = n1
if (meio>n3):
	meio = n1
if (n2>meio):
	meio = n2
if (n2<n3):
	meio = n2
if (n3>meio):	
	meio = n3
if (n3<n2):
	meio = n3
print (meio)	

-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:55:50) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio>n2):
	meio = n2
if (meio>n3):
	meio = n3
if (meio<n2):
	meio = n2
if (meio<n3):
	meio = n3
print (meio)	

-- OUTPUT:
788.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 01:56:00) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (meio>n2):
	meio = n2
if (meio>n3):
	meio = n3
if (meio<n2):
	meio = n2
if (meio<n3):
	meio = n3
print (meio)	

-- EXECUTION TIME:
0.203563
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
258
---- user output:
788.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
77
---- user output:
77.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
456
---- user output:
789.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 01:59:55) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
meio = n1
if (n2<meio):
	meio = n1
if (meio<n3):
	meio = n1
if (n2>meio):
	meio = n2
if (n2<n3):
	meio = n2
if (n3>meio):	
	meio = n3
if (n3<n2):
	meio = n3
print (meio)	

-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 02:03:31) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
if (n2<n1):
	meio = n1
if (n1<n3):
	meio = n1
if (n2>n1):
	meio = n1
if (n3<n1):
	meio = n1
print (meio)	

-- OUTPUT:
258.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 04:29:46) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:")).
maior = n1
menor = n1
meio = n1
if (maior<n2):
	maior = n2
if (maior<n3):
	maior = n3
if (menor>n2):
	menor = n2
if (menor>n3):
	menor = n3
else: 
	meio = ( n1 + n2 + n3) - (maior+menor)
print (meio)	
	

-- EXECUTION TIME:
0.128629
-- ERROR:
  File "/home/codebench/codes/1638/2724/main.py", line 3
    n3 = float(input()).
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 04:30:03) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:")).
maior = n1
menor = n1
meio = n1
if (maior<n2):
	maior = n2
if (maior<n3):
	maior = n3
if (menor>n2):
	menor = n2
if (menor>n3):
	menor = n3
else: 
	meio = ( n1 + n2 + n3) - (maior+menor)
print (meio)	
	

-- EXECUTION TIME:
0.141866
-- ERROR:
  File "/home/codebench/codes/1638/2724/main.py", line 3
    n3 = float(input()).
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 04:30:41) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:")).
maior = n1
menor = n1
meio = n1
if (maior<n2):
	maior = n2
if (maior<n3):
	maior = n3
if (menor>n2):
	menor = n2
if (menor>n3):
	menor = n3
else: 
	meio = ( n1 + n2 + n3) - (maior+menor)
print (meio)	
	

-- EXECUTION TIME:
0.130037
-- ERROR:
  File "/home/codebench/codes/1638/2724/main.py", line 3
    n3 = float(input()).
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:25:53) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:")).
MAX = max(n1,n2,n3)
MIN = min(n1,n2,n3)
meio = (n1+n2+n3)-(MAX+MIN)
print(meio)
-- EXECUTION TIME:
0.143591
-- ERROR:
  File "/home/codebench/codes/1638/2724/main.py", line 3
    n3 = float(input("Digite um numero n3:")).
                                             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:33:49) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:")).
MAX = max(n1,n2,n3)
MIN = min(n1,n2,n3)
meio = (n1+n2+n3)-(MAX+MIN)
print(meio)
-- ERROR:
File "XXXX", line 3
    n3 = float(input()).
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 10:34:05) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
MAX = max(n1,n2,n3)
MIN = min(n1,n2,n3)
meio = (n1+n2+n3)-(MAX+MIN)
print(meio)
-- OUTPUT:
258.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 10:34:09) 
-- CODE:
n1 = float(input("Digite um numero n1:"))
n2 = float(input("Digite um numero n2:"))
n3 = float(input("Digite um numero n3:"))
MAX = max(n1,n2,n3)
MIN = min(n1,n2,n3)
meio = (n1+n2+n3)-(MAX+MIN)
print(meio)
-- EXECUTION TIME:
0.181332
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
258
---- user output:
258.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
77
---- user output:
77.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
456
---- user output:
456.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
