== TEST (2019-04-08 19:13:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (25/100)
	msg = desc
else:
	msg = pcr
print(msg)	
-- OUTPUT:
50.0225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:13:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (25/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(msg)	
-- OUTPUT:
150.0675
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:13:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(msg)	
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:14:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(msg)	
-- EXECUTION TIME:
0.110331
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(msg)	
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:14:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(round(msg, 2)	
-- EXECUTION TIME:
0.123167
-- ERROR:
  File "/home/codebench/codes/1638/869/main.py", line 13
    
                        ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(round(msg, 2)	
-- ERROR:
File "XXXX", line 13
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(round(msg, 2))	
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:14:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Preco do produto:"))

if( pcr >= 200 ):
	desc = pcr * (5/100)
	desc1 = pcr - desc
	msg = desc1
else:
	msg = pcr
print(round(msg, 2))	
-- EXECUTION TIME:
0.164376
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
