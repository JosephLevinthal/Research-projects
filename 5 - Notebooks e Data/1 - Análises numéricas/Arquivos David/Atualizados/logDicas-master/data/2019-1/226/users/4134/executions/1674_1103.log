== TEST (2019-04-30 10:20:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	elif (x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	elif (x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	elif (x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:20:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	elif (x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:21:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	elif (x>=a) or (x>=b)
			print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:22:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (a<=x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:23:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if ((x>=a)and (x>=b)):
		print(x, "pertence ao intervalo", a ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:24:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 12
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:25:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 15
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
	else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 15
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
		else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 15
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:26:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 15
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:26:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a)and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		(x>=a) or (x>=b)
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- EXECUTION TIME:
0.182879
-- ERROR:
  File "/home/codebench/codes/1674/1103/main.py", line 15
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:27:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a "," b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 14
    print(x, "nao pertence ao invervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:28:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a ",", b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 14
    print(x, "nao pertence ao invervalo", a ",", b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:28:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a "e", b, "invalidos")
-- ERROR:
File "XXXX", line 16
    print("Entradas", a "e", b, "invalidos")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:28:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidos")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:28:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:28:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.217937
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:28:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:29:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.188616
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:29:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.176249
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:29:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:29:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",", b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.142313
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:30:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:30:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.113477
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:31:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:31:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b>a):
	if (x>=a) and (x<=b):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.18805
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:33:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((x>=a) and (x<=b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 10:33:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((x>=a) and (x<=b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.143641
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 10:33:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((x>=a) and (x<=b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:10:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((x >= a) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
		print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:10:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((x >= a) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
		print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.168812
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:13:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((a<=x)) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.193778
-- ERROR:
  File "/home/codebench/codes/1674/1103/main.py", line 11
    if ((a<=x)) and (x <= b)):
                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:13:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if ((a<=x)) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- ERROR:
File "XXXX", line 11
    if ((a<=x)) and (x <= b)):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:14:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (((a<=x)) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:14:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (((a<=x)) and (x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	else:
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.193956
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:25:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (((a <= x <= b)):
		print(x, "pertence ao intervalo", a, ",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- ERROR:
File "XXXX", line 11
    if (((a <= x <= b)):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:25:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (a <= x <= b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.135841
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:25:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (a <= x <= b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:25:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b > a):
	if (a <= x <= b):
		print(x, "pertence ao intervalo", a, ",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a, ",",b)
else:
	print("Entradas", a,  "e", b, "invalidas")
-- EXECUTION TIME:
0.172526
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:29:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b >a):
	if (a<= x <= b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:29:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b >a):
	if (a<= x <= b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:29:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.


x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b >a):
	if (a<= x <= b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- EXECUTION TIME:
0.110358
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:36:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b >a):
	if (a<= x <= b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- OUTPUT:
2.0 nao pertence ao invervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:36:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero x: "))
a = float(input("digite o numero a: "))
b = float(input("digite o numero b: "))

if (b >a):
	if (a<= x <= b):
		print( x, "pertence ao intervalo", a,",", b)
	elif ((x<a) or (x>b)):
		print(x, "nao pertence ao invervalo", a,",", b)
else:
	print("Entradas", a,"e",b,"invalidas")
-- EXECUTION TIME:
0.202624
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao invervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
