== TEST (2019-03-21 21:29:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(min(2,4,6)))
int(input(max(2,4,6)))

print((2+4+6) - (2-6))


-- OUTPUT:
2616
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:32:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))

print((2+4+6) - (2-6))


-- OUTPUT:
616
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:32:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))

print((2+4+6) - (2-6))


-- OUTPUT:
616
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:32:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))

equacao = (2+4+6) - (2-6)
print(equacao)


-- OUTPUT:
616
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:32:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))

equacao = (2+4+6) - (2-6)
print(equacao)


-- EXECUTION TIME:
0.112238
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
616
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:33:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))
int(input(min(2,4,6)))
equacao = (2+4+6) - (2-6)
print(equacao)


-- EXECUTION TIME:
0.144617
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
6216
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:33:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
int(input(max(2,4,6)))
int(input(min(2,4,6)))
equacao = (2+4+6) - (2-6)
print(equacao)


-- OUTPUT:
6216
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:38:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
min(lista)
max(lista)

equacao = (num1 + num2 + num3) - min - max

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    equacao = (num1 + num2 + num3) - min - max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:38:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
min(lista)
max(lista)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    equacao = (num1 + num2 + num3) - min - max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:38:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
print(min(lista))
print(max(lista))


-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:42:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num4 - num5)
print(equacao)
-- OUTPUT:
-2
10
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:42:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num4 - num5)
print(equacao)
-- EXECUTION TIME:
0.11789
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:43:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num4 - num5)
print(equacao)
-- OUTPUT:
-2
10
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:44:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num5 - num4)
print(equacao)
-- OUTPUT:
-2
10
-4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:44:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num5 - num4)
print(equacao)
-- EXECUTION TIME:
0.146684
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
-4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:45:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num5 + num4)
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:45:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num5 + num4)
print(equacao)
-- EXECUTION TIME:
0.219811
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:46:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3) - (num5 + num4)
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:47:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = num1 + num2 + num3 - num5 - num4
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:47:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:48:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:48:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(max(lista))
print(min(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
-- OUTPUT:
10
-2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:49:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))
print(max(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 21:50:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)

print(max(lista))
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 21:50:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

num1 = int(input("Valor1: "))
num2 = int(input("Valor2: "))
num3 = int(input("Valor3: "))

lista = (num1, num2, num3)
num4 = min(lista)
num5 = max(lista)
print(min(lista))

equacao = (num1 + num2 + num3 - num5 - num4)
print(equacao)

print(max(lista))
-- EXECUTION TIME:
0.13623
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
