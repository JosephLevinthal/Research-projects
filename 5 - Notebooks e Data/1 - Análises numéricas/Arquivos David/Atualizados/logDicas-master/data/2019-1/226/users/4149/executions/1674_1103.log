== TEST (2019-05-01 14:58:11) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(X,"pertence ao intervalo",a,",",b)
	else:
		print(X,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:27) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(X,"pertence ao intervalo",a,",",b)
		else:
		print(X,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:34) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(X,"pertence ao intervalo",a,",",b)
		else:
			print(X,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:59:24) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(X,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(X,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:59:55) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:00:07) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a"))
b=float(input("valor b"))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.170009
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:

-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:00:20) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:01:05) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:01:22) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:01:33) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:02:16) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:03:31) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)or(a>x)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:03:56) 
-- CODE:
x=float(input("valor x "))
a=float(input("valor a "))
b=float(input("valor b "))

if((b<=a)):
	print("Entradas",a,"e",b,"invalidas")
elif((a<=x<=b)):
	print(x,"pertence ao intervalo",a,",",b)
elif((x>b)or(a>x)):
	print(x,"nao pertence ao intervalo",a,",",b)
-- EXECUTION TIME:
0.175907
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
