== TEST (2019-06-12 13:40:50) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    for i in range(n):
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:43:29) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(len(n)>=8):
	elif(n[i].islower()):
	elif(n[i].isupper()):
		print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 4
    elif(n[i].islower()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:43:40) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(len(n)>=8):
		elif(n[i].islower()):
		elif(n[i].isupper()):
			print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 4
    elif(n[i].islower()):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:43:56) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(len(n)>=8):
		if(n[i].islower()):
		elif(n[i].isupper()):
			print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:44:11) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    for i in range(n):
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:47:13) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(n[i].islower()):
		if(n[i].isupper()):
			if(len(n)>=8):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    for i in range(n):
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:47:22) 
-- CODE:
n = input("digite a senha: ")
for i in range(n):
	if(n[i].islower()):
		if(n[i].isupper()):
			if(len(n)>=8):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    for i in range(n):
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:49:33) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(n[i].islower()):
		if(n[i].isupper()):
			if(len(n)>=8):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
SENHA INVALIDA
SENHA INVALIDA
SENHA INVALIDA
SENHA INVALIDA
SENHA INVALIDA
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:51:39) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		elif(n[i].islower()):
		elif(n[i].isupper()):
			print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 4
    elif(n[i].islower()):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:51:56) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
		elif(n[i].isupper()):
			print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:52:14) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:52:43) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:52:44) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:52:44) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
	else:
		print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 5
    elif(n[i].isupper()):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:52:58) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:53:17) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:53:31) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n[i].islower()):
			if(n[i].isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:54:30) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n.islower()):
			if(n.isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:54:40) 
-- CODE:
n = input("digite a senha: ")
for i in range(len(n)):
	if(len(n)>=8):
		if(n.islower()):
			if(n.isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- OUTPUT:
SENHA INVALIDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:54:59) 
-- CODE:
n = input("digite a senha: ")
for i in (len(n):
	if(len(n)>=8):
		if(n.islower()):
			if(n.isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- ERROR:
File "XXXX", line 2
    for i in (len(n):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:55:05) 
-- CODE:
n = input("digite a senha: ")
for i in len(n):
	if(len(n)>=8):
		if(n.islower()):
			if(n.isupper()):
				print("SENHA VALIDA")
			else:
				print("SENHA INVALIDA")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    for i in len(n):
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
