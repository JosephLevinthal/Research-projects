== TEST (2019-04-06 19:41:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	msg = pcr * (5/100)
else:
	msg = pcr
	
print(msg)	
-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - disc
	
else:
	msg = pcr
	
print(msg)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    msg = pcr - disc
NameError: name 'disc' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:42:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(msg)	
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(msg)	
-- EXECUTION TIME:
0.235896
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:42:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(round((msg))	
-- ERROR:
File "XXXX", line 14
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:43:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(round(msg))	
-- OUTPUT:
190
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:43:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(round(msg))	
-- EXECUTION TIME:
0.124877
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:43:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	msg = pcr - dsc
	
else:
	msg = pcr
	
print(round(msg), 2)	
-- EXECUTION TIME:
0.14391
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190 2
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
191 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:44:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr), 2)	
-- OUTPUT:
190 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:45:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr), 2)
-- OUTPUT:
190 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:45:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr), 2)
-- EXECUTION TIME:
0.165941
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190 2
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
191 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:45:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
round(print(pcr), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(print(pcr), 2)
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:45:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
round(print(pcr), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(print(pcr), 2)
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:46:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
round(print(pcr, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    round(print(pcr, 2))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:46:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr), 2)
-- OUTPUT:
190 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 19:46:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr, 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 19:47:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
pcr = float(input("Qual o preco da conta:"))

if (pcr >= 200):
	dsc = pcr * (5/100)
	pcr = pcr - dsc
		
print(round(pcr, 2))
-- EXECUTION TIME:
0.13789
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
