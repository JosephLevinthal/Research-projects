== TEST (2019-06-27 10:52:51) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 
ytab = 

# Contadores de atributos do personagem
moeda = 
life = 

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = 
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = 
    # Move personagem para CIMA
    elif x == 'W':
        ytab = 
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = 

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = 
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = 

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 15
    xtab = 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:59:08) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if( x == "A"):
        xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
        xtab = xtab+1
    # Move personagem para CIMA
	elif (x == "W":
        ytab = ytab -1
    # Move personagem para BAIXO
    elif (x == "S"):
        ytab = ytab +1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab-1
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:59:42) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if( x == "A"):
        xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
        xtab = xtab+1
    # Move personagem para CIMA
	elif (x == "W":
        ytab = ytab -1
    # Move personagem para BAIXO
	elif (x == "S"):
        ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab-1
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 10:59:56) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if( x == "A"):
        xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
        xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W":
        ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
        ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab-1
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:01:26) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in range(mov):
    # Move personagem para ESQUERDA
	if( x == "A"):
        xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
        xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W":
        ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
        ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 26
    xtab = xtab-1
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:02:22) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in range(mov):
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W":
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 31
    elif(x == "W":
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:02:54) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in range(mov):
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W"):
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
        moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
        life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 40
    moeda = moeda +1
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:03:26) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in range(mov):
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W"):
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda +1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 42
    tabuleiro[ytab,xtab] = 0
                           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:03:42) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in range(mov):
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W"):
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda +1
        # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-27 11:04:41) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W"):
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda +1
        # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-27 11:05:02) 
-- CODE:
#######
# Lab 07 – Exercicio 09
# @author: IComp / UFAM
# AVENTURAS COM MOEDAS E ZUMBIS

from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
	if( x == "A"):
		xtab = xtab-1
    # Move personagem para DIREITA
	elif( x == "D"):
		xtab = xtab+1
    # Move personagem para CIMA
	elif(x == "W"):
		ytab = ytab -1
    # Move personagem para BAIXO
	elif(x == "S"):
		ytab = ytab +1

    # Trata evento
    # Moeda
	if tabuleiro[ytab,xtab] == 11:
		moeda = moeda +1
        # Apaga moeda do tabuleiro
		tabuleiro[ytab,xtab] = 0
    # Zumbi
	elif tabuleiro[ytab,xtab] == 22:
		life = life -5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
1.13324
-- TEST CASE 1:
---- input:
[[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDSDSAAWW
---- correct output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100

---- user output:
posicao x:  3
posicao y:  0
moedas:  6
life:  100
-- TEST CASE 2:
---- input:
[[22,11,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,11,0,0,11,0,22,0,0,22,11],[0,11,0,11,0,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DSSSDSAASD
---- correct output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
---- user output:
posicao x:  1
posicao y:  5
moedas:  7
life:  95
-- TEST CASE 3:
---- input:
[[22,22,11,11,11,11,22,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,11,0,0,11,11],[11,11,22,11,0,0,11,0,22,0,22,0,11],[0,11,0,11,0,11,22,0,11,0,11,0,11],[11,0,22,11,0,11,11,0,11,0,0,0,22],[11,22,22,11,0,11,11,0,22,0,11,11,22],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDSSSAWDWAS
---- correct output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
---- user output:
posicao x:  2
posicao y:  2
moedas:  5
life:  80
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
