== TEST (2019-05-28 11:32:40) 
-- CODE:
from numpy import *
s = input("Digite: ")
s=replace(s)
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:45:46) 
-- CODE:
from numpy import *

s = input("Digite: ")

s=s.replace()

i=0
cont=0

while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.563149
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1758/1189/main.py", line 5, in <module>
    s=s.replace()
TypeError: replace() takes at least 2 arguments (0 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:45:56) 
-- CODE:
from numpy import *

s = input("Digite: ")

s=s.replace(" ")

i=0
cont=0

while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:54:12) 
-- CODE:
from numpy import *

s = input("Digite: ")

j=0
i=0
cont=0
while(j < len(s) ):
	if(s[j]==" "):
		s=s.replace(" ","")
	j=j+1
while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.46741
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:54:46) 
-- CODE:
from numpy import *

s = input("Digite: ")

j=0
i=0
cont=0
while(j < len(s) ):
	if(s[j]==" "):
		s=s.replace(" ","")
	j=j+1
print(s).upper()
while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.348541
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1758/1189/main.py", line 12, in <module>
    print(s).upper()
AttributeError: 'NoneType' object has no attribute 'upper'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:54:49) 
-- CODE:
from numpy import *

s = input("Digite: ")

j=0
i=0
cont=0
while(j < len(s) ):
	if(s[j]==" "):
		s=s.replace(" ","")
	j=j+1
print(s).upper()
while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 11:55:33) 
-- CODE:
from numpy import *

s = input("Digite: ")

j=0
i=0
cont=0
while(j < len(s) ):
	if(s[j]==" "):
		s=s.replace(" ","")
	j=j+1
s=s.upper()
print(s)
while(i<len(s)):
	if(s[i]==s[-1*(i+1)]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-28 11:57:02) 
-- CODE:
from numpy import *

s = input("Digite: ")

j=0
i=0
cont=0

while(j < len(s) ):
	if(s[j]==" "):
		s=s.replace(" ","")
	j=j+1
s=s.upper()
print(s)

while(i<len(s)):
	k=-1*(i+1)
	if(s[i]==s[k]):
		cont+=1
	i=i+1
if(cont==len(s)):
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.37056
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
