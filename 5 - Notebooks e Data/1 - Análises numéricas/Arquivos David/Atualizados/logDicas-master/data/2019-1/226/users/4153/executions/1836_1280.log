== TEST (2019-07-01 19:57:08) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: "))
mov = input ("insira: ").upper ()
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
         if x > shape (tab)[1]:
            x = x - 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
      if y > shape (tab)[0]:
         y = y - 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
File "XXXX", line 4
    mov = input().upper ()
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 19:57:46) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: "))
mov = input ("insira: ".upper ())
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
         if x > shape (tab)[1]:
            x = x - 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
      if y > shape (tab)[0]:
         y = y - 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
File "XXXX", line 4
    mov = input ("insira: ".upper ())
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 19:58:57) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input (("insira: ").upper ())
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
         if x > shape (tab)[1]:
            x = x - 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
      if y > shape (tab)[0]:
         y = y - 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
File "XXXX", line 18
    if x > shape (tab)[1]:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 19:59:59) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input (("insira: ").upper ())
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
         if x > range(shape (tab)[1]):
            x = x - 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
      if y > range(shape (tab)[0]):
         y = y - 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
File "XXXX", line 18
    if x > range(shape (tab)[1]):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:00:47) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input (("insira: ").upper ())
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
         if x > range(shape (tab)[0]):
            x = x - 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
      if y > range(shape (tab)[1]):
         y = y - 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
File "XXXX", line 18
    if x > range(shape (tab)[0]):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:01:48) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input (("insira: ").upper ())
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == "A":
      x = x - 1
      if x < 0:
         x = x + 1
   elif i == "D":
      x = x + 1
   elif i == "W":
      y = y - 1
      if y < 0:
         y = y + 1
   elif i == "S":
      y = y + 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:06:14) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input ("insira: ").upper ()
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == 'A':
      xtab = xtab - 1
    # Move personagem para DIREITA
   elif i == 'D':
      x = x + 1
    # Move personagem para CIMA
   elif i == 'W':
      y = y - 1
    # Move personagem para BAIXO
   elif i == 'S':
      y = y+ 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:09:10) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input ("insira: ").upper ()
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == 'A':
      x = x - 1
         if x < 0:
            x = x + 1
    # Move personagem para DIREITA
   elif i == 'D':
      x = x + 1
    # Move personagem para CIMA
   elif i == 'W':
      y = y - 1
    # Move personagem para BAIXO
   elif i == 'S':
      y = y+ 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
print (shape (tab)[0])
-- ERROR:
File "XXXX", line 14
    if x < 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:09:51) 
-- CODE:
from numpy import *

tab = array(eval (input ("insira: ")))
mov = input ("insira: ").upper ()
				
x = 0
y = 0
moe = 0
life = 100

for i in mov:
   if i == 'A':
      x = x - 1
      if x < 0:
         x = x + 1
    # Move personagem para DIREITA
   elif i == 'D':
      x = x + 1
    # Move personagem para CIMA
   elif i == 'W':
      y = y - 1
    # Move personagem para BAIXO
   elif i == 'S':
      y = y+ 1
   if tab [x,y] == 11:
      moe = moe + 1
      tab [x,y] = 0
   elif tab [x,y] == 22:
      life = life - 5
   elif tab [x,y] == 33:
      x = tab [x]
print ("posicao x:", x)
print ("posicao y:", y)
print ("moeda:", moe)
print ("life:", life)
print (shape (tab)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 20:17:01) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- EXECUTION TIME:
1.1912
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1280/main.py", line 34, in <module>
    if tabuleiro[ytab,xtab] == 11:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:17:16) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:17:46) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1

    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:34:53) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:44:01) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 20:45:08) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.729092
-- ERROR:
  File "/home/codebench/codes/1836/1280/main.py", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:46:22) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:51:57) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:52:07) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = x tab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 29
    xtab = x tab - 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:53:28) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = y tab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
File "XXXX", line 34
    ytab = y tab + 1
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:54:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if x < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if x > shape (tabuleiro)[1]:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if x < 0:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if x > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:56:47) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = tabuleiro [ytab,xtab]
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:59:03) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
      tabuleiro [ytab,xtab] = 0
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:02:07) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > shape(tabuleiro)[0]:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
   elif tabuleiro [ytab,xtab] == 33:
      ytab= a [0]
      xtab=a [1]
   a = a * 0
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:00:21) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > shape(tabuleiro)[0] or tabuleiro [ytab,xtab] ==33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:02:16) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > (shape(tabuleiro)[0])) or tabuleiro [ytab,xtab] ==33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:05:00) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
   #   if (ytab > (shape(tabuleiro)[0])) or tabuleiro [ytab,xtab] ==33:
       #  ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:05:27) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
   #   if (ytab > (shape(tabuleiro)[0])) or tabuleiro [ytab,xtab] ==33:
       #  ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:05:41) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
   #   if (ytab > (shape(tabuleiro)[0])) or tabuleiro [ytab,xtab] ==33:
       #  ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:07:02) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]) or tabuleiro [ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
print (shape (tabuleiro)[0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:07:34) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]) or tabuleiro [ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:08:01) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]) or tabuleiro [ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:08:45) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]) or tabuleiro [ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:10:22) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0 or tabuleiro [ytab,xtab] ==33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0 or tabuleiro [ytab,xtab] ==33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]) or tabuleiro [ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.03579
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1280/main.py", line 28, in <module>
    if xtab > shape (tabuleiro)[1] or tabuleiro [ytab,xtab] ==33:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:18:20) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:20:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.961714
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1280/main.py", line 32, in <module>
    if tabuleiro[ytab,xtab] == 33:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:20:30) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
0.998292
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1280/main.py", line 32, in <module>
    if tabuleiro[ytab,xtab] == 33:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:20:40) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.19698
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1836/1280/main.py", line 32, in <module>
    if tabuleiro[ytab,xtab] == 33:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:24:35) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
   a = array ([ytab,xtab])
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > shape (tabuleiro)[1]:
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if (ytab > shape(tabuleiro)[0]):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:31:55) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > (shape (tabuleiro)[1] -1):
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > (shape(tabuleiro)[0]-1):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:33:29) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > (shape (tabuleiro)[1] -1):
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > (shape(tabuleiro)[0]-1):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.0917
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:33:50) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
    # Move personagem para ESQUERDA
   if x == 'A':
      xtab = xtab - 1
      if xtab < 0:
         xtab = xtab + 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab + 1
    # Move personagem para DIREITA
   elif x == 'D':
      xtab = xtab + 1
      if xtab > (shape (tabuleiro)[1] -1):
         xtab = xtab - 1
      if tabuleiro[ytab,xtab] == 33:
         xtab = xtab - 1
    # Move personagem para CIMA
   elif x == 'W':
      ytab = ytab - 1
      if ytab < 0:
         ytab = ytab + 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab + 1
    # Move personagem para BAIXO
   elif x == 'S':
      ytab = ytab + 1
      if ytab > (shape(tabuleiro)[0]-1):
         ytab = ytab - 1
      if tabuleiro[ytab,xtab] == 33:
         ytab = ytab - 1
    # Trata evento
    # Moeda
   if tabuleiro[ytab,xtab] == 11:
      moeda = moeda + 1
        # Apaga moeda do tabuleiro
      tabuleiro[ytab,xtab] = 0
    # Zumbi
   elif tabuleiro[ytab,xtab] == 22:
      life = life - 5
# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
-- EXECUTION TIME:
1.15323
-- TEST CASE 1:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
DDDDDWWWWSSSSDDDWSWDSDWDDDDDDDDDSSSSSSSSSSSDDDDWSADSWASADSWASD
---- correct output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
---- user output:
posicao x:  11
posicao y:  10
moedas:  13
life:  75
-- TEST CASE 2:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
SAWSDADDDDDDDDDDSSSSSSSSSSSDDDDDDDWWWWWWWWAAAAAAAAAAWSDAASDSWADSAWSWD
---- correct output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
---- user output:
posicao x:  5
posicao y:  3
moedas:  20
life:  75
-- TEST CASE 3:
---- input:
[[0,11,0,33,0,33,22,0,11,0,11,0,11],[11,0,22,11,0,11,33,0,11,0,0,0,22],[11,22,22,33,0,11,11,0,22,0,11,11,22],[22,33,0,11,0,11,11,0,22,0,0,0,0],[22,11,11,11,0,11,22,0,11,0,22,0,22],[11,11,22,33,0,0,11,0,22,0,0,22,11],[0,11,0,33,0,11,22,0,22,0,22,0,11],[0,11,33,11,0,11,22,0,11,0,0,11,11],[11,11,33,11,0,0,11,0,22,0,22,0,11],[0,11,22,11,0,11,22,0,22,0,0,0,11],[0,11,22,11,0,0,11,0,22,0,11,0,11]]
AWSWDSSDSDSDSDSAWAWAWASDSDSSASASASWDWDWDWDWASWDAWSWDAWSDWSADSWASDWSAWWDSADWSAWSWDSAWSW
---- correct output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
---- user output:
posicao x:  6
posicao y:  2
moedas:  13
life:  55
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
