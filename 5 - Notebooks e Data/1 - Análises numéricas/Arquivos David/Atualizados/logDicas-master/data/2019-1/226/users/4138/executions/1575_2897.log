== TEST (2019-03-12 12:56:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(2*input())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 12:57:29) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:00:49) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(18)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:05:01) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(num= int(input("2*9")))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num= int(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:06:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(2*9)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:07:21) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print(18)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:08:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("9"))

# Impressao do dobro do numero
print("2*9")
-- OUTPUT:
2*9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:11:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(9))

# Impressao do dobro do numero
print(2*(num))
-- OUTPUT:
92468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:11:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(9))

# Impressao do dobro do numero
print(2*(num))
-- EXECUTION TIME:
0.183482
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
92468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
9888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 13:14:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:9"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 13:14:19) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:9"))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.126458
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 09:49:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o  numero: "))

print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 09:50:01) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o  numero: "))

print(num*2)
-- EXECUTION TIME:
0.176544
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
