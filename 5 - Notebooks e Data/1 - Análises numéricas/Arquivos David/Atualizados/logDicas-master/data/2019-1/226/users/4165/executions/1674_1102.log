== TEST (2019-05-02 00:14:36) 
-- CODE:
from math import*
a = float(input("altura tanque:"))
h = float(input("nivel de combustivel no tanque:"))
r = float(input("raio dos bojos semi esfericos inferior e superior: "))
print("Entrdas: ", a,",", h,",", r)
if(h<0)or(a<0)or(r<0):
	print("Entradas invalidas")
elif(h>a)or(2*r>a):
	print("Entradas invalidas")
else:
	if(h<=r):
		v = (pi/3)*(h<=a-r):
		print("volume: ", round(v*1000,3), "litros")
	elif(h>r) and (h<=a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2 + v3
		print("Volume: ", round(v*1000,3), "litros")
	elif(h>a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((a-h)**2)*(3*r-(a-h)))/3)
		v = v2 + v3 + v4
		print("Volume : ", round(v*1000, 3), "litros")
-- ERROR:
File "XXXX", line 12
    v = (pi/3)*(h<=a-r):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:15:12) 
-- CODE:
from math import*
a = float(input("altura tanque:"))
h = float(input("nivel de combustivel no tanque:"))
r = float(input("raio dos bojos semi esfericos inferior e superior: "))
print("Entrdas: ", a,",", h,",", r)
if(h<0)or(a<0)or(r<0):
	print("Entradas invalidas")
elif(h>a)or(2*r>a):
	print("Entradas invalidas")
else:
	if(h<=r):
		v = (pi/3)*(h<=a-r)
		print("volume: ", round(v*1000,3), "litros")
	elif(h>r) and (h<=a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2 + v3
		print("Volume: ", round(v*1000,3), "litros")
	elif(h>a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((a-h)**2)*(3*r-(a-h)))/3)
		v = v2 + v3 + v4
		print("Volume : ", round(v*1000, 3), "litros")
-- OUTPUT:
Entrdas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:15:45) 
-- CODE:
from math import*
a = float(input("altura tanque:"))
h = float(input("nivel de combustivel no tanque:"))
r = float(input("raio dos bojos semi esfericos inferior e superior: "))
print("Entrdas: ", a,",", h,",", r)
if(h<0)or(a<0)or(r<0):
	print("Entradas invalidas")
elif(h>a)or(2*r>a):
	print("Entradas invalidas")
else:
	if(h<=r):
		v = (pi/3)*(h<=a-r)
		print("volume: ", round(v*1000,3), "litros")
	elif(h>r) and (h<=a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2 + v3
		print("Volume: ", round(v*1000,3), "litros")
	elif(h>a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((a-h)**2)*(3*r-(a-h)))/3)
		v = v2 + v3 + v4
		print("Volume : ", round(v*1000, 3), "litros")
-- EXECUTION TIME:
0.143536
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entrdas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entrdas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entrdas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 00:16:02) 
-- CODE:
from math import*
a = float(input("altura tanque:"))
h = float(input("nivel de combustivel no tanque:"))
r = float(input("raio dos bojos semi esfericos inferior e superior: "))
print("Entrdas: ", a,",", h,",", r)
if(h<0)or(a<0)or(r<0):
	print("Entradas invalidas")
elif(h>a)or(2*r>a):
	print("Entradas invalidas")
else:
	if(h<=r):
		v = (pi/3)*(h<=a-r)
		print("volume: ", round(v*1000,3), "litros")
	elif(h>r) and (h<=a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2 + v3
		print("Volume: ", round(v*1000,3), "litros")
	elif(h>a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((a-h)**2)*(3*r-(a-h)))/3)
		v = v2 + v3 + v4
		print("Volume : ", round(v*1000, 3), "litros")
-- OUTPUT:
Entrdas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:17:53) 
-- CODE:
from math import*
a = float(input("altura tanque:"))
h = float(input("nivel de combustivel no tanque:"))
r = float(input("raio dos bojos semi esfericos inferior e superior: "))
print("Entradas: ", a,",", h,",", r)
if(h<0)or(a<0)or(r<0):
	print("Entradas invalidas")
elif(h>a)or(2*r>a):
	print("Entradas invalidas")
else:
	if(h<=r):
		v = (pi/3)*(h<=a-r)
		print("volume: ", round(v*1000,3), "litros")
	elif(h>r) and (h<=a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(h-r)
		v = v2 + v3
		print("Volume: ", round(v*1000,3), "litros")
	elif(h>a-r):
		v2 = (4*pi*(r**3))/6
		v3 = pi*(r**2)*(a-2*r)
		v4 = v2 - ((pi*((a-h)**2)*(3*r-(a-h)))/3)
		v = v2 + v3 + v4
		print("Volume : ", round(v*1000, 3), "litros")
-- EXECUTION TIME:
0.14124
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas:  11.3 , 5.7 , 2.3
Volume:  81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas:  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas:  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
