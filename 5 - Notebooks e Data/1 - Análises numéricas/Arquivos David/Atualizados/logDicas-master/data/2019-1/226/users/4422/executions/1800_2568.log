== TEST (2019-06-11 10:58:29) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*")
	
-- OUTPUT:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 10:59:37) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*") + i * "0"
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print((x-i) * "*") + i * "0"
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:00:29) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + i * "0")
	
-- OUTPUT:
***********
**********0
*********00
********000
*******0000
******00000
*****000000
****0000000
***00000000
**000000000
*0000000000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:02:24) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "0") + (x-i)*"*"
	
-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:02:25) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "0") + (x-i)*"*"
	
-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:02:31) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "0") + (x-i)*"*")
	
-- OUTPUT:
**********************
**********00**********
*********0000*********
********000000********
*******00000000*******
******0000000000******
*****000000000000*****
****00000000000000****
***0000000000000000***
**000000000000000000**
*00000000000000000000*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 11:02:52) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "0") + (x-i)*"*")
	
-- EXECUTION TIME:
0.735651
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********00**********
*********0000*********
********000000********
*******00000000*******
******0000000000******
*****000000000000*****
****00000000000000****
***0000000000000000***
**000000000000000000**
*00000000000000000000*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************00******************
*****************0000*****************
****************000000****************
***************00000000***************
**************0000000000**************
*************000000000000*************
************00000000000000************
***********0000000000000000***********
**********000000000000000000**********
*********00000000000000000000*********
********0000000000000000000000********
*******000000000000000000000000*******
******00000000000000000000000000******
*****0000000000000000000000000000*****
****000000000000000000000000000000****
***00000000000000000000000000000000***
**0000000000000000000000000000000000**
*000000000000000000000000000000000000*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************00*************************
************************0000************************
***********************000000***********************
**********************00000000**********************
*********************0000000000*********************
********************000000000000********************
*******************00000000000000*******************
******************0000000000000000******************
*****************000000000000000000*****************
****************00000000000000000000****************
***************0000000000000000000000***************
**************000000000000000000000000**************
*************00000000000000000000000000*************
************0000000000000000000000000000************
***********000000000000000000000000000000***********
**********00000000000000000000000000000000**********
*********0000000000000000000000000000000000*********
********000000000000000000000000000000000000**
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:03:13) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i)*"*")
	print((x-i) * "*" + 2*(i * "0") + (x-i)*"*")
	
-- OUTPUT:
***********
**********************
**********
**********00**********
*********
*********0000*********
********
********000000********
*******
*******00000000*******
******
******0000000000******
*****
*****000000000000*****
****
****00000000000000****
***
***0000000000000000***
**
**000000000000000000**
*
*00000000000000000000*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:04:19) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "o") + (x-i)*"*")
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:05:52) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-) * "*" + 2*(i * "o") + (x-i)*"*")
	
-- ERROR:
File "XXXX", line 4
    print((x-) * "*" + 2*(i * "o") + (x-i)*"*")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:05:57) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x) * "*" + 2*(i * "o") + (x-i)*"*")
	
-- OUTPUT:
**********************
***********oo**********
***********oooo*********
***********oooooo********
***********oooooooo*******
***********oooooooooo******
***********oooooooooooo*****
***********oooooooooooooo****
***********oooooooooooooooo***
***********oooooooooooooooooo**
***********oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:06:04) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i) * "*" + 2*(i * "o") + (x-i)*"*")
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:06:49) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x+i) * "*" + 2*(i * "o") + (x-i)*"*")
	
-- OUTPUT:
**********************
************oo**********
*************oooo*********
**************oooooo********
***************oooooooo*******
****************oooooooooo******
*****************oooooooooooo*****
******************oooooooooooooo****
*******************oooooooooooooooo***
********************oooooooooooooooooo**
*********************oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:07:21) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x-i)*'*' + 2*(i * "o") + (x-i)*"*")
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:08:20) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x - i)*'*' + 2*(i * "o") + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:08:30) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x - i)*'*' + 2*(i * 'o') + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:08:44) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x - i)*'*' + 2*i*'o' + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:09:23) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x - i)*'*' + 2*i*'o' + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:09:33) 
-- CODE:
x = int(input("vai: "))

for i in range(x):
	print((x - i)*'*' + 2*i*'o' + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:10:59) 
-- CODE:
x = int(input())

for i in range(x):
	print((x-i)*'*' + 2*i*'o' + (x-i)*'*')
	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 11:12:55) 
-- CODE:
x = int(input())

for i in range(x):
	print((x - i) * "*" + 2 * i * "o" + (x - i) * "*")
	
	
	
	
	
	

	
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 11:13:03) 
-- CODE:
x = int(input())

for i in range(x):
	print((x - i) * "*" + 2 * i * "o" + (x - i) * "*")
	
	
	
	
	
	

	
-- EXECUTION TIME:
0.822181
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
