== TEST (2019-05-16 11:06:08) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + 1 + (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:06:22) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + 1 * (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
0.9396926208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:08:07) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(k > fim):
	soma = soma + 1 * (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:08:13) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(k > fim):
	soma = soma + 1 * (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:08:17) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + 1 * (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:09:27) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	soma = soma + 1
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:09:40) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	a = soma + 1
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:11:22) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	k = int(input("Quantidade de termos: "))
	soma = soma + (x ** i + 2) / (factorial(i))
	soma = soma + 1
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:11:43) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	k = int(input("Quantidade de termos: "))
	soma = soma + ((x ** i + 2) / (factorial(i)))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:12:40) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	k = int(input("Quantidade de termos: "))
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:13:54) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:14:28) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:14:37) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:25:15) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(i > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:25:23) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:25:30) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:25:45) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:25:49) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** i + 2) / (factorial(i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:26:41) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 2
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + 1 * (x ** i + 2) / (factorial(i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:27:40) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0

while(x > ):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    while(x > ):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:27:48) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    while(x > ):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:28:33) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 0
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    while(x > ):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:29:09) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:29:22) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 2
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:29:38) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 2
print(round(i, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:30:42) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:30:46) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:32:11) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:32:34) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x < fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 * i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:32:45) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x >= fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 * i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:33:39) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:34:26) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:34:59) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:35:57) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:36:36) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:37:39) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	#soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	x = x ** (2 * i)
	print(x)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:39:53) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 11:40:00) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- EXECUTION TIME:
0.323569
-- TEST CASE 1:
---- input:
2.0
5
---- correct output:
3.76190476
---- user output:
1
-- TEST CASE 2:
---- input:
10.0
2
---- correct output:
51.0
---- user output:

-- TEST CASE 3:
---- input:
12.0
35
---- correct output:
81377.39571257
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:45:11) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:45:32) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(k > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:45:41) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:46:27) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:46:36) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(i, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:49:25) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:49:30) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:51:14) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x > fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:51:42) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x < fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:52:43) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x < fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:54:27) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x < fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 11:54:36) 
-- CODE:
from math import *

x = float(input("Digite um numero: "))
k = int(input("Quantidade de termos: "))

soma = 1
i = 0
fim = k - 1

while(x < fim):
	soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
	i = i + 1
	print(round(soma, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    soma = soma + (x ** (2 * i)) / (factorial(2 ** i))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
