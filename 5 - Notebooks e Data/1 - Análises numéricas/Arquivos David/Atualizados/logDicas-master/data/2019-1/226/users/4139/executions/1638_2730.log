== TEST (2019-04-10 21:30:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(x >= 0):
	if(y>=0)
	print("Superiores")
else:
	print("Inferiores")
-- ERROR:
File "XXXX", line 6
    if(y>=0)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:30:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(x >= 0):
	if(y>=0):
	print("Superiores")
else:
	print("Inferiores")
-- ERROR:
File "XXXX", line 7
    print("Superiores")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:31:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(x >= 0):
	if(y>=0):
		print("Superiores")
else:
	print("Inferiores")
-- ERROR:
File "XXXX", line 7
    print("Superiores")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:39:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:40:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:42:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:43:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 21:43:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 22:19:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 22:25:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de X:"))
y = float(input("valor de Y:"))

if(y >= 0):
		print("Superiores")
else:
	print("Inferiores")
-- EXECUTION TIME:
0.137726
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
