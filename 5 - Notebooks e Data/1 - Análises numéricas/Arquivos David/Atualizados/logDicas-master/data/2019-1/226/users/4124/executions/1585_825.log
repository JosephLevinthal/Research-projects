== TEST (2019-03-23 10:00:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import*
r = float(input("raio: "))
area = (pi * (r**3))
vol = ((4/3) * pi * (r**3))

print(round(area, 3))
print(round(vol, 3))

-- OUTPUT:
286.278
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 10:01:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import*
r = float(input("raio: "))
area = (pi * (r**3))
vol = ((4/3) * pi * (r**3))

print(round(area, 3))
print(round(vol, 3))

-- OUTPUT:
286.278
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 10:01:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import*
r = float(input("raio: "))
area = (pi * (r**2))
vol = ((4/3) * pi * (r**3))

print(round(area, 3))
print(round(vol, 3))

-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 10:01:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import*
r = float(input("raio: "))
area = (pi * (r**2))
vol = ((4/3) * pi * (r**3))

print(round(area, 3))
print(round(vol, 3))

-- EXECUTION TIME:
0.142427
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
