== TEST (2019-04-11 10:46:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (V1/V2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = (4*pi*r**3)/3
if (num == V1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:47:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (1/2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = (4*pi*(r**3))/3
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:48:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (1/2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = (4*pi*(r**3))/3
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- EXECUTION TIME:
0.143011
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:49:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (1/2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = ((4*pi*(r**3))/3)-V1
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:50:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (1/2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = ((4*pi*(r**3))/3)-V1
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- EXECUTION TIME:
0.14202
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 10:50:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = input("Digite a opcao desejada? (1/2) ")
V1 = (pi*(x**2)*(3*r-x))/3
V2 = ((4*pi*(r**3))/3)-V1
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 10:53:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("Digite o raio do tanque:"))
x = float(input("Digite a altura na parte superior do tanque:"))
num = int(input("Digite a opcao desejada? (1/2) "))
V1 = (pi*(x**2)*(3*r-x))/3
V2 = ((4*pi*(r**3))/3)-V1
if (num == 1):
	print(round(V1,4))
else:
	print(round(V2,4))
-- EXECUTION TIME:
0.14818
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
