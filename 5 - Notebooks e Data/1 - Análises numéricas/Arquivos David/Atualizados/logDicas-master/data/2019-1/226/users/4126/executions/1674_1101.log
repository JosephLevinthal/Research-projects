== TEST (2019-05-01 23:09:43) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:11:58) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
		elif(x>500):
		z = x*0.65
		


-- ERROR:
File "XXXX", line 8
    elif(x>500):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:12:07) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:04) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		z = x*0.55
		


-- ERROR:
File "XXXX", line 13
    z = x*0.55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:15) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:48) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
	   z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		   z = x*0.55
		
		
		


-- ERROR:
File "XXXX", line 7
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:55) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
	   z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		
		
		


-- ERROR:
File "XXXX", line 7
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:58) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
	   z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		  z = x*0.55
		
		
		


-- ERROR:
File "XXXX", line 7
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:15:01) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
	   z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		z = x*0.55
		
		
		


-- ERROR:
File "XXXX", line 7
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:15:18) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:18:02) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x.0:)
		


-- ERROR:
File "XXXX", line 15
    elif(y=="l")and(x.0:)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:18:11) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x.0):
		


-- ERROR:
File "XXXX", line 15
    elif(y=="l")and(x.0):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:18:50) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y =="l")and(x.0):
		


-- ERROR:
File "XXXX", line 15
    elif(y =="l")and(x.0):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:18:52) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Vlaro total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y == "l")and(x.0):
		


-- ERROR:
File "XXXX", line 15
    elif(y == "l")and(x.0):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:20:08) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y == "l")and(x.0):
		


-- ERROR:
File "XXXX", line 13
    z = x*0.55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:20:14) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(y == "l")and(x.0):
		


-- ERROR:
File "XXXX", line 15
    elif(y == "l")and(x.0):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:21:08) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		


-- ERROR:
File "XXXX", line 18
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:22:02) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:25:13) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x>0):
		if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 20
    z = 0.55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:25:19) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x>0):
		if(x<=5000):
		z =0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 20
    z =0.55
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:25:24) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:25:27) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.184095
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total:R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:25:38) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="l")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:25:58) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="I")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:26:00) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="I")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:26:00) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
	elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
	elif(y=="C")and(x>0):
		if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
	elif(y=="I")and(x>0):
		if(x<=5000):
		 z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.144278
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total:R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:26) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
		print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 14
    print("Valor total:R$",round(z,2))
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:33) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
	elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 15
    elif(x>1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:40) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:27:42) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.163847
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:28:33) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:29:07) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.222788
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:29:33) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
elif(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 4
    elif(y=="R")and(x>0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:29:38) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:29:42) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.169274
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:30:06) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:30:17) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:30:19) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.164951
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:31:05) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	   print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 14
    print("Valor total:R$",round(z,2))
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:31:14) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:31:46) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:31:52) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		 z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.217241
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 KWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 KWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:32:04) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		z = x*0.55
	print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- OUTPUT:
Entradas: -56.0 KWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:32:36) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		z = x*0.55
	   print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 14
    print("Valor total:R$",round(z,2))
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:32:48) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		z = x*0.55
	   print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- EXECUTION TIME:
0.218152
-- ERROR:
  File "/home/codebench/codes/1674/1101/main.py", line 14
    print("Valor total:R$",round(z,2))
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:32:48) 
-- CODE:
x = float(input("Digite o consumo em KWh: "))
y = input("Digite a instalacao:").upper()
print("Entradas:",x,"KWh e tipo",y)
if(y=="R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total:R$",round(z,2))
elif(x>500):
		z = x*0.65
		print("Valor total:R$",round(z,2))
elif(y=="C")and(x>0):
	if(x<=1000):
		z = x*0.55
	   print("Valor total:R$",round(z,2))
elif(x>1000):
		z=x*0.6
		print("Valor total:R$",round(z,2))
elif(y=="I")and(x>0):
	if(x<=5000):
		z = 0.55
		print("Valor total:R$",round(z,2))
	elif(x>5000):
		z=x*0.66
		print("Valor total:R$",round(z,2))
	else:
		print("Dados invalidos")
		


-- ERROR:
File "XXXX", line 14
    print("Valor total:R$",round(z,2))
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 00:27:31) 
-- CODE:
x = float(input("Digite o consumo em kWh: "))
y = input("Digite a instalacao: ").upper()
print("Entradas: ",x, "kWh e tipo",y)
if (y == "R")and(x>0):
	if(x<=500):
		z = x*0.44
		print("Valor total: R$",round(z,2))
	elif(x>500):
		z= x*0.65
		print("Valor total: R$",round(z,2))
elif(y == "C")and(x>0):
	if(x<=1000):
		z = x*0.55
		print("Valor total: R$",round(z,2))
	elif(x>1000):
		z = x*0.6
		print("Valor total: R$",round(z,2))
elif(y == "I")and(x>0):
	if(x<=5000):
		z = x*0.55
		print("Valor total: R$",round(z,2))
	elif(x>5000):
		z = x*0.6
		print("Valor total: R$",round(z,2))
else:
	print("Dados invalidos")


-- EXECUTION TIME:
0.13416
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
