== TEST (2019-04-04 15:27:54) 
-- CODE:
a = int(input("insira a"))
b = int(input("insira b"))
c = int(input("insira c"))
delta = (b ** 2) - (4 * a * c)
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:28:21) 
-- CODE:
a = int(input("insira a: "))
b = int(input("insira b: "))
c = int(input("insira c: "))
delta = (b ** 2) - (4 * a * c)
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:29:20) 
-- CODE:
a = int(input("insira a: "))
b = int(input("insira b: "))
c = int(input("insira c: "))
delta = (b ** 2) - (4 * a * c)
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:30:53) 
-- CODE:
a = int(input("insira a: "))
b = int(input("insira b: "))
c = int(input("insira c: "))
delta =b ** 2 - 4 * a * c
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:31:12) 
-- CODE:
a = int(input("insira a: "))
b = int(input("insira b: "))
c = int(input("insira c: "))
delta =b ** 2 - 4 * a * c
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:32:07) 
-- CODE:
a = int(input("insira a: "))
b = int(input("insira b: "))
c = int(input("insira c: "))
delta =b ** 2 - 4 * a * c
if (delta < 0):
	print("pau no seu cu")
else:
	print("va se foder seu crlh")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:37:23) 
-- CODE:
n1 = int(input("idade: "))
if (n1 => 18):
	m = eleitor
else:
	m = nao_eleitor
print(m)
-- ERROR:
File "XXXX", line 2
    if (n1 => 18):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:40:10) 
-- CODE:
n1 = int(input("idade: "))
if (n1 >= 18):
	m = eleitor
else:
	m = nao_eleitor
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    m = nao_eleitor
NameError: name 'nao_eleitor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:40:38) 
-- CODE:
n1 = int(input("idade: "))
if (n1 >= 18):
	m = "eleitor"
else:
	m = "nao_eleitor"
print(m)
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:40:45) 
-- CODE:
n1 = int(input("idade: "))
if (n1 >= 18):
	m = "eleitor"
else:
	m = "nao_eleitor"
print(m)
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 15:40:50) 
-- CODE:
n1 = int(input("idade: "))
if (n1 >= 18):
	m = "eleitor"
else:
	m = "nao_eleitor"
print(m)
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 15:40:57) 
-- CODE:
n1 = int(input("idade: "))
if (n1 >= 18):
	m = "eleitor"
else:
	m = "nao_eleitor"
print(m)
-- EXECUTION TIME:
0.145605
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
nao_eleitor
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
eleitor
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
eleitor
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
