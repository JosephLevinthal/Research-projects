== TEST (2019-05-02 10:22:42) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ")

if(z == "Calda"):
	x = (x * y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:23:02) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ")

if(z == "Calda"):
	x = (x * y)
	print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:24:51) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ")

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z = "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z = "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
-- ERROR:
File "XXXX", line 8
    elif(z = "Cuspe"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:06) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z = "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z = "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
-- ERROR:
File "XXXX", line 8
    elif(z = "Cuspe"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:28) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z = "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z = "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 8
    elif(z = "Cuspe"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:36) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:48) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas:"))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:26:56) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:07) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:27:16) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Calda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.137683
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1709/3065/main.py", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:27:23) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Cauda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:27:39) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Cauda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
else:
	print("Entrada invalida")
-- EXECUTION TIME:
0.17599
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1709/3065/main.py", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:28:44) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Cauda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
elif(y > 4):
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:28:56) 
-- CODE:
x = int(input("Numero de vida perdidos: "))
y = int(input("Numero de rodadas: "))
z = input("Parte que se deferiu o golpe: ").upper()

if(z == "Cauda"):
	x = (x * y)
	print(x)
elif(z == "Cuspe"):
	x = (2 * (x * y))
	print(x)
elif(z == "Patada"):
	x = ((2 * x) - (5 * y))
	print(x)
elif(y > 4):
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: 'CAUDA'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:31:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "Cauda"):
	w = (y * z)
	print(w)
elif(z == "Cuspe"):
	w = (2 * (y * z))
	print(w)
elif(z == "Patada"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:32:31) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "Cauda"):
	w = (y * z)
	print(w)
elif(x == "Cuspe"):
	w = (2 * (y * z))
	print(w)
elif(x == "Patada"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:33:16) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "Cauda"):
	w = (y * z)
	print(w)
elif(x == "Cuspe"):
	w = (2 * (y * z))
	print(w)
elif(x == "Patada"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:34:30) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "Cauda"):
	w = (y * z)
	print(w)
else:
	if(x == "Cuspe"):
	w = (2 * (y * z))
	print(w)
	else:
		if(x == "Patada"):
		w = ((2 * y) - (5 * z))
		print(w)
		else:
			if(z > 4):
			print("Entrada invalida")
-- ERROR:
File "XXXX", line 10
    w = (2 * (y * z))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:37:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "Cauda"):
	w = (y * z)
	print(w)
elif(x == "Cuspe"):
	w = (2 * (y * z))
	print(w)
elif(x == "Patada"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:38:21) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:38:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.132188
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:38:38) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:38:46) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.204329
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:38:56) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:40:07) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:40:14) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.1669
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:41:12) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:41:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de rodadas (1 a 4): "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.188767
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:44:04) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:44:12) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.158996
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:44:43) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:45:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:45:40) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.143229
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:45:43) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(z > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:47:13) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:47:22) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.193194
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:48:08) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:48:18) 
-- CODE:
x = input("Parte que se deferiu o golpe: ")
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.199596
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:49:04) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:49:12) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.207274
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:50:28) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:50:38) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.170666
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:51:47) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:51:55) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- EXECUTION TIME:
0.176427
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
-15
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 10:16:50) 
-- CODE:
x = input("Parte que se deferiu o golpe: ").upper()
y = int(input("Numero de vida perdidos: "))
z = int(input("Numero de turnos: "))

if(x == "CAUDA"):
	w = (y * z)
	print(w)
elif(x == "CUSPE"):
	w = (2 * (y * z))
	print(w)
elif(x == "PATADA"):
	w = ((2 * y) - (5 * z))
	print(w)
elif(x == "cauda") or (x == "cuspe") or (x == "patada") or (y > 4):
	print("Entrada invalida")
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
