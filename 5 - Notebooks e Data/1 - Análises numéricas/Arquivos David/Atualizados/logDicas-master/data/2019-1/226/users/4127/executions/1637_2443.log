== TEST (2019-04-09 10:17:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

print(volAR)
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:20:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
-- OUTPUT:
9.025664794069577
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:20:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:20:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.149593
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:20:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:21:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.142788
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:22:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
if (sn==2):
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.148748
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1637/2443/main.py", line 17, in <module>
    print(round(msg,4))
NameError: name 'msg' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:22:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
if (sn==2):
	msg= volCOMB
print(round(msg,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(round(msg,4))
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:23:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:23:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.243463
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:23:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:24:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:25:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= (((4*pi*(r**3))/3) - (((pi*(h**2)) * (3*r-h))/3)

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= (((4*pi*(r**3))/3) - (((pi*(h**2)) * (3*r-h))/3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:26:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= ((4*pi*(r**3))/3 - (((pi*(h**2)) * (3*r-h))/3)

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= ((4*pi*(r**3))/3 - (((pi*(h**2)) * (3*r-h))/3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:26:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= ((4*pi*(r**3))/3 - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= ((4*pi*(r**3))/3 - ((pi*(h**2)) * (3*r-h))/3
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:26:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.250268
-- ERROR:
  File "/home/codebench/codes/1637/2443/main.py", line 11
    volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:26:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:27:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= ((4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= ((4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:27:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * ((3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * ((3*r-h))/3
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:28:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * ((3*r-h))/3

volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3


if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 11
    volCOMB= (4*pi*(r**3))/3 - ((pi*(h**2)) * ((3*r-h))/3
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:28:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else(sn==2):
	msg= volCOMB
print(round(msg,4))
-- ERROR:
File "XXXX", line 15
    else(sn==2):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:28:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:28:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.182646
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:29:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:29:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:31:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
else:
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:31:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn==1):
	msg= volAR
if (sn==2):
	msg= volCOMB
print(round(msg,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(round(msg,4))
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 10:32:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn=="1"):
	msg= volAR
if (sn=="2"):
	msg= volCOMB
print(round(msg,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 10:32:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn=="1"):
	msg= volAR
if (sn=="2"):
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.14621
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:24:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r= float(input("qual o raio do tanque?"))
h= float(input("qual a altura do tanque?"))

sn= input("1 indica o volume de ar, 2 indica o volume de combustivel: ")
volAR= ((pi*(h**2)) * (3*r-h))/3

volCOMB= ((4*pi*(r**3))/3) - ((pi*(h**2)) * (3*r-h))/3

if (sn=="1"):
	msg= volAR
if (sn=="2"):
	msg= volCOMB
print(round(msg,4))
-- EXECUTION TIME:
0.196713
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
