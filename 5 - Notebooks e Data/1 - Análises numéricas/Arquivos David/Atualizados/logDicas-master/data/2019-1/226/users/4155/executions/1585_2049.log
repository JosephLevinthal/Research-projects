== TEST (2019-03-23 00:35:56) 
-- CODE:
x = float(input("dividendo: "))
y = float(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y
-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:37:12) 
-- CODE:
x = float(input("dividendo: "))
y = float(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y
print(dividendo
	   divisor
	  quociente
	  resto)
-- ERROR:
File "XXXX", line 9
    divisor
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:37:17) 
-- CODE:
x = float(input("dividendo: "))
y = float(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y
print(dividendo
	   divisor
	  quociente
	  resto)
-- ERROR:
File "XXXX", line 9
    divisor
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:38:15) 
-- CODE:
x = float(input("dividendo: "))
y = float(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 00:38:34) 
-- CODE:
x = float(input("dividendo: "))
y = float(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.156928
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.0
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.0
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 00:38:51) 
-- CODE:
x = int(input("dividendo: "))
y = int(input("divisor: "))

dividendo = x
divisor = y
quociente = x // y
resto = x % y

print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.190891
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
