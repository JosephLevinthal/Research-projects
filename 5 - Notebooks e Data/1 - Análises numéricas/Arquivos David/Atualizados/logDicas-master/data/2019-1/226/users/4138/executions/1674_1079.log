== TEST (2019-04-25 10:15:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a > 0) and (b >0) and (c > 0)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:15:21) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a > 0) and (b >0) and (c > 0)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.232456
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:16:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a > 0) and (b >0) and (c > 0)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:16:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a > 0) and (b >0) and (c > 0)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.196313
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:19:54) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b < c) and ( b + c < a) and ( a + c < b) :
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- ERROR:
File "XXXX", line 15
    if ((a + b < c) and ( b + c < a) and ( a + c < b) :
                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:20:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b < c) and ( b + c < a) and ( a + c < b)) :
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:20:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b < c) and ( b + c < a) and ( a + c < b)) :
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:20:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a < 0) or (b <0) or (c <0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a + b < c) and ( b + c < a) and ( a + c < b)) :
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- EXECUTION TIME:
0.162987
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:34:47) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a +b < c) and (a +c < b) and (c + b < a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- EXECUTION TIME:
0.179858
-- ERROR:
  File "/home/codebench/codes/1674/1079/main.py", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:35:47) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:36:46) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:37:18) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:38:39) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- EXECUTION TIME:
0.153118
-- ERROR:
  File "/home/codebench/codes/1674/1079/main.py", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:38:41) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:39:01) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,"," b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 8
    print("Entradas:", a,"," b, ",", c)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:40:00) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a,",", b, ",", c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:16) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:21) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:23) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:24) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:41:25) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)
#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:41:55) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- EXECUTION TIME:
0.183323
-- ERROR:
  File "/home/codebench/codes/1674/1079/main.py", line 18
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:42:05) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
		else:
			print("Area: invalida")
else:
	print("Area: invalida")
		
-- ERROR:
File "XXXX", line 18
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:04) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:43:22) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- EXECUTION TIME:
0.186242
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:36) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:46) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:43:59) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a +b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:44:49) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a + b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(s * (s - a) * (s - b) * (s - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 10:45:42) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a + b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(S * (S - a) * (S - b) * (S - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 10:45:57) 
-- CODE:
from math import *

# leituira dos lados a,b,c
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, ",", b, ",",c)

#testa se pelo menos uma das entrdas é negativa
if((a >0) or (b > 0) or (c > 0)):
	#testa se as medidas correwspidem a de um triangulo
	if((a < b + c) and (c < a + b) and ( b < c + a)):
		S = (a + b + c) / 2.0
		area = sqrt(S * (S - a) * (S - b) * (S - c))
		area = round(area,3)
		print("Area:" , area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
		
-- EXECUTION TIME:
0.142384
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
