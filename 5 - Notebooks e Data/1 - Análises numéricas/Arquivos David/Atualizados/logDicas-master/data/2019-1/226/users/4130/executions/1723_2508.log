== TEST (2019-05-13 22:07:41) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(n)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:08:09) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(n)
-- EXECUTION TIME:
0.130412
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
1
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
1
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:22:04) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(n)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:22:14) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
	print(n)
-- OUTPUT:
4
3
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:22:20) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
	print(n)
-- OUTPUT:
4
3
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:27:08) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- OUTPUT:
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:27:13) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- EXECUTION TIME:
0.135976
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.1396825396825396
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.1416160719181865
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.1415563302845726
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:27:20) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- OUTPUT:
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:27:38) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- OUTPUT:
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:27:52) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- OUTPUT:
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:27:55) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- OUTPUT:
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:27:58) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(soma)
-- EXECUTION TIME:
0.157653
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.1396825396825396
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.1416160719181865
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.1415563302845726
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 22:28:21) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(round(soma, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 22:28:31) 
-- CODE:
from math import *

n = int(input("Digite um numero: "))

i = 2
soma = 3
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(round(soma, 8))
-- EXECUTION TIME:
0.136323
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 21:37:13) 
-- CODE:
n = int(input("Digite um numero: "))

soma = 3
i = 2
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(round(soma, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 21:37:18) 
-- CODE:
n = int(input("Digite um numero: "))

soma = 3
i = 2
j = 0

while(1 < n):
	soma = soma + (4 / (i * (i + 1) * (i + 2))) * (-1) ** j
	i = i + 2
	j = j + 1
	n = n - 1
print(round(soma, 8))
-- EXECUTION TIME:
0.125078
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
