== TEST (2019-04-15 18:25:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (x>=200):
	x1 = x + x*0.05
	print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (x>=200):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:26:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(z,2))
-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:26:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(x1,2))
-- OUTPUT:
210.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:26:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(x1,2))
-- EXECUTION TIME:
0.124234
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
210.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
210.56
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:26:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(x1,2))
else:
	print(round(z,2))
-- OUTPUT:
210.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:27:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(x1,2))
else:
	print(round(z,2))
-- EXECUTION TIME:
0.113159
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
210.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
210.56
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:27:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z + z*0.05
	print(round(x1,2))
else:
	print(round(z,2))
-- OUTPUT:
210.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:27:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z - z*0.05
	print(round(x1,2))
else:
	print(round(z,2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:27:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
z = float(input("digite o preco: "))
if (z>=200):
	x1 = z - z*0.05
	print(round(x1,2))
else:
	print(round(z,2))
-- EXECUTION TIME:
0.178507
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
