== SUBMITION (2019-05-14 19:50:28) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*qv) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>0):
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.192881
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 7, in <module>
    soma = soma + (soma*qv) - pr
NameError: name 'qv' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:50:30) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*qv) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>0):
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = soma + (soma*qv) - pr
NameError: name 'qv' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:51:16) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>0):
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.206337
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:51:18) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>0):
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:51:47) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>0):
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.147969
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:52:17) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>8000):
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.199445
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:52:25) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>8000):
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:18:53) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
if(soma>8000):
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:20:52) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:20:56) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.125531
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:21:00) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	pr = int(input("Digite: "))
	cont= cont +1
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:54:49) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:57:43) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.219187
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 10, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:58:03) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.124307
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 7, in <module>
    soma = soma + (soma*pc) - pr
NameError: name 'pr' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:58:06) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = soma + (soma*pc) - pr
NameError: name 'pr' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:59:32) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
cont=0
soma = qo
pr=0
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.154865
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
1925.04
2996.0624
4665.857344
7269.73745664
11330.7904323584
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
5486.32
4554.1831999999995
3945.7250319999994
-335.81771768000044
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
3331.8
3263.9300000000003
3506.3055000000004
4732.512425000001
6386.891773750001
8619.303894562501
MAXIMO
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 21:00:39) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
		pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.152514
-- ERROR:
  File "/home/codebench/codes/1723/2507/main.py", line 8
    soma = soma + (soma*pc) - pr
                               ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:00:43) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
		pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
File "XXXX", line 8
    soma = soma + (soma*pc) - pr
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:00:57) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:01:53) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    pr = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 21:02:01) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100
pr = int(input("Digite: "))
cont=0
soma = qo
while(soma>0 and soma<8000):
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1
	pr = int(input("Digite: "))
	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.189213
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1723/2507/main.py", line 10, in <module>
    pr = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 07:26:34) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.12836
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
1918.04
2984.1423999999997
4646.262144
7238.1689446400005
11280.543553638401
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
4499.32
3890.3131999999996
-391.7836680000005
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
2097.8
1932.0300000000002
2607.2405000000003
3517.7746750000006
4745.995811250001
6403.094345187501
8639.177366003127
MAXIMO
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:26:36) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- OUTPUT:
1918.04
2984.1423999999997
4646.262144
7238.1689446400005
11280.543553638401
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 07:27:33) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	print(soma)
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- OUTPUT:
1918.04
2984.1423999999997
4646.262144
7238.1689446400005
11280.543553638401
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 07:28:17) 
-- CODE:
qo= int(input("Digite: "))
pc = float(input("Digite: "))/100

cont=0
soma = qo
while(soma>0 and soma<8000):
	pr = int(input("Digite: "))
	soma = soma + (soma*pc) - pr
	cont= cont +1

	
	
if(soma<0):
	print("ZERO")
	print(cont)
else:
	print("MAXIMO")
	print(cont)
-- EXECUTION TIME:
0.126703
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
