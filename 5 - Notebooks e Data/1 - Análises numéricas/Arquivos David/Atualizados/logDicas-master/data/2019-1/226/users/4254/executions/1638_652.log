== TEST (2019-04-24 19:56:17) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /10 % 10
print(nesc)
-- OUTPUT:
2.799999999999997
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:56:44) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /1 % 10
print(nesc)
-- OUTPUT:
8.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:56:57) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /100 % 10
print(nesc)
-- OUTPUT:
7.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:57:15) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /0.1 % 10
print(nesc)
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:57:26) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /0.10 % 10
print(nesc)
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:57:42) 
-- CODE:
n = int(input("Digite o numero: "))
nesc = n /0.100 % 10
print(nesc)
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:07) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n/100 %10

nesc = n /0.100 % 10
print(nd)
-- OUTPUT:
7.28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:25) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n/10 %10

nesc = n /0.100 % 10
print(nd)
-- OUTPUT:
2.799999999999997
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:36) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n/1000 %10

nesc = n /0.100 % 10
print(nd)
-- OUTPUT:
0.728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:50) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n %10

nesc = n /0.100 % 10
print(nd)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:03:12) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n /10 %10

nesc = n /0.100 % 10
print(nd)
-- OUTPUT:
2.799999999999997
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:04:13) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 %10

nesc = 
print(nd)
-- ERROR:
File "XXXX", line 4
    nesc = 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:04:22) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 %10

print(nd)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:04:31) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //100 %10

print(nd)
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:05:04) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10

print(nd)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:05:09) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10

print(nu)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:05:39) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10
ndesc = nd*10 + nu
print(ndesc)
-- OUTPUT:
28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:09:17) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10
ndesc = nd*10 + nu
if(n % ndesc != 0):
	print("SIM")
else:
	print("NAO")
-- OUTPUT:
NAO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:09:40) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10
ndesc = nd*10 + nu
if(n % ndesc = 0):
	print("SIM")
else:
	print("NAO")
-- ERROR:
File "XXXX", line 5
    if(n % ndesc = 0):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:09:48) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10
ndesc = nd*10 + nu
if(n % ndesc == 0):
	print("SIM")
else:
	print("NAO")
-- OUTPUT:
SIM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:09:53) 
-- CODE:
n = int(input("Digite o numero: "))
nd = n //10 % 10
nu = n % 10
ndesc = nd*10 + nu
if(n % ndesc == 0):
	print("SIM")
else:
	print("NAO")
-- EXECUTION TIME:
0.176276
-- TEST CASE 1:
---- input:
728
---- correct output:
SIM
---- user output:
SIM
-- TEST CASE 2:
---- input:
789
---- correct output:
NAO
---- user output:
NAO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
