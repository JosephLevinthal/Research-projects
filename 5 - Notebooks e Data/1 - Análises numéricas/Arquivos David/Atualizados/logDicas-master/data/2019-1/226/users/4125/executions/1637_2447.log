== TEST (2019-04-09 11:07:23) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (preco> pagamento):
	x = n - n1
	print("Falta" + x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (preco> pagamento):
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:07:42) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n - n1
	print("Falta" + x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:24) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	print("Falta" + x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:08:34) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	print("Falta" + x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:12:55) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta ", round(x,2)
else:
	x = n-n1
	msg = "Troco de", round(x,2)
print(msg)
-- OUTPUT:
('Falta ', -26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:13:04) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta ", round(x,2)
else:
	x = n-n1
	msg = "Troco de", round(x,2)
print(msg)
-- EXECUTION TIME:
0.165606
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', -26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', -28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:13:38) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta " + round(x,2)
else:
	x = n-n1
	msg = "Troco de" =+ round(x,2)
print(msg)
-- ERROR:
File "XXXX", line 8
    msg = "Troco de" =+ round(x,2)
         ^
SyntaxError: can't assign to literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:21) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta " round(x,2)
else:
	x = n-n1
	msg = "Troco de", x
print(msg)
-- ERROR:
File "XXXX", line 5
    msg = "Falta " round(x,2)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:28) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta " round(x,2)
else:
	x = n-n1
	msg = "Troco de", x
print(msg)
-- ERROR:
File "XXXX", line 5
    msg = "Falta " round(x,2)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:14:37) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n1-n
	msg = "Falta ", round(x,2)
else:
	x = n-n1
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', -26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:19) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:15:26) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- EXECUTION TIME:
0.149258
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:33) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:44) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:15:52) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:15:57) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- EXECUTION TIME:
0.214669
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:34) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:43) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:16:49) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:16:58) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta ", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- EXECUTION TIME:
0.127865
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:17:46) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- EXECUTION TIME:
0.203609
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:17:53) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	msg = "Falta", round(x,2)
else:
	x = n1-n
	msg = "Troco de", x
print(msg)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 11:19:31) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	print("Falta", round(x,2))
else:
	x = n1-n
	print("Troco de", round(x,2))
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 11:19:42) 
-- CODE:
n = float(input("digite o preco:"))
n1 = float(input("digite o pagamento: "))
if (n>n1):
	x = n-n1
	print("Falta", round(x,2))
else:
	x = n1-n
	print("Troco de", round(x,2))
-- EXECUTION TIME:
0.163538
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
