== TEST (2019-04-02 11:17:39) 
-- CODE:
kg = float (input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = int (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = int (input ("digite a quantidade de sobremesa consumida:"))
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:20:44) 
-- CODE:
g = float (input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = int (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = int (input ("digite a quantidade de sobremesa consumida:"))
kg = g/1000
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:21:43) 
-- CODE:
g = int (input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = int (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = int (input ("digite a quantidade de sobremesa consumida:"))
kg = g/1000
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    g = int (input())
ValueError: invalid literal for int() with base 10: '896.12'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:21:58) 
-- CODE:
g = int (input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = int (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = int (input ("digite a quantidade de sobremesa consumida:"))
kg = g/1000
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    g = int (input())
ValueError: invalid literal for int() with base 10: '896.12'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:22:26) 
-- CODE:
g = float (input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = g/1000
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:23:16) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg =float (g/1000)
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:24:10) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobemesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg =float (g/1000)
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    preco_final = (qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
NameError: name 'qtd_sobremesa' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:24:33) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg =float (g/1000)
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:25:38) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g/1000)
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:26:16) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g*(10**-3)
selfservice = 26,90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- ERROR:
File "XXXX", line 5
    selfservice = 26,90
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:26:39) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g/1000)
selfservice = 26.90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- OUTPUT:
24.11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:26:58) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g/1000)
selfservice = 26.90
bebida = 3
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- OUTPUT:
24.11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 11:27:29) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g/1000)
selfservice = 26.90
bebida = 3.5
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- OUTPUT:
24.11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 11:27:46) 
-- CODE:
g = float(input("Digite quantas gramas tem no seu prato:"))
qtd_bebida = float (input("Digite a quantidade de bebida consumida:"))
qtd_sobremesa = float (input ("digite a quantidade de sobremesa consumida:"))
kg = (g/1000)
selfservice = 26.90
bebida = 3.5
sobremesa = 3
preco_final = (kg*selfservice)+(qtd_bebida*bebida)+(qtd_sobremesa*sobremesa)
print(round(preco_final,2))
-- EXECUTION TIME:
0.230032
-- TEST CASE 1:
---- input:
896.12
0
0
---- correct output:
24.11
---- user output:
24.11
-- TEST CASE 2:
---- input:
389.03
1
0
---- correct output:
13.96
---- user output:
13.96
-- TEST CASE 3:
---- input:
225.89
0
1
---- correct output:
9.08
---- user output:
9.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
