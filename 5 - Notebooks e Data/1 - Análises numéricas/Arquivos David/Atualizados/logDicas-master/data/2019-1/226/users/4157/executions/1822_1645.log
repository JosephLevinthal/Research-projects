== TEST (2019-06-13 10:28:18) 
-- CODE:
from numpy mport*
s = array(eval(input("saques:")))
v = zeros(s, dtype=int)
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(s)

	
	
-- ERROR:
File "XXXX", line 1
    from numpy mport*
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:28:22) 
-- CODE:
from numpy mport*
s = array(eval(input("saques:")))
v = zeros(s, dtype=int)
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(s)

	
	
-- ERROR:
File "XXXX", line 1
    from numpy mport*
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:28:30) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
v = zeros(s, dtype=int)
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(s)

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:29:23) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
v = zeros(s, dtype=int)
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:34:27) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
v = zeros(s, dtype=int)

for z in range(size(s)):
	if(s[x]>=2000):
	v = size(s)
print(v)
	

	
	
-- ERROR:
File "XXXX", line 12
    v = size(s)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:35:03) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
v = zeros(s, dtype=int)

for z in range(size(s)):
	if(s[x]>=2000):
	v = size(s)
print(v)
	

	
	
-- EXECUTION TIME:
0.709936
-- ERROR:
  File "/home/codebench/codes/1822/1645/main.py", line 12
    v = size(s)
    ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:35:18) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0
for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
v = zeros(s, dtype=int)

for z in range(size(s)):
	if(s[x]>=2000):
	v = size(s)
print(v)
	

	
	
-- ERROR:
File "XXXX", line 12
    v = size(s)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:48:36) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- EXECUTION TIME:
1.0168
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1822/1645/main.py", line 13, in <module>
    v[i]=b
IndexError: index 4 is out of bounds for axis 0 with size 4

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:48:49) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
i=0
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- EXECUTION TIME:
0.865937
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1822/1645/main.py", line 14, in <module>
    v[i]=b
IndexError: index 0 is out of bounds for axis 0 with size 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:48:55) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
i=0
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- EXECUTION TIME:
0.914093
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1822/1645/main.py", line 14, in <module>
    v[i]=b
IndexError: index 0 is out of bounds for axis 0 with size 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:49:19) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
i=0
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 10:49:54) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
i=0
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:50:30) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
i=0
b=0
v= zeros(i, dtype=int)
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]==b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- EXECUTION TIME:
0.77098
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1822/1645/main.py", line 14, in <module>
    v[i]==b
IndexError: index 0 is out of bounds for axis 0 with size 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 10:52:03) 
-- CODE:
from numpy import*
s = array(eval(input("saques:")))
i = 0

for x in range(size(s)):
	if(s[x]>=2000):
		i=i+1
print(i)
v= zeros(i, dtype=int)
b=0
i=0
for z in range(size(s)):
	if(s[z]>=2000):
		v[i]=b
		i=i+1
	b=b+1
print(v)
	
	

	
	
-- EXECUTION TIME:
1.0616
-- TEST CASE 1:
---- input:
[2000,1500,2100,1500,3000,3200,1205,1800]
---- correct output:
4
[0 2 4 5]
---- user output:
4
[0 2 4 5]
-- TEST CASE 2:
---- input:
[2000,1500,2100,1500,3000]
---- correct output:
3
[0 2 4]
---- user output:
3
[0 2 4]
-- TEST CASE 3:
---- input:
[2000,1500,1950,1555,1999,2050,2560,2851,1500,3000]
---- correct output:
5
[0 5 6 7 9]
---- user output:
5
[0 5 6 7 9]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
