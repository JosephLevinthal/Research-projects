== TEST (2019-03-22 21:22:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=pi*(x**2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:22:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
a=match(pi*(x**2))
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a=match(pi*(x**2))
NameError: name 'match' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:25:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math important*a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from math important*a=pi*(x**2)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:25:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math important*
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from math important*
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:26:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from<math>important*
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from<math>important*
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:26:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from<math>import*
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from<math>import*
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:27:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from<math>import*a=pi*(x**2)
from<math>import*v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from<math>import*a=pi*(x**2)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:27:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from<math>import*pi
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from<math>import*pi
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:28:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* pi
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
File "XXXX", line 5
    from math import* pi
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:28:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* 
pi=constante
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    pi=constante
NameError: name 'constante' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:29:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* 
a=pi*(x**2)
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=pi*(x**2)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:29:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=x**2*pi
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:37:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* 
a=int(x**2)*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=int(x**2)*pi
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:37:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=input("valor do raio=")
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=x**2*pi
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:41:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:42:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:42:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- EXECUTION TIME:
0.187628
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:43:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:43:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- EXECUTION TIME:
0.194406
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:44:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:44:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor do raio="))
from math import* 
a=x**2*pi
v=pi*(x**3)*4/3
print(round(a, 3))
print(round(v, 3))
-- EXECUTION TIME:
0.146054
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
