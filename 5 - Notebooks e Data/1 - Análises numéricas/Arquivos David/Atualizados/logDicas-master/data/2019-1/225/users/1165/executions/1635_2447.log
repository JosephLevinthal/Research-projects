== TEST (2019-04-12 12:28:37) 
-- CODE:
preco = (float(input("Preco maior que pagamento: ")))
pagamento = (float(input("Pagamento maior que o preco: ")))

if (preco > pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:31:04) 
-- CODE:
preco = (float(input("Preco maior que pagamento: ")))
pagamento = (float(input("Pagamento maior que o preco: ")))

if (preco > pagamento / pagamento > preco):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 12:31:40) 
-- CODE:
preco = (float(input("Preco maior que pagamento: ")))
pagamento = (float(input("Pagamento maior que o preco: ")))

if (preco > pagamento / pagamento > preco):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- EXECUTION TIME:
0.121782
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:34:26) 
-- CODE:
preco = (float(input("x maior que y: ")))
pagamento = (float(input("y maior que o x: ")))

if (preco > pagamento / pagamento > preco):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:38:02) 
-- CODE:
preco = (float(input("x maior que y: ")))
pagamento = (float(input("y maior que x: ")))

if (preco > pagamento / pagamento > preco):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 12:39:20) 
-- CODE:
preco = (float(input("x maior que y: ")))
pagamento = (float(input("y maior que x: ")))

if (preco > pagamento / pagamento > preco):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- EXECUTION TIME:
0.171163
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:43:12) 
-- CODE:
preco = (float(input("x maior que y: ")))
pagamento = (float(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:44:12) 
-- CODE:
preco = (float(input("x maior que y: ")))
pagamento = (float(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:48:17) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:48:45) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
print(round(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:49:16) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 12:49:55) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento / preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 13:12:30) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento) e  (preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

-- ERROR:
File "XXXX", line 4
    if (preco > pagamento) e  (preco < pagamento):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 13:12:54) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento) ou (preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

-- ERROR:
File "XXXX", line 4
    if (preco > pagamento) ou (preco < pagamento):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:32:59) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco > pagamento) ou (preco < pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
	
print(round(mensagem, 2))

-- ERROR:
File "XXXX", line 4
    if (preco > pagamento) ou (preco < pagamento):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:37:11) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco/pagamento > preco/pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
	
print(round(mensagem, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:38:22) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco/pagamento > preco/pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
	
print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:05:09) 
-- CODE:
preco = (int(input("x maior que y: ")))
pagamento = (int(input("x menor que y: ")))

if (preco/pagamento > preco/pagamento):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"
	
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = (int(input()))
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
