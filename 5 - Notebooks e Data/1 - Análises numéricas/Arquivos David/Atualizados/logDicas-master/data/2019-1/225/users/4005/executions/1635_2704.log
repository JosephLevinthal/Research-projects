== TEST (2019-04-14 21:36:20) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")
if(S):
	na=(nota*10/100)
	print(na)
if(N):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:38:21) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")

if(S):
	na=(nota*10/100)
	print(na)
if(N):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:39:44) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")

if(RESPOSTA==S):
na=(nota*10/100)
	print(na)
if(RESPOSTA==N):
	print(nota)
	
-- ERROR:
File "XXXX", line 5
    na=(nota*10/100)
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:39:46) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")

if(RESPOSTA==S):
na=(nota*10/100)
	print(na)
if(RESPOSTA==N):
	print(nota)
	
-- ERROR:
File "XXXX", line 5
    na=(nota*10/100)
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:39:49) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")

if(RESPOSTA==S):
	na=(nota*10/100)
	print(na)
if(RESPOSTA==N):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:40:21) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=input("mensagem:")

if(RESPOSTA==S):
	print(nota*10/100)
if(RESPOSTA==N):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:43) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if( RESPOSTA=S ):
	print(nota*10/100)
if(RESPOSTA=N):
	print(nota)
	
-- ERROR:
File "XXXX", line 4
    if( RESPOSTA=S ):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:49) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if(RESPOSTA=S):
	print(nota*10/100)
if(RESPOSTA=N):
	print(nota)
	
-- ERROR:
File "XXXX", line 4
    if(RESPOSTA=S):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:56) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if(RESPOSTA=S):
	print(nota*10/100)
if(RESPOSTA=N):
	print(nota)
	
-- ERROR:
File "XXXX", line 4
    if(RESPOSTA=S):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:59) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=S):
	print(nota*10/100)
if(RESPOSTA=N):
	print(nota)
	
-- ERROR:
File "XXXX", line 4
    if (RESPOSTA=S):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:05) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA==S):
	print(nota*10/100)
if(RESPOSTA=N):
	print(nota)
	
-- ERROR:
File "XXXX", line 6
    if(RESPOSTA=N):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:08) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA==S):
	print(nota*10/100)
if(RESPOSTA==N):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:43:04) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:43:12) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- EXECUTION TIME:
0.303911
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:07) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:22) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:44:35) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- EXECUTION TIME:
0.201589
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:38) 
-- CODE:
nota=int(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    nota=int(input())
ValueError: invalid literal for int() with base 10: '5.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:57) 
-- CODE:
nota=float(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:45:07) 
-- CODE:
nota=float(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:45:17) 
-- CODE:
nota=float(input("nota:"))
RESPOSTA=(input("mensagem:"))

if (RESPOSTA=="S"):
	print(nota+nota*10/100)
if(RESPOSTA=="N"):
	print(nota)
	
-- EXECUTION TIME:
0.171724
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
