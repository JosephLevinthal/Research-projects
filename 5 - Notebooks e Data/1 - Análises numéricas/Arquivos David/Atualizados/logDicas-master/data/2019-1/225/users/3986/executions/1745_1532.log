== TEST (2019-05-15 14:08:07) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
while (k > 0)
	t=t + 1
	k=k + (x ** 3/ factorial(x))
	k= k + 2
print(round(k,9))
-- ERROR:
File "XXXX", line 5
    while (k > 0)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:08:12) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
while (k > 0):
	t=t + 1
	k=k + (x ** 3/ factorial(x))
	k= k + 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    k=k + (x ** 3/ factorial(x))
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:08:34) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
while (k > 0):
	t=t + 1
	k=k + ((x ** 3)/ factorial(x))
	k= k + 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    k=k + ((x ** 3)/ factorial(x))
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:08:49) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
while (k > 0):
	t=t + 1
	k=k + (x ** 3)/ factorial(x)
	k= k + 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    k=k + (x ** 3)/ factorial(x)
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:09:09) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
while (k > 0):
	t=t + 1
	k=k + (k ** 3)/ factorial(k)
	k= k + 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    k=k + (k ** 3)/ factorial(k)
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:10:28) 
-- CODE:
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    y=i+ (i ** n)/ factorial(n)
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:10:45) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    y=i+ (i ** n)/ factorial(n)
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:10:56) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
print(round(y,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    y=i+ (i ** n)/ factorial(n)
NameError: name 'factorial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:11:09) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
	print(round(y,9))
-- OUTPUT:
2.0
1.166666667
1.008333333
1.000198413
1.000002756
1.000000025
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:11:28) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
	print(round(y,9))
-- OUTPUT:
2.0
1.166666667
1.008333333
1.000198413
1.000002756
1.000000025
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:11:28) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i+ (i ** n)/ factorial(n)
	n= n+ 2
	print(round(y,9))
-- OUTPUT:
2.0
1.166666667
1.008333333
1.000198413
1.000002756
1.000000025
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:14:34) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	y=i + (k ** n)/ factorial(n)
	n= n+ 2
print(round(y,9))
-- OUTPUT:
2.0
1.166666667
1.008333333
1.000198413
1.000002756
1.000000025
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:16) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input(" quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	x=x + (x ** 3) / factorial(x)
	n= n+ 2
print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=x + (x ** 3) / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:20) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
i=1
n=1
while (k > 0):
	t=t + 1
	x=x + (x ** 3) / factorial(x)
	n= n+ 2
print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=x + (x ** 3) / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:21) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) and :
	t=t + 1
	x=x + (x ** n) / factorial(x)
	n=n+ 2

print(round(x,9))
-- ERROR:
File "XXXX", line 6
    while (k > 0) and :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:28) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=x + (x ** n) / factorial(x)
	n=n+ 2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=x + (x ** n) / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:04) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=x + ((x ** n) / factorial(x))
	n=n+ 2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=x + ((x ** n) / factorial(x))
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:44) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=(x + ((x ** n) / factorial(x)
	n=n+ 2

print(round(x,9))
-- ERROR:
File "XXXX", line 9
    n=n+ 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:49) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=(x + ((x ** n)) / factorial(x)
	n=n+ 2

print(round(x,9))
-- ERROR:
File "XXXX", line 9
    n=n+ 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:55) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=(x + ((x ** n)) / factorial(x)
	n=n+2

print(round(x,9))
-- ERROR:
File "XXXX", line 9
    n=n+2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:20:23) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=x + (x ** n) / factorial(x)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=x + (x ** n) / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:22:05) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x=x + (x ** n) / factorial(x)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=x + (x ** n) / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:26) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x=x1 + (x1 ** n) / factorial(x1)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=x1 + (x1 ** n) / factorial(x1)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:47) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k=! 0) :
	t=t + 1
	x=1
	x=x1 + (x1 ** n) / factorial(x1)
	n=n+2

print(round(x,9))
-- ERROR:
File "XXXX", line 7
    while (k=! 0) :
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:53) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k !=0) :
	t=t + 1
	x=1
	x=x1 + (x1 ** n) / factorial(x1)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=x1 + (x1 ** n) / factorial(x1)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:26:11) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k !=0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(x1)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=x1 + (x1 ** n) / factorial(x1)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:26:55) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) and (k == 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(x1)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(round(x2,9))
NameError: name 'x2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:27:25) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) and (k == 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(x1)
	n=n+2
print(round(x2,9))
-- EXECUTION TIME:
0.138417
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1745/1532/main.py", line 12, in <module>
    print(round(x2,9))
NameError: name 'x2' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:27) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) and (k == 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(x1)
	n=n+2
print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(round(x2,9))
NameError: name 'x2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:33:19) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(x1)
	n=n+2

	print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=x1 + (x1 ** n) / factorial(x1)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:47:16) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(n)
	n=n+2

	print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=x1 + (x1 ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:47:50) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
x1=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x1 + (x1 ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=x1 + (x1 ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:48:11) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=y + (y ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:50:22) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x + (x ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:50:37) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x + (x ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:51:29) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x + (x ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:54:15) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x2=x + (x ** n) / factorial(n)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:54:50) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x=x + (x ** n) / factorial(x)
	n=n+2

print(round(x2,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:55:06) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x=x + (x ** n) / factorial(x)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:03:18) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	x=x + (x ** n) / factorial(x)
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:03:49) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("quantidade de termos da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	x=1
	y=x + (x ** n) / factorial(x)
	n=n+2

print(round(y,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x2=y + (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:06:10) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	y=(y + (y ** n) / factorial(y)
	n=n+2

print(round(y,9))
-- ERROR:
File "XXXX", line 10
    n=n+2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:06:27) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	y=(y + (y ** n) / factorial(n)
	n=n+2

print(round(y,9))
-- ERROR:
File "XXXX", line 10
    n=n+2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:06:43) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	y=y + (y ** n) / factorial(n)
	n=n+2

print(round(y,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=y + (y ** n) / factorial(n)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:07:09) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	y=n+ (y ** n) / factorial(n)
	n=n+2

print(round(y,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=n+ (y ** n) / factorial(n)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:07:36) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
n=1
while (k > 0) :
	t=t + 1
	k=y+ (y ** n) / factorial(n)
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    k=y+ (y ** n) / factorial(n)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:14:58) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=k
t=0
while (k > 0) :
	t=t + 1
	k=y+ (y ** n) / factorial(y)
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    k=y+ (y ** n) / factorial(y)
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:15:40) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=k
t=0
while (k > 0) :
	t=t + 1
	x=y+ (x ** n) / factorial(x)
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=y+ (x ** n) / factorial(x)
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:16:01) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=k
t=0
while (k > 0) :
	t=t + 1
	x=y+ ((x ** n) / factorial(x))
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    x=y+ ((x ** n) / factorial(x))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:20:47) 
-- CODE:

x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=k
t=0
while (k > 0) :
	t=t + 1
	from math import *
	x=y+ ((x ** n) / factorial(x))
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=y+ ((x ** n) / factorial(x))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:21:36) 
-- CODE:

x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
while (k > 0) :
	t=t + 1
	from math import *
	x=y+ ((k ** n) / factorial(y))
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=y+ ((k ** n) / factorial(y))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:22:00) 
-- CODE:

x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
while (k > 0) :
	t=t + 1
	from math import *
	x=(y+ (k ** n) / factorial(y))
	n=n+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=(y+ (k ** n) / factorial(y))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:22:16) 
-- CODE:

x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
while (k > 0) :
	t=t + 1
	from math import *
	x=(y+ (k ** n) / factorial(y))
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=(y+ (k ** n) / factorial(y))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:36:47) 
-- CODE:

x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
si=1
while (k > 0) :
	t=t + 1
	from math import *
	x=(y+ (y ** n) / factorial(n)) * si
	n=n+2

print(round(x,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x=(y+ (y ** n) / factorial(n)) * si
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:38:37) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0) :
	t=t + 1
	x=(y+ (y ** k) / factorial(k))
	k=k+2

print(round(t,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    x=(y+ (y ** k) / factorial(k))
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:38:55) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0) :
	t=t + 1
	y=y+ (y ** k) / factorial(k)
	k=k+2

print(round(t,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=y+ (y ** k) / factorial(k)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:39:39) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0) :
	t=t + 1
	y=y+ (y ** k) / factorial(k)
	k=k+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=y+ (y ** k) / factorial(k)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:40:01) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0) :
	t=t + 1
	y=y+ y ** k / factorial(k)
	k=k+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=y+ y ** k / factorial(k)
OverflowError: (34, 'Numerical result out of range')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:41:44) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0):
	t=t + 1
	y=y+ (y ** k) / factorial(y)
	k=k+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=y+ (y ** k) / factorial(y)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:41:59) 
-- CODE:
from math import *
x=float(input("numero real: "))
k=int(input("termo da serie: "))
y=x
t=0
k=1
while (k > 0):
	t=t + 1
	y=k+ (y ** k) / factorial(y)
	k=k+2

print(round(k,9))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    y=k+ (y ** k) / factorial(y)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
