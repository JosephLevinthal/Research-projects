== TEST (2019-05-20 19:13:39) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vetor = array(eval(input("vetor: "))

# quantidade de elementos do vetor
print(size(vetor))
#primeiro elemento do vetor
print(vetor[0])  
# ultimo elemento do vetor
print(vetor[-1])
# maior elemento 
print(max(vetor))
#menor elemento
print(min(vetor))
#soma dos elementos
print(sun(vetor))
#media aritmetica 
				  
-- ERROR:
File "XXXX", line 8
    print(size(vetor))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:14:33) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vetor = array(eval(input("vetor: "))

# quantidade de elementos do vetor
print(size(vetor))
#primeiro elemento do vetor
print(vetor[0])  
# ultimo elemento do vetor
print(vetor[-1])
# maior elemento 
print(max(vetor))
#menor elemento
print(min(vetor))
#soma dos elementos
print(sun(vetor))
#media aritmetica 
				  
-- ERROR:
File "XXXX", line 8
    print(size(vetor))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:16:57) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: "))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sun(vet))
#media aritmetica 
				  
-- ERROR:
File "XXXX", line 8
    print(size(vet))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:19:22) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: "))

# quantidade de elementos do vetor

#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sun(vet))
#media aritmetica 
				  
-- ERROR:
File "XXXX", line 10
    print(vet[0])  
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 21:02:35) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sun(vet))
#media aritmetica 
				  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 21:08:15) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sun(vet))
#media aritmetica 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 21:17:36) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sum(vet))
#media aritmetica 
m = sum(vet) / size(vet)
print(round(m, 2)
-- ERROR:
File "XXXX", line 22
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 21:17:53) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sum(vet))
#media aritmetica 
m = sum(vet) / size(vet)
print(round(m, 2)
-- ERROR:
File "XXXX", line 22
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 21:18:06) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sum(vet))
#media aritmetica 
m = sum(vet) / size(vet)
print(round(m, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 21:18:40) 
-- CODE:
# Não se esqueça de incluir o módulo numpy
# Use o navegador Chrome, para copiar/colar a entrada de exemplo 
from numpy import *

vet = array(eval(input("vetor: ")))

# quantidade de elementos do vetor
print(size(vet))
#primeiro elemento do vetor
print(vet[0])  
# ultimo elemento do vetor
print(vet[-1])
# maior elemento 
print(max(vet))
#menor elemento
print(min(vet))
#soma dos elementos
print(sum(vet))
#media aritmetica 
m = sum(vet) / size(vet)
print(round(m, 2))
-- EXECUTION TIME:
0.510659
-- TEST CASE 1:
---- input:
[13,10,1,9,7,20,5,20,14,16,5,13,11,7,6,2,19,18,8,19,13,5,8,4,3,16,8,7,9,2,13,11,14,10,15,11,6,17,16,10,15,6,12,9,4,15,16,10,15,7,17,10,9,6,12,18,2,9,5,17,19,5,20,4,5,11,3,15,15,3,20,11,5,13,9,16,14,15,11,19,15,9,14,10,7,1,6,7]
---- correct output:
88
13
7
20
1
937
10.65
---- user output:
88
13
7
20
1
937
10.65
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
