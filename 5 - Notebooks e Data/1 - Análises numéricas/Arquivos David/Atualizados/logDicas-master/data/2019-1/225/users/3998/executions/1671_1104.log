== TEST (2019-04-25 13:05:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))


if( b <= a )(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
	
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))

elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))

elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:05:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))


if( b <= a )(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
	
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))

elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))

elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:05:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))


if( b <= a )(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
	
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))

elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))

elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:06:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))


if( b <= a )(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))	
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    print("Intervalo 1: " + (a) "," + (b))	
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:27:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:29:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:29:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:34:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.0290389
-- ERROR:
Error response from daemon: Container a65d973dfc6f4d44f730cbcd0c43e3ab4d72c59347133829880cdd1ed383e2c4 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:34:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:34:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:34:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.0270851
-- ERROR:
Error response from daemon: Container a65d973dfc6f4d44f730cbcd0c43e3ab4d72c59347133829880cdd1ed383e2c4 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:34:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:34:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.029355
-- ERROR:
Error response from daemon: Container a65d973dfc6f4d44f730cbcd0c43e3ab4d72c59347133829880cdd1ed383e2c4 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:34:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
	

if( b <= a )and(d <= c):
	print("Nao ha intersecao")
elif(a<=c) and (c<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(a<=d) and (d<=b):
	print("Intervalo 1: " + (a) "," + (b))
elif(c<=a) and (a<=d):
	print("Intervalo 2: " + (c) "," + (d))
elif(c<=b) and (b<=d):
	print("Intervalo 2: " + (c) "," + (d))
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Intervalo 1: " + (a) "," + (b))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:34:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:35:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.029875
-- ERROR:
Error response from daemon: Container a65d973dfc6f4d44f730cbcd0c43e3ab4d72c59347133829880cdd1ed383e2c4 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:37:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:37:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:41:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.025306
-- ERROR:
Error response from daemon: Container a65d973dfc6f4d44f730cbcd0c43e3ab4d72c59347133829880cdd1ed383e2c4 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:41:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:41:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:42:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:43:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:43:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.205654
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 5.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , -3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:43:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", b)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 2.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:44:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.212259
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:44:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:44:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(a >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:44:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.20216
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:45:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:46:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:46:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:48:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a >=c)and (b >=c)
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 17
    elif(a >=c)and (b >=c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:49:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a >=c) and (b >=c):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:49:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=c):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 13:51:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 13:51:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.192433
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha Intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:26:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d)or (d >=a )and(d <= b ):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:26:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d)or (d >=a )and(d <= b ):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:27:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a and d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d)or (d >=a )and(d <= b ):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.182326
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha Intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:27:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a) and (d > c):
	if (a >= c and a <= d):
		print("Ha Intersecao")
	elif(b >= c and b <= d):
		print("Ha Intersecao")
	elif(a <=c) and (b >=d)or (d >=a )and(d <= b ):
		print("Ha Intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.167754
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha Intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:28:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1: ", a, ",", b)
print("Intervalo 2: ", c, ",", d)

if(b > a) and (d > c):
	if (a >= c) and (a <= d):
		print("Ha intersecao")
	elif(b >= c and b <= d):
		print("Ha intersecao")
	elif(a <=c) and (b >=d)or (d >=a )and(d <= b ):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.138066
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1:  1.0 , 2.0
Intervalo 2:  4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1:  1.5 , 5.0
Intervalo 2:  2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1:  -1.0 , -3.0
Intervalo 2:  1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
