== TEST (2019-06-05 13:20:55) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1)
	
for elemento in vet:
	if(elemento >= 5) and (elemnto <= 7):
		print(elemento)
		
		vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 7
    while(size(vet) > 1)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:21:08) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
for elemento in vet:
	if(elemento >= 5) and (elemnto <= 7):
		print(elemento)
		
		vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 9
    for elemento in vet:
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:21:53) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
	print(elemento)
		
		vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 11
    print(elemento)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:22:00) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
	print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 11
    print(elemento)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:22:35) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
	print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 11
    print(elemento)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:22:35) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
	print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 11
    print(elemento)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:22:59) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
			
	print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 12
    print(elemento)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:23:16) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
			
		print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 12
    print(elemento)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:24:25) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
		print(elemento)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 11
    print(elemento)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:25:43) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
		print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
File "XXXX", line 12
    print(i)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:30:32) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto <= 7):
			i = i + 1
		print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:30:54) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemnto < 7):
			i = i + 1
		print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:31:13) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemento < 7):
			i = i + 1
		print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:36:42) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemento < 7):
			i = i + 1
		print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 13:37:49) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemento < 7):
			i = i + 1
	print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 13:38:23) 
-- CODE:
from numpy import*

#leitura do primeiro vetor
vet = array(eval(input("vetor:")))

#verifica se vai terminar
while(size(vet) > 1):
	i = 0
	
	for elemento in vet:
		if(elemento >= 5) and (elemento < 7):
			i = i + 1
	print(i)
		
	vet = array(eval(input("proximo vetor:")))
		
	
		

-- EXECUTION TIME:
1.00189
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
6
0
3
1
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
11
4
1
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
5
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
