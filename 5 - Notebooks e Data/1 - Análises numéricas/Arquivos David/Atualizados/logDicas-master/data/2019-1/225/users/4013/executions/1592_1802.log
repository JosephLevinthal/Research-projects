== TEST (2019-03-25 20:39:50) 
-- CODE:
p = int(input())
D1 = int(input())
D2 = int(input())
from math import*
d = sqrt(5 * D1) + pi**(D2/3)
print(int(de))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(int(de))
NameError: name 'de' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:40:08) 
-- CODE:
p = int(input())
D1 = int(input())
D2 = int(input())
from math import*
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:40:34) 
-- CODE:
p = int(input())
D1 = int(input())
D2 = int(input())
from math import*
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- EXECUTION TIME:
0.177517
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:40:41) 
-- CODE:
p = int(input())
D1 = int(input())
D2 = int(input())
from math import*
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:41:08) 
-- CODE:
p = int(input())
D1 = int(input())
D2 = int(input())
from math import*
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:41:43) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:41:52) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- EXECUTION TIME:
0.175723
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:42:35) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    d = sqrt(5 * D1) + pi**(D2/3)
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:43:03) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = float(sqrt(5 * D1) + pi**(D2/3)
print(int(d))
-- ERROR:
File "XXXX", line 6
    print(int(d))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:43:44) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print(d)
-- ERROR:
File "XXXX", line 6
    print(d)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:43:54) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print( d )
-- ERROR:
File "XXXX", line 6
    print( d )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:43:56) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print( d )
-- EXECUTION TIME:
0.145047
-- ERROR:
  File "/home/codebench/codes/1592/1802/main.py", line 6
    print( d )
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:44:00) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print( d )
-- ERROR:
File "XXXX", line 6
    print( d )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:44:10) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))

-- ERROR:
File "XXXX", line 6
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:44:45) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print( d )
-- ERROR:
File "XXXX", line 6
    print( d )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:44:47) 
-- CODE:
from math import*
p = input()
D1 = input()
D2 = input()
d = int(float(sqrt(5 * D1) + pi**(D2/3))
print( d )
-- EXECUTION TIME:
0.150448
-- ERROR:
  File "/home/codebench/codes/1592/1802/main.py", line 6
    print( d )
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:46:17) 
-- CODE:
from math import*
p = int(input())
D1 = int(input( < 20))
D2 = 
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
File "XXXX", line 3
    D1 = int(input( < 20))
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:46:25) 
-- CODE:
from math import*
p = int(input())
D1 = int(input( x < 20))
D2 = 
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
File "XXXX", line 4
    D2 = 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:46:25) 
-- CODE:
from math import*
p = int(input())
D1 = int(input( x < 20))
D2 = 
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
File "XXXX", line 4
    D2 = 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:46:46) 
-- CODE:
from math import*
p = int(input())
D1 = int(input( x < 20))
D2 = int(input( y < 20))
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    D1 = int(input( x < 20))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:47:32) 
-- CODE:
from math import*
p = int(input())
D1 = int(input() < 20)
D2 = int(input() < 20)
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    D1 = int(input() < 20)
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:47:34) 
-- CODE:
from math import*
p = int(input())
D1 = int(input() < 20)
D2 = int(input() < 20)
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- EXECUTION TIME:
0.133464
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1592/1802/main.py", line 3, in <module>
    D1 = int(input() < 20)
TypeError: unorderable types: str() < int()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:47:39) 
-- CODE:
from math import*
p = int(input())
D1 = int(input() < 20)
D2 = int(input() < 20)
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    D1 = int(input() < 20)
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:48:10) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2/3)
print( d )
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:49:05) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2//3)
print(int(d ))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:49:25) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2//3)
print(int(d))
-- EXECUTION TIME:
0.25633
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:49:26) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + pi**(D2//3)
print(int(d))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:50:05) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + int(pi**(D2/3))
print(int(d))
-- OUTPUT:
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:50:18) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + int(pi**(D2//3))
print(int(d))
-- OUTPUT:
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:50:35) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = sqrt(5 * D1) + int(pi**(D2//3))
print(d)
-- OUTPUT:
11.23606797749979
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:53:13) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = (sqrt(5 * D1) + int(pi**(D2//3))) - p
print(d)
-- OUTPUT:
-188.7639320225002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:53:48) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = (sqrt(5 * D1) + pi**(D2/3)) - p
print(int(d)
-- ERROR:
File "XXXX", line 7
    
                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:53:55) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = (sqrt(5 * D1) + pi**(D2/3)) - p
print(int(d))
-- OUTPUT:
-187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:54:09) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = (sqrt(5 * D1) + pi**(D2//3)) - p
print(int(d))
-- OUTPUT:
-187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:54:39) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = p - (sqrt(5 * D1) + pi**(D2//3)) 
print(int(d))
-- OUTPUT:
187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:54:46) 
-- CODE:
from math import*
p = int(input())
D1 = int(input())
D2 = int(input())
d = p - (sqrt(5 * D1) + pi**(D2//3)) 
print(int(d))
-- EXECUTION TIME:
0.131962
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 20:55:55) 
-- CODE:
from math import*
p = int(input()) #pontos de vida iniciais
D1 = int(input())
D2 = int(input())
d = p - int((sqrt(5 * D1) + pi**(D2//3))) 
print(int(d))
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 20:56:08) 
-- CODE:
from math import*
p = int(input()) #pontos de vida iniciais
D1 = int(input())
D2 = int(input())
d = p - int((sqrt(5 * D1) + pi**(D2//3))) 
print(int(d))
-- EXECUTION TIME:
0.216078
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
