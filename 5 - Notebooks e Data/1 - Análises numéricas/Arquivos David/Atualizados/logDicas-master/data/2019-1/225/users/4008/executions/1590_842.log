== TEST (2019-03-25 14:46:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1
b = n//10
c = n//100
d = n//100
print(d+c+b+a)
-- OUTPUT:
10272
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:46:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1
b = n//10
c = n//100
d = n//100
print(d+c+b+a)
-- EXECUTION TIME:
0.155764
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
10272
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1131
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:47:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n%1
b = n%10
c = n%100
d = n%100
print(d+c+b+a)
-- OUTPUT:
149
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:47:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n%1
b = n%10
c = n%100
d = n%100
print(d+c+b+a)
-- OUTPUT:
149
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:47:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n%1
b = n%10
c = n%100
d = n%100
print(d+c+b+a)
-- EXECUTION TIME:
0.21007
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
149
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:56:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1
b = n//1
c = n//1
d = n//1
print(d+c+b+a)
-- OUTPUT:
36692
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:59:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100
c = n//10
d = n//1
print(a+b+c+d)
-- OUTPUT:
10190
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:59:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n%1000
b = n%100
c = n%10
d = n%1
print(a+b+c+d)
-- OUTPUT:
249
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:03:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%1000 
print(a)
print(b)
c = n
d = n
print(a+b+c+d)

-- EXECUTION TIME:
0.133484
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
173
18528
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
10
2031
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:03:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%1000 
print(a)
print(b)
c = n
d = n


-- EXECUTION TIME:
0.174529
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:03:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%1000 
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:04:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100 
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:04:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//10
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:05:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//1000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:06:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%1000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:07:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//2000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:07:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//200
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:08:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%200
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:09:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%2000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
1173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:15:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//10
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:15:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//1
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:15:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//10000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:16:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n%4000
print(a)
print(b)
c = n
d = n


-- EXECUTION TIME:
0.166624
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
1173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
1010
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:16:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//4000
print(a)
print(b)
c = n
d = n


-- EXECUTION TIME:
0.163878
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
2
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:16:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//4000
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:16:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100
print(a)
print(b)
c = n
d = n


-- OUTPUT:
9
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:17:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100
print(a)
print(b)
c = n//10
d = n
print(c)


-- OUTPUT:
9
91
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:18:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100
print(a)
print(b)
c = n//10
d = n//1
print(c)
print(d)


-- OUTPUT:
9
91
917
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:18:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n/100
print(a)
print(b)
c = n//10
d = n//1
print(c)
print(d)


-- OUTPUT:
9
91.73
917
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:19:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//100
print(a)
print(b)
c = n//10
d = n//1
print(c)
print(d)


-- OUTPUT:
9
91
917
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:19:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a = n//1000
b = n//0.10
print(a)
print(b)
c = n//10
d = n//1
print(c)
print(d)


-- OUTPUT:
9
91729.0
917
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:26:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)/10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20.700000000000003
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:26:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)/10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20.700000000000003
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:26:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:26:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:27:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- EXECUTION TIME:
0.211912
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:31:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:31:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:33:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero de 4 digitos"))
a=(n%10)
b=(n//10)%10
c=(n//10)//10%10
d=(n//1000)
print(a+b+c+d)


-- EXECUTION TIME:
0.180478
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
