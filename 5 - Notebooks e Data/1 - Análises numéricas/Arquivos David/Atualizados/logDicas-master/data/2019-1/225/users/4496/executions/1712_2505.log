== TEST (2019-05-14 21:49:19) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=eval(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux==1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux==1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:49:37) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=eval(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:49:46) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=eval(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux = 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux = 1):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:51:36) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:52:58) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 21:53:54) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- EXECUTION TIME:
0.153927
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:04) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:04) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:04) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:04) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:05) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:54:05) 
-- CODE:
from math import*
x=eval(input("Angulo de X: "))
k=int(input("Valor de K: "))

c=0
d=1
e=0
aux=1

while(c < k):
	e=e+(aux*((x**d/factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 12
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:55:40) 
-- CODE:
from math import*

x = eval(input("Angulo de X: "))
k = int(input("Valor de K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:57:05) 
-- CODE:
from math import*

x = eval(input("Angulo de X: "))
k = int(input("Valor de K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if ( aux == 1 ):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if ( aux == 1 ):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:58:21) 
-- CODE:
from math import*

x = eval(input("Angulo de X: "))
k = int(input("Valor de K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c=c+1
	d=d+2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:58:46) 
-- CODE:
from math import*

x = eval(input("Angulo de X: "))
k = int(input("Valor de K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:59:23) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		  aux=-1
	else:
		  aux=1
		  
	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:59:51) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
if(aux == 1):
	  aux=-1
else:
	  aux=1
		  
	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:00:34) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		aux=-1
	else:
	 	aux=1
		  
	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:04:31) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1

	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:04:49) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
		if(aux == 1):
			aux = -1
		else:
			aux = 1

	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:05:33) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
			aux = -1
	else:
			aux = 1

	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:06:08) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1

	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:07:44) 
-- CODE:
from math import*

x = eval(input("X: "))
k = int(input("K: "))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1

	c = c + 1
	d = d + 2
		  
print(round(e,10))
-- ERROR:
File "XXXX", line 13
    if(aux == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:18) 
-- CODE:
from math import*

x = eval(input(""))
k = int(int(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = 1
	d = 2

print(round(e,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    k = int(int(""))
ValueError: invalid literal for int() with base 10: ''
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:17:28) 
-- CODE:
from math import*

x = eval(input(""))
k = int(int(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = 1
	d = 2

print(round(e,10))
-- EXECUTION TIME:
0.116079
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2505/main.py", line 4, in <module>
    k = int(int(""))
ValueError: invalid literal for int() with base 10: ''

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:17:56) 
-- CODE:
from math import*

x = eval(input(""))
k = int(int(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2

print(round(e,10))
-- EXECUTION TIME:
0.129718
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2505/main.py", line 4, in <module>
    k = int(int(""))
ValueError: invalid literal for int() with base 10: ''

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:18:02) 
-- CODE:
from math import*

x = eval(input(""))
k = int(int(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2

print(round(e,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    k = int(int(""))
ValueError: invalid literal for int() with base 10: ''
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:18:06) 
-- CODE:
from math import*

x = eval(input(""))
k = int(int(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2

print(round(e,10))
-- EXECUTION TIME:
0.143935
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2505/main.py", line 4, in <module>
    k = int(int(""))
ValueError: invalid literal for int() with base 10: ''

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:18:58) 
-- CODE:
from math import*

x = eval(input(""))
k = int(input(""))

c = 0
d = 1
e = 0
aux = 1

while(c < k):
	e = e + (aux * ((x ** d) / factorial(d)))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2

print(round(e,10))
-- EXECUTION TIME:
0.139113
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
