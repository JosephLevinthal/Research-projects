== TEST (2019-05-15 14:29:27) 
-- CODE:
jogo = input("resultado ")
acum = 0 
cont = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
	elif (jogo == "D"):
		acum = acum + 1
	elif (jogo == "E"):
		acum = acum + 2
	else:
		acum = acum + 0 
print(acum)
-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:29:59) 
-- CODE:
jogo = input("resultado ")
acum = 0 
cont = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
	elif (jogo == "D"):
		acum = acum + 1
	elif (jogo == "E"):
		acum = acum + 2
	else:
		acum = acum + 0 
print(acum)
-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:30:07) 
-- CODE:
jogo = input("resultado ")
acum = 0 
cont = 0 
V = 3
E = 2
D = 1
while (jogo == "X"):
	if(jogo == "V"):
		acum = acum + 3
		
	
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:40:19) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	acum = acum + acumd
	if(jogo == "V"):
		acumv = acum + 3
		
	elif(jogo == "E"):
		acume = acum + 2
		
	elif (jogo == "D"):
		acumd = acum + 1
		acumd = acumd + acume + acumv
	else:
		acumn = acum + 0
	
	
		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:40:47) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	acum = acum + acumd
	jogo = input("resultado")
	if(jogo == "V"):
		acumv = acum + 3
		
	elif(jogo == "E"):
		acume = acum + 2
		
	elif (jogo == "D"):
		acumd = acum + 1
		acumd = acumd + acume + acumv
	else:
		acumn = acum + 0
	
	
		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:41:58) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	acum = acum + acumd
	j
	if(jogo == "V"):
		acumv = acum + 3
		jogo = input()
	elif(jogo == "E"):
		acume = acum + 2
		jogo = input()
		
	elif (jogo == "D"):
		acumd = acum + 1
		acumd = acumd + acume + acumv
		jogo = input()
	else:
		acumn = acum + 0
		jogo = input()
	
	
		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:42:06) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	acum = acum + acumd
	j
	if(jogo == "V"):
		acumv = acum + 3
		jogo = input()
	elif(jogo == "E"):
		acume = acum + 2
		jogo = input()
		
	elif (jogo == "D"):
		acumd = acum + 1
		acumd = acumd + acume + acumv
		jogo = input()
	else:
		acumn = acum + 0
		jogo = input()
	
	
		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:42:10) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	acum = acum + acumd
	j
	if(jogo == "V"):
		acumv = acum + 3
		jogo = input()
	elif(jogo == "E"):
		acume = acum + 2
		jogo = input()
		
	elif (jogo == "D"):
		acumd = acum + 1
		acumd = acumd + acume + acumv
		jogo = input()
	else:
		acumn = acum + 0
		jogo = input()
	
	
		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:44:46) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
	jogo = input()
print(acum)

		
	
	    
	

			
			
	
	

-- OUTPUT:
104
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:45:39) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
	   jogo = input()
print(acum)

		
	
	    
	

			
			
	
	

-- ERROR:
File "XXXX", line 6
    jogo = input()
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:45:57) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		jogo = input()
print(acum)

		
	
	    
	

			
			
	
	

-- ERROR:
File "XXXX", line 6
    jogo = input()
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:46:03) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		jogo = input()
print(acum)

		
	
	    
	

			
			
	
	

-- ERROR:
File "XXXX", line 6
    jogo = input()
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:46:18) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo != "X"):
	if (jogo == "V"):
		acum = acum + 3
		jogo = input()
print(acum)

		
	
	    
	

			
			
	
	

-- ERROR:
File "XXXX", line 6
    jogo = input()
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:50:04) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo != "X"):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
File "XXXX", line 6
    jogo = input()
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:50:30) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(acum)/100
TypeError: unsupported operand type(s) for /: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:50:40) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(acum)/100
TypeError: unsupported operand type(s) for /: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:51:05) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == X):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    while (jogo == X):
NameError: name 'X' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:51:28) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(acum)/100
TypeError: unsupported operand type(s) for /: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:51:33) 
-- CODE:
jogo = input("resultado ")
acum = 0 
while (jogo == "X"):
	if (jogo == "V"):
		acum = acum + 3
		acumv = acum
		jogo = input()
	elif (jogo == "D"):
		acum = acum + 1
		jogo = input()
	elif (jogo == "E"):
		acum = acum + 2
		jogo= input()
	
	acumt = acum
print(acum)/100

		
	
	    
	

			
			
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(acum)/100
TypeError: unsupported operand type(s) for /: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
