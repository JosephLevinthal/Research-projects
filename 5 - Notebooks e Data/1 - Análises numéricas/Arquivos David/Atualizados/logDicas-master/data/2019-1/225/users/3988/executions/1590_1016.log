== TEST (2019-03-30 20:49:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:52:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = sqrt(s(s-a)(s-b)(s-c))
print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:53:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = sqrt(s * (s-a) * (s-b) * (s-c))
print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:54:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = sqrt(s * (s - a) * (s - b) * (s - c))
print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:54:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = sqrt(s * (s - a) * (s - b) * (s - c))
print(A)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:56:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = float(sqrt(s * (s - a) * (s - b) * (s - c)))
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:58:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c)))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
File "XXXX", line 9
    A = float(s * (s - a) * (s - b) * (s - c)))
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:58:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a+b+c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a+b+c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:59:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:59:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a + b + c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:08:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a + b + c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:08:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = int(a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = int(a + b + c) / 2
ValueError: invalid literal for int() with base 10: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:09:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:09:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float(a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a + b + c) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:12:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c) / 2)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:17:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input(float("a:"))
b = input(float("b:"))
c = input(float("c:"))
s = float((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = input(float("a:"))
ValueError: could not convert string to float: 'a:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:19:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c) / 2)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:19:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:19:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 21:56:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c)) / 2
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c)) / 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:05:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c) / 2)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:08:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input(float("a:"))
b = input(float("b:"))
c = input(float("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = input(float("a:"))
ValueError: could not convert string to float: 'a:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:09:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- OUTPUT:
2457.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 22:09:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- EXECUTION TIME:
0.262106
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2457.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
360000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
457600.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:09:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- OUTPUT:
2457.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:10:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- OUTPUT:
2457.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 22:10:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(A, 5))

-- EXECUTION TIME:
0.198803
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2457.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
360000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
457600.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 22:13:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(B, 5))

-- OUTPUT:
49.56813
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 22:13:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
from math import *
A = float(s * (s - a) * (s - b) * (s - c))
B = sqrt(A)
print(round(B, 5))

-- EXECUTION TIME:
0.192532
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
49.56813
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
676.46138
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:45:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- OUTPUT:
2457.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:45:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- OUTPUT:
2457.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:45:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = int((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- EXECUTION TIME:
0.277253
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2457.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
360000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
457600.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:48:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- OUTPUT:
4819.09124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:48:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- EXECUTION TIME:
0.175736
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
4819.09124
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
360000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
502917.1875
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:48:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c))
print(round(A, 5))

-- OUTPUT:
4819.09124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:49:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
2409.54562
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:50:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- EXECUTION TIME:
0.133084
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2409.54562
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
180000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
251458.59375
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:51:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = (a + b + c) / 2
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
2409.54562
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:51:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = (a + b + c) / 2
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- EXECUTION TIME:
0.202128
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2409.54562
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
180000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
251458.59375
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:51:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:52:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = (a + b + c) / 2
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = (a + b + c) / 2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:54:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c) / 2)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:55:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input("a:")
b = input("b:")
c = input("c:")
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float((a + b + c) / 2)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:59:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 8.0
c = 6.0
s = float((a + b + c) / 2)
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
29.21875
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:59:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 8.0
c = 6.0
s = (a + b + c) / 2
A = float(s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
29.21875
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:00:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 8.0
c = 6.0
s = (a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
29.21875
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:00:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 8.0
c = 6.0
s = float(a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
29.21875
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:01:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 5.0
c = 6.0
s = float(a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
28.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 00:01:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 5.0
c = 6.0
s = float(a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- EXECUTION TIME:
0.180601
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
28.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
28.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
28.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:03:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = 3.0
b = 5.0
c = 6.0
s = float(a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
28.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:05:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = input()
b = input()
c = input()
s = float(a + b + c) // 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    s = float(a + b + c) // 2
ValueError: could not convert string to float: '11.019.513.2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 00:06:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) // 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- OUTPUT:
1228.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 00:07:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) // 2
A = (s * (s - a) * (s - b) * (s - c)) * 0.5
print(round(A, 5))

-- EXECUTION TIME:
0.116097
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
1228.5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
180000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
228800.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:18:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) // 2
A = (s * (s - a) * (s - b) * (s - c)) ** 0.5
print(round(A, 5))

-- OUTPUT:
49.56813
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:18:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) // 2
A = (s * (s - a) * (s - b) * (s - c)) ** 0.5
print(round(A, 5))

-- OUTPUT:
49.56813
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) ** 0.5
print(round(A, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:19:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input())
b = float(input())
c = float(input())
s = (a + b + c) / 2
A = (s * (s - a) * (s - b) * (s - c)) ** 0.5
print(round(A, 5))

-- EXECUTION TIME:
0.14861
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
