== TEST (2019-04-29 12:00:58) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
    if (h==r):
        vol = ((4/3) * pi *(r ** 3))/ 2
        print("Volume:", (round((vol * 1000), 3)), "litros")
    elif (h < r):
        vol = (pi / 3) * (h ** 2) * (3 * r - h)
        print("Volume:",(vol * 1000), "litros")
    elif (h == H - r):
        vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
        print("Volume:", (round((vol * 1000), 3)), "litros")
    elif(h<H-r and h>r):
        vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
        print("Volume:", (round((vol * 1000), 3)), "litros")
    else:
        vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
        print("Volume:", (round((vol* 1000), 3)), "litros")   
else:
    print("Entradas invalidas")


-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:03:32) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
if (h==r):
	vol = ((4/3) * pi *(r ** 3))/ 2
   print("Volume:", (round((vol * 1000), 3)), "litros")
elif (h < r):
   vol = (pi / 3) * (h ** 2) * (3 * r - h)
   print("Volume:",(vol * 1000), "litros")
elif (h == H - r):
   vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
   print("Volume:", (round((vol * 1000), 3)), "litros")
elif(h<H-r and h>r):
   vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
   print("Volume:", (round((vol * 1000), 3)), "litros")
else:
   vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
   print("Volume:", (round((vol* 1000), 3)), "litros")   
else:
    print("Entradas invalidas")


-- ERROR:
File "XXXX", line 9
    if (h==r):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:04:58) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:06:33) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:10:48) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:17:34) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:17:52) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:17:53) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (round((vol * 1000), 3)), "litros")
                                                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:18:52) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (vol *1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (vol *1000), "litros")
                                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:19:03) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (vol * 1000), "litros")
                                           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:19:39) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- EXECUTION TIME:
0.179124
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:", (vol * 1000), "litros")
                                           ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:19:42) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (vol * 1000), "litros")
                                           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:46:09) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:", (vol * 1000), "litros")
                                           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:47:40) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:",(vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume:",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume:", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume:", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume:", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(vol * 1000), "litros")
                                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:05) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r): 
	   vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume: ",(vol * 1000), "litros")
   elif (h < r):
      vol = (pi / 3) * (h ** 2) * (3 * r - h)
      print("Volume: ",(vol * 1000), "litros")
   elif (h == H - r):
      vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
      print("Volume: ", (round((vol * 1000), 3)), "litros")
   elif(h<H-r and h>r):
      vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
      print("Volume: ", (round((vol * 1000), 3)), "litros")
   else:
      vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
      print("Volume: ", (round((vol* 1000), 3)), "litros")   
   else:
      print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume: ",(vol * 1000), "litros")
                                           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:08) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume:",(vol * 1000), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif(h<H-r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume:", (round((vol* 1000), 3)), "litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:43) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume:",(vol * 1000), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif(h<H-r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume:", (round((vol* 1000), 3)), "litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:11:53) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume:",(vol * 1000), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif(h<H-r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume:", (round((vol* 1000), 3)), "litros")	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.157939
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
