== TEST (2019-04-15 15:14:31) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*20/100
	print(d, 2)
else: 
	print(v)

-- OUTPUT:
7.5 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:14:59) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*20/100
	print(d, 2)
else: 
	print(v,2)

-- OUTPUT:
7.5 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:15:27) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd*(20/100)
	print(d, 2)
else: 
	print(v,2)

-- OUTPUT:
45.0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:05) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd*(20/100)
else: 
	print(v,2)

-- OUTPUT:
45.0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:17) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd*(20/100)


-- OUTPUT:
45.0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:38) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd*(20/100)
	print(round(d, 2))

-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:48) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd*(20/100)
print(round(d, 2))

-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:57) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))


	d = v*qtd*(20/100)
print(round(d, 2))

-- ERROR:
File "XXXX", line 6
    d = v*qtd*(20/100)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:17:00) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))


d = v*qtd*(20/100)
print(round(d, 2))

-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:17:50) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))


d = v*qtd - (v*qtd*20/100)
print(round(d, 2))

-- OUTPUT:
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:18:35) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd - (v*qtd*20/100)
	print(round(d, 2))
else: 
	(print(round, v))
-- OUTPUT:
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:18:46) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd - (v*qtd*20/100)
	print(round(d, 2))
else: 
	(print(round, v))
-- EXECUTION TIME:
0.16176
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
180.0
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
172.48
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
<built-in function round> 42.45
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:19:05) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	(print(round, p))
-- OUTPUT:
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:19:15) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = v*qtd - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	(print(round, p))
-- EXECUTION TIME:
0.127458
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
180.0
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
172.48
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
<built-in function round> 127.35000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:19:44) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = (v*qtd) - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	print((round, p))
-- OUTPUT:
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:19:52) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = (v*qtd) - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	print((round, p))
-- EXECUTION TIME:
0.140979
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
180.0
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
172.48
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
(<built-in function round>, 127.35000000000001)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:20:09) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = (v*qtd) - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	print(round(p, 2))
-- OUTPUT:
180.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:20:19) 
-- CODE:
m = input("S ou N: ")
v = float(input("valor: "))
qtd = float(input("quantidade de ingresso: "))

if(m == "S"):
	d = (v*qtd) - (v*qtd*20/100)
	print(round(d, 2))
else: 
	p = v*qtd
	print(round(p, 2))
-- EXECUTION TIME:
0.152216
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
180.0
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
172.48
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
127.35
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
