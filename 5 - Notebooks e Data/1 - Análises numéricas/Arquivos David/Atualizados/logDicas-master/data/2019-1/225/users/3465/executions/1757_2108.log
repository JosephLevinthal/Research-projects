== TEST (2019-05-29 10:43:02) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if !(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		strin[i] = 'p'
-- ERROR:
File "XXXX", line 6
    if !(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:43:57) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		strin[i] = 'p'
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    strin[i] = 'p'
NameError: name 'strin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:44:17) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string[i] = 'p'
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    string[i] = 'p'
TypeError: 'str' object does not support item assignment
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:44:55) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string[i] = "p"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    string[i] = "p"
TypeError: 'str' object does not support item assignment
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:45:31) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string[i] = string[i].replace(string[i],'p')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    string[i] = string[i].replace(string[i],'p')
TypeError: 'str' object does not support item assignment
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:45:55) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string = string.replace(string[i],'p')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    string[i] = string[i].replace(string[i],'p')
TypeError: 'str' object does not support item assignment
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:46:07) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string = string.replace(string[i],'p')
print(string)
-- OUTPUT:
peppe
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:46:18) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'):
		string = string.replace(string[i],'p')
print(string)
-- OUTPUT:
peppe
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 10:46:53) 
-- CODE:
string = input("")
string = string.lower()
vogal = 0
consoante = 0
for i in range(len(string)):
	if not(string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u' or string == ' '):
		string = string.replace(string[i],'p')
print(string)
-- EXECUTION TIME:
0.196272
-- TEST CASE 1:
---- input:
teste
---- correct output:
peppe
---- user output:
peppe
-- TEST CASE 2:
---- input:
flor
---- correct output:
ppop
---- user output:
ppop
-- TEST CASE 3:
---- input:
abacaxi
---- correct output:
apapapi
---- user output:
apapapi
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
