== TEST (2019-04-09 16:50:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
g = 9,8

R = (v)**2 * (radians(sin(2*a)))/g


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R = (v)**2 * (radians(sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:09:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
g = 9,8

R = (v)**2 * (sin(2*a))/g
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R = (v)**2 * (sin(2*a))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:10:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
g = 9,8

R = ((v)**2 * (sin(2*a)))/g
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R = ((v)**2 * (sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:10:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
g = 9,8

R = ((v**2) * (sin(2*a)))/g
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R = ((v**2) * (sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
g = 9,8
R = ((v**2) * (sin(2*a)))/g
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R = ((v**2) * (sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:11:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
R = ((v**2) * (sin(2*a)))/9.8
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:11:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v = float(input(" Digite velocidade"))
a = radians(float(input(" Digite angulo")))
D = float(input(" Digite distancia horizontal"))
R = ((v**2) * (sin(2*a)))/9.8
h=abs(D-R)
if(h<=0.1):
	mensagem = " sim "
else:
	mensagem = " nao"
print(mensagem)

-- EXECUTION TIME:
0.217447
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
