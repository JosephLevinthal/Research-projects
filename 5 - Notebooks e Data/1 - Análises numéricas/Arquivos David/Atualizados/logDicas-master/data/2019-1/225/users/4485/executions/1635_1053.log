== TEST (2019-04-10 12:28:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?"))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num= int(input())
ValueError: invalid literal for int() with base 10: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:30:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?"))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= input())
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:31:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?"))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= input())
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:31:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?"))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= input())
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:31:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= float(input("qual o PATRONO DE HARRY?"))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num= float(input())
ValueError: could not convert string to float: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:32:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?"))

if(num >= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num= int(input())
ValueError: invalid literal for int() with base 10: 'cervo'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:32:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?"))

if(num >= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= input())
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:35:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?"))

if(num= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= input())
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:36:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?")

if(num= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(num= cervo):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:36:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o PATRONO DE HARRY?")

if(num= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(num= cervo):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:36:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num= cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:37:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:37:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:37:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.124685
-- ERROR:
  File "/home/codebench/codes/1635/1053/main.py", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:38:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o PATRONO DE HARRY?))

if(num == cervo):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o PATRONO DE HARRY?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:51:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(cervo == num):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:53:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= x+"nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:53:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= x+ " nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:53:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= int(input("qual o patrono de harry?))

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= x+ " nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 4
    num= int(input("qual o patrono de harry?))
                                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:54:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem= "cervo eh patrono do Harry Potter."
else:
	 mensagem= x+ " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:55:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = x + " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:55:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = num + " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:55:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = num + " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.139481
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter.
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:55:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = num+ " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:55:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = num+ " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:56:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter."
else:
	 mensagem = num+ " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.091435
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter.
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:56:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter"
else:
	 mensagem = num+ " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:56:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
num= input("qual o patrono de harry?")

if(num == "cervo"):
	 mensagem = "cervo eh patrono do Harry Potter"
else:
	 mensagem = num+ " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.131032
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
