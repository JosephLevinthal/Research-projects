== TEST (2019-04-07 23:20:46) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
	mensagem = (pagamento - preco)
else:
	mensagem = (preco - pagamento)
	
print(mensagem)
-- OUTPUT:
-26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:21:09) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
	mensagem = (" Troco de pagamento - preco)
else:
	mensagem = (preco - pagamento)
	
print(mensagem)
-- ERROR:
File "XXXX", line 4
    mensagem = (" Troco de pagamento - preco)
                                            ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:21:33) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
	mensagem = (" Troco de ""pagamento - preco")
else:
	mensagem = (preco - pagamento)
	
print(mensagem)
-- OUTPUT:
Troco de pagamento - preco
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:22:01) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
	mensagem = (" pagamento - preco")
else:
	mensagem = (preco - pagamento)
	
print(mensagem)
-- OUTPUT:
pagamento - preco
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:22:27) 
-- CODE:
preco = float(input())
pagamento = float(input())
if (preco > pagamento):
	mensagem = (" pagamento - preco")
else:
	mensagem = (" preco - pagamento ")
	
print(mensagem)
-- OUTPUT:
pagamento - preco
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:25:16) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem: ("Falta X")
else:
	mensagem = (" Troco de Y ")
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:25:27) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem: (" Falta X ")
else:
	mensagem = (" Troco de Y ")
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:25:35) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = (" Falta X ")
else:
	mensagem = (" Troco de Y ")
	
print(mensagem)
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:26:06) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = (" Falta X ")
else:
	mensagem = (" Troco de "Y" ")
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = (" Troco de "Y" ")
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:26:34) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = (" Falta X ")
else:
	mensagem = (" Troco de Y ")
	
print(mensagem)
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:27:18) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = (" Falta (X) ")
else:
	mensagem = (" Troco de Y ")
	
print(mensagem)
-- OUTPUT:
Falta (X)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:27:31) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = (" Falta (X) ")
else:
	mensagem = (" Troco de (Y) ")
	
print(mensagem)
-- OUTPUT:
Falta (X)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 23:28:10) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( Falta X )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = ( Falta X )
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:24:34) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( "Falta X " )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:24:44) 
-- CODE:
preco = float(input())
pagamento = float(input())
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( "Falta X " )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:25:13) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( "Falta X " )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:26:12) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( "Falta X " )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:26:37) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( "Falta X " )
else:
	mensagem = (" Troco de  ")
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:27:48) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + "X" )
else:
	mensagem = ( Troco de "Y" )
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ( Troco de "Y" )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:27:58) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + "X" )
else:
	mensagem = ( Troco de + "Y" )
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ( Troco de + "Y" )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:28:20) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + "X" )
else:
	mensagem = (  )
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:28:41) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + " X " )
else:
	mensagem = ( Troco de " Y " )
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ( Troco de " Y " )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:29:30) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + " X " )
else:
	mensagem = ( Troco de + " Y " )
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ( Troco de + " Y " )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:30:36) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + " X " )
else:
	mensagem = ( Troco de + " Y " )
	
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = ( Troco de + " Y " )
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:30:43) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + " X " )
else:
	mensagem = ( Troco + " Y " )
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:31:29) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	mensagem = ( Falta + " X " )

	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:32:55) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	print( Falta + " X " )

	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:33:38) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	print( Falta + " X " )
else:
	print( Troco de + " Y ")
	

-- ERROR:
File "XXXX", line 8
    print( Troco de + " Y ")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:34:02) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco))
if (preco > pagamento):
	print( Falta + " X " )
else:
	print( Troco + " Y ")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:34:43) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	print( Falta + " X " )
else:
	print( Troco + " Y ")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print( Falta + " X " )
NameError: name 'Falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:35:29) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco >= 0)
if (preco > pagamento):
	print( Falta + " X " )
else:
	print( Troco + " Y ")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print( Falta + " X " )
NameError: name 'Falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:37:06) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco >= 0)
if (preco > pagamento):
	print( Falta " X " )
else:
	print( Troco " Y ")
	

-- ERROR:
File "XXXX", line 6
    print( Falta " X " )
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:37:17) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco >= 0)
if (preco > pagamento):
	print( Falta " X " )
else:
	print( Troco " Y ")
	

-- ERROR:
File "XXXX", line 6
    print( Falta " X " )
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:38:22) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco >= 0)
if (preco > pagamento):
	mensagem = ( Falta " X " )
else:
	mensagem = ( Troco de " Y ")
	

-- ERROR:
File "XXXX", line 6
    mensagem = ( Falta " X " )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:38:44) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco >= 0)
if (preco > pagamento):
	mensagem = ( " Falta X " )
else:
	mensagem = ( "Troco de  Y ")
	

-- ERROR:
File "XXXX", line 6
    mensagem = ( Falta " X " )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:40:31) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco >= 0))
if (preco > pagamento):
	mensagem = ( " Falta X " )
else:
	mensagem = ( "Troco de  Y ")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 13:40:53) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco >= 0))
if (preco > pagamento):
	mensagem = ( " Falta X " )
else:
	mensagem = ( "Troco de  Y ")
	

-- EXECUTION TIME:
0.191551
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:40:54) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = input((preco - pagamento))
Y = input((pagamento - preco >= 0))
if (preco > pagamento):
	mensagem = ( " Falta X " )
else:
	mensagem = ( "Troco de  Y ")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    X = input((preco - pagamento))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:25:03) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( " Falta " X )
else:
	mensagem = ( "Troco de " Y)
print(mensagem)

-- EXECUTION TIME:
0.115464
-- ERROR:
  File "/home/codebench/codes/1635/2447/main.py", line 6
    mensagem = ( " Falta " X )
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:25:59) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( " Falta " X )
else:
	mensagem = ( "Troco de " Y)
	
print(round(mensagem, 2))

-- EXECUTION TIME:
0.179725
-- ERROR:
  File "/home/codebench/codes/1635/2447/main.py", line 6
    mensagem = ( " Falta " X )
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:26:40) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	mensagem = ( " Falta " + X )
else:
	mensagem = ( "Troco de " + Y)
	
print(round(mensagem, 2))

-- EXECUTION TIME:
0.123295
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 6, in <module>
    mensagem = ( " Falta " + X )
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:27:40) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	 print( " Falta " + X )
else:
	print( "Troco de " + Y)
	


-- EXECUTION TIME:
0.221073
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 6, in <module>
    print( " Falta " + X )
TypeError: Can't convert 'float' object to str implicitly

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:27:46) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	 print( " Falta "  X )
else:
	print( "Troco de "  Y)
	


-- EXECUTION TIME:
0.212539
-- ERROR:
  File "/home/codebench/codes/1635/2447/main.py", line 6
    print( " Falta "  X )
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:40) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))
X = (preco - pagamento)
Y = (pagamento - preco)
if (preco > pagamento):
	print( " Falta " + X )
else:
	print( "Troco de " + Y)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print( " Falta " + X )
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:47:46) 
-- CODE:
preco = float(input(" Digite o preco "))
pagamento = float(input(" Digite o pagamento "))

if (preco > pagamento):
	b = round(preco-pagamento,2)
	print(" Falta ", b)
else:
	g = round(pagamento-preco,2)
	print(" Troco de", g)

	

-- EXECUTION TIME:
0.186516
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
