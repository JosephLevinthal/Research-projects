== TEST (2019-04-29 15:12:39) 
-- CODE:
atq = input("Digite o nome do ataque: ")
fi = (-10)
ga = (-6)
tm = 
fd1 = 1   fd2 = 2   fd3 = 3   fd4 = 4   fd5 = 5    fd6 = 6   fd7 = 7    fd8 = 8
print (atq)

if (fi = (-10 + ))

-- ERROR:
File "XXXX", line 4
    tm = 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:13:02) 
-- CODE:
atq = input("Digite o nome do ataque: ")
fi = (-10)
ga = (-6)
tm = (x + y)**2
fd1 = 1   fd2 = 2   fd3 = 3   fd4 = 4   fd5 = 5    fd6 = 6   fd7 = 7    fd8 = 8
print (atq)

if (fi = (-10 + ))

-- ERROR:
File "XXXX", line 5
    fd1 = 1   fd2 = 2   fd3 = 3   fd4 = 4   fd5 = 5    fd6 = 6   fd7 = 7    fd8 = 8
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:15:49) 
-- CODE:
atq = input("Digite o nome do ataque: ")
fd1 = input("Digite o numero do dado 1: ")
fd2 = input("Digite o numero do dado 2: ")


fi = (-10)
ga = (-6)
tm = ()**2
fd1 = 1   fd2 = 2   fd3 = 3   fd4 = 4   fd5 = 5    fd6 = 6   fd7 = 7    fd8 = 8
print (atq)

if (atq == fi):
	fi = (-10 )

-- ERROR:
File "XXXX", line 9
    fd1 = 1   fd2 = 2   fd3 = 3   fd4 = 4   fd5 = 5    fd6 = 6   fd7 = 7    fd8 = 8
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:16:26) 
-- CODE:
atq = input("Digite o nome do ataque: ")
fd1 = input("Digite o numero do dado 1: ")
fd2 = input("Digite o numero do dado 2: ")


fi = (-10)
ga = (-6)
tm = (fd1 + fd2)**2

print (atq)

if (atq == fi):
	fi = (-10 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    tm = (fd1 + fd2)**2
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:18:19) 
-- CODE:
atq = input("Digite o nome do ataque: ").lower()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


furia_infernal= (-10)
grito _aterrorizante = (-6)
toque_da_morte = (fd1 + fd2)**2

print (atq)

if (atq == fi):
	fi = (-10 )

-- ERROR:
File "XXXX", line 7
    grito _aterrorizante = (-6)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:18:46) 
-- CODE:
atq = input("Digite o nome do ataque: ").lower()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


furia_infernal= (-10)
grito_aterrorizante = (-6)
toque_da_morte = (fd1 + fd2)**2

print (atq)

if (atq == fi):
	fi = (-10 )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if (atq == fi):
NameError: name 'fi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:20:52) 
-- CODE:
atq = input("Digite o nome do ataque: ").lower()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

furia_infernal= (-10)
grito_aterrorizante = (-6)
toque_da_morte = (fd1 + fd2)**2


if (atq == fi):
	furia_infernal = ((-10 ) + fd1 + fd2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if (atq == fi):
NameError: name 'fi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:28:24) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

FURIA = (-10)
GRITO = (-6)
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = ((-10) + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = ((-6) + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
TOQUE
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:28:29) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

FURIA = (-10)
GRITO = (-6)
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = ((-10) + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = ((-6) + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
TOQUE
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:29:22) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = ((-10) + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = ((-6) + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
TOQUE
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:29:52) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = ((10) + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = ((6) + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
TOQUE
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:30:29) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))
print(atq)

FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = (10 + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = (6 + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
TOQUE
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:30:54) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = (10 + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = (6 + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:32:20) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


#FURIA = 10
#GRITO = 6
#TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = (10 + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = (6 + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    if(atq == FURIA):
NameError: name 'FURIA' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:32:40) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2


if(atq == FURIA):
	total = (10 + fd1 + fd2)
	print(total)
elif(atq == GRITO):
	total = (6 + fd1 + fd2)
	print(total)
elif(atq == TOQUE):
	total = ((fd1 + fd2)**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:34:10) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2
d8 = fd1 + fd2

if(atq == FURIA):
	total = (10 + d8)
	print(total)
elif(atq == GRITO):
	total = (6 + d8)
	print(total)
elif(atq == TOQUE):
	total = (d8**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:34:29) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2
d8 = fd1 + fd2

if(atq == FURIA):
	total = (10 + d8)
	print(total)
elif(atq == GRITO):
	total = (6 + d8)
	print(total)
elif(atq == TOQUE):
	total = (d8**2)
	print(total)
	else:
		print("Entrada invalida")

-- ERROR:
File "XXXX", line 20
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:34:42) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2
d8 = fd1 + fd2

if(atq == FURIA):
	total = (10 + d8)
	print(total)
elif(atq == GRITO):
	total = (6 + d8)
	print(total)
elif(atq == TOQUE):
	total = (d8**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:35:08) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total = (10 + d8)
	print(total)
elif(atq == GRITO):
	total = (6 + d8)
	print(total)
elif(atq == TOQUE):
	total = (d8**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:35:47) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = 10
GRITO = 6
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10 + d8)
	print(total1)
elif(atq == GRITO):
	total2 = (6 + d8)
	print(total2)
elif(atq == TOQUE):
	total3 = (d8**2)
	print(total3)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:46:49) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = ((10) + d8)
	print(total1)
elif(atq == GRITO):
	total2 = ((6) + d8)
	print(total2)
elif(atq == TOQUE):
	total3 = (d8**2)
	print(total3)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:48:06) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = (d8**2)
	print(total3)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:48:29) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = (d8**2)
	print(total3)
else:
print("Entrada invalida")

-- ERROR:
File "XXXX", line 21
    print("Entrada invalida")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:48:36) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = (d8**2)
	print(total3)
else:
		print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:03) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (fd1 + fd2)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = ((d8)**2)
	print(total3)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:33) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = (d8)**2
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = ((d8)**2)
	print(total3)
else:
	print("Entrada invalida")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    TOQUE = (d8)**2
NameError: name 'd8' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:55) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = ((d8)**2)
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = ((d8)**2)
	print(total3)
else:
	print("Entrada invalida")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    TOQUE = ((d8)**2)
NameError: name 'd8' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:50:28) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = ((fd1+fd2) **2)
d8 = (fd1 + fd2)

if(atq == FURIA):
	total1 = (10)
	print(total1, + d8)
elif(atq == GRITO):
	total2 = (6)
	print(total2, + d8)
elif(atq == TOQUE):
	total3 = ((d8)**2)
	print(total3)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:54:40) 
-- CODE:
atq = input("Digite o nome do ataque: ").upper()
fd1 = int(input("Digite o numero do dado 1: "))
fd2 = int(input("Digite o numero do dado 2: "))


FURIA = (10)
GRITO = (6)
TOQUE = ((fd1+fd2) **2)
d8 = (fd1 + fd2)

if(atq == FURIA):
	total = (10 + d8)
	print(total)
elif(atq == GRITO):
	total = (6 + d8)
	print(total)
elif(atq == TOQUE):
	total = (d8**2)
	print(total)
else:
	print("Entrada invalida")

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
