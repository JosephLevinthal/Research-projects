== TEST (2019-04-06 11:37:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:38:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
b = cervo
if (a == b):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    b = cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:39:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:39:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- EXECUTION TIME:
0.157158
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:39:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:39:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- EXECUTION TIME:
0.151269
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:39:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
if (a == cervo):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:40:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- OUTPUT:
eh patrono de harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:40:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "eh patrono de harry potter"
else :
	mensagem = "nao eh patrono de harry potter"
print(mensagem)
-- EXECUTION TIME:
0.183274
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono de harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono de harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:41:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de harry potter"
else :
	mensagem = "asno nao eh patrono de harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:41:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de harry potter"
else :
	mensagem = "asno nao eh patrono de harry potter"
print(mensagem)
-- EXECUTION TIME:
0.208237
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono de harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:41:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de harry potter"
else :
	mensagem = "asno nao eh patrono de harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:41:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de Harry Potter"
else :
	mensagem = "asno nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:42:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de Harry Potter"
else :
	mensagem = "asno nao eh patrono de Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.203712
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono de Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:42:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono de Harry Potter"
else :
	mensagem = "asno nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:43:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:43:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input("nome do patrono")
c = ("cervo")
if (a == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.120887
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:44:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:44:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.28423
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:45:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:45:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.132528
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:45:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = " eh patrono do Harry Potter"
else :
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:45:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = " eh patrono do Harry Potter"
else :
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.190986
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:46:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = " entrada eh patrono do Harry Potter"
else :
	mensagem = " entrada nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
entrada eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:46:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = " entrada eh patrono do Harry Potter"
else :
	mensagem = " entrada nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.214672
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
entrada eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
entrada nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:46:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "  eh patrono do Harry Potter"
else :(entrada!=c)
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = " nao eh patrono do Harry Potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:46:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "  eh patrono do Harry Potter"
else :(entrada!= c)
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = " nao eh patrono do Harry Potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:47:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "eh patrono do Harry Potter"
else :(entrada!= c)
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = "nao eh patrono do Harry Potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:47:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "eh patrono do Harry Potter"
else :(entrada!= c)
	mensagem = " nao eh patrono do Harry Potter "
print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem = " nao eh patrono do Harry Potter "
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:48:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "  eh patrono do Harry Potter"
else :
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:48:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "  eh patrono do Harry Potter"
else :
	mensagem = " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.192228
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:49:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.288375
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.197564
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.17334
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:49:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.099365
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:50:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.242069
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.255514
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.284292
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.202408
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:50:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.173337
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.16931
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.193072
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.161657
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.226751
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1635/1053/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.19432
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.16282
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:50:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do Harry Potter"
else :
	mensagem = "asno nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.11361
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
nome do patronocervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nome do patronoasno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 11:51:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:51:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.211453
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:51:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.161617
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:51:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.141377
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:51:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.106772
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 11:51:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = "cervo"
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.15426
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:00:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada == cervo):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (entrada == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:00:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 12:00:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.147759
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:19:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "<entrada> nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 12:19:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "<entrada> nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.155538
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
<entrada> nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:19:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 12:19:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.130104
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:21:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
c = ("cervo")
if (entrada == c):
	mensagem = "cervo eh patrono do harry potter"
else :
	mensagem = "asno nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:23:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.214787
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:23:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:23:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada == cervo ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (entrada == cervo ):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:23:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:24:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
a = cervo
if (entrada == a):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:31:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")

if (entrada == cervo ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (entrada == cervo ):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:32:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else :
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:33:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else :(entrada != cervo == asno)
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = " nao eh patrono do harry potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:34:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else :(entrada != cervo == asno)
	mensagem = " nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = " nao eh patrono do harry potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:34:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else :(entrada != cervo == asno)
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 8
    mensagem = "nao eh patrono do harry potter"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:35:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else (entrada != cervo == asno):
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    else (entrada != cervo == asno):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:35:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else (entrada != cervo == asno) :
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    else (entrada != cervo == asno) :
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:35:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:36:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else (entrada != cervo):
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    else (entrada != cervo):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:36:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:38:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:39:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = entrada "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = entrada "eh patrono do harry potter"
                                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:39:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if (entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:41:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = ",<asno> nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:42:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = ",< asno > nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:42:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = ",<<asno >) nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:42:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada =="cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = ",<<asno >) nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.208619
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
,<<asno >) nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:44:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada != asno ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if ( entrada != asno ):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:44:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
if ( entrada != asno ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if ( entrada != asno ):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:45:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = asno
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r1 = asno
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:45:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:46:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada +"nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:47:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada + "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:47:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada + "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:47:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada + "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:47:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada + "nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.169757
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:47:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada+ "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:47:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono")
r1 = "asno" 
if ( entrada != r1 ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada +  "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:49:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem = entrada + "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:49:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem= entrada + "nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:49:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem= entrada + " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:50:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem= entrada + " nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.207809
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:50:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do harry potter"
else:
	mensagem= entrada + " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:50:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem= entrada + " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:50:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem= entrada + " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:50:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem= entrada + " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.143758
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:51:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem= entrada + " nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:52:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = input("nome do patrono") 
if ( entrada == "cervo" ):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem= entrada + " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.20041
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
