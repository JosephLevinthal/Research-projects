== TEST (2019-04-09 20:31:38) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(input("digite alpha: "))
d = float(input("digite distancia: "))

g = 9.8
R = ((Vo) ** 2 * sin * (2 * alpha)) / g 

if (abs(D - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:33:20) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = ((Vo) ** 2 * sin * (2 * alpha)) / g 

if (abs(D - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    R = ((Vo) ** 2 * sin * (2 * alpha)) / g 
TypeError: unsupported operand type(s) for *: 'float' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:34:12) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin * (2 * alpha)) / g 

if (abs(D - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    R = (Vo ** 2 * sin * (2 * alpha)) / g 
TypeError: unsupported operand type(s) for *: 'float' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:34:34) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(D - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    if (abs(D - R) < 0,1):
NameError: name 'D' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:34:53) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:35:01) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("Sim")
else:
	 print("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:35:25) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) > 0,1):
	 print("Sim")
else:
	 print("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:35:48) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) > 0,1):
	 print("Nao")
else:
	 print("Sim")

-- OUTPUT:
Nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 20:35:59) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) > 0,1):
	 print("Nao")
else:
	 print("Sim")

-- EXECUTION TIME:
0.140319
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:36:08) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("Nao")
else:
	 print("Sim")

-- OUTPUT:
Nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 20:36:19) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("Nao")
else:
	 print("Sim")

-- EXECUTION TIME:
0.185812
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
Nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:36:30) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("nao")
else:
	 print("sim")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:36:42) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("sim")
else:
	 print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:37:02) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("nao")
else:
	 print("sim")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 20:37:12) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0,1):
	 print("nao")
else:
	 print("sim")

-- EXECUTION TIME:
0.135281
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:38:29) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0.1):
	 print("nao")
else:
	 print("sim")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 20:38:54) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0.1):
	 print("sim")
else:
	 print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 20:39:05) 
-- CODE:
from math import *

Vo = float(input("digite Vo: "))
alpha = radians(float(input("digite alpha: ")))
d = float(input("digite distancia: "))

g = 9.8
R = (Vo ** 2 * sin (2 * alpha)) / g 

if (abs(d - R) < 0.1):
	 print("sim")
else:
	 print("nao")

-- EXECUTION TIME:
0.191684
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
