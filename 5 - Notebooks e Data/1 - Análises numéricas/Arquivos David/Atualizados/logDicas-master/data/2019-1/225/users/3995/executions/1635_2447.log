== TEST (2019-04-07 22:26:29) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	diferenca=p1-p2
	print("Falta "+ difernca)
else:
	troco=p2-p1
	print("Troco de "+ troco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta "+ difernca)
NameError: name 'difernca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:26:53) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	diferenca=p1-p2
	print("Falta "+ difernca)
else:
	troco=p2-p1
	print("Troco de"+troco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta "+ difernca)
NameError: name 'difernca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:29:25) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	diferenca=("Falta"+ p1-p2)
	print(round(diferenca, 2))
else:
	troco=("Troco de "+ p2-p1)
	print(round(troco, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    diferenca=("Falta"+ p1-p2)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:29:46) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	diferenca=("Falta", p1-p2)
	print(round(diferenca, 2))
else:
	troco=("Troco de ", p2-p1)
	print(round(troco, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(diferenca, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:31:30) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	diferenca=("Falta", p1-p2)
	print(round(diferenca, 2))
else:
	troco=("Troco de", p2-p1)
	print(round(troco, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(diferenca, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:35:23) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	d=round(p2-p1, 2)
	print("Falta", d)
else:
	f=round(p2-p1, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:35:35) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	d=round(p2-p1, 2)
	print("Falta", d)
else:
	f=round(p2-p1, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.120069
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:37:08) 
-- CODE:
p1=float(input("preco:"))
p2=float(input("pagamento:"))
if(p1>p2):
	d=round(p2-p1, 2)
	print("Falta", d)
else:
	f=round(p2-p1, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:38:50) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:38:58) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.195982
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:39:19) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.118184
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:39:20) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:39:43) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta" d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de" f)
-- ERROR:
File "XXXX", line 5
    print("Falta" d)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:39:59) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta"+ d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de"+ f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Falta"+ d)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:40:17) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:40:50) 
-- CODE:
preco=float(input("p1:"))
pagamento=float(input("p2:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:40:58) 
-- CODE:
preco=float(input("p1:"))
pagamento=float(input("p2:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.138693
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:42:57) 
-- CODE:
preco=float(input("y:"))
pagamento=float(input(("x:"))
if(preco>pagamento):
	X=round(preco-pagamento, 2)
	print("Falta", X)
else:
	Y=round(pagamento-preco, 2)
	print("Troco de", Y)
-- ERROR:
File "XXXX", line 3
    if(preco>pagamento):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:44:04) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(pagamento-preco, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:44:28) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:44:35) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.145359
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:51:19) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:31:01) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:31:01) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:31:02) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=round(preco-pagamento, 2)
	print("Falta", d)
else:
	f=round(pagamento-preco, 2)
	print("Troco de", f)
-- EXECUTION TIME:
0.13513
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:43:22) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d="Falta"round(preco-pagamento, 2)
	
else:
	d="Troco de "round(pagamento-preco, 2)
	
print(d)
-- ERROR:
File "XXXX", line 4
    d="Falta"round(preco-pagamento, 2)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:43:25) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d="Falta"round(preco-pagamento, 2)
	
else:
	d="Troco de "round(pagamento-preco, 2)
	
print(d)
-- ERROR:
File "XXXX", line 4
    d="Falta"round(preco-pagamento, 2)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:43:45) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d="Falta"(round(preco-pagamento, 2))
	
else:
	d="Troco de "(round(pagamento-preco, 2))
	
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    d="Falta"(round(preco-pagamento, 2))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:52:50) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d="Falta"(round(preco-pagamento, 2))
	
else:
	d="Troco de "(round(pagamento-preco, 2))
	
print(d)
-- EXECUTION TIME:
0.141769
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2447/main.py", line 4, in <module>
    d="Falta"(round(preco-pagamento, 2))
TypeError: 'str' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:54:45) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=(round(preco-pagamento, 2))
	print("Falta", d)
else:
	d=(round(pagamento-preco, 2))
	print("Troco de", d)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:54:52) 
-- CODE:
preco=float(input("preco:"))
pagamento=float(input("pagamento:"))
if(preco>pagamento):
	d=(round(preco-pagamento, 2))
	print("Falta", d)
else:
	d=(round(pagamento-preco, 2))
	print("Troco de", d)
-- EXECUTION TIME:
0.183059
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
