== TEST (2019-04-10 16:25:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = input("Digite um raio":)
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = input("Digite um raio":)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:26:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = input(round("Digite um raio,2"):)
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = input(round("Digite um raio,2"):)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:27:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = input(round(Digite um raio,2:)
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = input(round(Digite um raio,2:)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:29:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input(round("raio",2:)
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = float(input(round("raio",2:)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:16:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input(round("raio",2:)
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = float(input(round("raio",2:)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 16:17:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = radians(float(input(round("raio",2:)))
h = input("Digite a altura":)
opcao = input("Volume? 1/2":)
vesfr = (4*pi*r**3)/3
vcesf = (pi*h**2)*(3*r-h)/3
if (opcao == 1):
	print(vcesf)
else:
	print(vesfr - vcesf)
-- ERROR:
File "XXXX", line 5
    r = radians(float(input(round("raio",2:)))
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:11:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc= ((pi * x ** 2 (3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:11:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc= ((pi * x ** 2 (3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:12:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * x ** 2 * (3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:18:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:18:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:18:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- EXECUTION TIME:
0.194756
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:18:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:19:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))2/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
File "XXXX", line 14
    vdc = ((pi * (x ** 2) *(3 * r - x))2/(3))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:19:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))2/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
File "XXXX", line 14
    vdc = ((pi * (x ** 2) *(3 * r - x))2/(3))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:19:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:20:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:21:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vdc = ((pi * (x ** 2) *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:23:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * x ** 2(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vdc = ((pi * x ** 2(3 * r - x))/ (3))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:24:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * (x ** 2)*(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:25:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * (x ** 2)*(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- EXECUTION TIME:
0.166409
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:25:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*

if (n == "1"):
	vdc = ((pi * (x ** 2)*(3 * r - x))/ (3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:30:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:30:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:30:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:31:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:32:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:32:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input(""))
x = float(input(""))
n = input("volume? (1/2)")

from math import*
if (n == "1"):
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	print(round(vdc, 4))
else:
	vdc = ((pi * x ** 2 *(3 * r - x))/(3))
	vcomb = ((4*pi*r**3)/(3)) - vdc
	print(round(vcomb,4))
-- EXECUTION TIME:
0.138767
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
