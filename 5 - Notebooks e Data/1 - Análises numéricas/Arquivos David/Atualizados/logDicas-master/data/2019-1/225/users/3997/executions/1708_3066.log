== TEST (2019-04-29 15:22:38) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

N = (d1 + d2 + d3)
print((qr = qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr == 0):
	print("MORTO")


-- ERROR:
File "XXXX", line 7
    print((qr = qi -(10*N)))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:22:39) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

N = (d1 + d2 + d3)
print((qr = qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr == 0):
	print("MORTO")


-- EXECUTION TIME:
0.129654
-- ERROR:
  File "/home/codebench/codes/1708/3066/main.py", line 7
    print((qr = qi -(10*N)))
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:22:40) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

N = (d1 + d2 + d3)
print((qr = qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr == 0):
	print("MORTO")


-- ERROR:
File "XXXX", line 7
    print((qr = qi -(10*N)))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:24:21) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

3 <= N <= 36
N = d1 + d2 + d3
print((qr = qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr == 0):
	print("MORTO")


-- ERROR:
File "XXXX", line 8
    print((qr = qi -(10*N)))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:24:36) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

3 <= N <= 36
N = d1 + d2 + d3
print(qr = (qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr == 0):
	print("MORTO")


-- ERROR:
File "XXXX", line 12
    else (qr == 0):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:25:49) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

3 <= N <= 36
N = d1 + d2 + d3
print(qr = (qi -(10*N)))

if (qr>0):
	print("VIVO")
else (qr = 0 and q>0):
	print("MORTO")


-- ERROR:
File "XXXX", line 12
    else (qr = 0 and q>0):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:26:27) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

3 <= N <= 36
N = d1 + d2 + d3
print(qr = (qi -(10*N)))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    3 <= N <= 36
NameError: name 'N' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:26:46) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
print(qr = (qi -(10*N)))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(qr = (qi -(10*N)))
TypeError: 'qr' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:27:50) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:28:00) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:28:11) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:29:02) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:29:19) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- EXECUTION TIME:
0.179086
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
Entrada invalida
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
Entrada invalida
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:29:34) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:30:44) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))

3<= N <= 36
N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    3<= N <= 36
NameError: name 'N' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:31:46) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0 not qr<0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 13
    elif(qr==0 not qr<0):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:31:56) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0) not (qr<0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 13
    elif(qr==0) not (qr<0):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:32:05) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0 and qr<0):
	print("MORTO")
else: 
	print("Entrada invalida")


-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:32:50) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else(qr<0): 
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 15
    else(qr<0): 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:33:01) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
elif(qr<0): 
	print("Entrada invalida")


-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:34:47) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
else(qr==0):
	print("MORTO")


-- ERROR:
File "XXXX", line 13
    else(qr==0):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:34:54) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")


-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:35:50) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else:
	print("Entrada invalida")


-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:35:52) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr==0):
	print("MORTO")
else:
	print("Entrada invalida")


-- EXECUTION TIME:
0.169992
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
Entrada invalida
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
Entrada invalida
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:36:12) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr =< 0):
	print("MORTO")
else:
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 13
    elif(qr =< 0):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:36:19) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr ==< 0):
	print("MORTO")
else:
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 13
    elif(qr ==< 0):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:36:39) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr == 0 or qr<0):
	print("MORTO")
else:
	print("Entrada invalida")


-- OUTPUT:
-130
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:36:55) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr == 0 or qr<0):
	print("MORTO")
else:
	print("Entrada invalida")


-- OUTPUT:
-130
MORTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:37:45) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr >== 0):
	print("MORTO")
else:
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 13
    elif(qr >== 0):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:41:20) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
else (qr<0 and 0>d1<12 and 0>d2<12 and 0>d3<12):
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 15
    else (qr<0 and 0>d1<12 and 0>d2<12 and 0>d3<12):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:41:39) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
else (qr<0 or 0>d1<12 and 0>d2<12 and 0>d3<12):
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 15
    else (qr<0 or 0>d1<12 and 0>d2<12 and 0>d3<12):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:42:09) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if (qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
else (qi<0 or 0>d1<12 and 0>d2<12 and 0>d3<12):
	print("Entrada invalida")


-- ERROR:
File "XXXX", line 15
    else (qi<0 or 0>d1<12 and 0>d2<12 and 0>d3<12):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:44:33) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if (qi<0 or 1<d1<12 and 1<d2<12 and 1<d3<12):
	print("Entrada invalida")
elif (qr>0):
	print("VIVO")
else(qr == 0):
	print("MORTO")

-- ERROR:
File "XXXX", line 14
    else(qr == 0):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:44:48) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if (qi<0 or 1<d1<12 and 1<d2<12 and 1<d3<12):
	print("Entrada invalida")
elif (qr>0):
	print("VIVO")
else:
	print("MORTO")

-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:45:28) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if (qi<0 or 1<d1<12 and 1<d2<12 and 1<d3<12):
	print("Entrada invalida")
elif (qr>0):
	print("VIVO")
elif (qr==0):
	print("MORTO")

-- OUTPUT:
-130
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:45:44) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if (qi<0 or 1<d1<12 and 1<d2<12 and 1<d3<12):
	print("Entrada invalida")
elif (qr>0):
	print("VIVO")
elif (qr==0):
	print("MORTO")

-- EXECUTION TIME:
0.162276
-- TEST CASE 1:
---- input:
120
6
9
10
---- correct output:
0
MORTO
---- user output:
-130
Entrada invalida
-- TEST CASE 2:
---- input:
200
15
20
3
---- correct output:
Entrada invalida
---- user output:
-180
-- TEST CASE 3:
---- input:
260
2
1
2
---- correct output:
210
VIVO
---- user output:
210
VIVO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:46:55) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if (qi<0 or 1>d1<12 and 1>d2<12 and 1>d3<12):
	print("Entrada invalida")
elif (qr>0):
	print("VIVO")
elif (qr==0):
	print("MORTO")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:04) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 or 1>d1<12 and 1>d2<12 and 1>d3<12):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:36) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 and 1>d1<12 and 1>d2<12 and 1>d3<12):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:51:22) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))
if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 or (1>d1<12) or (1>d2<12) or (1>d3<12)):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:51:52) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 or (1>d1<12) and (1>d2<12) and (1>d3<12)):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:07) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 and (1>d1<12) and (1>d2<12) and (1>d3<12)):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:15) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 and (1>d1<12) and (1>d2<12) and (1>d3<12)):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:54) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:54:57) 
-- CODE:
qi = int(input("quantidade de pts inicial: "))
d1 = int(input("Digite um nmr: "))
d2 = int(input("Digite um nmr: "))
d3 = int(input("Digite um nmr: "))


N = d1 + d2 + d3
qr = qi - (10*N)
print(int(qr))

if(qr>0):
	print("VIVO")
elif(qr == 0):
	print("MORTO")
elif (qi<0 or 1>d1<12 and 1>d2<12 and 1>d3<12):
	print("Entrada invalida")

-- OUTPUT:
-130
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
