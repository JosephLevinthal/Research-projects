== TEST (2019-04-25 21:34:46) 
-- CODE:
numeroextra = float(input("Digite numero de horas extras"))
numerohoras = int(input("Digite o numero de faltas"))




-- OUTPUT:
abril
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:35:03) 
-- CODE:
numeroextra = int(input("Digite numero de horas extras"))
numerohoras = float(input("Digite o numero de faltas"))




-- OUTPUT:
abril
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:35:09) 
-- CODE:
numeroextra = int(input("Digite numero de horas extras:"))
numerohoras = float(input("Digite o numero de faltas:"))




-- OUTPUT:
abril
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:35:44) 
-- CODE:
ne = int(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))




-- OUTPUT:
abril
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:35:48) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))




-- OUTPUT:
abril
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:37:08) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( Ne, "extras",  ti, "e", nf, "de falta")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print( Ne, "extras",  ti, "e", nf, "de falta")
NameError: name 'Ne' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:37:21) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras",  ti, "e", nf, "de falta")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print( ne, "extras",  ti, "e", nf, "de falta")
NameError: name 'ti' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:37:38) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")


-- OUTPUT:
420.0 extras e 20.0 de falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:12) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

if (ne>400):
	G = (ne - 1/4) * nf 
	print(G)
-- OUTPUT:
420.0 extras e 20.0 de falta
8395.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:47:56) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

if (ne>400):
	G = (ne - 1/4) * nf 
	print("G")
-- OUTPUT:
420.0 extras e 20.0 de falta
G
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:54:46) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * nf
print(H)
-- OUTPUT:
420.0 extras e 20.0 de falta
415.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:58:23) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * nf
if (H>400):
	gratificacao = 500 * H
   print(" R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print(" R$ ", round(gratificacao, 2)) 

-- ERROR:
File "XXXX", line 9
    print(" R$ ", round(gratificacao, 2))
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:59:06) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * nf
if (H>400):
	gratificacao = 500 * H
	print(" R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print(" R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
 R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:00:34) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * nf
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:01:39) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ((ne) - 1/4) * nf
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  4197500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:22:39) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * nf
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:24:43) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (nf * 1/4)/ne
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  1.19
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:24:52) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (nf * 1/4) - ne
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  -41500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:25:50) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:26:09) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>=400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:26:17) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>=400):
	gratificacao = 500 * H
	print("R$ ", round(gratificacao, 2))
elif (H<=400):
	gratificacao = 100 * H
	print("R$ ", round(gratificacao, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:28:00) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 500 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:28:14) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 50 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 10 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  20750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:28:20) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 50 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 10 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  20750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 22:28:27) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 50 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 10 * H
	print("R$ ", round(G, 2)) 

-- EXECUTION TIME:
0.279614
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$  20750.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$  3755.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$  2890.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:32:17) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 500 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:35:06) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (nf) * 1/4
if (H>400):
	G = 500 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:35:32) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 500 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:36:55) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 500 + H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 +  H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  915.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:37:55) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - 1/4 * (nf) 
if (H>400):
	G = 500 - H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 - H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  85.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:38:36) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (1/4) * (nf) 
if (H>400):
	G = 500 + H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 + H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  915.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 22:38:44) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (1/4) * (nf) 
if (H>400):
	G = 500 + H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 + H
	print("R$ ", round(G, 2)) 

-- EXECUTION TIME:
0.164916
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$  915.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$  475.5
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$  389.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:43:16) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (1/4) * (nf) 
if (H>400):
	G = (500 * Ha) 
	print("R$ ", round(G, 2))
elif (H>=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    G = (500 * Ha) 
NameError: name 'Ha' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:43:36) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (1/4) * (nf) 
if (H>400):
	G = (500 * H) 
	print("R$ ", round(G, 2))
elif (H>=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:43:49) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = (ne) - (1/4) * (nf) 
if (H>400):
	G = (500 * H) 
	print("R$ ", round(G, 2))
elif (H<=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:47:04) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf)
if (H>400):
	G = (500 * H) 
	print("R$ ", round(G, 2))
elif (H<=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- ERROR:
File "XXXX", line 6
    H = ne - 1/4 * nf)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:47:12) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = (500 * H) 
	print("R$ ", round(G, 2))
elif (H<=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:49:24) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G= 500/H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = (100 * H)
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  1.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:49:42) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G= 500/H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 500/H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  1.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:49:57) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G= 500/H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100/H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  1.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:55:44) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	H = 500 * G
	print("R$ ", round(G, 2))
elif (H<=400):
	H = 100 * G
	print("R$ ", round(G, 2)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    H = 500 * G
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:56:14) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	H = 500 * G
	print("R$ ", round(G, 2))
elif (H<=400):
	H = 100 * G
	print("R$ ", round(G, 2)) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    H = 500 * G
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:56:35) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	H = 500 * G
	print("R$ ", round(G, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    H = 500 * G
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:57:25) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G= 500 * H
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  207500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:58:50) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G= 500 
	print("R$ ", round(G, 2))
elif (H<=40)
	G = 100 
	print("R$ ", round(G, 2)) 

-- ERROR:
File "XXXX", line 10
    elif (H<=40)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:59:10) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 
	print("R$ ", round(G, 2))
elif (H<=40)
	G = 100 
	print("R$ ", round(G, 2)) 

-- ERROR:
File "XXXX", line 10
    elif (H<=40)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:59:23) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 * H
	print("R$ ", round(G, 2))
elif (H<=40)
	G = 100 * H
	print("R$ ", round(G, 2)) 

-- ERROR:
File "XXXX", line 10
    elif (H<=40)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:59:38) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100 
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 22:59:50) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100 
	print("R$ ", round(G, 2)) 

-- EXECUTION TIME:
0.123452
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$  500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:00:01) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100 
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:00:24) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100 
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:00:42) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500.00 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100.00
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:00:48) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500.00 
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100.00
	print("R$ ", round(G, 2)) 

-- EXECUTION TIME:
0.171936
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$  500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:01:36) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = "R$" 500.00
	print("R$ ", round(G, 2))
elif (H<=40):
	G = "R$" 100.00
	print("R$ ", round(G, 2)) 

-- ERROR:
File "XXXX", line 8
    G = "R$" 500.00
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:01:47) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500.00
	print("R$ ", round(G, 2))
elif (H<=40):
	G = 100.00
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 23:06:39) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500.00
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100.00
	print("R$ ", round(G, 2)) 

-- OUTPUT:
420.0 extras e 20.0 de falta
R$  500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 23:06:48) 
-- CODE:
ne = float(input("Digite numero de horas extras:"))
nf = float(input("Digite o numero de faltas:"))

print( ne, "extras", "e", nf, "de falta")

H = ne - 1/4 * nf
if (H>400):
	G = 500.00
	print("R$ ", round(G, 2))
elif (H<=400):
	G = 100.00
	print("R$ ", round(G, 2)) 

-- EXECUTION TIME:
0.116583
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$  500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$  100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$  100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
