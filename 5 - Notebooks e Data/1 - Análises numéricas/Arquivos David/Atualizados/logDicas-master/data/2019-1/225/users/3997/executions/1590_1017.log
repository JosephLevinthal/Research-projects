== SUBMITION (2019-03-27 14:19:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- EXECUTION TIME:
0.161109
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
-555.78
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:19:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-555.78
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:20:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-555.78
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:20:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- EXECUTION TIME:
0.187492
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
9989.43
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:20:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- OUTPUT:
9989.43
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:20:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- EXECUTION TIME:
0.137283
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
9989.43
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:20:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- OUTPUT:
9989.43
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:21:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) * cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- EXECUTION TIME:
0.140955
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
9989.43
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:21:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:22:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* 
lat1 = radians(float(input("Digite lat1:")))
long1 = radians(float(input("Digite long1:")))
lat2 = radians(float(input("Digite lat2:")))
long2 = radians(float(input("Digite long2:")))

R = 6371.01

d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- EXECUTION TIME:
0.193963
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
