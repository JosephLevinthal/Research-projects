== TEST (2019-03-20 15:26:12) 
-- CODE:
var = input("Instruções:100")
total= var*8

-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:26:46) 
-- CODE:
var = input("Instruções: ")
var=*100

-- ERROR:
File "XXXX", line 2
    var=*100
       ^
SyntaxError: can't use starred expression here
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:29:43) 
-- CODE:
var = input("Instruções:3 ")
print(1)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:33:21) 
-- CODE:
var = float(input("Qual o valor unitario do jogo? "))
total= var*5
print(total+30)
-- OUTPUT:
90.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:34:15) 
-- CODE:
var = input("Instruções: ")
total= var*5
print(total+30)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(total+30)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:35:43) 
-- CODE:
var = float(input()
total= var*5
print(total+30)
-- ERROR:
File "XXXX", line 2
    total= var*5
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:35:57) 
-- CODE:
var = float(input(20)
total= var*5
print(total+30)
-- ERROR:
File "XXXX", line 2
    total= var*5
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:36:20) 
-- CODE:
var = float(input(20)
total= var*20
print(total+30)
-- ERROR:
File "XXXX", line 2
    total= var*20
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:36:58) 
-- CODE:
var = float(input(20)
total= 100
print(total+30)
-- ERROR:
File "XXXX", line 2
    total= 100
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:39:12) 
-- CODE:
var = float(input(20)
total=int 30
print(total+30)
-- ERROR:
File "XXXX", line 2
    total=int 30
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:39:31) 
-- CODE:
var = float(input(20)
total=int (30)
print(total+30)
-- ERROR:
File "XXXX", line 2
    total=int (30)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:39:38) 
-- CODE:
var = float(input(20)
total=int(30)
print(total+30)
-- ERROR:
File "XXXX", line 2
    total=int(30)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:39:46) 
-- CODE:
var = float(input()
total=int(30)
print(total+30)
-- ERROR:
File "XXXX", line 2
    total=int(30)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:42:10) 
-- CODE:
var = float(input()
total=int(30)
print(total+30)
-- ERROR:
File "XXXX", line 2
    total=int(30)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:42:28) 
-- CODE:
var = float(input()
int(30)
print(total+30)
-- ERROR:
File "XXXX", line 2
    int(30)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:45:30) 
-- CODE:
var1 = float(input("quantidade")
var2= float(input("valor unitario"))
var3=float(input("frete"))
var4=var1 *var2+var3
-- ERROR:
File "XXXX", line 2
    var2= float(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:46:30) 
-- CODE:
var1 = float(input("quantidade"))
var2= float(input("valor unitario"))
var3=float(input("frete"))
var4=var1 *var2+var3
print(var4)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:46:32) 
-- CODE:
var1 = float(input("quantidade"))
var2= float(input("valor unitario"))
var3=float(input("frete"))
var4=var1 *var2+var3
print(var4)
-- EXECUTION TIME:
0.115672
-- TEST CASE 1:
---- input:
12
45.0
78.0
---- correct output:
618.0
---- user output:
618.0
-- TEST CASE 2:
---- input:
10
67.0
95.0
---- correct output:
765.0
---- user output:
765.0
-- TEST CASE 3:
---- input:
246
975.0
321.0
---- correct output:
240171.0
---- user output:
240171.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
