== SUBMITION (2019-04-08 14:06:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=abs(float(input("Distancia:")))
g= 9.8
R=(vo**2)*sen(2*a)/g
if(D=R):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.183471
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 10
    if(D=R):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:10:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=float(input("Distancia:"))
g= 9.8
R=(vo**2)*sen(2*a)/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    R=(vo**2)*sen(2*a)/g
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:11:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=float(input("Distancia:"))
g= 9.8
R=(vo**2)*sin(2*a)/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:11:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=float(input("Distancia:"))
g= 9.8
R=(vo**2)*sin(2*a)/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.168367
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 13:43:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=float(input("Distancia:"))
g= 9.8
R=(vo**2)*sin(2*a)/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 13:44:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo=float(input("Velocidade inicial:"))
a=radians(float(input("angulo:")))
D=float(input("Distancia:"))
g= 9.8
R=((vo**2)*sin(2*a))/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.17231
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
