== TEST (2019-04-08 15:12:03) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("aluno vai receber a bonificaçao?")
a = nota + 0.1
if (nota > 6):
	print(a)
else:
	print("N")
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:12:29) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("aluno vai receber a bonificaçao?")
a = nota + 0.1
if (nota == 6):
	print(a)
else:
	print("N")
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:12:45) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("aluno vai receber a bonificaçao?")
a = nota + 0.1
if (nota > 5):
	print(a)
else:
	print("N")
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:13:10) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("aluno vai receber a bonificaçao:")
a = nota + 0.1
if (nota > 5):
	print(a)
else:
	print("N")
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:14:23) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("aluno vai receber a bonificaçao:")
a = nota + (nota * 1/100)
if (nota > 5):
	print(a)
else:
	print("N")
-- OUTPUT:
N
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:15:31) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")
a = nota + (nota * 1/100)
if (nota.upper() == "S"):
	print(a)
else:
	print("N")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (nota.upper() == "S"):
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:15:47) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")
if (nota.upper() == "S"):
	a = nota + (nota * 1/100)
	print(a)
else:
	print("N")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (nota.upper() == "S"):
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:15:57) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")
if (nota.upper() == "S"):
	a = nota + (nota * 1/100)
	print(a)
else:
	print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (nota.upper() == "S"):
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:16:40) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")
if (mensagem.upper() == "S"):
	a = nota + (nota * 1/100)
	print(a)
else:
	print(nota)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:17:25) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")
if (mensagem.upper() == "S"):
	a = nota + (nota * 10/100)
	print(a)
else:
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:17:50) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificaçao (S/N)")

if (mensagem.upper() == "S"):
	a = nota + (nota * 10/100)
	print(a)
else:
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:18:09) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificacao (S/N)")

if (mensagem.upper() == "S"):
	a = nota + (nota * 10/100)
	print(a)
else:
	print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:18:22) 
-- CODE:
nota = float(input("nota do aluno e: "))
mensagem = input("bonificacao (S/N)")

if (mensagem.upper() == "S"):
	a = nota + (nota * 10/100)
	print(a)
else:
	print(nota)
-- EXECUTION TIME:
0.192359
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
