== TEST (2019-03-27 15:04:58) 
-- CODE:
texto = "BATMAN"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:05:06) 
-- CODE:
texto = "Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:05:07) 
-- CODE:
texto = "Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.135859
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:05:12) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:07:03) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:07:04) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:30:45) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:30:47) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.145319
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:30:47) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.144263
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:30:48) 
-- CODE:
texto ="Batman"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.127139
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:31:05) 
-- CODE:
texto = ate logo
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    texto = ate logo
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:31:15) 
-- CODE:
texto = atelogo
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    texto = atelogo
NameError: name 'atelogo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:31:42) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:31:45) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.170257
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
ate logo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:31:56) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:31:58) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.149143
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
ate logo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:32:31) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:32:46) 
-- CODE:
"ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(texto.lower())
NameError: name 'texto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:32:59) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:33:02) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.197334
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
ate logo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:33:11) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:33:12) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.137685
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
ate logo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:33:29) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
ate logo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:33:32) 
-- CODE:
texto = "ate logo"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.170388
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
ate logo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:33:53) 
-- CODE:
texto = "digite uma frase:"
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
digite uma frase:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:34:45) 
-- CODE:
texto = input("digite uma frase: ")
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:34:50) 
-- CODE:
texto = input("digite uma frase: ")
print(texto.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.189431
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
primeiro_caso_de_teste
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
