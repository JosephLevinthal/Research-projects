== TEST (2019-03-23 22:00:27) 
-- CODE:
from math import*
n = float(input("Numeros de pessoas: "))
exp = factorial(1 - (365!)/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 3
    exp = factorial(1 - (365!)/(365 - n)! * (1/365 ** n))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:00:56) 
-- CODE:
from math import*
n = float(input("Numeros de pessoas: "))
exp = (1 - (365!)/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 3
    exp = (1 - (365!)/(365 - n)! * (1/365 ** n))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:01:34) 
-- CODE:
from math import*
n = float(input("Numeros de pessoas: "))
exp = (1 - (365!)/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 3
    exp = (1 - (365!)/(365 - n)! * (1/365 ** n))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:02:10) 
-- CODE:
from math import *

n = float(input("Numeros de pessoas: "))
exp = factorial(1 - (365!)/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 4
    exp = factorial(1 - (365!)/(365 - n)! * (1/365 ** n))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:02:38) 
-- CODE:
from math import *

n = float(input("Numeros de pessoas: "))
exp = factorial(1 - (365)/(365 - n) * (1/365 ** n))

print(round(exp, 2))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:02:53) 
-- CODE:
from math import *

n = float(input("Numeros de pessoas: "))
exp = factorial(1 - (365)/(365 - n) * (1/365 ** n))

print(round(exp, 2))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:04:22) 
-- CODE:
from math import *

n = int(input("Numeros de pessoas: "))
exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 4
    exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:05:20) 
-- CODE:
from math import *

n = int(input("Numeros de pessoas: "))
exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 4
    exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:05:35) 
-- CODE:
from math import *

n = int(input("Numeros de pessoas: "))
exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 4
    exp = factorial(1 - (365)!/(365 - n)! * (1/365 ** n))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 22:08:24) 
-- CODE:
from math import *

n = int(input("Numeros de pessoas: "))
exp = factorial(1 - (365)%d!/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 4
    exp = factorial(1 - (365)%d!/(365 - n)! * (1/365 ** n))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:32:27) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - (365)!/(365 - n)! * (1/365 ** n))

print(round(exp, 2))
-- ERROR:
File "XXXX", line 3
    exp = (1 - (365)!/(365 - n)! * (1/365 ** n))
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:35:25) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - factorial(365)/factorial(365 - n) * (1/365 ** n))

print(round(exp, 2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:30) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n))

print(round(exp, 2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:43:40) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * 1/365 ** n

print(round(exp, 2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:44:30) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n)

print(round(exp, 2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:45:58) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n)

print(int(round(exp, 2()))
-- ERROR:
File "XXXX", line 6
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:54:59) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n)

print(round(exp, 2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:55:12) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n)

print(round(exp, 2))
-- EXECUTION TIME:
0.146348
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
0.17
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
0.54
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:55:42) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/ factorial(365 - n)) * (1/365 ** n)

print(round(exp, 2)*100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:00:18) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - ((factorial(365)/factorial(365 - n)) * (1/365 ** n))

print(round(exp, 2)*100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:00:38) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:01:09) 
-- CODE:
from math import *
n = float(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:01:30) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:01:33) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 100)
-- EXECUTION TIME:
0.123371
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
17.0
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
54.0
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:03:02) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:03:23) 
-- CODE:
from math import *
n = float(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(float(round(exp, 2) * 100))
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:43:11) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 1/50)
-- OUTPUT:
0.0034000000000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:43:31) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = 1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n)
 
print(round(exp, 2) * 1/50 * 100)
-- OUTPUT:
0.34
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:46:44) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n))
 
print(round(exp, 2) * 100)
-- OUTPUT:
17.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:47:18) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n))
 
print(round(exp * 100, 2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:47:26) 
-- CODE:
from math import *
n = int(input("Numeros de pessoas: "))
exp = (1 - (factorial(365)/factorial(365 - n)) * (1/365 ** n))
 
print(round(exp * 100, 2))
-- EXECUTION TIME:
0.143185
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
