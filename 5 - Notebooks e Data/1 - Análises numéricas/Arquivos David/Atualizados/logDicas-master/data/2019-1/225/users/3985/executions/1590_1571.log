== SUBMITION (2019-03-23 15:20:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("digite o numero:"))
soma= 0
div= 1000
while v != 0:
	x=v//div
	soma=soma+x
	v=v%div
	div=div/10
print(int(soma))
-- EXECUTION TIME:
0.117533
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1571/main.py", line 4, in <module>
    var1= int(input())
ValueError: invalid literal for int() with base 10: 'Primeiro_caso_de_teste'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:22:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("digite o numero:"))
soma = 0
div = 1000
while v != 0:
	x = v // div
	soma = soma + x
	v = v % div
	div = div/10
print(int(soma))
-- EXECUTION TIME:
0.161961
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1571/main.py", line 4, in <module>
    var1 = int(input())
ValueError: invalid literal for int() with base 10: 'Primeiro_caso_de_teste'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:24:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("digite o numero:"))
soma = 0
div = 1000
while v != 0:
	x = v // div
	soma = soma + x
	v = v % div
	div = div/10
print(int(soma))
-- EXECUTION TIME:
0.193372
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1571/main.py", line 4, in <module>
    var1 = int(input())
ValueError: invalid literal for int() with base 10: 'Primeiro_caso_de_teste'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:32:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n= 123
soma= sum(int(i) for i in str(n))
print(soma)
-- OUTPUT:
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:32:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n= 123
soma= sum(int(i) for i in str(n))
print(soma)
-- EXECUTION TIME:
0.213366
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:26:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
frase= input()
print(frase.upper())
-- EXECUTION TIME:
0.220435
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
PRIMEIRO_CASO_DE_TESTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
