== TEST (2019-03-31 15:16:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
sen(t1) = radians(sin(t1))

print(round(sen(t1), 2)
-- ERROR:
File "XXXX", line 14
    
                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:17:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))

print(round(set1, 2)
-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:18:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))

print(round(set1, 2)
-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:20:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))

print(round(set1, 2))
-- OUTPUT:
-0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:28:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))
set2 = radians(sin(t2))
cot1 = radians(cos(t1))
cot2 = radians(cos(t2))
coAg = radians(cos(g1 - g2))

d = R * (asin(set1) * asin(st2) + acos(cot1) * acos(cot2) * acos(coAg))

print(round(set1, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    d = R * (asin(set1) * asin(st2) + acos(cot1) * acos(cot2) * acos(coAg))
NameError: name 'st2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:28:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))
set2 = radians(sin(t2))
cot1 = radians(cos(t1))
cot2 = radians(cos(t2))
coAg = radians(cos(g1 - g2))

d = R * (asin(set1) * asin(st2) + acos(cot1) * acos(cot2) * acos(coAg))

print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    d = R * (asin(set1) * asin(st2) + acos(cot1) * acos(cot2) * acos(coAg))
NameError: name 'st2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:30:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))
set2 = radians(sin(t2))
cot1 = radians(cos(t1))
cot2 = radians(cos(t2))
coAg = radians(cos(g1 - g2))

d = R * (asin(set1) * asin(set2) + acos(cot1) * acos(cot2) * acos(coAg))

print(round(d, 2))
-- OUTPUT:
24134.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:32:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
set1 = radians(sin(t1))
set2 = radians(sin(t2))
cot1 = radians(cos(t1))
cot2 = radians(cos(t2))
coAg = radians(cos(g1 - g2))

d = R * (asin(set1) * asin(set2) + acos(cot1) * acos(cot2) * acos(coAg))

print(round(d, 2))
-- EXECUTION TIME:
0.205391
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
24134.39
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:35:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2))

print(round(d, 2))
-- ERROR:
File "XXXX", line 14
    print(round(d, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:36:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.141677
-- ERROR:
  File "/home/codebench/codes/1590/1017/main.py", line 14
    print(round(d, 2))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:36:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2))

print(round(d, 2))
-- ERROR:
File "XXXX", line 14
    print(round(d, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:37:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2)))

print(round(d, 2))
-- OUTPUT:
702.74
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:37:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2)))

print(round(d, 2))
-- OUTPUT:
702.74
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:39:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01

d = R * (asin(sin(t1)) * asin(sin(t2)) + acos(cos(t1)) * acos(cos(t2)) * acos(cos(g1 - g2)))

print(round(d, 2))
-- EXECUTION TIME:
0.148951
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
702.74
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:48:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
d = R * arcos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arcos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:50:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:52:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.119336
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:53:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g1 = radians(float(input("Longitude de P1: ")))
g2 = radians(float(input("Longitude de P2: ")))

d = 6371.01 * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.184855
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:55:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("Longitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("Longitude de P2: ")))

d = 6371.01 * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))
-- EXECUTION TIME:
0.141961
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
