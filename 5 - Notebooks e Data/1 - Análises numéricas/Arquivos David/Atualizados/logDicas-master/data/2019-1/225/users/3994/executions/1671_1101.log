== TEST (2019-04-22 20:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c e " tipo ",i)
-- ERROR:
File "XXXX", line 6
    print(" Entradas:",c e " tipo ",i)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:25:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c)
-- OUTPUT:
Entradas: -56.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:26:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c kWh)
-- ERROR:
File "XXXX", line 6
    print(" Entradas:",c kWh)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:26:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,kWh)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(" Entradas:",c,kWh)
NameError: name 'kWh' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:26:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kwh")
-- OUTPUT:
Entradas: -56.0 kwh
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:27:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo",i)
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:32:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R==500):
	print(c*0.44)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R==500):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:32:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if("R"==500):
	print(c*0.44)
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:33:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if("R"==500):
	msg = c*0.44
	print(msg)
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:33:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if("R"==500):
	msg = c*0.44
print(msg)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(msg)
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:34:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if("R"==500):
	msg = c*0.44
	print(msg)
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:39:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
	msg= c*0.44
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 9
    msg= c*0.44
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:39:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
	msg = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 9
    msg = (c*0.44)
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:39:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
	mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 9
    mensagem = (c*0.44)
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:39:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 9
    mensagem = (c*0.44)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:40:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:40:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:40:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:41:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if("R"<500 or "R">500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if("R"<500 or "R">500 or C<1000 or C>1000 or I<5000 or I>5000):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:41:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:42:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input("R"/"C"/"I")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    i = input("R"/"C"/"I")
TypeError: unsupported operand type(s) for /: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:43:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(R/C/I?)
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 5
    i = input(R/C/I?)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:44:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input("R/C/I")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:44:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input("R/C/I"?)
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
File "XXXX", line 5
    i = input("R/C/I"?)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:44:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input("R/C/I")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:46:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/C/I? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:47:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/C/I? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(c<500):
		mensagem = (c*0.44)
	print("Valor Total: R$", msg)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:07:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/C/I? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
	if(R<500):
		mensagem = "c*0.44"
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(R<500 or R>500 or C<1000 or C>1000 or I<5000 or I>5000):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:08:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/C/I? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
	if(c<500):
		mensagem = "c*0.44"
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
File "XXXX", line 7
    if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
                                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:08:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/C/I? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
	if(c<500):
		mensagem = "c*0.44"
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
File "XXXX", line 7
    if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
                                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:47:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
	if(c<500):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
File "XXXX", line 7
    if(c<500 or c>500 or c<1000 or c>1000 or c<5000 or >5000):
                                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:48:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or >5000):
	if(c<500):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
File "XXXX", line 7
    if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or >5000):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:48:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or >5000):
	if(c<=500):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
File "XXXX", line 7
    if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or >5000):
                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:49:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
Valor Total: R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:54:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="C"):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor Total: R$", mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:54:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="C"):
		mensagem = c*0.44
	print("Valor Total: R$", mensagem)
	
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor Total: R$", mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:54:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="C"):
		mensagem = c*0.44
		print("Valor Total: R$", mensagem)
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:57:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo: ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = c*0.44
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= c*0.65
		print("Valor Total: R$", mensagem)
		
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo:  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:03:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = c*0.44
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= c*0.65
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:03:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = c*0.44
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= c*0.65
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- EXECUTION TIME:
0.116086
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor Total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:03:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = c*0.44
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= c*0.65
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= c*0.55
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= c*0.60
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:06:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:06:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- EXECUTION TIME:
0.130318
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor Total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:06:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print(" Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:08:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:08:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- EXECUTION TIME:
0.186704
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor Total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:08:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:08:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:09:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:09:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:10:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<=500 or c>500 or c<=1000 or c>1000 or c<=5000 or c>5000):
	if(c<=500 and i=="R"):
		mensagem = round((c*0.44),2)
		print("Valor Total: R$", mensagem)
	elif(c>500 and i=="R"):
		mensagem= round((c*0.65),2)
		print("Valor Total: R$", mensagem)
	elif(c<=1000 and i=="C"):
		mensagem = round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>1000 and i=="C"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
	elif(c<=5000 and i=="I"):
		mensagem= round((c*0.55),2)
		print("Valor Total: R$", mensagem)
	elif(c>5000 and i=="I"):
		mensagem= round((c*0.60),2)
		print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")
	
		
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor Total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:54:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor Total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.158652
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor Total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:56:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor Total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor Total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:56:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor Total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor Total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:57:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:57:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.155469
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:58:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:58:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.238279
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:58:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kwh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kwh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:58:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kwh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.16159
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo  I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:59:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kwh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kwh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:00:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:01:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:01:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:01:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:02:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
		print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:02:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
		print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.152583
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:02:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 23
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:03:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
		print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.20035
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:03:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
		print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	   print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.162547
-- ERROR:
  File "/home/codebench/codes/1671/1101/main.py", line 25
    print("Valor total: R$", mensagem)
                                     ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:03:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
		print("Valor total: R$", mensagem)
	else:
		mensagem= round((c*0.60),2)
	   print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 25
    print("Valor total: R$", mensagem)
                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:04:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:04:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.218018
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:04:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:07:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:11:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	if(c<0):
		mensagem= "Dados invalidos"
	print(mensagem)

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	if(c<0):
		mensagem= "Dados invalidos"
		print(mensagem)
	print("Dados invalidos")
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:12:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	if(c<0):
		mensagem= "Dados invalidos"
		print(mensagem)
	print("Dados invalidos")
	

-- EXECUTION TIME:
0.15452
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	if(c<0):
		mensagem= "Dados invalidos"
		print(mensagem)
	print("Dados invalidos")
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:15:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(i=="R"):
	if(c<=500):
		mensagem = round((c*0.44),2)
	else:
		mensagem = round((c*0.65),2)
	print("Valor total: R$", mensagem)
elif(i=="C"):
	if(c<=1000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
elif(i=="I"):
	if(c<=5000):
		mensagem= round((c*0.55),2)
	else:
		mensagem= round((c*0.60),2)
	print("Valor total: R$", mensagem)
else:
	if(c<0 or i!="R" or i!="C" or i!="I"):
		mensagem= "Dados invalidos"
		print(mensagem)
	
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:17:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<0 or i!="R" or i!="C" or i!="I"):
		mensagem= "Dados invalidos"
		print(mensagem)
else:
	if(i=="R"):
		if(c<=500):
			mensagem = round((c*0.44),2)
		else:
			mensagem = round((c*0.65),2)
		print("Valor total: R$", mensagem)
	elif(i=="C"):
		if(c<=1000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)
	elif(i=="I"):
		if(c<=5000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)

	
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:17:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<0 or i!="R" or i!="C" or i!="I"):
		mensagem= "Dados invalidos"
		print(mensagem)
else:
	if(i=="R"):
		if(c<=500):
			mensagem = round((c*0.44),2)
		else:
			mensagem = round((c*0.65),2)
		print("Valor total: R$", mensagem)
	elif(i=="C"):
		if(c<=1000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)
	elif(i=="I"):
		if(c<=5000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)

	
	

-- EXECUTION TIME:
0.146567
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:17:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if(c<0 or i!="R" or i!="C" or i!="I"):
		mensagem= "Dados invalidos"
		print(mensagem)
else:
	if(i=="R"):
		if(c<=500):
			mensagem = round((c*0.44),2)
		else:
			mensagem = round((c*0.65),2)
		print("Valor total: R$", mensagem)
	elif(i=="C"):
		if(c<=1000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)
	elif(i=="I"):
		if(c<=5000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)

	
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:19:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if((c<0 )or ((i!="R") and (i!="C") and (i!="I"))):
		mensagem= "Dados invalidos"
		print(mensagem)
else:
	if(i=="R"):
		if(c<=500):
			mensagem = round((c*0.44),2)
		else:
			mensagem = round((c*0.65),2)
		print("Valor total: R$", mensagem)
	elif(i=="C"):
		if(c<=1000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)
	elif(i=="I"):
		if(c<=5000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)

	
	

-- OUTPUT:
Entradas: -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:19:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
c = float(input(" Digite o consumo: "))
i = input(" R/I/C? ")
print("Entradas:",c,"kWh e tipo ",i)
if((c<0 )or ((i!="R") and (i!="C") and (i!="I"))):
		mensagem= "Dados invalidos"
		print(mensagem)
else:
	if(i=="R"):
		if(c<=500):
			mensagem = round((c*0.44),2)
		else:
			mensagem = round((c*0.65),2)
		print("Valor total: R$", mensagem)
	elif(i=="C"):
		if(c<=1000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)
	elif(i=="I"):
		if(c<=5000):
			mensagem= round((c*0.55),2)
		else:
			mensagem= round((c*0.60),2)
		print("Valor total: R$", mensagem)

	
	

-- EXECUTION TIME:
0.213447
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
