== TEST (2019-04-24 15:25:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x and x<=b):
	print(x " pertence ao intervalo " a, b)
	else:
	print(x " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a "e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x " pertence ao intervalo " a, b)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:25:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x and x<=b):
	print(x, " pertence ao intervalo " a, b)
	else:
	print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a "e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x, " pertence ao intervalo " a, b)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:27:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x and x<=b):
		print(x, " pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x, " pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:27:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x and x<=b):
		print(x, " pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- EXECUTION TIME:
0.126354
-- ERROR:
  File "/home/codebench/codes/1671/1103/main.py", line 10
    print(x, " pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:27:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x and x<=b):
		print(x, " pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x, " pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:28:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x, " pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x, " pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:28:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x ," pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:28:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo " a, b)
	else:
		print(x, " nao pertence ao intervalo", a, b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x ," pertence ao intervalo " a, b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:29:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo " a,",", b)
	else:
		print(x, " nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x ," pertence ao intervalo " a,",", b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:29:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo " a,",", b)
	else:
		print(x, " nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- ERROR:
File "XXXX", line 10
    print(x ," pertence ao intervalo " a,",", b)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:30:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("a: "))
b=float(input("b: "))
x=float(input("x: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo ", a,",", b)
	else:
		print(x, " nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- OUTPUT:
4.0  nao pertence ao intervalo 2.0 , 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x: "))
a=float(input("a: "))
b=float(input("b: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo ", a,",", b)
	else:
		print(x, " nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- OUTPUT:
2.0  nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x: "))
a=float(input("a: "))
b=float(input("b: "))

if(b>a): 
	if(a<=x) and (x<=b):
		print(x ," pertence ao intervalo ", a,",", b)
	else:
		print(x, " nao pertence ao intervalo", a,",", b)
else:
	print("Entradas", a ,"e", b, "invalidas")


-- EXECUTION TIME:
0.173413
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0  nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5  pertence ao intervalo  1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
