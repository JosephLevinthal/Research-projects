== TEST (2019-04-10 13:46:00) 
-- CODE:
Saldo = float(input("saldo: "))
R.U = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - R.U*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    R.U = int(input())
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:27) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    R.U = int(input())
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:47:33) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
-- EXECUTION TIME:
0.131895
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:

-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:48:15) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:48:48) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.185469
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:49:37) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = round((Saldo - RU*vt + qp*vp),2)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.228267
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:49:39) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = round((Saldo - RU*vt + qp*vp),2)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:50:09) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = round((Saldo - RU*vt + qp*vp), 2) 
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.160987
-- ERROR:
  File "/home/codebench/codes/1635/2711/main.py", line 7
    mensagem = "SUFICIENTE"
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:51:22) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0)
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.143302
-- ERROR:
  File "/home/codebench/codes/1635/2711/main.py", line 7
    if(eq>=0)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:51:24) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0)
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- ERROR:
File "XXXX", line 7
    if(eq>=0)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:51:37) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.181268
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:51:39) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq>=0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:53:32) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq >= 0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.13591
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:53:41) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (Saldo - RU*vt + qp*vp)
if(eq <= 0):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.241848
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:57:33) 
-- CODE:
Saldo = float(input("saldo: "))
RU = int(input("quantidade de tickets: "))
vt = float(input("valor: "))
qp = int(input("passes: "))
vp = float(input("valor: "))
eq = (RU*vt) + (qp*vp)
if(Saldo >= eq):
	mensagem = "SUFICIENTE"
else:
	mensagem = "INSUFICIENTE"
print(mensagem)
-- EXECUTION TIME:
0.209801
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
