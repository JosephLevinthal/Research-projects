== TEST (2019-03-25 15:36:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR1"))
y = int(input("valor2"))
z = int(input("valor3"))
w = min(x,y,z)
o = max(x,y,z)
-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:39:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR1"))
y = int(input("valor2"))
z = int(input("valor3"))
w = min(x,y,z)
o = max(x,y,z)
t = float(x)+float(y)+float(z)-float(w)-float(o)
print(w)
print(t)
print(o)
-- OUTPUT:
-2
0.0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:39:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR1"))
y = int(input("valor2"))
z = int(input("valor3"))
w = min(x,y,z)
o = max(x,y,z)
t = float(x)+float(y)+float(z)-float(w)-float(o)
print(w)
print(t)
print(o)
-- EXECUTION TIME:
0.190326
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0.0
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:40:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR1"))
y = int(input("valor2"))
z = int(input("valor3"))
w = min(x,y,z)
o = max(x,y,z)
t = float(x)+float(y)+float(z)-float(w)-float(o)
print(w)
print(t)
print(o)
-- OUTPUT:
-2
0.0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:41:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR1"))
y = int(input("valor2"))
z = int(input("valor3"))
w = min(x,y,z)
o = max(x,y,z)
t = (x)+(y)+(z)-(w)-(o)
print(w)
print(t)
print(o)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:42:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR:"))
y = int(input("valor:"))
z = int(input("valor:"))
w = min(x,y,z)
o = max(x,y,z)
t = (x)+(y)+(z)-(w)-(o)
print(w)
print(t)
print(o)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:42:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("VALOR:"))
y = int(input("valor:"))
z = int(input("valor:"))
w = min(x,y,z)
o = max(x,y,z)
t = (x)+(y)+(z)-(w)-(o)
print(w)
print(t)
print(o)
-- EXECUTION TIME:
0.219279
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
