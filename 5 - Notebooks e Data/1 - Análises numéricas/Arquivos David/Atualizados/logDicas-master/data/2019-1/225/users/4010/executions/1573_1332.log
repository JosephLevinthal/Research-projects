== TEST (2019-03-11 15:39:23) 
-- CODE:
aresta = 5
area = (3/2*(3)**0.5)
 
print(round(3/2*(3)**0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:39:25) 
-- CODE:
aresta = 5
area = (3/2*(3)**0.5)
 
print(round(3/2*(3)**0.5, 4))
-- EXECUTION TIME:
0.137081
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
2.5981
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:39:28) 
-- CODE:
aresta = 5
area = (3/2*(3)**0.5)
 
print(round(3/2*(3)**0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:39:37) 
-- CODE:
aresta = 5
area = (3/2*(3)**0.5)
 
print(round(3/2*(3)**0.5, 4)
-- ERROR:
File "XXXX", line 5
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:39:40) 
-- CODE:
aresta = 5
area = (3/2*(3)**0.5)
 
print(round(3/2*(3)**0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:40:22) 
-- CODE:
aresta = 5
area = (3/2*(3) ** 0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:40:24) 
-- CODE:
aresta = 5
area = (3/2*(3) ** 0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- EXECUTION TIME:
0.139049
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
2.5981
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:41:23) 
-- CODE:
aresta = 5
area = (3/2*(3) ** 0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:42:31) 
-- CODE:
aresta = 5
area = (3/2*(3) (** 0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- ERROR:
File "XXXX", line 4
    print(round(3/2*(3) ** 0.5, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:42:34) 
-- CODE:
aresta = 5
area = (3/2*(3) ** 0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:44:18) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:44:20) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- EXECUTION TIME:
0.132832
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
2.5981
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:46:51) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:46:51) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:46:52) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- OUTPUT:
2.5981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:47:22) 
-- CODE:
aresta = 5
area = 3/2*((3*5**2))**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- ERROR:
File "XXXX", line 2
    area = 3/2*((3*5**2))**0.5)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:48:20) 
-- CODE:
aresta = 5
area = 3*((3*(5**2)**0.5)
 
print(round(3/2*(3) ** 0.5, 4))
-- ERROR:
File "XXXX", line 4
    print(round(3/2*(3) ** 0.5, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:51:23) 
-- CODE:
aresta = 5
area = 3/2*(3)** 0.5*5**2
 
print(round(area, 4))
-- OUTPUT:
64.9519
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:51:25) 
-- CODE:
aresta = 5
area = 3/2*(3)** 0.5*5**2
 
print(round(area, 4))
-- EXECUTION TIME:
0.169803
-- TEST CASE 1:
---- input:
xxx
---- correct output:
64.9519
---- user output:
64.9519
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
