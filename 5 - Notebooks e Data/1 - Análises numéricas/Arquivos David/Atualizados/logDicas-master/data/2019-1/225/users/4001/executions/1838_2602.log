== TEST (2019-06-18 12:48:48) 
-- CODE:
from numpy import*
v = array(eval(input("Matriz: "))
alim = array([[2, 1, 4],
				 [1, 2, 0],
				 [2, 3, 2]])
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 3
    alim = array([[2, 1, 4],
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:49:38) 
-- CODE:
from numpy import*
v = array(eval(input("Matriz: "))
alim = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 3
    alim = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:49:50) 
-- CODE:
from numpy import*
v = array(eval(input("Matriz: "))
			 
a = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 4
    a = array([[2, 1, 4],[1, 2, 0],[2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:50:27) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))
			 
a = array([[2, 1, 4],
			  [1, 2, 0],
			  [2, 3, 2]])
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4],
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:51:51) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))
			 
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:53:18) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 
#matriz dada na leitura			 
qtd = array([v])
qtd = qtd.T
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    qtd = array([v])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:53:30) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 
#matriz dada na leitura			 
qtd = array(v)
qtd = qtd.T
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    qtd = array(v)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:53:55) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 
#matriz dada na leitura			
			 
qtd = array(v)
qtd = qtd.T
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 6
    qtd = array(v)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:54:32) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 
#matriz dada na leitura			
qtd = qtd.T
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(alim), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    qtd = qtd.T
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:55:06) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 
#matriz dada na leitura			
qtd = qtd.T
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    qtd = qtd.T
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:55:31) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2,1,4], [1,2,0], [2,3,2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-18 12:56:02) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.586945
-- ERROR:
  File "/home/codebench/codes/1838/2602/main.py", line 5
    a = array([[2,1,4], [1,2,0], [2,3,2]])
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-18 12:56:04) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2,1,4], [1,2,0], [2,3,2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:17:43) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2,1,4], [1,2,0], [2,3,2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:18:04) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2,1,4], [1,2,0], [2,3,2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2,1,4], [1,2,0], [2,3,2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:18:41) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
			 
p = dot(inv(a), qtd.T)

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))			 
			
#nome da bacteria com menor populacao
if (p[0] == max(p)):
	print("estafilococo")
elif (p[1] == max(p)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:29:44) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:33:13) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao

-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:36:18) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:50:23) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:52:25) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:52:34) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:00:48) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:00:58) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.718328
-- ERROR:
  File "/home/codebench/codes/1838/2602/main.py", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:00:59) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:01:51) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))		 	
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
v = v.T
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 5
    a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:02:25) 
-- CODE:
from numpy import*
from numpy.linalg import *
v = array(eval(input("Matriz: "))	
v = v.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 4
    v = v.T
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:02:45) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: "))	
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 4
    v = vet.T
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:03:24) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: "))	
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 4
    v = vet.T
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:04:59) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: "))	
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
File "XXXX", line 4
    v = vet.T
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:05:28) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:05:38) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.15104
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
estafilococo
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
salmonela
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
estafilococo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:05:43) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.838628
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
estafilococo
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
salmonela
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
estafilococo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:05:48) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == max(qtd)):
	print("estafilococo")
elif (qtd[1] == max(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:06:20) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == min(qtd)):
	print("estafilococo")
elif (qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:06:45) 
-- CODE:
from numpy import*
from numpy.linalg import *
vet = array(eval(input("Matriz: ")))
v = vet.T
#alimentos
a = array([[2, 1, 4], [1, 2, 0], [2, 3, 2]])
qtd = dot(inv(a), v)
#nomes e quantidades
print("estafilococo: ", round(qtd[0], 1))
print("salmonela: ", round(qtd[1], 1))
print("coli: ", round(qtd[2], 1))
#menor populacao
if (qtd[0] == min(qtd)):
	print("estafilococo")
elif (qtd[1] == min(qtd)):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.05497
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
