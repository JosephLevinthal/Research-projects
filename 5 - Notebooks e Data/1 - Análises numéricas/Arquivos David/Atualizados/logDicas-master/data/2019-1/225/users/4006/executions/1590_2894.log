== TEST (2019-03-20 14:59:22) 
-- CODE:
var = 10
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("10))

# Calculo do valor a ser pago, incluindo o frete:
total =10+45

# Impressao do valor total:
print(55)
-- ERROR:
File "XXXX", line 5
    var = float(input("10))
                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:00:12) 
-- CODE:
var = input("10 reais")
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total =10+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input(10))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:00:17) 
-- CODE:
var = input("10 reais")
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total =10+45

# Impressao do valor total:
print()
-- EXECUTION TIME:
0.15795
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2894/main.py", line 5, in <module>
    var = float(input(10))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:00:20) 
-- CODE:
var = input("10 reais")
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total =10+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input(10))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:01:00) 
-- CODE:
var = input("10 reais")
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:01:19) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:01:24) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print()
-- EXECUTION TIME:
0.176295
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:

-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:

-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:02:37) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:03:12) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print((input))
-- OUTPUT:
<built-in function input>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:03:15) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print((input))
-- EXECUTION TIME:
0.168172
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
<built-in function input>
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
<built-in function input>
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
<built-in function input>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:04:33) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total =var*8+45

# Impressao do valor total:
print()
-- OUTPUT:
<built-in function input>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:04:51) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total = var*8+45

# Impressao do valor total:
print()
-- OUTPUT:
<built-in function input>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:04:54) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total = var*8+45

# Impressao do valor total:
print()
-- EXECUTION TIME:
0.147171
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:

-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:

-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:05:46) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:05:51) 
-- CODE:

# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.146383
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 14:28:01) 
-- CODE:
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input())

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
