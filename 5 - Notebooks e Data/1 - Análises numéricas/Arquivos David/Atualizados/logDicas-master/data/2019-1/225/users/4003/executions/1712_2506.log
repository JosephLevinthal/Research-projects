== SUBMITION (2019-05-14 19:55:20) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.675593
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:56:35) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.707648
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:57:58) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.676212
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:59:00) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 19:59:17) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.593962
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:00:27) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.526616
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:00:31) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
-- EXECUTION TIME:
0.413463
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:02:36) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
	
if(qt >= 0):
	print("MAXIMO")
elif(qt <= 0):
	print("ZERO")

print(t)
-- EXECUTION TIME:
0.127875
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:02:40) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
	
if(qt >= 0):
	print("MAXIMO")
elif(qt <= 0):
	print("ZERO")

print(t)
-- EXECUTION TIME:
0.2141
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:03:06) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
	
if(qt >= 0):
	print("MAXIMO")
elif(qt <= 0):
	print("ZERO")

print(t)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:03:11) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
	
if(qt >= 0):
	print("MAXIMO")
elif(qt <= 0):
	print("ZERO")

print(t)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:03:24) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 2 * qv):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1
	
if(qt >= 0):
	print("MAXIMO")
elif(qt <= 0):
	print("ZERO")

print(t)
-- EXECUTION TIME:
0.138591
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:25:25) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

	if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.182137
-- ERROR:
  File "/home/codebench/codes/1712/2506/main.py", line 15
    print("LIMITE")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:25:27) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

	if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- ERROR:
File "XXXX", line 15
    print("LIMITE")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:26:46) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

	if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.159935
-- ERROR:
  File "/home/codebench/codes/1712/2506/main.py", line 15
    print("LIMITE")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:28:24) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

	if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.139319
-- ERROR:
  File "/home/codebench/codes/1712/2506/main.py", line 15
    print("LIMITE")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:28:25) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

	if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- ERROR:
File "XXXX", line 15
    print("LIMITE")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:28:39) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.194301
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:28:51) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:29:07) 
-- CODE:
qv = int(input())
ql = int(input())
pv = float(input())
pl = float(input())

t = 0

while(ql < 12000) and (q1 > 0):
	ql = ql + ((ql * pl) / 100)
	qv = qv + ((qv * pv) / 100)

	t = t + 1

if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.181998
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2506/main.py", line 4, in <module>
    pl = float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:29:45) 
-- CODE:
qt = int(input())
pt = float(input())
qv = int(input())

t = 0

while(qt < 12000 and qt > 0):
	qt = qt + ((qt * pt) / 100) - qv
	t = t + 1
	
if(qt >= 12000):
	print("LIMITE")
elif(qt <= 0):
	print("EXTINCAO")

print(t)
-- EXECUTION TIME:
0.202617
-- TEST CASE 1:
---- input:
1234
6
135
---- correct output:
EXTINCAO
14
---- user output:
EXTINCAO
14
-- TEST CASE 2:
---- input:
579
37
26
---- correct output:
LIMITE
11
---- user output:
LIMITE
11
-- TEST CASE 3:
---- input:
6789
45
2345
---- correct output:
LIMITE
4
---- user output:
LIMITE
4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
