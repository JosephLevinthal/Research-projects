== TEST (2019-04-10 12:56:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("")
if (cervo):
	m = "cervo eh patrono do Harry Potter"
else :
	m = "nao eh patrono do Harry Potter"
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:56:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("")
if (cervo):
	m = "cervo eh patrono do Harry Potter"
else :
	m = "nao eh patrono do Harry Potter"
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:56:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("")
if (cervo):
	m = "cervo eh patrono do Harry Potter"
else :
	m = "nao eh patrono do Harry Potter"
print(m)
-- EXECUTION TIME:
0.207146
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 5, in <module>
    if (cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:57:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == cervo):
	m = "cervo eh patrono do Harry Potter"
else :
	m = "nao eh patrono do Harry Potter"
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (var == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:00:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == cervo):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = ("nao eh patrono do Harry Potter")
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (var == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:01:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = ("nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:01:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = ("nao eh patrono do Harry Potter")
print(m)
-- EXECUTION TIME:
0.232193
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:01:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (entrada +"nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:01:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (entrada +"nao eh patrono do Harry Potter")
print(m)
-- EXECUTION TIME:
0.177202
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:02:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (entrada +"nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:02:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (entrada +"nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:03:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (var+"nao eh patrono do Harry Potter")
print(m)
-- EXECUTION TIME:
0.222203
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:03:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (var+"nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:03:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (var+"nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:03:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (var+" ""nao eh patrono do Harry Potter")
print(m)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:03:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = input("nome:")
if (var == "cervo"):
	m = ("cervo eh patrono do Harry Potter")
else :
	m = (var+" ""nao eh patrono do Harry Potter")
print(m)
-- EXECUTION TIME:
0.210928
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
