== SUBMITION (2019-06-12 12:58:34) 
-- CODE:
base = in(input("base: "))
for i in range(0,base):
	print(("*"*(base-1)) + ("o"*(base-1)))
-- EXECUTION TIME:
0.723566
-- ERROR:
  File "/home/codebench/codes/1798/2568/main.py", line 1
    base = in(input())
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 12:59:21) 
-- CODE:
base = in(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + (2*i) + ("o"*(base-i)))
-- EXECUTION TIME:
0.691305
-- ERROR:
  File "/home/codebench/codes/1798/2568/main.py", line 1
    base = in(input())
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 12:59:41) 
-- CODE:
base = in(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + (2*i)) + ("o"*(base-i)))
-- EXECUTION TIME:
0.741846
-- ERROR:
  File "/home/codebench/codes/1798/2568/main.py", line 1
    base = in(input())
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:00:03) 
-- CODE:
base = in(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + ("o"(2*i)) + ("o"*(base-i))
-- EXECUTION TIME:
0.906941
-- ERROR:
  File "/home/codebench/codes/1798/2568/main.py", line 1
    base = in(input())
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:00:13) 
-- CODE:
base = in(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + ("o"(2*i)) + ("o"*(base-i)))
-- EXECUTION TIME:
0.556552
-- ERROR:
  File "/home/codebench/codes/1798/2568/main.py", line 1
    base = in(input())
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:00:35) 
-- CODE:
base = int(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + ("o"(2*i)) + ("o"*(base-i)))
-- EXECUTION TIME:
0.948536
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1798/2568/main.py", line 3, in <module>
    print(("*"*(base-i)) + ("o"(2*i)) + ("o"*(base-i)))
TypeError: 'str' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:01:01) 
-- CODE:
base = int(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + ("o"(2*i)) + ("*"*(base-i)))
-- EXECUTION TIME:
0.813124
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1798/2568/main.py", line 3, in <module>
    print(("*"*(base-i)) + ("o"(2*i)) + ("*"*(base-i)))
TypeError: 'str' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:01:19) 
-- CODE:
base = int(input("base: "))
for i in range(0,base):
	print(("*"*(base-i)) + ("o"*(2*i)) + ("*"*(base-i)))
-- EXECUTION TIME:
0.709966
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
