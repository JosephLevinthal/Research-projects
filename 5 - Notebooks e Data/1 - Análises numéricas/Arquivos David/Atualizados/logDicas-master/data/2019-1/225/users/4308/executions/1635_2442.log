== SUBMITION (2019-04-14 18:38:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 4 ")

if (num 4 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.14069
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 4 % 2 == 0)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:39:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 4 ")

if (num 4 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- EXECUTION TIME:
0.201302
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 4 % 2 == 0)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:39:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 4 ")

if (num 4 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num 4 % 2 == 0)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:41:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- EXECUTION TIME:
0.14007
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 == 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:41:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num 22 % 2 == 0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:42:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:42:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- EXECUTION TIME:
0.199721
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:05:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- EXECUTION TIME:
0.283387
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:06:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:06:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num % 2 = 0)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:06:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num  % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num  % 2 = 0)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:09:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- ERROR:
File "XXXX", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:09:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print("par")

-- EXECUTION TIME:
0.173201
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:10:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( "par" )

-- EXECUTION TIME:
0.136832
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:10:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.23864
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 = 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:10:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.138959
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 = 0)
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:10:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num  % 2 = 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.133505
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num  % 2 = 0)
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:10:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num  % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.195121
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num  % 2 == 0)
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:11:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: 22 ")

if (num 22 % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( par )

-- EXECUTION TIME:
0.159789
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num 22 % 2 == 0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:27:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if (num  % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.205058
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num  % 2 == 0)
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:27:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num  % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.183712
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    mensagem = "Par"
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:27:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num  % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.144315
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    mensagem = "Par"
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:13:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.164997
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    mensagem = "Par"
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:13:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.168146
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    mensagem = "Par"
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:14:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num % 2 == 0)
	print (mensagem) = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.251188
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    print (mensagem) = "Par"
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:14:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: ")

if (num % 2 == 0)
	print (mensagem) = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.184813
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    print (mensagem) = "Par"
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:18:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0)
print (mensagem) = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.144621
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:18:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0)
print (mensagem) = "Par"
else
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.126978
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:19:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
print (mensagem) = "Par"
else:
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.142648
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    print (mensagem) = "Par"
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:19:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
print (mensagem) = "Par"
else:
	mensagem = "Impar"

print( mensagem )

-- EXECUTION TIME:
0.154177
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    print (mensagem) = "Par"
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:20:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
 print (mensagem) = "Par"
else:
	mensagem = "Impar"

 print( mensagem )

-- EXECUTION TIME:
0.17991
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print( mensagem )
                    ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print( mensagem )
	

-- EXECUTION TIME:
0.210821
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print( mensagem )
                    ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.132503
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.135813
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.194398
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.257288
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else:
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.425782
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.188631
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:29:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.227254
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:29:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.208172
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:29:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0):
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- ERROR:
File "XXXX", line 12
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0322888
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0301478
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0267739
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.024766
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0314031
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.035193
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0236399
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.032022
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.027458
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.023977
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0233479
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.0268571
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.032074
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)
	

-- EXECUTION TIME:
0.028661
-- ERROR:
Error response from daemon: Container 7e9d62c677c059d421ac0198c8371203ab8d651d4469b686ea5b55a312632995 is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:03:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu
num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)	

-- EXECUTION TIME:
0.146625
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 11
    print(mensagem)	
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:03:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu
num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)	

-- EXECUTION TIME:
0.171858
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 11
    print(mensagem)	
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:04:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)	

-- EXECUTION TIME:
0.121984
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 11
    print(mensagem)	
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:16:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
num = float(input("Digite um numero: "))

if (num % 2 == 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)	
endif

-- EXECUTION TIME:
0.153522
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 11
    print(mensagem)	
                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:17:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
num = float(input("Digite um numero: "))

if (num % 2 = 0) :
   mensagem = "Par"
   print(mensagem)
else :
	mensagem = "Impar"
   print(mensagem)	
endif

-- EXECUTION TIME:
0.212905
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 6
    if (num % 2 = 0) :
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:22:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
num = float(input("Digite um numero: "))

if (num % 2 = 0) :
   print("Par")
else :
	print("Impar")


-- EXECUTION TIME:
0.224978
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 6
    if (num % 2 = 0) :
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:23:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
num = float(input("Digite um numero: "))

if (num % 2 = 0) :
   print("par")
else :
	print("impar")


-- EXECUTION TIME:
0.194788
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 6
    if (num % 2 = 0) :
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:26:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
A = float(input("Digite um numero: "))
num = A % 2
if (num = 0) :
   print("par")
else :
	print("impar")


-- EXECUTION TIME:
0.187175
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 6
    if (num = 0) :
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 23:27:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
A = float(input("Digite um numero: "))
num = A % 2
if (num == 0) :
   print("par")
else :
	print("impar")


-- EXECUTION TIME:
0.170206
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
