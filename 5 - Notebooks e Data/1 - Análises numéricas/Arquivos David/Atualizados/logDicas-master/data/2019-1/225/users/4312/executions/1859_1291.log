== TEST (2019-06-26 14:08:37) 
-- CODE:
from numpy import*
from numpy.linalg import*
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

z = mat.T
x = inv(mat, z)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if 
-- ERROR:
File "XXXX", line 18
    if 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:08:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

z = mat.T
x = inv(mat, z)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:10:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = inv(mat, tec)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:11:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))


-- ERROR:
File "XXXX", line 12
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:14:25) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 14
    print("regular: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:14:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 14
    print("regular: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:14:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 14
    print("regular: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:15:41) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)


print(round("regular: ", 0))
print(round("ortopedico: ", 0))
print(round("infantil: ", 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 14
    print(round("regular: ", 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:15:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)


print(round("regular: ", 0))
print(round("ortopedico: ", 0))
print(round("infantil: ", 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 14
    print(round("regular: ", 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:15:51) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:16:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(mat)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:16:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(mat)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:16:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(mat)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:16:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(mat)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:16:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:18:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec)
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 12
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:19:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:19:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(round("regular: ", 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:20:43) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 16
    print("ortopedico: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:21:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(("regular: ", round(x, 0))
print(("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 16
    print(("ortopedico: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:21:20) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(("regular: ", round(x, 0)))
print(("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
File "XXXX", line 17
    print("infantil: ", round(x, 0))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:21:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(("regular: ", round(x, 0)))
print(("ortopedico: ", round(x, 0)))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:21:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(("regular: "), round(x, 0))
print(("ortopedico: ", round(x, 0)))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:22:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))
print(x)


print(round("regular: ", 0))
print(("ortopedico: ", round(x, 0)))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:23:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print(round("regular: ", 0))
print(("ortopedico: ", round(x, 0)))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:23:29) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print("regular: ")
print(("ortopedico: ", round(x, 0)))
print("infantil: ", round(x, 0))

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:23:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[i] == min(x):
	  print("regular")
if x[i] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:24:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:24:33) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[0] == min(mat):
	  print("regular")
if x[1] == min(mat):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:25:45) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = ((inv(mat), tec))

print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:26:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = dot(inv(mat), tec)

print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:27:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = dot(inv(mat), tec)
print(x)
print("regular: ")
print("ortopedico: ")
print("infantil: ")

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:28:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = dot(inv(mat), tec)
print(x)
print("regular: ", round(x, 0))
print("ortopedico: ", round(x, 0))
print("infantil: ", round(x, 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:28:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = dot(inv(mat), tec)
print(x)
print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:38:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = mat.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:43:34) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:43:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
1.17979
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:43:57) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:43:57) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
1.7003
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:43:58) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.39726
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:43:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:43:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
3.69069
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
Insira os valores recebidos dos fornecedores: regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
3.94243
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1859/1291/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.17089
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
7.71899
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
8.39451
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:44:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.16815
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ", round(x[0], 0))
print("ortopedico: ", round(x[1], 0))
print("infantil: ", round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.47409
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
Insira os valores recebidos dos fornecedores: regular:  1212.0
ortopedico:  3265.0
infantil:  9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular:  2532.0
ortopedico:  1850.0
infantil:  3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular:  9650.0
ortopedico:  7485.0
infantil:  1580.0
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:44:34) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular: ",round(x[0], 0))
print("ortopedico: ",round(x[1], 0))
print("infantil: ",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:44:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:45:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:06) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
1.78333
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:45:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:45:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.29291
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
3.19627
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:18) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
4.45303
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
7.87449
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
9.28404
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:25) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
7.66515
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:29) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.70635
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:30) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.59783
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:34) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.34806
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
3.61418
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1859/1291/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.26266
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:47) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.75451
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
5.91833
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.13376
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.90896
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
6.82843
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:51) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.55227
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1859/1291/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:46:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
1.63375
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:46:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.13523
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
infantil
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:46:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- EXECUTION TIME:
2.67344
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:46:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:46:16) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:46:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
else:
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:05) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
1.11668
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:18) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
4.66171
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
3.80957
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
6.31264
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
Insira os valores recebidos dos fornecedores: regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
8.21483
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:

-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
8.46646
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
Insira os valores recebidos dos fornecedores: regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:47:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
1.37045
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
1.93229
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:47:54) 
-- CODE:
from numpy import*
from numpy.linalg import*
tec = array(eval(input("Insira os valores recebidos dos fornecedores: ")))
mat = array([
[50, 60, 40], 
[30, 40, 20],
[10, 15, 8]
])

tec = tec.T
x = dot(inv(mat), tec)

print("regular:",round(x[0], 0))
print("ortopedico:",round(x[1], 0))
print("infantil:",round(x[2], 0))

if x[0] == min(x):
	  print("regular")
if x[1] == min(x):
	  print("ortopedico")
if x[2] == min(x):
	  print("infantil")
-- EXECUTION TIME:
0.906061
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
