== TEST (2019-04-08 15:23:44) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
if (preco > pagamento):
x = preco - pagamento
y = pagamento - preco
   print("falta" x)
else:
	print("troco de" y)
	
-- ERROR:
File "XXXX", line 4
    x = preco - pagamento
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:25:19) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
if (preco > pagamento):
x = preco - pagamento
y = pagamento - preco
   print("falta" x)
else:
	print("troco de" y)
	
-- ERROR:
File "XXXX", line 4
    x = preco - pagamento
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:25:22) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
if (preco > pagamento):
x = preco - pagamento
y = pagamento - preco
   print("falta" x)
else:
	print("troco de" y)
	
-- ERROR:
File "XXXX", line 4
    x = preco - pagamento
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:27:20) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
if (preco > pagamento):
x = preco - pagamento
y = pagamento - preco
   print("falta", x)
else:
	print("troco de", y)
	
-- ERROR:
File "XXXX", line 4
    x = preco - pagamento
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:29:31) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print("falta", x)
else:
	print("troco de", y)
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:29:41) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print("falta", x)
else:
	print("troco de", y)
	
-- EXECUTION TIME:
0.138231
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:30:23) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print(round("falta", x))
else:
	print(round("troco de", y))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta", x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:30:39) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print(round("falta", x))
else:
	print(round("troco de", y))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta", x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:30:58) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print(round("Falta", x))
else:
	print(round("Troco de", y))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("Falta", x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:31:33) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
   print("Falta", x)
else:
	print(round("Troco de", y))
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:32:45) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
z = round(y,2)
if (preco > pagamento):
   print("Falta", x)
else:
	print("Troco de", z)
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:32:49) 
-- CODE:
preco = float(input("preco e:"))
pagamento = float(input("pagamento e:"))
x = preco - pagamento
y = pagamento - preco
z = round(y,2)
if (preco > pagamento):
   print("Falta", x)
else:
	print("Troco de", z)
	
-- EXECUTION TIME:
0.190863
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
