== TEST (2019-04-28 19:44:23) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif((h < h - r) and (h > r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round(vol * 1000), 3)), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 19
    elif((h < h - r) and (h > r):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:45:05) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif((h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round(vol * 1000), 3)), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 19
    elif((h < h - r and h>r):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:45:12) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round(vol * 1000), 3)), "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.172825
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 24
    print("Volume", (round(vol * 1000), 3)), "litros")
                                                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:45:12) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round(vol * 1000), 3)), "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    print("Volume", (round(vol * 1000), 3)), "litros")
                                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:46:03) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")
		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.219227
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:46:07) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")
		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:46:30) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")
		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.137613
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:47:14) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:47:34) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.193984
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:42:26) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < h - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:45:19) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:45:42) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.148811
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:45:57) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:47:27) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", ((vol * 1000), 3)) "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 18
    print("Volume", ((vol * 1000), 3)) "litros")
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:47:50) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:31:26) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))

print("Entradas:", H, ",", h, ",", r)

from math import *

if ((H > 0) and (h >0) and (r > 0) and (H > h) and (H > 2*r)):
	if (h == r):
		vol = ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume", (round ((vol * 1000), 3)), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume", (vol * 1000), "litros")
	elif(h < H - r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4 / 3) * pi * (r ** 3)) / 2
		print("Volume", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H - 2 * r) + 4/3 * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume", (round((vol* 1000), 3)), "litros")		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.126045
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 00:31:35) 
-- CODE:
H = float(input("digite H: "))
h = float(input("digite h: "))
r = float(input("digite r: "))
print("Entradas:", H, ",", h, ",", r)

from math import*

if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3) * pi *(r ** 3))/ 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif (h < r):
		vol = (pi / 3) * (h ** 2) * (3 * r - h)
		print("Volume:",(vol * 1000), "litros")
	elif (h == H - r):
		vol = round(((pi * (r ** 2) * (H - 2 *r)) + (2 / 3) *  pi * (r ** 3)), 3)
		print("Volume:", (round((vol * 1000), 3)), "litros")
	elif(h<H-r and h>r):
		vol = pi * (r ** 2) * (h - r) + ((4/3) * pi * (r ** 3)) / 2
		print("Volume:", (round((vol * 1000), 3)), "litros")
	else: 
		vol = pi *(r ** 2) * (H- 2 * r) + (4/3) * pi * (r ** 3)-(pi / 3) *((H- h) ** 2) * (3 * r -(H-h))
		print("Volume:", (round((vol* 1000), 3)), "litros")	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.141563
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
