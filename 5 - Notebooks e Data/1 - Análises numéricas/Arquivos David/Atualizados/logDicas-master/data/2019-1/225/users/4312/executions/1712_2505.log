== TEST (2019-05-13 15:55:35) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0
 while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1
print(round(x, 10))
-- ERROR:
File "XXXX", line 7
    while(i < k):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:55:43) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0
while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1
print(round(x, 10))
-- OUTPUT:
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:56:12) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0
while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

		print(round(x, 10))
-- OUTPUT:
1.0
0.0
0.5
0.3333333333
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:56:32) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0
while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

		print(round(x, 10))
-- OUTPUT:
1.0
0.0
0.5
0.3333333333
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:56:48) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0
while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:58:10) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:58:24) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

print(round(x, 10))
-- EXECUTION TIME:
0.211462
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.375
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.3333333333
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:58:26) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

print(round(x, 10))
-- EXECUTION TIME:
0.147907
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.375
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.3333333333
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:58:42) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(i)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.375
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:00:07) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(k)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.0083333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:01:57) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.8414710097
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:02:54) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

x = 0
i = 0

while(i < k):
		x = x + (-1)**i / factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
0.8414710097
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:06:22) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))
print(x)
x = 0
print(x)
i = 0

while(i < k):
		x = x + (-1)**(i+1) * x** / factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- ERROR:
File "XXXX", line 10
    x = x + (-1)**(i+1) * x** / factorial(2 * i + 1)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:06:34) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))
print(x)
x = 0
print(x)
i = 0

while(i < k):
		x = x + (-1)**(i+1) *  x/ factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
1.5707963267948966
0
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:09:26) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0

while(i < k):
		y = y + (-1)**(i+1) *  x **(2 * i + 1)/ factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- EXECUTION TIME:
0.139312
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.5707963268
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.5707963268
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.0471975512
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:09:28) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0

while(i < k):
		y = y + (-1)**(i+1) *  x **(2 * i + 1)/ factorial(2 * i + 1)
		i = i + 1

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:10:25) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

while(i < k):
		y = y + (-1)**(i+1) *  x **(c)/ factorial(c)
		i = i + 1
		c = c + 2

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:10:48) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

while(i < k):
		y = y + (-1)**(i+1) *  (x **(c)/ factorial(c))
		i = i + 1
		c = c + 2

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:11:03) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

while(i < k):
	y = y + (-1)**(i+1) *  (x **(c)/ factorial(c))
	i = i + 1
	c = c + 2

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:13:34) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

aux=1
while(i < k):
	y = y + aux *  (x **(c)/ factorial(c))
	i = i + 1
	c = c + 2
	if(aux == 1):
		aux = -1
	else:
		aux = 1

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:14:25) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

aux=1
while(i < k):
	y = y + aux *  ((x **(c))/ factorial(c))
	i = i + 1
	c = c + 2
	if(aux == 1):
		aux = -1
	else:
		aux = 1

print(round(x, 10))
-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 16:14:46) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

aux=1
while(i < k):
	y = y + aux *  ((x **(c))/ factorial(c))
	i = i + 1
	c = c + 2
	if(aux == 1):
		aux = -1
	else:
		aux = 1

print(round(y, 10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 16:15:00) 
-- CODE:
from math import*
x = eval(input("Insira o angulo: "))
k = int(input("Insira o numero de termos: "))

y = 0
i = 0
c = 1

aux=1
while(i < k):
	y = y + aux *  ((x **(c))/ factorial(c))
	i = i + 1
	c = c + 2
	if(aux == 1):
		aux = -1
	else:
		aux = 1

print(round(y, 10))
-- EXECUTION TIME:
0.135283
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
