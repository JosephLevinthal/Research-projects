== TEST (2019-05-29 11:21:43) 
-- CODE:
from numpy import *
p = array(eval(input("")))
a = 0
b = 0
c = 0
for i in p:
	if i>=10:
		a+=1
	elif i>=5 and i<10:
		b+=1
	else:
		c+=1
print(a,'\n',b,'\n',c,'\n')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:21:57) 
-- CODE:
from numpy import *
p = array(eval(input("")))
a = 0
b = 0
c = 0
for i in p:
	if i>=10:
		a+=1
	elif i>=5 and i<10:
		b+=1
	else:
		c+=1
print(a,'\n',b,'\n',c')
-- ERROR:
File "XXXX", line 13
    print(a,'\n',b,'\n',c')
                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:22:04) 
-- CODE:
from numpy import *
p = array(eval(input("")))
a = 0
b = 0
c = 0
for i in p:
	if i>=10:
		a+=1
	elif i>=5 and i<10:
		b+=1
	else:
		c+=1
print(a,'\n',b,'\n',c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:22:32) 
-- CODE:
from numpy import *
p = array(eval(input("")))
a = 0
b = 0
c = 0
for i in p:
	if i>=10:
		a+=1
	elif i>=5 and i<10:
		b+=1
	else:
		c+=1
print(a)
print(b)
print(c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 11:22:40) 
-- CODE:
from numpy import *
p = array(eval(input("")))
a = 0
b = 0
c = 0
for i in p:
	if i>=10:
		a+=1
	elif i>=5 and i<10:
		b+=1
	else:
		c+=1
print(a)
print(b)
print(c)
-- EXECUTION TIME:
0.416936
-- TEST CASE 1:
---- input:
[8.2,5.4,1.3,20,18.4]
---- correct output:
2
2
1
---- user output:
2
2
1
-- TEST CASE 2:
---- input:
[8.2,5.4,5.3,20,18.4]
---- correct output:
2
3
0
---- user output:
2
3
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
