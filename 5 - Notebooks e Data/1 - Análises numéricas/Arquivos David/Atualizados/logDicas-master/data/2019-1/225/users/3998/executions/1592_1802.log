== TEST (2019-04-15 17:46:54) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*(vo/3))
print(danos)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(danos)
NameError: name 'danos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:49:55) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*(vo/3))
print (dano)
-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:50:42) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*(vo/3)))
print (dano)
-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:52:34) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi**(vo/3)))
print (dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:52:34) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi**(vo/3)))
print (dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:52:35) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi**(vo/3)))
print (dano)
-- EXECUTION TIME:
0.105285
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12.105672378589148
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15.34682997614102
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.700659865061313
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:52:35) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi**(vo/3)))
print (dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:52:45) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi**(vo/3)))
print (dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:58:28) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print (dano - Pv)
-- OUTPUT:
-191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:58:58) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print int(dano - Pv)
-- ERROR:
File "XXXX", line 6
    print int(dano - Pv)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:59:15) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print(int(dano - Pv)
-- ERROR:
File "XXXX", line 7
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:59:25) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print(int(dano - Pv))
-- OUTPUT:
-191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:00:01) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print(int(Pv-dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:00:14) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print(int(Pv-dano))
-- EXECUTION TIME:
0.124623
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:00:49) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*(vo/3)))
print(int(Pv-dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:01:35) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*(vo/3)))
print(int(Pv-dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:01:52) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*(vo/3)))
print(int(Pv-dano))
-- EXECUTION TIME:
0.22207
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:02:36) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*(vo/3)))
print(int(Pv-dano))
-- EXECUTION TIME:
0.201723
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:02:45) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = (sqrt(5*V)+(pi*vo/3))
print(int(Pv-dano))
-- EXECUTION TIME:
0.166043
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:03:00) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi*vo/3)
print(int(Pv-dano))
-- EXECUTION TIME:
0.130893
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:03:21) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi**vo/3)
print(int(Pv-dano))
-- EXECUTION TIME:
0.190636
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:03:26) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
dano = sqrt(5*V)+(pi**vo/3)
print(int(Pv-dano))
-- EXECUTION TIME:
0.183091
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:04:43) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi**vo/3)
print(Pv-dano)
-- OUTPUT:
-122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:04:52) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi**vo/3)
print(Pv-dano)
-- EXECUTION TIME:
0.207228
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122.69913250260117
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:04:54) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi**vo/3)
print(Pv-dano)
-- EXECUTION TIME:
0.156503
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122.69913250260117
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496.7167344713036
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:04:56) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi**vo/3)
print(Pv-dano)
-- OUTPUT:
-122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:05:28) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi*vo/3)
print(Pv-dano)
-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:07:02) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi*vo/3)
f= int(Pv - dano)
print(f)
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:07:16) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi*vo/3)
f= int(Pv - dano)
print(f)
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:07:43) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi*vo/3)
f= int(Pv - dano)
print(f)
-- EXECUTION TIME:
0.215625
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:08:39) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))
pi = 3

dano = sqrt(5*V)+(pi*vo/3)
f= int(Pv - dano)
print(f)
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-17 13:44:49) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi*vo/3)
f= Pv - int(dano)
print(f)
-- EXECUTION TIME:
0.177177
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-17 13:45:42) 
-- CODE:
from math import*
Pv = int(input("pontos de vida iniciais: "))
V = int(input("valores D1: "))
vo = int(input("valor D2: "))

dano = sqrt(5*V)+(pi**(vo/3))
f= Pv - int(dano)
print(f)
-- EXECUTION TIME:
0.153347
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
