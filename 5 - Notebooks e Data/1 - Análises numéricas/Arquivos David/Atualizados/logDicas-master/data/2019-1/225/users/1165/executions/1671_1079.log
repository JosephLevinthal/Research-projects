== TEST (2019-04-28 08:28:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s* (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Não é um triangulo!")
else:
	print("Não é um triangulo!")
-- OUTPUT:
Não é um triangulo!
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 08:28:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s* (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Não é um triangulo!")
else:
	print("Não é um triangulo!")
-- EXECUTION TIME:
0.160241
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1079/main.py", line 20, in <module>
    print("N\xe3o \xe9 um triangulo!")
UnicodeEncodeError: 'ascii' codec can't encode character '\xe3' in position 1: ordinal not in range(128)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 08:28:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s* (s - a) * (s - b) * (s - c))
		print(area)
	else:
		print("Nao e um triangulo")
else:
	print("Nao e um triangulo")
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- ERROR:
File "XXXX", line 21
    area = sqrt(s * (s-a) * (s-b) * (s-c))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 08:39:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s* (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("nao e um triangulo!")
else:
	print("nao e um triangulo!")
-- OUTPUT:
nao e um triangulo!
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 08:40:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s* (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("nao e um triangulo!")
else:
	print("nao e um triangulo!")
-- EXECUTION TIME:
0.156848
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo!
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
1.9320000000000004
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo!
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 08:41:29) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("nao e um triangulo")
else:
	print("nao e um triangulo")
-- EXECUTION TIME:
0.129257
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
1.9320000000000004
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:51:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("nao e um triangulo")
else:
	print("nao e um triangulo")
-- OUTPUT:
nao e um triangulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:52:44) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("nao e um triangulo")
else:
	print("nao e um triangulo")
-- EXECUTION TIME:
0.197979
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
1.9320000000000004
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
nao e um triangulo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:53:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.131494
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:54:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- ERROR:
File "XXXX", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:54:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if (a + b > c and a + c > b and c + b > a): 
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.205852
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:58:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		print(area)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.14651
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:59:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.165237
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:59:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- ERROR:
File "XXXX", line 18
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:00:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida)
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.137111
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 19
    print("Area: invalida)
                         ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:00:52) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.209916
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:

-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:00:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:01:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0 and b > 0 and c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.224674
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:

-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:01:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.139111
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:

-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:01:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:01:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.116419
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:

-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:02:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, "," b, ",", c)
# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.171592
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:03:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, "," b, ",", c)
# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(are, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.159309
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:04:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, "," b, ",", c)
# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < a+c) and (b < a+c) and (c < b+a)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.179174
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:06:06) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, "," b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b < a+c) and (c < a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.141977
-- ERROR:
  File "/home/codebench/codes/1671/1079/main.py", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:06:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, "," b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b < a+c) and (c < a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- ERROR:
File "XXXX", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:07:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, "," b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b < a+c) and (c < a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- ERROR:
File "XXXX", line 10
    print("Entradas:", a, "," b, ",", c)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:07:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input("Lado 1: "))
b = float(input("Lado 2: "))
c = float(input("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a > 0) and (b > 0) and (c > 0):
	# Testa se medidas correspondem aas de um triangulo
	if ((a < b+c) and (b < a+c) and (c < a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.18106
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
