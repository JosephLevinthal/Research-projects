== TEST (2019-05-14 16:47:19) 
-- CODE:
from math import *
ax=input("angulo :")
k=eval(input("termos :"))

while (-k < ax < k):
	k=1 + 1
	
print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    while (-k < ax < k):
TypeError: '<' not supported between instances of 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:48:13) 
-- CODE:
from math import *
ax=float(input("angulo :"))
k=eval(input("termos :"))

while (-k < ax < k):
	k=1 + 1
	
print(round(k,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax=float(input())
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:49:05) 
-- CODE:
from math import *
ax=float(input((radians()"angulo :"))))
k=eval(input("termos :"))

while (-k < ax < k):
	k=1 + 1
	
print(round(k,4))
-- ERROR:
File "XXXX", line 2
    ax=float(input((radians()"angulo :"))))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:49:19) 
-- CODE:
from math import *
ax=float(input((radians("angulo :"))))
k=eval(input("termos :"))

while (-k < ax < k):
	k=1 + 1
	
print(round(k,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax=float(input((radians("angulo :"))))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:50:34) 
-- CODE:
from math import *
ax=float(input("angulo :")
k=eval(input("termos :"))

while (-k < ax < k):
	x=factorial(ax)
	t= k + 1
	
print(round(x,4))
-- ERROR:
File "XXXX", line 3
    k=eval(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:50:46) 
-- CODE:
from math import *
ax=float(input("angulo :"))
k=eval(input("termos :"))

while (-k < ax < k):
	x=factorial(ax)
	t= k + 1
	
print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax=float(input())
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:51:08) 
-- CODE:
from math import *
ax=float(input("angulo :"))
k=eval(input("termos :"))
x=factorial(ax)
while (-k < ax < k):
	
	t= k + 1
	
print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax=float(input())
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:51:24) 
-- CODE:
from math import *
ax=int(input("angulo :"))
k=eval(input("termos :"))
x=factorial(ax)
while (-k < ax < k):
	
	t= k + 1
	
print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ax=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:51:57) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
x=factorial(x)
while (-k < ax < k):
	
	t= k + 1
	
print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:52:42) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))

while (-k < x < k):
	t=factorial(k)+ 1
	
print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:52:59) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))

while (-k < x < k):
	t=factorial(k)+ 1
	
print(round(x,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:53:18) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))

while (-k < x < k):
	t=factorial(k)+ 0
	
print(round(x,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:54:14) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))

while (-k < x) and (x < k):
	t=0
	x= k + 1
	
print(round(x,10))
-- OUTPUT:
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:55:04) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))

while (-k < x) and (x < k):
	t=0
	x= x + 1
	
print(round(x,10))
-- OUTPUT:
5.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:56:43) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	t=t + 1 / factorial(k)
	
	
print(round(t,10))
-- OUTPUT:
5.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:56:53) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	t=k + 1 / factorial(k)
	
	
print(round(t,10))
-- OUTPUT:
5.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:57:10) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	t=k + 1 / factorial(x)
	
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    t=k + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:57:25) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	t=k + 1 / factorial(x)
	
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    t=k + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:58:07) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	f=k + 1 / factorial(x)
	t= t + 1
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f=k + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:58:28) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k < x) and (x < k):
	f=t + 1 / factorial(x)
	t= t + 1
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f=t + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 16:59:57) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-k <= x) and (x <= +k):
	f=k + 1 / factorial(x)
	t= t + 1
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f=k + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:04:05) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-pi <= x) and (x <= +pi):
	f=x + 1 / factorial(x)
	t= t + 1
	
print(round(t,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f=x + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:16:27) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-pi <= x) and (x <= +pi) and (t < k):
	r= t + 1
	
	
print(round(k,10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f=x + 1 / factorial(x)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:16:34) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
while (-pi <= x) and (x <= +pi) and (t < k):
	t= t + 1
	
	
print(round(k,10))
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:31:49) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
s=1
n=1
y=0
while (-pi <= x) and (x <= +pi) and (t < k):
	t= t + 1
	y= y + (x**n/factorial(n))*s
	n=n+2
	s=s*(-1)
print(round(y,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:32:17) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
s=1
n=1
y=0
while (-pi <= x) and (x <= +pi) and (t < k):
	t= t + 1
	y= y + (x**n/factorial(n))*s
	n=n+2
	s=s*(-1)
print(round(y,10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:37:06) 
-- CODE:
from math import *
x=eval(input("angulo :"))
k=int(input("termos :"))
t=0
s=1
n=1
y=0
while (-pi <= x) and (x <= +pi) and (t < k):
	t=t + 1
	y=y + (x**n/factorial(n))*s
	n=n + 2
	s=s * (-1)
print(round(y,10))
-- EXECUTION TIME:
0.210132
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
