== TEST (2019-04-29 12:33:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:36:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(a == b) or (c == d):
	print("Ha intersecao")
elif(a != b) and (c != d):
	print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:36:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(a == b) or (c == d):
	print("Ha intersecao")
elif(a != b) and (c != d):
	print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.158517
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:38:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
if(a == b) or (c == d):
	print("Ha intersecao")
elif(a != b) and (c != d):
	print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    if(a == b) or (c == d):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a == b) or (c == d):
		print("Ha intersecao")
	elif(a != b) and (c != d):
		print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:39:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a == b) or (c == d):
		print("Ha intersecao")
	elif(a != b) and (c != d):
		print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.114433
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a >= b) or (c == d):
		print("Ha intersecao")
	elif(a != b) and (c != d):
		print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:42:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a >= b) or (c == d):
		print("Ha intersecao")
	elif(a != b) and (c != d):
		print("Nao ha intersecao")
	else:
		print("Entradas invalidas")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.194809
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:47:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a >= c) or (a <= d):
		print("Ha intersecao")
	elif(b >= c) and (b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Ha intersecao")
	elif(d >= a) and (d <= b):
		print("Nao ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:47:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)
if(b > a) and (d > c):
	if(a >= c) or (a <= d):
		print("Ha intersecao")
	elif(b >= c) and (b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Ha intersecao")
	elif(d >= a) and (d <= b):
		print("Nao ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.134084
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)

if(b > a) and (d > c):
	if(a >= c) and (a <= d):
		print("Ha intersecao")
	elif(b >= c) and (b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Ha intersecao")
	elif(d >= a) and (d <= b):
		print("Nao ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:48:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
d = float(input("d:"))
print("Intervalo 1:", a ,",", b)
print("Intervalo 2:", c ,",", d)

if(b > a) and (d > c):
	if(a >= c) and (a <= d):
		print("Ha intersecao")
	elif(b >= c) and (b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Ha intersecao")
	elif(d >= a) and (d <= b):
		print("Nao ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.211052
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
