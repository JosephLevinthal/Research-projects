== TEST (2019-04-15 13:30:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p!=cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mesagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p!=cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:31:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p!=cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p!=cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:31:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p!=cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- EXECUTION TIME:
0.186734
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 5, in <module>
    if (p!=cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:31:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p!=cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p!=cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:31:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p != cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p != cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:32:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == cervo):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (p == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:32:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem="eh patrono de harry potter "
else:
	mensagem="nao eh patrono de harry potter"
print(p + mensagem)
-- OUTPUT:
cervoeh patrono de harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:33:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de harry potter "
else:
	mensagem=" nao eh patrono de harry potter"
print(p + mensagem)
-- OUTPUT:
cervo eh patrono de harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:33:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de harry potter "
else:
	mensagem=" nao eh patrono de harry potter"
print(p + mensagem)
-- EXECUTION TIME:
0.163708
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:33:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de Harry Potter "
else:
	mensagem=" nao eh patrono de Harry Potter"
print(p + mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:33:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de Harry Potter "
else:
	mensagem=" nao eh patrono de Harry PCEotter"
print(p + mensagem)
-- EXECUTION TIME:
0.145595
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de Harry PCEotter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:34:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de Harry Potter "
else:
	mensagem=" nao eh patrono de Harry Potter"
print(p + mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:34:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=" eh patrono de Harry Potter "
else:
	mensagem=" nao eh patrono de Harry Potter"
print(p + mensagem)
-- EXECUTION TIME:
0.151334
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:35:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter "
else:
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:35:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter "
else:
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.157791
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:36:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.143737
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:36:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo nao eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:36:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
else:	
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:36:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")
if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
else:	
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.134721
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:44:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")

if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
else:	
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:44:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("patrono:")

if (p == "cervo"):
	mensagem=p +" eh patrono de Harry Potter"
else:	
	mensagem=p +" nao eh patrono de Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.12715
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono de Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:45:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = " nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:45:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = " nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- EXECUTION TIME:
0.1442
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
