== SUBMITION (2019-04-24 14:29:03) 
-- CODE:
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.143746
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:29:07) 
-- CODE:
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:29:19) 
-- CODE:
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- OUTPUT:
entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:31:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
		else:
			if(a==b or a==c or b==c):
				mensagem="isosceles"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.179142
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 14
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:31:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
		else:
			if(a==b or a==c or b==c):
				mensagem="isosceles"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 14
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:31:30) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
			if(a==b or a==c or b==c):
				mensagem="isosceles"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.118153
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:31:33) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
			if(a==b or a==c or b==c):
				mensagem="isosceles"
		else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.218438
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:31:48) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		if(a==b or a==c or b==c):
				mensagem="isosceles"
	else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:31:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		if(a==b or a==c or b==c):
				mensagem="isosceles"
	else:
			if(a==b or a==c or b==c):
				mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.164519
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:32:48) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		if(a==b or a==c or b==c):
				mensagem="isosceles"
	else:
		mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.14967
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:32:56) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		if(a==b or a==c or b==c):
			mensagem="isosceles"
	else:
		mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.161454
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:33:28) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		if(a==b or a==c or b==c):
			mensagem="isosceles"
	   else:
		   mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.146881
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:34:11) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			mensagem="isosceles"
	   else:
		   mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.179633
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:34:37) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.131758
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:34:40) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.187977
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:35:33) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.128758
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:35:36) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:36:19) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.132106
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:36:20) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:36:34) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	      else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.142738
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:36:41) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.152513
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:36:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.119941
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:44:01) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	   else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:44:12) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.168309
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:44:54) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.204677
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 11
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:37:42) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
		if(a==b and b==c):
			mensagem="equilatero"
	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:43:07) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:43:10) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 14:43:14) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 14:43:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.240947
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:31:26) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:31:36) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))
print("entradas:", a, ",", b, ",", c)
if(a>0 and b>0 and c>0):
	if(a>=b+c or b>=a+c or c>=a+b):
		mensagem="invalido"
	else:
			if(a==b and b==c):
			mensagem="equilatero"
	     	else:
		   if(a==b or a==c or b==c):
			   mensagem="isosceles"
	      else:
		      mensagem="escaleno"
else:
	mensagem="invalido"
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 10
    mensagem="equilatero"
           ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:37:38) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a, b, c)

-- OUTPUT:
Entradas: 2.0 4.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:39:40) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:" "," a "," b "," c)

-- ERROR:
File "XXXX", line 5
    print("Entradas:" "," a "," b "," c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:39:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:", "," a "," b "," c)

-- ERROR:
File "XXXX", line 5
    print("Entradas:", "," a "," b "," c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:40:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:", "," ,a ,"," ,b ,"," ,c)

-- OUTPUT:
Entradas: , 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:40:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:" "," ,a ,"," ,b ,"," ,c)

-- OUTPUT:
Entradas:, 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:41:04) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a ,"," ,b ,"," ,c)

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:45:58) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a","b ","c)

-- ERROR:
File "XXXX", line 5
    print("Entradas:",a","b ","c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:46:11) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:48:46) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if(a==b and b==c and a==c):
	print("equilatero")
else:
	print("não é triangulo")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
não é triangulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:49:01) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if(a==b and b==c and a==c):
	print("equilatero")
else:
	print("não é triangulo")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
não é triangulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:49:14) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if(a==b and b==c and a==c):
	print("equilatero")
else:
	print("não é triangulo")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
não é triangulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:49:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if(a==b and b==c and a==c):
	print("equilatero")
else:
	print("nao e triangulo")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
nao e triangulo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:55:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")

if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")

else:
   print("Triangulo escaleno."))

-- ERROR:
File "XXXX", line 20
    print("Triangulo escaleno."))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:56:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")

if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")

else:
   print("Triangulo escaleno.")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:56:09) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")

if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")

else:
   print("Triangulo escaleno.")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:58:10) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")


if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:58:11) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")


if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:58:14) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")


if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 16:58:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")


if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:03:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

elif a!=b or a!=c or b!=c :
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:03:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

elif a!=b or a!=c or b!=c :
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:03:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

elif a!=b or a!=c or b!=c :
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:03:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

elif a!=b or a!=c or b!=c :
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:04:03) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

elif a!=b or a!=c or b!=c :
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("inexistente.")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:05:37) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

else:
	print("escaleno")

if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:06:14) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:06:41) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b ,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")

if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.15182
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de trianulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:09:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

if a==b or b==c or c==a :
   print("isosceles.")

if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.181171
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de trianulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:09:41) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

if a==b or b==c or c==a :
   print("isosceles.")

if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.118828
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de trianulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:12:02) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

elif a==b or b==c or c==a :
   print("isosceles")

elif:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
else a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- ERROR:
File "XXXX", line 13
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:12:31) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

else if a==b or b==c or c==a :
   print("isosceles")

else if:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
else a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.184779
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 10
    else if a==b or b==c or c==a :
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:12:33) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

else if a==b or b==c or c==a :
   print("isosceles")

else if:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
else a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- ERROR:
File "XXXX", line 10
    else if a==b or b==c or c==a :
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:13:00) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
else a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- ERROR:
File "XXXX", line 13
    if:
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:13:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

else:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
else a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- ERROR:
File "XXXX", line 16
    else a>=b+c or b>=c+a or c>=a+b :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:13:50) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

elif a==b or b==c or c==a :
   print("isosceles.")


if a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:14:33) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")
1
elif a==b or b==c or c==a :
   print("isosceles.")


elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.164813
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 10
    elif a==b or b==c or c==a :
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:14:35) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")
1
elif a==b or b==c or c==a :
   print("isosceles.")


elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- ERROR:
File "XXXX", line 10
    elif a==b or b==c or c==a :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:14:51) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

if a==b or b==c or c==a :
   print("isosceles.")


elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:15:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

if a==b or b==c or c==a :
   print("isosceles.")


elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.146256
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de trianulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:15:44) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero.")

if a==b or b==c or c==a :
   print("isosceles.")


elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.146026
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de trianulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:20:43) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:21:24) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
   print("tipo de trianulo: invalido")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.153634
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:21:36) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
-- EXECUTION TIME:
0.134886
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:22:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 :
   print("ivalido")
-- EXECUTION TIME:
0.133979
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:22:47) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- EXECUTION TIME:
0.208525
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:06) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- EXECUTION TIME:
0.134126
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
lado1: lado2: lado3: Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
lado1: lado2: lado3: Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:15) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:23:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- EXECUTION TIME:
0.122028
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:17) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:23:38) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c :
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:25:36) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a!=c:
   print("equilatero")

if a==b or b==c or c==a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:26:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

if a==b or b==c or c!=a :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:27:17) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

if a==b :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:27:37) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:27:50) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:27:59) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

if a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:28:30) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:28:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 and a>=b+c or b>=c+a or c>=a+b :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:29:30) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
if a<=0 or b<=0 or c<=0 :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:29:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
else a<=0 or b<=0 or c<=0 :
   print("invalido")
-- ERROR:
File "XXXX", line 16
    else a<=0 or b<=0 or c<=0 :
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:30:20) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0 :
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:31:12) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")
	
elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:32:06) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:32:30) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:33:17) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b :
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:34:26) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:34:40) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:34:48) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:34:54) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:37:00) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

else a==b or b==c or c==a:
   print("isosceles")

else a!=b or b!=c or a!=c:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

else a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 10
    else a==b or b==c or c==a:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:37:24) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

else if a==b or b==c or c==a:
   print("isosceles")

else if a!=b or b!=c or a!=c:
	print("escaleno")

else if a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

else if a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 10
    else if a==b or b==c or c==a:
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:37:59) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

else a==b or b==c or c==a:
   print("isosceles")

else a!=b or b!=c or a!=c:
	print("escaleno")

else a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 10
    else a==b or b==c or c==a:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:38:26) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

else a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 19
    else a<=0 or b<=0 or c<=0:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:38:37) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:39:33) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
else a!=b or b!=c or a!=c:
	print("escaleno")
-- ERROR:
File "XXXX", line 19
    else a!=b or b!=c or a!=c:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:39:37) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
else a!=b or b!=c or a!=c:
	print("escaleno")
-- ERROR:
File "XXXX", line 19
    else a!=b or b!=c or a!=c:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:39:42) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
ellif a!=b or b!=c or a!=c:
	print("escaleno")
-- ERROR:
File "XXXX", line 19
    ellif a!=b or b!=c or a!=c:
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:39:46) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a!=b or b!=c or a!=c:
	print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:39:49) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a!=b or b!=c or a!=c:
	print("escaleno")
-- EXECUTION TIME:
0.164812
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:39:50) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a!=b or b!=c or a!=c:
	print("escaleno")
-- EXECUTION TIME:
0.258858
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:39:51) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a!=b or b!=c or a!=c:
	print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:40:05) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a!=b or b!=c or a!=c:
	print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:40:34) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif:
	print("escaleno")
-- ERROR:
File "XXXX", line 19
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:40:43) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
else:
	print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:42:45) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 13
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:43:01) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 16
    elif a>=b+c or b>=c+a or c>=a+b :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:43:01) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 16
    elif a>=b+c or b>=c+a or c>=a+b :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:43:01) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else:
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- EXECUTION TIME:
0.122785
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 16
    elif a>=b+c or b>=c+a or c>=a+b :
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:43:12) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else
	print("escaleno")

elif a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
-- ERROR:
File "XXXX", line 13
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:44:19) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:44:52) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>=b+c or b>=c+a or c>=a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:47:32) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)


if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:51:50) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- EXECUTION TIME:
0.171938
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:52:03) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:52:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:52:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- EXECUTION TIME:
0.189111
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:52:19) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:52:32) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")

if a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b or b!=c or a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:54:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")

elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")


-- EXECUTION TIME:
0.138535
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:54:18) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")

elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")


-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 17:58:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")

elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	
elif a+b=c or b+c=a or a+c=b:
	print("invalido")


-- EXECUTION TIME:
0.194025
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 22
    elif a+b=c or b+c=a or a+c=b:
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:58:22) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")

elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	
elif a+b=c or b+c=a or a+c=b:
	print("invalido")


-- ERROR:
File "XXXX", line 22
    elif a+b=c or b+c=a or a+c=b:
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:59:16) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

elif a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b=c or b+c=a or a+c=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- ERROR:
File "XXXX", line 13
    elif a+b=c or b+c=a or a+c=b:
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 17:59:59) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
if a+b=c or b+c=a or a+c=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- ERROR:
File "XXXX", line 13
    if a+b=c or b+c=a or a+c=b:
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:00:05) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
if a+b=c or b+c=a or a+c=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- ERROR:
File "XXXX", line 13
    if a+b=c or b+c=a or a+c=b:
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 18:00:09) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
if a+b=c or b+c=a or a+c=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- EXECUTION TIME:
0.143299
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 13
    if a+b=c or b+c=a or a+c=b:
          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:00:10) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a>b+c or b>c+a or c>a+b :
	print("invalido")

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
if a+b=c or b+c=a or a+c=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- ERROR:
File "XXXX", line 13
    if a+b=c or b+c=a or a+c=b:
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:02:22) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 18:02:29) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- EXECUTION TIME:
0.131863
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:02:30) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 18:07:58) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 11:08:06) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- EXECUTION TIME:
0.126238
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:09) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 11:08:38) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:35:51) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- EXECUTION TIME:
0.12088
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:56:08) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:59:21) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

else a!=b and b!=c and a!=c:
	print("escaleno")
	



-- ERROR:
File "XXXX", line 19
    else a!=b and b!=c and a!=c:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:00:39) 
-- CODE:
a=float(input("lado1: "))
b=float(input("lado2: "))
c=float(input("lado3: "))

print("Entradas:",a,",",b,",",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b>=c or b+c>=a or a+c>=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:03:42) 
-- CODE:
a=float(input("lado A: "))
b=float(input("lado B: "))
c=float(input("lado C: "))

print("Entradas: ",a,", ",b,", ",c)

if a<=0 or b<=0 or c<=0:
   print("invalido")
	
elif a+b<=c or b+c<=a or a+c<=b:
	print("invalido")
	
elif a==b and b==c and a==c:
   print("equilatero")

elif a==b or b==c or c==a:
   print("isosceles")

elif a!=b and b!=c and a!=c:
	print("escaleno")
	



-- OUTPUT:
Entradas:  2.0 ,  4.0 ,  4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:04:29) 
-- CODE:
a=float(input("lado A: "))
b=float(input("lado B: "))
c=float(input("lado C: "))

print("Entradas: ",a,", ",b,", ",c)

if a<=0 or b<=0 or c<=0:
   print("Tipo de triangulo: invalido")
	
elif a+b<=c or b+c<=a or a+c<=b:
	print("Tipo de triangulo: invalido")
	
elif a==b and b==c and a==c:
   print("Tipo de triangulo: equilatero")

elif a==b or b==c or c==a:
   print("Tipo de triangulo: isosceles")

elif a!=b and b!=c and a!=c:
	print("Tipo de triangulo: escaleno")
	



-- OUTPUT:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 15:04:44) 
-- CODE:
a=float(input("lado A: "))
b=float(input("lado B: "))
c=float(input("lado C: "))

print("Entradas: ",a,", ",b,", ",c)

if a<=0 or b<=0 or c<=0:
   print("Tipo de triangulo: invalido")
	
elif a+b<=c or b+c<=a or a+c<=b:
	print("Tipo de triangulo: invalido")
	
elif a==b and b==c and a==c:
   print("Tipo de triangulo: equilatero")

elif a==b or b==c or c==a:
   print("Tipo de triangulo: isosceles")

elif a!=b and b!=c and a!=c:
	print("Tipo de triangulo: escaleno")
	



-- EXECUTION TIME:
0.139972
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 ,  4.4 ,  5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 ,  2.0 ,  7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
