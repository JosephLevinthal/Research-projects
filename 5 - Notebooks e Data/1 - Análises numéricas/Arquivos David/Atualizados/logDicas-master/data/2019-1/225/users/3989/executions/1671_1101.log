== TEST (2019-04-22 22:50:14) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:59:49) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))


	
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:03:06) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))


-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:05:55) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if(ti==R):
	consumo_total = ce * 0.44
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:08:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if(ti== "R"):
	consumo_total = ce * 0.44
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:08:52) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if(ti== "R"):
	consumo_total = ce * 0.44
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:09:32) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if(ti== "R"):
	consumo_total = ce * 0.44
	print(consumo_total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:11:28) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce>=500)):
	consumo_total = ce * 0.44
	print(consumo_total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 19:12:30) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce>=500)):
	consumo_total = ce * 0.44
	print(consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- EXECUTION TIME:
0.144346
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Digite o consumo de energia: Tipo de instalacao?(R/I/C)
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Digite o consumo de energia: Tipo de instalacao?(R/I/C)420.42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:12:31) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce>=500)):
	consumo_total = ce * 0.44
	print(consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:12:59) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print(consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:13:45) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print(consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:14:53) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(ti==R):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:15:18) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", r$ consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:17:11) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", consumo_total)
elif(ce>1000):
	consumo_total = ce * 0.60
	print(consumo_total)
	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:17:44) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", consumo_total)
elif(ce>1000):
	consumo_total = ce * 0.60
	print(round(consumo_total, 2))
	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:18:25) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print(round(consumo_total, 2))
	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:18:55) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:19:19) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:19:45) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:20:05) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", consumo_total)
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:21:36) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print(consumo_total)


	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:21:58) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))


	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:24:02) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)"))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 6
    print("Valor total: ", r$ consumo_total)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:25:12) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I))

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 2
    ti = (input("Tipo de instalacao?(R/C/I))
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:25:28) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)")

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti== "R") and (ce<=500)):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:26:27) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)")

if ((ti== "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti== "R") and (ce<=500)):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:27:01) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)")

if ((ti == R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == R) and (ce<=500)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:27:11) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 14
    elif(ce>):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:27:25) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if ((ti == R) and (ce<=500)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:27:55) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if ((ti == R) and (ce<=500)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:28:13) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti==R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if ((ti==R) and (ce<=500)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:28:32) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti==R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if ((ti==R) and (ce<=500)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:29:08) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == R) and (ce<=500):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == R) and (ce<=500):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:29:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == R) and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if ((ti == R) and (ce<=500)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:30:10) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == "R") and (ce<=500):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:30:18) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == "R") and (ce<=500):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:30:29) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == "R") and (ce<=500):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:30:46) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 4
    if ((ti == "R") and (ce<=500):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:32:37) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = input("Tipo de instalacao?(R/C/I)"):

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 2
    ti = input():
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:32:51) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- ERROR:
File "XXXX", line 2
    ti = input():
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:33:54) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti== "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
else:
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))




	

	
	
-- OUTPUT:
Valor total:  -36.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:34:26) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/C/I)"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))

	




	

	
	
-- OUTPUT:
Valor total:  -36.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:38:38) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)")):

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti=="I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 2
    ti = (input()):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:38:54) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C)")):

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti=="I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 2
    ti = (input()):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:39:13) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti=="I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:41:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:42:29) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:42:36) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:43:23) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:44:08) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
elif (ce>5000):
	consumo_total = ce * 0.60
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:45:18) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print ("Valor total: ", round(consumo_total, 2))
else:
	consumo_total = ce * 0.60
	print ("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:47:09) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if((ti == "I") and (ce<=5000)
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 12
    consumo_total = ce * 0.55
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:47:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if((ti == "I") and (ce<=5000):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 11
    if((ti == "I") and (ce<=5000):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:47:32) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:48:12) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:49:14) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
	
else:
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:49:59) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
else:
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:50:42) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:14:07) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:14:12) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:19) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce kWh e tipo ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 4
    print("Entradas: ", ce kWh e tipo ti)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:30) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce kWh e, tipo ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 4
    print("Entradas: ", ce kWh e, tipo ti)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:36) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, kWh e, tipo ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 4
    print("Entradas: ", ce, kWh e, tipo ti)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:40) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, kWh e tipo ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 4
    print("Entradas: ", ce, kWh e tipo ti)
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:17:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce "kWh" "e" "tipo" ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 4
    print("Entradas: ", ce "kWh" "e" "tipo" ti)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:18:08) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh" "e" "tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWhetipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:18:48) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:19:21) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:19:49) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
	

	




	

	
	
-- EXECUTION TIME:
0.212922
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total:  621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:21:53) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:22:56) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: ", round(consumo_total, 2))
elif(ce>500):
	consumo_total = ce * 0.65
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
	
if ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))

	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:25:49) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
elif(ce>500):
	consumo_total = ce * 0.65	
if ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
elif(ce>5000):
	consumo_total = ce * 0.60
if ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
else:
	print("Dados invalidos")
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:27:09) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
elif(ce>500):
	consumo_total = ce * 0.65	
print("Valor total: ", round(consumo_total, 2))
if ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
elif(ce>5000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
if ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
elif(ce>1000):
	consumo_total = ce * 0.60
	print("Valor total: ", round(consumo_total, 2))
else:
	print("Dados invalidos")
	
	

	




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: ", round(consumo_total, 2))
NameError: name 'consumo_total' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:28:13) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao?(R/I/C):"))

print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
elif(ce>500):
	consumo_total = ce * 0.65	
print("Valor total: ", round(consumo_total, 2))
if ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>5000):
	consumo_total = ce * 0.60
if ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: ", round(consumo_total, 2))
elif(ce>1000):
	consumo_total = ce * 0.60
else:
	print("Dados invalidos")
	
	

	




	

	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Valor total: ", round(consumo_total, 2))
NameError: name 'consumo_total' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:21:04) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalação:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:21:17) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
	
	

	




	

	
	
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:24) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
	
	
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 33
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:30) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
	
	
	

	




	

	
	
-- ERROR:
File "XXXX", line 32
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:48) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
	
	
-- ERROR:
File "XXXX", line 21
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:53) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
	
-- ERROR:
File "XXXX", line 20
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:05) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
-- ERROR:
File "XXXX", line 19
    
                                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:22) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)
-- ERROR:
File "XXXX", line 19
    
                                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:08) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:25:35) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)
elif ((ti == "R") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- ERROR:
File "XXXX", line 16
    elif ((ti == "R") and (ce<=1000)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:25:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- ERROR:
File "XXXX", line 16
    elif ((ti == "C") and (ce<=1000)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:25:58) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:26:12) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.141728
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:26:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:26:37) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:26:39) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.134959
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:26:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.15631
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:27:26) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:28:38) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:28:47) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.18447
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:29:13) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:29:28) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.139525
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:31:56) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "R") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:32:06) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "R") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.141308
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:32:09) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "R") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.15975
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:33:01) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:33:16) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.136481
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:33:43) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.200845
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:34:24) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.105049
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:34:29) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:35:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:35:36) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:35:40) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.151544
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:38:19) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:38:32) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.65
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.157918
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 23:32:37) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 18:31:00) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.14893
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:31:21) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 18:31:28) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
	consumo_total = ce * 0.44
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "I") and (ce<=5000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2)) 
elif ((ti == "C") and (ce<=1000)):
	consumo_total = ce * 0.55
	print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
	consumo_total = ce * 0.60
	print("Valor total: R$ ", round(consumo_total, 2))
-- EXECUTION TIME:
0.167566
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 18:42:29) 
-- CODE:
ce = float(input(""))
y = input("")
print("Entradas:", ce, "kWh e tipo", y)

if ((ce < 0) or (y != "R") and (y != "I") and (y != "C")):
	print("Dados invalidos")
elif ((y == "R") and (ce <= 500)):
	conta = ce * 0.44
	print("Valor total: R$", round(conta, 2))
elif ((y == "R") and (ce > 500)):
	conta = ce * 0.65
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce <= 5000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce > 5000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce <= 1000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce > 1000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
-- EXECUTION TIME:
0.139062
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:44:15) 
-- CODE:
ce = float(input(""))
y = input("")
print("Entradas:", ce, "kWh e tipo", y)

if ((ce < 0) or (y != "R") and (y != "I") and (y != "C")):
	print("Dados invalidos")
elif ((y == "R") and (ce <= 500)):
	conta = ce * 0.44
	print("Valor total: R$", round(conta, 2))
elif ((y == "R") and (ce > 500)):
	conta = ce * 0.65
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce <= 5000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce > 5000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce <= 1000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce > 1000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
