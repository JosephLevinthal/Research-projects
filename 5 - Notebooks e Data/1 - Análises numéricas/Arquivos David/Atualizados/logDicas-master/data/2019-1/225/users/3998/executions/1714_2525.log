== TEST (2019-05-15 12:49:37) 
-- CODE:
x = int(input("numero"))
d = 0
s = 0
while(x<s):
	x = x % ==0
	s = s + 1
	print(x)
print(s ,"divisores")
-- ERROR:
File "XXXX", line 5
    x = x % ==0
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 12:53:45) 
-- CODE:
x = int(input("numero"))
d = 0
s = 0
while(x<s):
	x = x % 2
	s = s + 1
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:26:35) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x < l):
	l= x%2==0
	s = s + 1
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:26:44) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x < l):
	l= x%2==0
	s = s + 1
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:27:04) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x < l):
	l= x%2==0
	s = s + 1
	x = int(input())
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:27:41) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x < l):
	x= x%2==0
	s = s + 1
	x = int(input())
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:27:48) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x < l):
	x= x%2==0
	s = s + 1
	x = int(input())
	print(x)
print(s ,"divisores")
-- OUTPUT:
0 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:28:56) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%2==0
	s = s + 1
	x = int(input())
	print(x)
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:29:14) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%2==0
	s = s + 1
	x = int(input())
	print(x)
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:29:30) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%2==0
	s = s + 1
	x = int(input())
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:30:04) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%2==0
	s = s + 1
	x = int(input())
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 13:31:18) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%2==0
	s = s + 1
	x = int(input())
print(s ,"divisores")
-- EXECUTION TIME:
0.143041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1714/2525/main.py", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:32:21) 
-- CODE:
x = int(input())
l= 0
s = 0
while(x > l):
	x= x%x==0
	s = s + 1
	x = int(input())
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:38:41) 
-- CODE:
x = int(input())
l= 1
s = 0
while(x > l):
	x= x%l==0
	s = s + 1
	x = int(input())
print(s ,"divisores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:41:56) 
-- CODE:
x = int(input())
l= 1
s = 0
while(x > l):
	if(x%l==0):
		s = s + 1
	x=x+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:42:03) 
-- CODE:
x = int(input())
l= 1
s = 0
while(x > l):
	if(x%l==0):
		s = s + 1
	x=x+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:42:20) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	x=x+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:42:35) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	x=x+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:43:10) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:43:15) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:43:20) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:43:23) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l > x):
	if(x%l==0):
		s = s + 1
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
0 divisor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:46:39) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l <= x):
	if(x%l==0):
		s = s + 1
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
6 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:46:57) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l <= x):
	if(x%l==0):
		s = s + 1
		print(l)
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- OUTPUT:
1
2
3
4
6
12
6 divisores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 13:47:07) 
-- CODE:
x = int(input())
l= 1
s = 0
while(l <= x):
	if(x%l==0):
		s = s + 1
		print(l)
	l=l+1
if(s>1):
	msg="divisores"
else:
	msg="divisor"
print(s,msg)
-- EXECUTION TIME:
0.137271
-- TEST CASE 1:
---- input:
12
---- correct output:
1
2
3
4
6
12
6 divisores
---- user output:
1
2
3
4
6
12
6 divisores
-- TEST CASE 2:
---- input:
49
---- correct output:
1
7
49
3 divisores
---- user output:
1
7
49
3 divisores
-- TEST CASE 3:
---- input:
30
---- correct output:
1
2
3
5
6
10
15
30
8 divisores
---- user output:
1
2
3
5
6
10
15
30
8 divisores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
