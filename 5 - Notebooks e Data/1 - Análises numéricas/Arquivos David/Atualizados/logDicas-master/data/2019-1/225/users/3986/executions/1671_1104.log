== TEST (2019-04-28 20:00:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) and (a < b) and (c < d):
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif
-- ERROR:
File "XXXX", line 13
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:00:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) and (a < b) and (c < d):
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 13
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:01:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) and (a < b) and (c < d):
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 13
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:02:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 13
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:05:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.123799
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
a :b :c :d :Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
a :b :c :d :Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:05:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:07:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.123153
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:07:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:07:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.199155
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:07:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))

if ( a == c) or (b == d) or(a == d) or (c == b) and (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Ha intersecao")
elif (a < b) and (c < d) :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Nao ha intersecao")
else :
	print("Intervalo 1:", a,",",b)
	print("Intervalo 2:", c,",",d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.251824
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 09:58:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
else :
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.146275
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 09:58:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
else :
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 09:59:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
	print("Nao ha intersecao")
-- EXECUTION TIME:
0.205395
-- ERROR:
  File "/home/codebench/codes/1671/1104/main.py", line 18
    print("Nao ha intersecao")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 09:59:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
	print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 18
    print("Nao ha intersecao")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 09:59:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
else :
	print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 09:59:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:00:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")
-- EXECUTION TIME:
0.187907
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:00:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.183609
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 10:00:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 10:00:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a) and (d > c) :
	if (a >= c) and (a<= d):
		print("Ha intersecao")
	elif (b >= c) and ( b <= d):
		print("Ha intersecao")
	elif(c >= a) and (c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.159547
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:47:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.140032
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Nao ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:50:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.147392
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:50:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(c >= a and c <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.174131
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:51:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a :"))
b=float(input("b :"))
c=float(input("c :"))
d=float(input("d :"))
print("Intervalo 1:",a,",",b)
print("Intervalo 2:",c,",",d)
if(b >a and d > c) :
	if (a >= c and a<= d):
		print("Ha intersecao")
	elif (b >= c and b <= d):
		print("Ha intersecao")
	elif(d >= a and d <= b):
		print("Ha intersecao")
	else :
		print("Nao ha intersecao")

else :
	print("Entradas invalidas")
-- EXECUTION TIME:
0.167014
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
