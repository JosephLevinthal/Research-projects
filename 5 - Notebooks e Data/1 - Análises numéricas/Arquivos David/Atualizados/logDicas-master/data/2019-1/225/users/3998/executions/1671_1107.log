== TEST (2019-04-25 21:33:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))

print("Entradas: ",x," eh invalida ")
-- OUTPUT:
Entradas:  9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:55:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
op = (1 /2 /3 /4 /5 /6 )
a = 6%6
b = 6%5
c = 6%3
d = 6%2
e = 8%2
f = 10%2
d = 12%2

if (x ==1)
	print("Hoje eh segunda eo dia futuro eh",a,)
print("A entrada ",x," eh invalida ")
-- ERROR:
File "XXXX", line 14
    if (x ==1)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:55:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
op = (1 /2 /3 /4 /5 /6 )
a = 6%6
b = 6%5
c = 6%3
d = 6%2
e = 8%2
f = 10%2
d = 12%2

if (x ==1):
	print("Hoje eh segunda eo dia futuro eh",a,)
print("A entrada ",x," eh invalida ")
-- OUTPUT:
A entrada  9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:00:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )


if (x<0) or (x>6):
	print("A entrada ",x," eh invalida ")
-- OUTPUT:
A entrada  9  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:02:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )

v = (x * d//100)

if (x<0) or (x>6):
	print("A entrada ",v," eh invalida ")
-- OUTPUT:
A entrada  0  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:02:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )

v = (x * d//100)

if (x<0) or (x>6):
	print("A entrada ",v," eh invalida ")
-- OUTPUT:
A entrada  0  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )

v = (x * d//100)
  
if (x<0) or (x>6):
	print("A entrada ",v," eh invalida ")
elif (x ==1) and (v)
-- ERROR:
File "XXXX", line 12
    elif (x ==1) and (v)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )

v = (x * d//100)
  
if (x<0) or (x>6):
	print("A entrada ",v," eh invalida ")
-- OUTPUT:
A entrada  0  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:31:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))
op = (1 /2 /3 /4 /5 /6 )

v = (x * d//100)
  
if (x<0) or (x>6):
	print("A entrada ",v," eh invalida ")
-- OUTPUT:
A entrada  0  eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:17:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))

v = (x + d)%7
  
if (x>0) and (x<=6):
	if (x==0 and v==0):
	print("Hoje eh domingo e o dia futuro eh domingo")
	elif (x==0 and v==1):
	print("Hoje eh segunda e o dia futuro eh", v)
	elif (x==0 and v==2):
	print("Hoje eh terca e o dia futuro eh", v)
	else (x==0 and v==3):
	print("Hoje eh quanta e o dia futuro eh", v)
	
	
-- ERROR:
File "XXXX", line 11
    print("Hoje eh domingo e o dia futuro eh domingo")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:01:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("dia da semana: "))
d = int(input("dias futuros: "))

v = (x + d)%7
  
if (x>0) and (x<=6):
	if (x==0 and v==0):
	print("Hoje eh domingo e o dia futuro eh domingo")
	elif (x==0 and v==1):
	print("Hoje eh segunda e o dia futuro eh", v)
	elif (x==0 and v==2):
	print("Hoje eh terca e o dia futuro eh", v)
	else (x==0 and v==3):
	print("Hoje eh quanta e o dia futuro eh", v)
	
	
	
-- ERROR:
File "XXXX", line 11
    print("Hoje eh domingo e o dia futuro eh domingo")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:14:56) 
-- CODE:
day = int(input("dia: (0 a 6) "))
future = int(input("dia(s) futuro(s): "))

if (day < 0) or (day > 6):
	solution = 7
elif ((day + future) < 7):
	solution = day + future
else:
	solution = ((day + future) % 7)

if solution == 0:
	especific = "domingo"
elif solution == 1:
	especific = "segunda"
elif solution == 2:
	especific = "terca"
elif solution == 3:
	especific = "quarta"
elif solution == 4:
	especific = "quinta"
elif solution == 5:
	especific = "sexta"
elif solution == 6:
	especific = "sabado"
else:
	especific = "inexistente"
	
if day == 0:
	dia = "domingo"
elif day == 1:
	dia = "segunda"
elif day == 2:
	dia = "terca"
elif day == 3:
	dia = "quarta"
elif day == 4:
	dia = "quinta"
elif day == 5:
	dia = "sexta"
else:
	dia = "sabado"
	
if (day < 0) or (day > 6):
	print("A entrada", day, "eh invalida")
else:
	print("Hoje eh",dia, "e o dia futuro eh",especific)
	
	
	
-- OUTPUT:
A entrada 9 eh invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 21:15:37) 
-- CODE:
day = int(input("dia: (0 a 6) "))
future = int(input("dia(s) futuro(s): "))

if (day < 0) or (day > 6):
	solution = 7
elif ((day + future) < 7):
	solution = day + future
else:
	solution = ((day + future) % 7)

if solution == 0:
	especific = "domingo"
elif solution == 1:
	especific = "segunda"
elif solution == 2:
	especific = "terca"
elif solution == 3:
	especific = "quarta"
elif solution == 4:
	especific = "quinta"
elif solution == 5:
	especific = "sexta"
elif solution == 6:
	especific = "sabado"
else:
	especific = "inexistente"
	
if day == 0:
	dia = "domingo"
elif day == 1:
	dia = "segunda"
elif day == 2:
	dia = "terca"
elif day == 3:
	dia = "quarta"
elif day == 4:
	dia = "quinta"
elif day == 5:
	dia = "sexta"
else:
	dia = "sabado"
	
if (day < 0) or (day > 6):
	print("A entrada", day, "eh invalida")
else:
	print("Hoje eh",dia, "e o dia futuro eh",especific)
	
	
	
-- EXECUTION TIME:
0.14382
-- TEST CASE 1:
---- input:
9
9

---- correct output:
A entrada 9 eh invalida
---- user output:
A entrada 9 eh invalida
-- TEST CASE 2:
---- input:
6
1024
---- correct output:
Hoje eh sabado e o dia futuro eh segunda
---- user output:
Hoje eh sabado e o dia futuro eh segunda
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
