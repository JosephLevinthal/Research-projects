== TEST (2019-04-10 14:09:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = p *(5/100)
else:
	valor = p
print(round(valor , 2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:09:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = p *(5/100)
else:
	valor = p
print(round(valor , 2))
-- EXECUTION TIME:
0.21766
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
10.0
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
10.03
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:10:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = p * (5/100)
else:
	valor = p
print(round(valor , 2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:11:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = p - (p * (5/100))
else:
	valor = p
print(round(valor , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:11:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = (p * (5/100)) - p
else:
	valor = p
print(round(valor , 2))
-- EXECUTION TIME:
0.180045
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
-190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
-190.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:11:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = (p * (5/100)) - p
else:
	valor = p
print(round(valor , 2))
-- EXECUTION TIME:
0.165086
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
-190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
-190.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200.00):
	valor = p - (p * (5/100)) 
else:
	valor = p
print(round(valor , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200):
	valor = p - (p * (5/100)) 
else:
	valor = p
print(round(valor , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:14:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = float(input("preco sem desconto:"))
if (p >= 200):
	valor = p - (p * (5/100)) 
else:
	valor = p
print(round(valor , 2))
-- EXECUTION TIME:
0.174602
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
