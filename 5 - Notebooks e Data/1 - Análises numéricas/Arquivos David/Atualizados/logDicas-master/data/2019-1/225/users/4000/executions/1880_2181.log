== TEST (2019-07-03 14:33:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input(m: )))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 3
    m = array(eval(input(m: )))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:33:19) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input([m:] )))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 3
    m = array(eval(input([m:] )))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:33:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input(m:)))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 3
    m = array(eval(input(m:)))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:34:06) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input(m:)))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 3
    m = array(eval(input(m:)))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:34:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input([m:])))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 3
    m = array(eval(input([m:])))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:34:43) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input(m)))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:34:45) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input(m)))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:35:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=int)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:35:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:36:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:36:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		c=c+1
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:36:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		c=c+1
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:37:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = ((shape(m)[0])-1)
		v[c] = i + j!= n
		c=c+1
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:37:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		v[c] = i + j!= n-1
		c=c+1
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:38:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		v[c] = (i + j)!= (n-1)
		c=c+1
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:48:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			c=c+1
			
		
		t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:49:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:50:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i],m[j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:50:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i],m[j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:50:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i,j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:50:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i,j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:51:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i,j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:52:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i,j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:53:01) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:54:51) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:55:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:55:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m, n**2-n)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:56:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:57:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:58:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m,m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 14:59:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m,m**2-m)[0]), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 15:00:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
v = zeros((shape(m)[0](shape(m**2-m)[0])), dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 15:03:55) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
n= (shape(m)[0])
v = zeros(n**2-n),dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
File "XXXX", line 5
    v = zeros(n**2-n),dtype=float)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 15:04:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
n= (shape(m)[0])
v = zeros((n**2-n),dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 15:04:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("m:")))
n= (shape(m)[0])
v = zeros((n**2-n),dtype=float)
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		n = (shape(m)[0])
		if(i + j != n -1):
			v[c]= m[i][j]
			c=c+1
			t = min(v)
print(t)
		
		

-- EXECUTION TIME:
1.20494
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
4.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.12
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
12.3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
