== TEST (2019-04-03 15:06:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

print(min(a, b, c))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:08:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - max - min

print(min(a, b, c))
print(max(a, b, c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vl = (a + b + c) - max - min
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:08:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - max - min

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vl = (a + b + c) - max - min
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:08:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (max - min)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vl = (a + b + c) - (max - min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:09:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b - c)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:09:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (c - b)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:09:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (c + b)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:09:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (c + a)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:09:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b + a)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 15:10:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b + a)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- EXECUTION TIME:
0.143096
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:10:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b + a)

print(min(a, b, c))
print(max(a, b, c))
print(vl)
-- OUTPUT:
-2
10
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 15:10:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b + a)

print(min(a, b, c))
print(vl)
print(max(a, b, c))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 15:10:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("a: "))
b = int(input("b: "))
c = int(input("c: "))

#valor int
vl = (a + b + c) - (b + a)

print(min(a, b, c))
print(vl)
print(max(a, b, c))

-- EXECUTION TIME:
0.18152
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
