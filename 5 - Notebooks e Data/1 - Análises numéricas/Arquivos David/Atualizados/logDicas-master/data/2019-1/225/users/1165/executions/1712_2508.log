== TEST (2019-05-13 14:58:01) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)

while (conta < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont+1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    while (conta < num):
NameError: name 'conta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:58:53) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 14:59:01) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.168276
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:59:07) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:59:20) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 14:59:28) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.210895
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:59:53) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont *2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)**(cont + 1) * 4. / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:00:34) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4. / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:00:39) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4. / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.144861
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:01:51) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.186976
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:02:00) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:35) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:03:41) 
-- CODE:
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.186299
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:55) 
-- CODE:
num = int(float("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    num = int(float("Numero de aproximacao: "))
ValueError: could not convert string to float: 'Numero de aproximacao: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:05:09) 
-- CODE:
 from math import*
num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- ERROR:
File "XXXX", line 1
    from math import*
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:05:14) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:21) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.134685
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:22) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.188748
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:22) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.252299
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:23) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.213851
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:23) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.370069
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:23) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.487365
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:23) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.556497
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:

-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:23) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.220393
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2508/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:32) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.129936
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:05:58) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4./den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.184149
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:05:59) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4./den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:08:03) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4.0 / den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.163514
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:08:05) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3

while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4.0 / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:08:15) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4.0 / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:08:35) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4.0 / den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:10:46) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.132209
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
7
3
7
3
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
7
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:10:47) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3
7
3
7
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:11:03) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:11:06) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
print(ap)
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4/den
	cont = cont + 1
	print(round(ap, 8))
-- EXECUTION TIME:
0.205252
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:12:38) 
-- CODE:

num = int(input("Numero de aproximacao: "))

cont = 1
ap = 3
while (cont < num):
	den = (cont * 2) * (cont * 2 + 1) * (cont * 2 + 2)
	ap = ap + (-1)** (cont + 1) * 4 / den
	cont = cont + 1
print(round(ap, 8))
-- EXECUTION TIME:
0.121879
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
