== TEST (2019-04-15 12:55:38) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n1)

else :
	print(n2)
-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:26) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n1)
	print(n2)
else :
	print(n2)
	print(n1)
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:56:34) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n1)
	print(n2)
else :
	print(n2)
	print(n1)
-- EXECUTION TIME:
0.168651
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Leon
Ada
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Marcos
Demetrius
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
WILSON
george
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:37) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n1)
	print(n2)
else :
	print(n2)
	print(n1)
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:44) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n1)
	print(n2)
else :
	print(n1)
	print(n2)
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:54) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n2)
	print(n1)
else :
	print(n1)
	print(n2)
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:57:02) 
-- CODE:
n1=input("nome 1 :")
n2=input("nome 2 :")

if (n1.upper() > n2.upper()) :
	print(n2)
	print(n1)
else :
	print(n1)
	print(n2)
-- EXECUTION TIME:
0.143843
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Ada
Leon
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
Marcos
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
george
WILSON
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
