== TEST (2019-04-24 15:41:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:")
y= input(":")
print(x,"kwh e tipo",y)
if(x=<500):
			r=round((x*0.44),2)
			print("R$",r)
elif(x>500):
			r2=round((x*0.65),2)
			print("R$",r2)
elif(x=<1000):
			c=round((x*0.55),2)
			print("R$",c)
elif(x>1000):
			c1=round((x*0.60),2)
			print("R$",c1)
elif(x=<5000):
			i=round((x*0.55),2)
			print("R$",i)
elif(x>5000):
			i2=round((x*0.60),2)
			print("R$",c2)
			 
else:
 print("Dados invalidos")
-- ERROR:
File "XXXX", line 5
    y= input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:41:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:")
y = input(":")
print(x,"kwh e tipo",y)
if(x=<500):
			r=round((x*0.44),2)
			print("R$",r)
elif(x>500):
			r2=round((x*0.65),2)
			print("R$",r2)
elif(x=<1000):
			c=round((x*0.55),2)
			print("R$",c)
elif(x>1000):
			c1=round((x*0.60),2)
			print("R$",c1)
elif(x=<5000):
			i=round((x*0.55),2)
			print("R$",i)
elif(x>5000):
			i2=round((x*0.60),2)
			print("R$",c2)
			 
else:
 print("Dados invalidos")
-- ERROR:
File "XXXX", line 5
    y = input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:42:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:")
y== input(":")
print(x,"kwh e tipo",y)
if(x=<500):
			r=round((x*0.44),2)
			print("R$",r)
elif(x>500):
			r2=round((x*0.65),2)
			print("R$",r2)
elif(x=<1000):
			c=round((x*0.55),2)
			print("R$",c)
elif(x>1000):
			c1=round((x*0.60),2)
			print("R$",c1)
elif(x=<5000):
			i=round((x*0.55),2)
			print("R$",i)
elif(x>5000):
			i2=round((x*0.60),2)
			print("R$",c2)
			 
else:
 print("Dados invalidos")
-- ERROR:
File "XXXX", line 5
    y== input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:42:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print(x,"kwh e tipo",y)
if(x=<500):
			r=round((x*0.44),2)
			print("R$",r)
elif(x>500):
			r2=round((x*0.65),2)
			print("R$",r2)
elif(x=<1000):
			c=round((x*0.55),2)
			print("R$",c)
elif(x>1000):
			c1=round((x*0.60),2)
			print("R$",c1)
elif(x=<5000):
			i=round((x*0.55),2)
			print("R$",i)
elif(x>5000):
			i2=round((x*0.60),2)
			print("R$",c2)
			 
else:
 print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x=<500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print(x,"kwh e tipo",y)
if(x==<500):
			r=round((x*0.44),2)
			print("R$",r)
elif(x>500):
			r2=round((x*0.65),2)
			print("R$",r2)
elif(x=<1000):
			c=round((x*0.55),2)
			print("R$",c)
elif(x>1000):
			c1=round((x*0.60),2)
			print("R$",c1)
elif(x=<5000):
			i=round((x*0.55),2)
			print("R$",i)
elif(x>5000):
			i2=round((x*0.60),2)
			print("R$",c2)
			 
else:
 print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x==<500):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:45:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:"x,"kWh e tipo",y)
if(x=<500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:"x,"kWh e tipo",y)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:45:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:"x"kWh e tipo",y)
if(x=<500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:"x"kWh e tipo",y)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:45:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x"kWh e tipo",y)
if(x=<500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",x"kWh e tipo",y)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:45:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x=<500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x=<500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:46:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x=<500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x=<500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:46:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x=< 500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x=< 500):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:47:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x=<1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x=<5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    elif(x=<1000):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:47:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:50:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.13846
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:50:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:52:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:36:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:36:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.13193
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:36:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:38:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",c2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:41:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:45:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:45:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000/):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 16
    elif(x>1000/):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:47:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:51:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.140128
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
R$ -24.64
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:27:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:29:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:47:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kwh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500):
	r2=round((x*0.65),2)
	print("R$",r2)
elif(x<=1000):
	c=round((x*0.55),2)
	print("R$",c)
elif(x>1000):
	c1=round((x*0.60),2)
	print("R$",c1)
elif(x<=5000):
	i=round((x*0.55),2)
	print("R$",i)
elif(x>5000):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
R$ -24.64
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((y==r)and(x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==r)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if((y==r)and(x<=500)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:53:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((y=r)and(x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==r)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if((y=r)and(x<=500)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:54:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((y==r and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==r)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if((y==r and x<=500)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:55:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
residencial==y

print("Entradas:",x,"kWh e tipo",y)
if((y==residencial and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==r)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    residencial==y
NameError: name 'residencial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:00:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
if(y==r):
	y==1
elif(y==c)
   y==2
elif(y==i)
   y==3
print("Entradas:",x,"kWh e tipo",y)
elif((y==1 and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==1)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==2)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==2)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==3)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==3)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    elif(y==c)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:00:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
if(y==r):
	y==1
elif(y==c):
   y==2
elif(y==i):
   y==3
print("Entradas:",x,"kWh e tipo",y)
elif((y==1 and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==1)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==2)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==2)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==3)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==3)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    elif((y==1 and x<=500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:00:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
if(y==r):
	y==1
elif(y==c):
   y==2
elif(y==i):
	y==3
print("Entradas:",x,"kWh e tipo",y)
elif((y==1 and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==1)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==2)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==2)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==3)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==3)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    elif((y==1 and x<=500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:00:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(y==r):
	y==1
elif(y==c):
   y==2
elif(y==i):
	y==3

elif((y==1 and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==1)and(x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==2)and(x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==2)and(x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==3)and(x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==3)and(x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(y==r):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:02:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((y==1 and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==1 and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==2 and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==2 and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==3 and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==3 and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:03:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((y==r and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((y==r and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if((y==r and x<=500)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:04:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if((r==y and x<=500)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if((r==y and x<=500)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500 and y=(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 7
    if(x<=500 and y=(r)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(x<=500 and y==(r)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo",y)
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(x<=500 and y==(r)):
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:09:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo", .upper()y)
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",x,"kWh e tipo", .upper()y)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:09:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo", upper()y)
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 6
    print("Entradas:",x,"kWh e tipo", upper()y)
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:10:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo", upper(y))
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((r==y and x>500)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entradas:",x,"kWh e tipo", upper(y))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:10:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo", upper(y))
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif((x>500 and y==(r)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 10
    elif((x>500 and y==(r)):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("kWh:"))
y= input(":")
print("Entradas:",x,"kWh e tipo", upper(y))
if(x<=500 and y==(r)):
	r=round((x*0.44),2)
	print("R$",r)
elif(x>500 and y==(r)):
	r2=round((x*0.65),2)
	print("R$",r2)
elif((y==c and x<=1000)):
	c=round((x*0.55),2)
	print("R$",c)
elif((y==c and x>1000)):
	c1=round((x*0.60),2)
	print("R$",c1)
elif((y==i and x<=5000)):
	i=round((x*0.55),2)
	print("R$",i)
elif((y==i and x>5000)):
	i2=round((x*0.60),2)
	print("R$",i2)
			 
else:
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entradas:",x,"kWh e tipo", upper(y))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 23:11:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("c:"))
y=input("t=R/I/C:")
print("Entradas:",x, "kWh e tipo",y)
if(x<0) or (y!="R") and(y!="I")and(y!="C"):
	print("Dados invalidos")
elif((y=="R")and(x<=500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R")and(x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C")and(x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C")and(x>1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif((y=="I")and(x<=5000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="I")and(x>5000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
-- EXECUTION TIME:
0.107951
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
