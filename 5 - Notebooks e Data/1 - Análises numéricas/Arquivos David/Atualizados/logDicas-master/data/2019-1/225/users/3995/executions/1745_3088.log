== TEST (2019-05-15 14:40:36) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t, 2)
-- ERROR:
File "XXXX", line 21
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:40:54) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
print(round(t, 2)
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:09) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:44) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<=0):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:48) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<=0):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:51) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<0):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:58) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<0):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
File "XXXX", line 19
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:42:14) 
-- CODE:

c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<0):
	x=int(input("numero:"))
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
else:
	t=0
print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    while(c<=x or c<0):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:43:26) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero"))
if(p>0):
	t=(p/x)*100
elif(i>0):
	t=(i/x)*100
print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print(round(t,2))
NameError: name 't' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:44:12) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero"))
if(p>0):
	t=(p/x)*100
	print(round(t,2))
elif(i>0):
	t=(i/x)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print(round(t,2))
NameError: name 't' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:44:47) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c<=x or c<=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero"))
if(p>0):
	t=(p/x)
	print(round(t,2))
elif(i>0):
	t=(i/x)
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print(round(t,2))
NameError: name 't' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:45:54) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero"))
if(p>0):
	t=(p/x)
	print(round(t,2))
elif(i>0):
	t=(i/x)
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:46:32) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero"))
if(p>0):
	t=(p/x)*100
	print(round(t,2))
elif(i>0):
	t=(i/x)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:46:41) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(c!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/x)*100
	print(round(t,2))
elif(i>0):
	t=(i/x)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    x=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:47:01) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/x)*100
	print(round(t,2))
elif(i>0):
	t=(i/x)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    t=(p/x)*100
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:47:47) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- OUTPUT:
66.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:47:56) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- OUTPUT:
66.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:48:06) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- OUTPUT:
66.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:48:11) 
-- CODE:
x=int(input("numero:"))
c=1#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- OUTPUT:
66.67
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:48:45) 
-- CODE:
x=int(input("numero:"))
c=0#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if(x%c==0):
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:48:49) 
-- CODE:
x=int(input("numero:"))
c=0#divisor
p=0#quantidade de pares
i=0#quantidade de impares


while(x!=0):
	if(x%c==0):
		p+=1
	else:
		i+=1
	c+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/c)*100
	print(round(t,2))
elif(i>0):
	t=(i/c)*100
	print(round(t,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if(x%c==0):
ZeroDivisionError: integer division or modulo by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:51:26) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:51:30) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:52:15) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:52:19) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:52:21) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:53:31) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0 

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
elif(i>0):
	h=(i/d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:53:42) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
elif(i>0):
	h=(i/d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    t=(p/d)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:54:03) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(t)
elif(i>0):
	h=(i/d)
	print(h)
-- OUTPUT:
0.8333333333333334
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:54:49) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>=0):
	t=(p/d)
	print(round(t,2)
elif(i>=0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 20
    elif(i>=0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:55:17) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>=0):
	t=(p/d)
	print(round(t,2)
elif(i>=0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 20
    elif(i>=0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:55:19) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>=0):
	t=(p/d)
	print(round(t,2)
elif(i>0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 20
    elif(i>0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:55:26) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		t=(p/d)
	else:
		i+=1
		t=(i/d)
	d+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2)
elif(i>0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 20
    elif(i>0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:55:43) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=1

while(x!=0):
	if(x%c==0):
		p+=1
		
	else:
		i+=1
		
	d+=1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2)
elif(i>0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 20
    elif(i>0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:56:37) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2)
elif(i>0):
	h=(i/d)
	print(round(h,2)
-- ERROR:
File "XXXX", line 18
    elif(i>0):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:56:58) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2)

-- ERROR:
File "XXXX", line 18
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:57:12) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2))
elif(p>)
	h=(i/d)
	print(round(h,2))
-- ERROR:
File "XXXX", line 18
    elif(p>)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:57:29) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
if(p>0):
	t=(p/d)
	print(round(t,2))
elif(i>0)
	h=(i/d)
	print(round(h,2))
-- ERROR:
File "XXXX", line 18
    elif(i>0)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:57:37) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
if(p>=0):
	t=(p/d)
	print(round(t,2))
elif(i>=0)
	h=(i/d)
	print(round(h,2))
-- ERROR:
File "XXXX", line 18
    elif(i>=0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:58:03) 
-- CODE:
x=int(input("numero:"))

c=2#divisor
p=0#quantidade de pares
i=0#quantidade de impares
d=0

while(x!=0):
	if(x%c==0):
		p=p+1
	else:
		i=i+1	
	d=d+1
	x=int(input("numero:"))
	if(p>=0):
		t=(p/d)
		print(round(t,2))
	elif(i>=0)
		h=(i/d)
		print(round(h,2))
-- ERROR:
File "XXXX", line 18
    elif(i>=0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:02:23) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>0):
	d=p/c
	
-- ERROR:
File "XXXX", line 18
    elif(i>=0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:02:54) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0):
	d=p/c
elif(i>=0):
	e=i/c
-- ERROR:
File "XXXX", line 18
    elif(i>=0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:03:25) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0):
	d=p/c
	print(round(d,2))
elif(i>=0):
	e=i/c
	print(round(e, 2))
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:03:59) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0):
	d=(p/c)*100
	print(round(d,2))
elif(i>=0):
	e=(i/c)*100
	print(round(e, 2))
-- OUTPUT:
100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 15:04:32) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0):
	d=(p/c)*100
	print(round(d,2))
elif(i>=0):
	e=(i/c)*100
	print(round(e, 2))
-- EXECUTION TIME:
0.233215
-- TEST CASE 1:
---- input:
-10
-8
-6
-4
-2
0
---- correct output:
100.0
0.0
---- user output:
100.0
-- TEST CASE 2:
---- input:
11
11
9
1
10
2
4
0
---- correct output:
42.86
57.14
---- user output:
42.86
-- TEST CASE 3:
---- input:
1
2
3
4
5
6
7
8
9
0
---- correct output:
44.44
55.56
---- user output:
44.44
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:04:35) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0):
	d=(p/c)*100
	print(round(d,2))
elif(i>=0):
	e=(i/c)*100
	print(round(e, 2))
-- OUTPUT:
100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 15:05:45) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0 and i>=0):
	d=(p/c)*100
	print(round(d,2))
	e=(i/c)*100
	print(round(e, 2))
-- OUTPUT:
100.0
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 15:05:54) 
-- CODE:
x=int(input("numero:"))
c=0 #total de numeros
p=0
i=0
while(x!=0):
	if(x%2==0):
		p=p+1
	else:
		i=i+1
	c=c+1
	x=int(input("numero:"))
if(p>=0 and i>=0):
	d=(p/c)*100
	print(round(d,2))
	e=(i/c)*100
	print(round(e, 2))
-- EXECUTION TIME:
0.16251
-- TEST CASE 1:
---- input:
-10
-8
-6
-4
-2
0
---- correct output:
100.0
0.0
---- user output:
100.0
0.0
-- TEST CASE 2:
---- input:
11
11
9
1
10
2
4
0
---- correct output:
42.86
57.14
---- user output:
42.86
57.14
-- TEST CASE 3:
---- input:
1
2
3
4
5
6
7
8
9
0
---- correct output:
44.44
55.56
---- user output:
44.44
55.56
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
