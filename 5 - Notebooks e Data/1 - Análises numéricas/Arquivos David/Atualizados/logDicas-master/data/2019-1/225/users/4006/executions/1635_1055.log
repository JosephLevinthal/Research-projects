== TEST (2019-04-13 20:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- ERROR:
File "XXXX", line 10
    mensagem "sim"
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 20:42:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- EXECUTION TIME:
0.100005
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 20:42:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 20:43:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- EXECUTION TIME:
0.138116
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 20:57:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 20:58:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- EXECUTION TIME:
0.15063
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 20:58:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- EXECUTION TIME:
0.212111
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 20:58:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("velocidade inicial"))
a = float(input("angulo do vetor"))
vg = float(input("aceleracao da gravidade"))
from math import*
R = (v0)**2 * (radians(sin(2 * a)))
if abs(R):
	mensagem = "sim"
else :
	mensagem = "nao"
print(mensagem)


			  
-- EXECUTION TIME:
0.098129
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
