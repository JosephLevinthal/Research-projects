== TEST (2019-04-29 15:30:27) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
if ()
-- ERROR:
File "XXXX", line 6
    if ()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:30:32) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))

-- ERROR:
File "XXXX", line 6
    if ()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:30:49) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))

-- ERROR:
File "XXXX", line 6
    if ()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:43:09) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(D1 + D2 + D3) * D4
if(D <= 6):
	print(D)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    D=(D1 + D2 + D3) * D4
NameError: name 'D1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:43:51) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    D=(D1 + D2 + D3) * D4
NameError: name 'D1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:44:18) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    D=(D1 + D2 + D3) * D4
NameError: name 'D1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:44:56) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:48:44) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6) and (tipo_ataque == CAUDA):
	print(D)
elif (D <6) and (tipo_ataque == ESPADA)
else : 
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 9
    elif (D <6) and (tipo_ataque == ESPADA)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:16) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6) and (tipo_ataque == CAUDA):
	print(D)
elif (6 < D) and (tipo_ataque == ESPADA) :
else : 
	print("Entrada invalida")
-- ERROR:
File "XXXX", line 10
    else : 
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:24) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6) and (tipo_ataque == CAUDA):
	print(D)
elif (6 < D) and (tipo_ataque == ESPADA) :
	print(D)
else : 
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    elif (6 < D) and (tipo_ataque == ESPADA) :
NameError: name 'ESPADA' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:49:53) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)
elif (6 < D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:50:07) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)
elif (6 < D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:50:36) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)
elif (6 < D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 15:50:56) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D <= 6):
	print(D)
elif (6 < D):
	print(D)
else : 
	print("Entrada invalida")
-- EXECUTION TIME:
0.181174
-- TEST CASE 1:
---- input:
CAUDA
3
5
2
4
---- correct output:
40
---- user output:
40
-- TEST CASE 2:
---- input:
ESPADA
3
3
3
3
---- correct output:
36
---- user output:
27
-- TEST CASE 3:
---- input:
ESPAD
3
3
3
3
---- correct output:
Entrada invalida
---- user output:
27
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:51:06) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
elif (6 <= D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:51:33) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
elif (6 <= D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:51:50) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
elif (6 <= D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:20) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D != 6):
	print(D)
elif (6 <= D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:46) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
elif (6 <= D):
	print(D)
	else : 
		print("Entrada invalida")
-- ERROR:
File "XXXX", line 11
    else : 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:52:58) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
	elif (6 <= D):
		print(D)
else : 
print("Entrada invalida")
-- ERROR:
File "XXXX", line 9
    elif (6 <= D):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 15:53:08) 
-- CODE:
tipo_ataque=input("tipo de ataque :")
val1=int(input("valor 1 :"))
val2=int(input("lado 2 :"))
val3=int(input("lado 3 :"))
val4=int(input("valor 4 :"))
D=(val1 + val2 + val3) * val4
if(D < 6):
	print(D)
elif (6 <= D):
	print(D)
else : 
	print("Entrada invalida")
-- OUTPUT:
40
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
