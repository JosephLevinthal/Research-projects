== TEST (2019-04-14 13:01:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = (X,Y)
if()
-- ERROR:
File "XXXX", line 5
    if()
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:01:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = (X,Y)

-- ERROR:
File "XXXX", line 5
    if()
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:01:51) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input(X,Y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input(X,Y)
TypeError: input expected at most 1 arguments, got 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:02:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:04:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if(P>0):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:05:44) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if(P > 0):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:06:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if(P >= 0):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:06:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if(float(P >= 0)):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:06:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:06:52) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:07:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- EXECUTION TIME:
0.200793
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1636/2730/main.py", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:07:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:07:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>=0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:07:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>=0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:08:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = input((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    P = input((X,Y))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:08:33) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:08:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x "))
Y = float(input(" Digite o valor de Y "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:09:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:09:30) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:11:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:13:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = input(float((X,Y))
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- ERROR:
File "XXXX", line 5
    if("P>0"):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:13:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = (X,Y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:15:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
X = float(input(" Digite o valor de x: "))
Y = float(input(" Digite o valor de Y: "))
P = (X,Y)
if("(X,Y)>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:17:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:17:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:17:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if("P>0"):
	mensagem = " Superiores "
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:18:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if("P>0"):
	mensagem = Superiores 
	print(mensagem)
else:
	mensagem = Inferiores
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = Superiores 
NameError: name 'Superiores' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:18:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if(P>0):
	mensagem = Superiores 
	print(mensagem)
else:
	mensagem = Inferiores
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(P>0):
TypeError: '>' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:35:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de Y: "))
P = (x,y)
if("y>0"):
	mensagem = " Superiores " 
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:36:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de y: "))
P = (x,y)
if(y>0):
	mensagem = " Superiores " 
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:36:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(" Digite o valor de x: "))
y = float(input(" Digite o valor de y: "))
P = (x,y)
if(y>0):
	mensagem = " Superiores " 
	print(mensagem)
else:
	mensagem = " Inferiores "
	print(mensagem)

-- EXECUTION TIME:
0.193474
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
