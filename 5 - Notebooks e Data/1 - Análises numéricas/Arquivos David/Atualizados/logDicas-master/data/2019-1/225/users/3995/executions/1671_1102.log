== TEST (2019-04-19 20:15:20) 
-- CODE:
from math import*
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
if((H<0 or h<0 or r<0)or(H<=h)or(H<=2*r)):
	print("Entradas:",H,h,r)
	print("Entradas invalidas")
else:
	x=H-(2*r)
	V2=pi*(r**2)*x#volume do cilindro
	y=H-r
	V1=(pi/3)*(x**2)*(3*r-y)#volume da calota
	V3=(4/3)*pi*(r**3)#volume da esfera
	w=input("Em qual posicao?")
	if(w=="V2"):
		V=V2
	elif(w=="V1"):
		V=V1
	else:
		V=V2+V3
print(round(V, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    w=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 20:15:49) 
-- CODE:
from math import*
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
if((H<0 or h<0 or r<0)or(H<=h)or(H<=2*r)):
	print("Entradas:",H,h,r)
	print("Entradas invalidas")
else:
	x=H-(2*r)
	V2=pi*(r**2)*x#volume do cilindro
	y=H-r
	V1=(pi/3)*(x**2)*(3*r-y)#volume da calota
	V3=(4/3)*pi*(r**3)#volume da esfera
	w=input("Em qual posicao?")
	if(w=="V2"):
		V=V2
	elif(w=="V1"):
		V=V1
	else:
		V=V2+V3
print(round((V*1000), 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    w=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 20:16:36) 
-- CODE:
from math import*
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
if((H<0 or h<0 or r<0)or(H<=h)or(H<=2*r)):
	print("Entradas:",H,h,r)
	print("Entradas invalidas")
else:
	x=H-(2*r)
	V2=pi*(r**2)*x#volume do cilindro
	y=H-r
	V1=(pi/3)*(x**2)*(3*r-y)#volume da calota
	V3=(4/3)*pi*(r**3)#volume da esfera
	w=input("Em qual posicao?")
	if(w=="V2"):
		V=V2
	elif(w=="V1"):
		V=V1
	else:
		V=V2+V3
print(round((V*1000), 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    w=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 09:40:24) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
#volume da esfera e o volume do cilindro!
	elif(h<H+r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-r)
	elif(h<=H):
		vol=(4/5)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/5)*pi*((H-h)**2)*(5*r-(H+h))
	print("Volume:",round(vol*1000, 3),"litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-20 09:40:49) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
#volume da esfera e o volume do cilindro!
	elif(h<H+r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-r)
	elif(h<=H):
		vol=(4/5)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/5)*pi*((H-h)**2)*(5*r-(H+h))
	print("Volume:",round(vol*1000, 3),"litros")
else:
	print("Entradas invalidas")
		
-- EXECUTION TIME:
0.180288
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 09:40:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
#volume da esfera e o volume do cilindro!
	elif(h<H+r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-r)
	elif(h<=H):
		vol=(4/5)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/5)*pi*((H-h)**2)*(5*r-(H+h))
	print("Volume:",round(vol*1000, 3),"litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 09:48:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(1/3)*pi*(h**2)*(3*r-h)
#volume da esfera e o volume do cilindro!
	elif(h<H+r):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-r)
	elif(h<=H):
		vol=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/5)*pi*((H-h)**2)*(5*r-(H+h))
	print("Volume:",round(vol*1000, 3),"litros")
else:
	print("Entradas invalidas")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 200536.237 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:42:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print(round((vol*1000), 3))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print(round((vol*1000), 3))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
136829.974
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:42:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print(round((vol*1000), 3))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print(round((vol*1000), 3))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print(round((vol*1000), 3))
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
136829.974
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:42:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print(round((vol*1000), 3))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print(round((vol*1000), 3))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print(round((vol*1000), 3))
		
-- EXECUTION TIME:
0.183821
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
136829.974
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:43:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume"(round((vol*1000), 3)))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume"(round((vol*1000), 3)))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume"(round((vol*1000), 3)))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Volume"(round((vol*1000), 3)))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:43:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)))
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:44:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)))
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)))
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)))
		
-- EXECUTION TIME:
0.139953
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:44:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:44:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
		
-- EXECUTION TIME:
0.18217
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:45:07) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
		
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:45:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:45:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.157775
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:46:08) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:46:23) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:46:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:46:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.139248
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:47:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:47:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.190408
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:47:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:48:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 4)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 4)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 4)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.9736 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:48:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 4)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 4)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 4)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.15854
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.9736 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:48:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:48:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.135188
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:48:46) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:45:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:45:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(x**2)*(3*r-x)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(x**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:46:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(h**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 23:46:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*(h**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.189254
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:47:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 23:47:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.133582
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:47:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:48:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:24:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h=H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    elif(h=H-2*r):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:25:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:25:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.151292
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:25:18) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:29:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:30:08) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:30:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.17901
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:30:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:31:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:32:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<=r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:32:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<=r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.142705
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:32:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<=r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:35:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.252982
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:35:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:35:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=(2/3)*pi*(r**3)+pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:36:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.191472
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:36:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:37:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:38:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:38:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.202146
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:38:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:40:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:40:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.183571
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:40:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:41:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:41:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.15392
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:41:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:42:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:42:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.17583
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:42:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:45:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
			vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 15
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:45:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:45:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:45:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.127132
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:45:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:47:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:47:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H+r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:48:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>=H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:48:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>=H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.19663
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:48:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>=H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-2*r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:49:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:49:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.203707
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:49:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h>H-r):
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:52:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:52:17) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.183625
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:52:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3)
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:53:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:53:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.171066
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:53:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:57:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:58:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:58:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:58:23) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:58:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 12:58:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 12:59:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.146071
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:08:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:08:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:08:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:09:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:10:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 13:11:07) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.123196
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:11:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 119620.329 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:14:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 13:14:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.147948
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:14:16) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h<=H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 136829.974 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 13:18:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 13:18:16) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.158032
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 12:38:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 12:38:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=pi*(r**2)*(H-2*r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:30:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:32:12) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.176551
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:32:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:32:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.121934
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:36:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:36:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+((4/3)*pi*(r**3))/2),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.150771
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:42:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:42:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.148625
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
