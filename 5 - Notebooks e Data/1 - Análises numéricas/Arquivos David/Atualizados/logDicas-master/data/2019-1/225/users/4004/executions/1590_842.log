== TEST (2019-03-25 15:48:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input(valor))

a = abcd//bcd
b = abcd//acd
c = abcd//abd
d = abcd//abc

var1 = a + b + c + d
print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    abcd = int(input(valor))
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:48:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

a = abcd//bcd
b = abcd//acd
c = abcd//abd
d = abcd//abc

var1 = a + b + c + d
print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = abcd//bcd
NameError: name 'bcd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:50:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

bcd = abcd/a
acd = abcd/b
abd = abcd/c
abc = abcd/d

a = abcd/bcd
b = abcd/acd
c = abcd/abd
d = abcd/abc

var1 = a + b + c + d
print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    bcd = abcd/a
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:08:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))


print(var1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(var1)
NameError: name 'var1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:17:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

a = abcd//1000
b = abcd//3100
c = a + b
d = abcd//3100

var1 = a + b + c + d

print(var1)
-- OUTPUT:
24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:17:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

a = abcd//1000
b = abcd//3100
c = a + b
d = abcd//3100

var1 = a + b + c + d

print(var1)
-- OUTPUT:
24
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 14:17:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

a = abcd//1000
b = abcd//3100
c = a + b
d = abcd//3100

var1 = a + b + c + d

print(var1)
-- EXECUTION TIME:
0.183845
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
24
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 14:18:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor "))

a = abcd//1000
b = abcd//3100
c = a + b
d = abcd//3100

var1 = a + b + c + d

print(var1)
-- EXECUTION TIME:
0.153407
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
24
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:20:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd//1000
b = abcd//3000
c = abcd//700
d = abcd//3000

var1 = a + b + c + d

print(var1)
-- OUTPUT:
28
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 14:20:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd//1000
b = abcd//3000
c = abcd//700
d = abcd//3000

var1 = a + b + c + d

print(var1)
-- EXECUTION TIME:
0.23339
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
28
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 14:40:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd//1000
b = abcd//1000
c = abcd//1000
d = abcd//1000

var1 = a + b + c + d

print(var1)
-- OUTPUT:
36
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 15:00:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd % 10
b = abcd//10 % 10
c = abcd//10//10%10
d = abcd//1000

var1 = a + b + c + d

print(var1)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 15:00:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd % 10
b = abcd//10 % 10
c = abcd//10//10%10
d = abcd//1000

var1 = a + b + c + d

print(var1)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 15:01:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

abcd = int(input("valor: "))

a = abcd % 10
b = abcd//10 % 10
c = abcd//10//10%10
d = abcd//1000

var1 = a + b + c + d

print(var1)
-- EXECUTION TIME:
0.164649
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
