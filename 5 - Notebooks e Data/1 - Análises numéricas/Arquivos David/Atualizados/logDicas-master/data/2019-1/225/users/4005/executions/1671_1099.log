== TEST (2019-04-24 15:08:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a=b=c):
	print("Tipo de triangulo: equilatero")
elif(a=b!=c and b=c!=a and c=a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a=0 or b=0 or c=0):
	j=j
	
else:
	print(j)
-- ERROR:
File "XXXX", line 7
    if(a=b=c):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:09:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a=b!=c and b=c!=a and c=a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a=0 or b=0 or c=0):
	j=j
	
else:
	print(j)
-- ERROR:
File "XXXX", line 9
    elif(a=b!=c and b=c!=a and c=a!=b):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:09:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a=0 or b=0 or c=0):
	j=j
	
else:
	print(j)
-- ERROR:
File "XXXX", line 13
    elif(a=0 or b=0 or c=0):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:09:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a==0 or b==0 or c==0):
	j=j
	
else:
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(j)
NameError: name 'j' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:09:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a==0 or b==0 or c==0):
	j=j
	
else:
	print(j)
-- EXECUTION TIME:
0.164646
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1099/main.py", line 17, in <module>
    print(j)
NameError: name 'j' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:10:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a==0 or b==0 or c==0):
	j=j
	
else:
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(j)
NameError: name 'j' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:10:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a==0 or b==0 or c==0):
	j=j
	
else:
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(j)
NameError: name 'j' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:10:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c):
	print("Tipo de triangulo: escaleno")
elif(a==0 or b==0 or c==0):
	j=j
	
else:
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print(j)
NameError: name 'j' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:12:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.120842
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:12:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:13:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:13:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:13:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c!=0 and b==c!=a!=0 and c==a!=b!=0):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:14:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:14:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.23765
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:14:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:15:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:15:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:15:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a= float(input(":"))
b= float(input(":"))
c= float(input(":"))
print(a,b,c)
if(a==b==c!=0):
	print("Tipo de triangulo: equilatero")
elif(a==b!=c and b==c!=a and c==a!=b):
	print("Tipo de triangulo: isosceles")
elif(a!=b!=c!=0):
	print("Tipo de triangulo: escaleno")
	
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:35:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
A=float(input("lado A :"))
B=float(input("Lado B: "))
C=float(input("Lado C: "))
print("Entradas:",A,",",B,",",C)
if(A==B==C):
	X="equilatero"
elif(A>=B+C)or(B>=A+C)or(C>=A+B):
	X="invalido"
elif(A==B)or(C==B):
	X="isosceles"
else:
	X="escaleno"
print("Tipo de triangulo: ",X)	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:35:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
A=float(input("lado A :"))
B=float(input("Lado B: "))
C=float(input("Lado C: "))
print("Entradas:",A,",",B,",",C)
if(A==B==C):
	X="equilatero"
elif(A>=B+C)or(B>=A+C)or(C>=A+B):
	X="invalido"
elif(A==B)or(C==B):
	X="isosceles"
else:
	X="escaleno"
print("Tipo de triangulo: ",X)	
-- EXECUTION TIME:
0.180211
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:  isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo:  escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
