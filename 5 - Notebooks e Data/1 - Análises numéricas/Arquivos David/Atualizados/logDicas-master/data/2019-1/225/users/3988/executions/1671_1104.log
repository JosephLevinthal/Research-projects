== TEST (2019-04-29 12:38:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if(c >= a) and (c <= b) or (d >= a) and (d <= b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    print("Ha intersecao")
                         ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if(c >= a) and (c <= b) or (d >= a) and (d <= b):
	   print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:39:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if(c >= a) and (c <= b) or (d >= a) and (d <= b):
	   print("Ha intersecao")
	else:
		 print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.188369
-- ERROR:
  File "/home/codebench/codes/1671/1104/main.py", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if(c >= a) and (c <= b) or (d >= a) and (d <= b):
	   print("Ha intersecao")
	else:
		 print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:46:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if((c >= a) and (c <= b) or (d >= a) and (d <= b)):
	   print("Ha intersecao")
   else:
		 print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 14
    print("Nao ha intersecao")
                             ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:47:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if((c >= a) and (c <= b) or (d >= a) and (d <= b)):
	    print("Ha intersecao")
   else:
		 print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 14
    print("Nao ha intersecao")
                             ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:48:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if((c >= a) and (c <= b) or (d >= a) and (d <= b)):
	   print("Ha intersecao")
   else:
	   print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:48:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:", a,",", b)
print("Intervalo 2:", c,",", d)
if((b>a) and (d>c)):
   if((c >= a) and (c <= b) or (d >= a) and (d <= b)):
	   print("Ha intersecao")
   else:
	   print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.130129
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
