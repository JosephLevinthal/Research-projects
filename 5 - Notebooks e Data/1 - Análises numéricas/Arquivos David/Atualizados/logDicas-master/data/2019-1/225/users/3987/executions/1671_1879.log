== TEST (2019-04-29 17:30:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))
print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
-- OUTPUT:
420.0 extras e 20.0 de falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:31:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))
print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
print("R$", h)
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 8400.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:35:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
else:
	print("R$", 100.0)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:35:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
else:
	print("R$", 100.0)

-- EXECUTION TIME:
0.21704
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:36:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:36:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- EXECUTION TIME:
0.153186
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:37:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
elif(h < 400):
	print("R$", 100.0)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:37:30) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1//4) *no
if(h > 100):
	print("R$", 500.0)
elif(h < 400):
	print("R$", 100.0)

-- EXECUTION TIME:
0.163089
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:37:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1/4) *no
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:37:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = (n - 1/4) *no
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- EXECUTION TIME:
0.185517
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:39:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:39:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.0)
elif(h <= 400):
	print("R$", 100.0)

-- EXECUTION TIME:
0.145375
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:40:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.00)
elif(h <= 400):
	print("R$", 100.00)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:40:08) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.00)
elif(h <= 400):
	print("R$", 100.00)

-- EXECUTION TIME:
0.179729
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:40:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionerio faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.00)
elif(h <= 400):
	print("R$", 100.00)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:41:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.00)
else:
	print("R$", 100.00)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:41:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
h = ((n) - 1//4) * (no)
if(h > 100):
	print("R$", 500.00)
else:
	print("R$", 100.00)

-- EXECUTION TIME:
0.150961
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:43:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	print("R$", 500.00)
else:
	print("R$", 100.00)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:43:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	print("R$", 500.00)
else:
	print("R$", 100.00)

-- EXECUTION TIME:
0.144134
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:44:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	print("R$", 500.00)
elif(H <= 400):
	print("R$", 100.00)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:44:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	print("R$", 500.00)
elif(H <= 400):
	print("R$", 100.00)

-- EXECUTION TIME:
0.211573
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:58:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	r = round(500,2)
	print("R$", r)
elif(H <= 400):
	t = round(100,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:59:08) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	r = round(500,2)
	print("R$", r)
elif(H <= 400):
	t = round(100,2)
	print("R$", t)

-- EXECUTION TIME:
0.13246
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:59:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	r = round(500,2)
	print("R$", r)
elif(H <= 400):
	t = round(100,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:59:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
elif(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:59:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = ((n) - 1//4) * (no)
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
elif(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- EXECUTION TIME:
0.17612
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:00:34) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
elif(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:00:42) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)
H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
elif(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- EXECUTION TIME:
0.128531
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:04:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
	if(H <= 400):
		t = round(100.00,2)
		print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:05:31) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
if(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:05:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
if(H <= 400):
	t = round(100.00,2)
	print("R$", t)

-- EXECUTION TIME:
0.24219
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:06:08) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
else:
	t = round(100.00,2)
	print("R$", t)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:06:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = round(500.00,2)
	print("R$", r)
else:
	t = round(100.00,2)
	print("R$", t)

-- EXECUTION TIME:
0.172982
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 500.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:08:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = 500.00
	print(round("R$", r),2)
else:
	t = 100.00
	print(round("R$", t),2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round("R$", r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:10:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta",)

H = (((n) - 1//4) * (no))
if(H > 100):
	r = 500
	print(round("R$", r),2)
else:
	t = 100
	print(round("R$", t),2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round("R$", r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:35:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

H = n - ((1//4) * no)
if(H > 400.00):
	r = 500.00
	print(round("R$", r),2)
else:
	r = 100.00
	print(round("R$", r),2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round("R$", r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:36:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

H = n - ((1//4) * no)
if(H > 400.00):
	r = round(500.00,2)
	print("R$", r)
else:
	r = round(100.00,2)
	print("R$", r)

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:36:59) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

H = n - ((1//4) * no)
if(H > 400.00):
	r = round(500.00,2)
	print("R$", r)
else:
	r = round(100.00,2)
	print("R$", r)

-- EXECUTION TIME:
0.168815
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:38:42) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

H = n - ((1//4) * no)
if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:38:51) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

H = n - ((1//4) * no)
if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- EXECUTION TIME:
0.296359
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:48:20) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))
H = n - ((1//4) * no)
print(n ,"extras e", no ,"de falta")

if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:48:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))
H = n - ((1//4) * no)
print(n ,"extras e", no ,"de falta")

if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- EXECUTION TIME:
0.217382
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:50:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
H = n - ((1//4) * no)
if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:50:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
H = n - ((1//4) * no)
if(H > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- EXECUTION TIME:
0.131833
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:50:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:50:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:51:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$", round(r,2))

-- EXECUTION TIME:
0.177874
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:53:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
	print(round("R$",r),2)
else:
	r = 100.00
	print(round("R$",r),2)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round("R$",r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:53:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
	print(round("R$",r),2)
else:
	r = 100.00
	print(round("R$",r),2)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round("R$",r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:55:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
	print(round("R$",r),2)
else:
	s = 100.00
	print(round("R$",s),2)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round("R$",r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:55:15) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
	print(round("R$",r),2)
else:
	s = 100.00
	print(round("R$",s),2)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round("R$",r),2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:55:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
	if(h > 400.00):
		r = 500.00
		print(round("R$",r),2)
	else:
		s = 100.00
		print(round("R$",s),2)


-- ERROR:
File "XXXX", line 7
    if(h > 400.00):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:57:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:57:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")
h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.130826
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:58:21) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:58:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n ,"extras e", no ,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.163065
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:59:18) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n,"extras e", no,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:59:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("numero de horas extras:"))
no = float(input("numero de horas que o funcionario faltou:"))

print(n,"extras e", no,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.218338
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 20:59:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 20:59:57) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")

h = n - ((1//4) * no)
if(h > 400.00):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.138728
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:02:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)

if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:03:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)

if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.172164
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:04:26) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)

if(400.00 < h):
	r = 500.00
elif(400.00 => h):
	r = 100.00
print("R$",round(r,2))

-- ERROR:
File "XXXX", line 10
    elif(400.00 => h):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:04:44) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)

if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:05:05) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)

if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.139697
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:06:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)
if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:06:53) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
n = float(input("e:"))
no = float(input("f:"))

print(n,"extras e", no,"de falta")
h = n - ((1//4) * no)
if(400.00 < h):
	r = 500.00
else:
	r = 100.00
print("R$",round(r,2))

-- EXECUTION TIME:
0.148815
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 500.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
