== TEST (2019-04-20 14:44:25) 
-- CODE:
valorced = int(input("Valor da cedula:"))

if (valorced==2):
	print("Tartaruga")
elif(valorced==5):
	print("Garça")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 116415.905 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:44:36) 
-- CODE:
valorced = int(input("Valor da cedula:"))

if (valorced==2):
	print("Tartaruga")
elif(valorced==5):
	print("Garça")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 116415.905 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:44:43) 
-- CODE:
valorced = int(input("Valor da cedula:"))

if (valorced==2):
	print("Tartaruga")
elif(valorced==5):
	print("Garca")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 116415.905 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:50:18) 
-- CODE:
valorced = int(input("Valor da cedula:"))

if (valorced==2):
	print("Tartaruga")
elif (valorced==5):
	print("Garca")
if (valorced==10):
	print("Arara")
elif (valorced==20):
	print("Mico-leao-dourado")
if (valorced==50):
	print("Onca-pintada")
elif (valorced==100):
	print("Garoupa")

-- OUTPUT:
Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:51:56) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:52:19) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico leao dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:52:33) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico leao dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:53:08) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal": Mico-leao-dourado)
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
File "XXXX", line 12
    print("Animal": Mico-leao-dourado)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:53:54) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal:", Mico-leao-dourado)
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:05) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:05) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:05) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:05) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:20) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico leao dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:55:27) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
if (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico leao dourado")
if (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print("Animal: Garoupa")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:56:18) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print()
elif ():
	print()
if (valorced==10):
	print()
elif (valorced==20):
	print()
if (valorced==50):
	print()
elif (valorced==100):
	print()

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:56:49) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif ():
	print()
if (valorced==10):
	print()
elif (valorced==20):
	print()
if (valorced==50):
	print()
elif (valorced==100):
	print()

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:57:11) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal:", Tartaruga")
elif ():
	print()
if (valorced==10):
	print()
elif (valorced==20):
	print()
if (valorced==50):
	print()
elif (valorced==100):
	print()

-- ERROR:
File "XXXX", line 6
    print("Animal:", Tartaruga")
                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:57:20) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal:", Tartaruga)
elif ():
	print()
if (valorced==10):
	print()
elif (valorced==20):
	print()
if (valorced==50):
	print()
elif (valorced==100):
	print()

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 14:57:50) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
elif ():
	print()
if (valorced==10):
	print()
elif (valorced==20):
	print()
if (valorced==50):
	print()
elif (valorced==100):
	print()

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:51:08) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal", Tartaruga)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:51:27) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: Tartaruga")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print()
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:51:43) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print(Animal: "Tartaruga")
-- ERROR:
File "XXXX", line 6
    print(Animal: "Tartaruga")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:51:58) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	msg = "Animal, Tartaruga"
-- ERROR:
File "XXXX", line 6
    print(Animal: "Tartaruga")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:52:18) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal, Tartaruga")
-- ERROR:
File "XXXX", line 6
    print(Animal: "Tartaruga")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:53:46) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: ")
-- ERROR:
File "XXXX", line 6
    print(Animal: "Tartaruga")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:54:02) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal": )
-- ERROR:
File "XXXX", line 6
    print("Animal": )
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:54:12) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal": tartaruga)
-- ERROR:
File "XXXX", line 6
    print("Animal": tartaruga)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-20 15:54:20) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal": "tartaruga")
-- ERROR:
File "XXXX", line 6
    print("Animal": "tartaruga")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:51:25) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced===2):
	print("Animal:", tartaruga)





	

-- ERROR:
File "XXXX", line 5
    if (valorced===2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:51:33) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal:", tartaruga)





	

-- ERROR:
File "XXXX", line 5
    if (valorced===2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:10:11) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: tartaruga" )





	

-- ERROR:
File "XXXX", line 5
    if (valorced===2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:10:30) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Animal: tartaruga" )





	

-- ERROR:
File "XXXX", line 5
    if (valorced===2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:10:50) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print( "Animal": tartaruga" )





	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:12:08) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print("Tartaruga")





	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:12:29) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print 




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:12:56) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print ("Animal:", tartaruga)




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:13:15) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print ("Animal:", "tartaruga")




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:15:41) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:15:47) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:16:41) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print =("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")




	

-- ERROR:
File "XXXX", line 6
    print( "Animal": tartaruga" )
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:20:08) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==)




	

-- ERROR:
File "XXXX", line 7
    elif (valorced==)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:20:15) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")




	

-- OUTPUT:
Entrada: 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:27:23) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Entrada: ")
	print("Animal: invalido")



	

-- OUTPUT:
Entrada: 100
Animal: garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:27:52) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Entrada:", valorced )
	print("Animal: invalido")



	

-- OUTPUT:
Entrada: 100
Animal: garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:28:00) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Entrada:", valorced )
	print("Animal: invalido")



	

-- EXECUTION TIME:
0.283388
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Entrada: 7
Animal: invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:28:17) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Entrada:", valorced )




	

-- EXECUTION TIME:
0.184898
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Entrada: 7
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:29:58) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Animal: invalido")




	

-- OUTPUT:
Entrada: 100
Animal: garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:30:05) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Animal: invalido")




	

-- EXECUTION TIME:
0.148691
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:30:08) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Animal: invalido")




	

-- EXECUTION TIME:
0.212681
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:30:20) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: garoupa")
else:
	print("Animal: Invalido")




	

-- EXECUTION TIME:
0.146095
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:31:07) 
-- CODE:
valorced = int(input("Valor da cedula:"))

print("Entrada:", valorced)

if (valorced==2):
	print ("Animal: Tartaruga")
elif (valorced==5):
	print("Animal: Garca")
elif (valorced==10):
	print("Animal: Arara")
elif (valorced==20):
	print("Animal: Mico-leao-dourado")
elif (valorced==50):
	print("Animal: Onca-pintada")
elif (valorced==100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")




	

-- EXECUTION TIME:
0.195267
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
