== TEST (2019-04-03 13:41:56) 
-- CODE:
texto = comer e bom
print(upper(texto))
-- ERROR:
File "XXXX", line 1
    texto = comer e bom
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:42:21) 
-- CODE:
texto = comer_e_bom
print(upper(texto))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    texto = comer_e_bom
NameError: name 'comer_e_bom' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:42:39) 
-- CODE:
var = comer_e_bom
print(upper(var))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    var = comer_e_bom
NameError: name 'comer_e_bom' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:42:57) 
-- CODE:
var = upper(comer_e_bom)
print(upper(var))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    var = upper(comer_e_bom)
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:43:55) 
-- CODE:
 texto = input(upper())
print(texto)
-- ERROR:
File "XXXX", line 1
    texto = input(upper())
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:44:04) 
-- CODE:
texto = input(upper())
print(texto)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    texto = input(upper())
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:45:06) 
-- CODE:
texto = comer e bom
print(texto.upper())
-- ERROR:
File "XXXX", line 1
    texto = comer e bom
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:45:18) 
-- CODE:
texto = comer_e_bom
print(texto.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    texto = comer_e_bom
NameError: name 'comer_e_bom' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 13:45:36) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- OUTPUT:
COMER_E_BOM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 14:07:18) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- EXECUTION TIME:
0.132118
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
COMER_E_BOM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 14:07:23) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- EXECUTION TIME:
0.137838
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
COMER_E_BOM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:07:24) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- OUTPUT:
COMER_E_BOM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 14:07:28) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- EXECUTION TIME:
0.134297
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
COMER_E_BOM
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:07:29) 
-- CODE:
texto = "comer_e_bom"
print(texto.upper())
-- OUTPUT:
COMER_E_BOM
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 14:08:09) 
-- CODE:
texto = input("escreva")
print(texto.upper())
-- EXECUTION TIME:
0.143809
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
PRIMEIRO_CASO_DE_TESTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
