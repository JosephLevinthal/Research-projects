== TEST (2019-03-20 14:57:58) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("100"))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- OUTPUT:
1160
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 14:58:21) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("100"))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- EXECUTION TIME:
0.176613
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1160
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1160
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1160
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 14:58:40) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- OUTPUT:
1001160
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 14:58:43) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- EXECUTION TIME:
0.190635
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1001160
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1001160
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1001160
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 14:59:30) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
print = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(total*8)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:00:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
input = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total*8)
-- OUTPUT:
1001160
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:00:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total"*8)
-- OUTPUT:
100totaltotaltotaltotaltotaltotaltotaltotal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:01:02) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
print = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total"*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("total"*8)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:03:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total",*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("total",*8)
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:03:44) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total",*8)
-- EXECUTION TIME:
0.178872
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2894/main.py", line 11, in <module>
    print("total",*8)
TypeError: print() argument after * must be a sequence, not int

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:07:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total"*8)
-- OUTPUT:
totaltotaltotaltotaltotaltotaltotaltotal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:07:21) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total",*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("total",*8)
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:08:02) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print = float("total",*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print = float("total",*8)
TypeError: type object argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:09:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(float("total",*8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float("total",*8))
TypeError: type object argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:09:52) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(float("total",* 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float("total",* 8))
TypeError: type object argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:10:00) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(float("total"* 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float("total"* 8))
ValueError: could not convert string to float: 'totaltotaltotaltotaltotaltotaltotaltotal'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:10:16) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total"* 8)
-- OUTPUT:
totaltotaltotaltotaltotaltotaltotaltotal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:10:25) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print("total",* 8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print("total",* 8)
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:11:27) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total,* 8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(total,* 8)
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:12:11) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total,*8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(total,*8)
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:13:18) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(total,*8.0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(total,*8.0)
TypeError: print() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:14:05) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(float("total",*8.0))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float("total",*8.0))
TypeError: type object argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:14:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(145*8)
-- OUTPUT:
1160
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:14:41) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = 100

# Calculo do valor a ser pago, incluindo o frete:
total = 145

# Impressao do valor total:
print(145*8)
-- EXECUTION TIME:
0.143398
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1160
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1160
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1160
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:24:13) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
preco unitario = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total = 55

# Impressao do valor total:
print("total*8")
-- ERROR:
File "XXXX", line 5
    preco unitario = float(input(10))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:24:22) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
preco unitario = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total = 55

# Impressao do valor total:
print("total,*8")
-- ERROR:
File "XXXX", line 5
    preco unitario = float(input(10))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:11) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor*8)+45

# Impressao do valor total:
print("total")
-- OUTPUT:
10total
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:33) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total = ((valor*8)+45)

# Impressao do valor total:
print("total")
-- OUTPUT:
10total
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input(10))

# Calculo do valor a ser pago, incluindo o frete:
total = ((valor*8)+45)

# Impressao do valor total:
print(total)
-- OUTPUT:
1054.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:28:05) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(?????)
-- ERROR:
File "XXXX", line 11
    print(?????)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:28:24) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)

-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:28:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (var*8)+45

# Impressao do valor total:
print(total)

-- EXECUTION TIME:
0.119649
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
