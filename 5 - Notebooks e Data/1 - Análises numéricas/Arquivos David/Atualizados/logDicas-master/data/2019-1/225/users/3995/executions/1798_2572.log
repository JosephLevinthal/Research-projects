== TEST (2019-06-10 15:35:14) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=''
j=''
for i range(size(vet)):
	if(vet[i]%2==0):
		v=v+vet[i]
	elif(vet[i]%2!=0):
		j=j+vet[i]
print(j)
-- ERROR:
File "XXXX", line 5
    for i range(size(vet)):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:35:21) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=''
j=''
for i in range(size(vet)):
	if(vet[i]%2==0):
		v=v+vet[i]
	elif(vet[i]%2!=0):
		j=j+vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:37:09) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		v[i]=vet[i]
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 15:38:09) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		v[i]=vet[i]
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- EXECUTION TIME:
1.23676
-- TEST CASE 1:
---- input:
[75247561,76546316,75713658,97135671,70356874]
---- correct output:
[75247561 97135671]
---- user output:
[75247561        0        0 97135671        0]
-- TEST CASE 2:
---- input:
[13017594,57417542,85024758,12475981,75942785,91875987,29584192,85794217]
---- correct output:
[12475981 75942785 91875987 85794217]
---- user output:
[       0        0        0 12475981 75942785 91875987        0 85794217]
-- TEST CASE 3:
---- input:
[31874903,74902746,23742046]
---- correct output:
[31874903]
---- user output:
[31874903        0        0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:38:41) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		j[i]=''
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:38:54) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		j[i]=""
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:39:07) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		v[i]=vet[i]
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:55:49) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))
v=zeros(size(vet),dtype=int)
j=zeros(size(vet),dtype=int)
for i in range(size(vet)):
	if(vet[i]%2==0):
		v[i]=vet[i]
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 19:38:50) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))


g=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		g+=1
v=zeros(g,dtype=int)

for i in range(size(vet)):
	if(vet[i]%2==0):
		v[i]=vet[i]
	elif(vet[i]%2!=0):
		j[i]=vet[i]
print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 19:39:32) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))


g=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		g+=1
v=zeros(g,dtype=int)

for i in range(size(vet)):
	if(vet[i]%2!=0):
		v[i]=vet[i]
	
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 19:39:56) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))


g=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		g+=1
v=zeros(g,dtype=int)
h=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		v[h]=vet[i]
	
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 19:40:24) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))


g=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		g+=1
v=zeros(g,dtype=int)
h=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		v[h]=vet[i]
		h+=1
	
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 19:40:37) 
-- CODE:
from numpy import*
vet=array(eval(input("matricula:")))


g=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		g+=1
v=zeros(g,dtype=int)
h=0
for i in range(size(vet)):
	if(vet[i]%2!=0):
		v[h]=vet[i]
		h+=1
	
print(v)
-- EXECUTION TIME:
1.20152
-- TEST CASE 1:
---- input:
[75247561,76546316,75713658,97135671,70356874]
---- correct output:
[75247561 97135671]
---- user output:
[75247561 97135671]
-- TEST CASE 2:
---- input:
[13017594,57417542,85024758,12475981,75942785,91875987,29584192,85794217]
---- correct output:
[12475981 75942785 91875987 85794217]
---- user output:
[12475981 75942785 91875987 85794217]
-- TEST CASE 3:
---- input:
[31874903,74902746,23742046]
---- correct output:
[31874903]
---- user output:
[31874903]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
