== TEST (2019-03-12 21:54:52) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper)
-- OUTPUT:
<built-in method upper of str object at 0x7f36e02f49f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 21:55:05) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper)
-- EXECUTION TIME:
0.204908
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
<built-in method upper of str object at 0x7fb4296464a8>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:55:45) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:56:11) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase=.upper)
-- ERROR:
File "XXXX", line 2
    print(frase=.upper)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:56:30) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase .upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase .upper("ada lovelace foi a primeira programadora da historia."))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:56:56) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(("ada lovelace foi a primeira programadora da historia.").upper)
-- OUTPUT:
<built-in method upper of str object at 0x7f0070d029f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:57:21) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(("ada lovelace foi a primeira programadora da historia.".upper))
-- OUTPUT:
<built-in method upper of str object at 0x7f33549d39f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:58:21) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(("frase".upper))
-- OUTPUT:
<built-in method upper of str object at 0x7f81d6a735a8>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 21:58:26) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(("frase".upper))
-- EXECUTION TIME:
0.16789
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
<built-in method upper of str object at 0x7fa46f2671b8>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 21:58:31) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(("frase".upper))
-- EXECUTION TIME:
0.270821
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
<built-in method upper of str object at 0x7f193a9561b8>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 21:58:54) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper)
-- OUTPUT:
<built-in method upper of str object at 0x7f4463af69f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 21:59:00) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper)
-- EXECUTION TIME:
0.221721
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
<built-in method upper of str object at 0x7fd804b754a8>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:01:48) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print('frase.upper')
-- OUTPUT:
frase.upper
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:02:34) 
-- CODE:
print(upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print(upper("ada lovelace foi a primeira programadora da historia."))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:02:45) 
-- CODE:
print(.upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
File "XXXX", line 1
    print(.upper("ada lovelace foi a primeira programadora da historia."))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:02:55) 
-- CODE:
print(upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print(upper("ada lovelace foi a primeira programadora da historia."))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:03:16) 
-- CODE:
print(("ada lovelace foi a primeira programadora da historia.upper"))
-- OUTPUT:
ada lovelace foi a primeira programadora da historia.upper
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 22:03:22) 
-- CODE:
print(("ada lovelace foi a primeira programadora da historia.upper"))
-- EXECUTION TIME:
0.139818
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ada lovelace foi a primeira programadora da historia.upper
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:03:53) 
-- CODE:
print("ada lovelace foi a primeira programadora da historia.".upper)
-- OUTPUT:
<built-in method upper of str object at 0x7f08905bf9f0>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:08:10) 
-- CODE:
print("ada lovelace foi a primeira programadora da historia.").upper()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print("ada lovelace foi a primeira programadora da historia.").upper()
AttributeError: 'NoneType' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 22:08:17) 
-- CODE:
print("ada lovelace foi a primeira programadora da historia.").upper()
-- EXECUTION TIME:
0.21344
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/1559/main.py", line 1, in <module>
    print("ada lovelace foi a primeira programadora da historia.").upper()
AttributeError: 'NoneType' object has no attribute 'upper'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:08:50) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia.")
print("ada lovelace foi a primeira programadora da historia.").upper(frase)
-- ERROR:
File "XXXX", line 1
    frase = "ada lovelace foi a primeira programadora da historia.")
                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 22:08:56) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia.")
print("ada lovelace foi a primeira programadora da historia.").upper(frase)
-- EXECUTION TIME:
0.161849
-- ERROR:
  File "/home/codebench/codes/1573/1559/main.py", line 1
    frase = "ada lovelace foi a primeira programadora da historia.")
                                                                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 22:09:02) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia.")
print("ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- EXECUTION TIME:
0.122792
-- ERROR:
  File "/home/codebench/codes/1573/1559/main.py", line 1
    frase = "ada lovelace foi a primeira programadora da historia.")
                                                                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:09:07) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia.")
print("ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- ERROR:
File "XXXX", line 1
    frase = "ada lovelace foi a primeira programadora da historia.")
                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:09:08) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia.")
print("ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- ERROR:
File "XXXX", line 1
    frase = "ada lovelace foi a primeira programadora da historia.")
                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:09:18) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print("ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- ERROR:
File "XXXX", line 3
    .upper(frase)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:09:24) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print("ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- ERROR:
File "XXXX", line 3
    .upper(frase)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:09:54) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase."ada lovelace foi a primeira programadora da historia.")
.upper(frase)
-- ERROR:
File "XXXX", line 2
    print(frase."ada lovelace foi a primeira programadora da historia.")
                                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:13:34) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA..upper(frase)")

-- ERROR:
File "XXXX", line 2
    print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA..upper(frase)")
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:13:42) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.upper(frase)")

-- ERROR:
File "XXXX", line 2
    print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.upper(frase)")
                                                                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:14:49) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA."upper(frase)

-- ERROR:
File "XXXX", line 2
    print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA."upper(frase)
                                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:16:24) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA."upper(frase)

-- ERROR:
File "XXXX", line 2
    print(frase."ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA."upper(frase)
                                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 22:39:47) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper())

-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 22:39:53) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper())

-- EXECUTION TIME:
0.121393
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 20:55:20) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper())

-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 20:55:20) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper())

-- EXECUTION TIME:
0.1172
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
