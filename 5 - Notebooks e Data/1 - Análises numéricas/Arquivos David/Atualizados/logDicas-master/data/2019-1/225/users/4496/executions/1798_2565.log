== TEST (2019-06-05 15:15:54) 
-- CODE:
a = [10,10,9]

for i in range(a):
	print(i)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    for i in range(a):
TypeError: 'list' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:16:14) 
-- CODE:
a = [10,10,9]

for i in range(size(a):
	print(i)
-- ERROR:
File "XXXX", line 3
    for i in range(size(a):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:16:18) 
-- CODE:
a = [10,10,9]

for i in range(size(a)):
	print(i)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    for i in range(size(a)):
NameError: name 'size' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:16:29) 
-- CODE:
from numpy import*

a = [10,10,9]

for i in range(size(a)):
	print(i)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:16:52) 
-- CODE:
from numpy import*

a = [10,10,9]

for i in range(size(a)):
	print(i)

print("")

for i in a:
	print(i)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:39:40) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= 75):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= 75):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= 75 )
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- ERROR:
File "XXXX", line 13
    elif(mf[i] >= 5 and pr[i] <= 75 )
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:39:50) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= 75):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= 75):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= 75 ):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:39:55) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= 75):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= 75):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= 75 ):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
1.10871
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1798/2565/main.py", line 8, in <module>
    for i in range(mf):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 15:40:08) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= 75):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= 75):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= 75 ):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:41:14) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
0.912217
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1798/2565/main.py", line 8, in <module>
    for i in range(mf):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:42:07) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(mf):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(pr[i] <= (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
1.13528
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1798/2565/main.py", line 8, in <module>
    for i in range(mf):
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:42:34) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] <= (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
1.12532
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[3 0 2]
[4 0 2]
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[1 0 0]
[1 0 1]
[1 0 2]
[1 0 3]
[2 0 3]
[3 0 3]
[3 0 4]
[4 0 4]
[4 1 4]
[5 1 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:43:15) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
0.968087
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[3 0 2]
[4 0 2]
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[1 0 0]
[1 0 1]
[1 0 2]
[1 0 3]
[2 0 3]
[3 0 3]
[3 0 4]
[4 0 4]
[4 1 4]
[5 1 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:43:26) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] > (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
1.14005
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[3 0 2]
[4 0 2]
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[1 0 0]
[1 0 1]
[1 0 2]
[1 0 3]
[2 0 3]
[3 0 3]
[3 0 4]
[4 0 4]
[4 1 4]
[5 1 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:44:39) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
		
	print(cont)
		
-- EXECUTION TIME:
1.06238
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
mf: pr: ch: [1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
mf: pr: ch: [1 0 0]
[2 0 0]
[2 0 1]
[2 0 2]
[3 0 2]
[4 0 2]
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
mf: pr: ch: [1 0 0]
[1 0 1]
[1 0 2]
[1 0 3]
[2 0 3]
[3 0 3]
[3 0 4]
[4 0 4]
[4 1 4]
[5 1 4]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:44:58) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
		
print(cont)
		
-- EXECUTION TIME:
0.971898
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
mf: pr: ch: [5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
mf: pr: ch: [5 1 4]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:45:08) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
print(cont)
		
-- EXECUTION TIME:
0.956558
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
mf: pr: ch: [5 1 4]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 15:46:45) 
-- CODE:
from numpy import*
mf = array(eval(input("mf: ")))
pr = array(eval(input("pr: ")))
ch = int(input("ch: "))

cont = zeros(3, dtype=int)
#cont[0]=ap #cont[1]=rn #cont[2]=rf
for i in range(size(mf)):
	if(mf[i] >= 5 and pr[i] >= (75/100)*ch):
		cont[0] = cont[0] + 1
	elif(mf[i] < 5 and pr[i] >= (75/100)*ch):	
		cont[1] = cont[1] + 1
	elif(mf[i] >= 5 and pr[i] < (75/100)*ch):
		cont[2] = cont[2] + 1
print(cont)
		
-- EXECUTION TIME:
0.953343
-- TEST CASE 1:
---- input:
[6.2,7.3,7.0,7.5,8.9]
[75,76,74,73,72]
100
---- correct output:
[2 0 3]
---- user output:
[2 0 3]
-- TEST CASE 2:
---- input:
[7.4,7.6,7.5,7.2,7.2,7.3,7.8]
[60,80,55,58,61,70,79]
80
---- correct output:
[5 0 2]
---- user output:
[5 0 2]
-- TEST CASE 3:
---- input:
[8.2,6.9,7.0,6.5,7.4,8.5,7.6,6.9,4.5,5.5]
[90,40,70,35,100,110,85,99,100,110]
120
---- correct output:
[5 1 4]
---- user output:
[5 1 4]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
