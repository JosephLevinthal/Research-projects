== TEST (2019-03-25 14:24:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:25:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:25:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
p = t%10
print(r+s+t+p)
-- EXECUTION TIME:
0.153934
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
250
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:26:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("numero de 4 digitos:"))
y = x // 1000
r = x%1000
s = r // 100
t = r%100
p = t // 10
g = t%10
print(r+s+t+g)
-- OUTPUT:
250
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:27:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("numero de 4 digitos:"))
b = a // 1000
c = a%1000
d = c // 100
e = c%100
f = e // 10
g =  e%10
print(r+s+t+g)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(r+s+t+g)
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:28:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("numero de 4 digitos:"))
b = a // 1000
c = a%1000
d = c // 100
e = c%100
f = e // 10
g =  e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("numero de 4 digitos:"))
b = a // 1000
c = a%1000
d = c // 100
e = c%100
f = e // 10
g =  e%10
print(b+d+f+g)
-- EXECUTION TIME:
0.176564
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("numero de 4 digitos:"))
b = a // 1000
c = a%1000
d = c // 100
e = c%100
f = e // 10
g =  e%10
print(b+d+f+g)
-- EXECUTION TIME:
0.160072
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
