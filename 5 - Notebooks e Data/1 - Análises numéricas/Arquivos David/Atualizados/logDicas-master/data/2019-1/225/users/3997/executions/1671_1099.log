== TEST (2019-04-24 17:48:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas: " lado1, " ", lado2, " ", lado3)

if ((b - c) < a < (b + c) and (a - c) < b < (a + c) and (a - b) < c < (a + b)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas: " lado1, " ", lado2, " ", lado3)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:48:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:  " lado1, lado2, lado3)

if ((b - c) < a < (b + c) and (a - c) < b < (a + c) and (a - b) < c < (a + b)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:  " lado1, lado2, lado3)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:50:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:  " lado1, ",", lado2, ",", lado3)

if ((b - c) < a < (b + c) and (a - c) < b < (a + c) and (a - b) < c < (a + b)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:  " lado1, ",", lado2, ",", lado3)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:50:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:" lado1, ",", lado2, ",", lado3)

if ((b - c) < a < (b + c) and (a - c) < b < (a + c) and (a - b) < c < (a + b)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:" lado1, ",", lado2, ",", lado3)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:53:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:" lado1, ",", lado2, ",", lado3)

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:" lado1, ",", lado2, ",", lado3)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:54:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:" lado1, lado2, lado3)

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:" lado1, lado2, lado3)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:56:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:" lado1, ",", lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 6
    print("Entradas:" lado1, ",", lado2, ",", lado3 )
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:57:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:",lado1, "," , lado2, "," , lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 15
    print("Tipo de triangulo: isosceles)
                                       ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:58:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles)
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 15
    print("Tipo de triangulo: isosceles)
                                       ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:58:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno)
-- ERROR:
File "XXXX", line 20
    print("Tipo de triangulo: escaleno)
                                      ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 17:59:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:00:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:00:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:00:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:00:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:01:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<0) and (lado2<0) and (lado3<0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:02:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<=0) and (lado2<=0) and (lado3<=0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:02:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo: equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo: isosceles")
		else:
			if((lado1<=0) and (lado2<=0) and (lado3<=0)):
					print("Tipo de triangulo: invalido")
			else:
					print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:04:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)):
	print("invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" "equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" "isosceles")
		else:
			if((lado1<=0) and (lado2<=0) and (lado3<=0)):
					print("Tipo de triangulo:" "invalido")
			else:
					print("Tipo de triangulo:" "escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:07:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)) or (lado1<=0) and (lado2<=0) and (lado3<=0):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:08:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) and (lado3- lado2) < lado1 < (lado3 + lado2) and (lado1 - lado3) < lado2 < (lado1 + lado3)) or (lado1<=0) and (lado2<=0) and (lado3<=0):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:09:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 - lado2) < lado3 < (lado1 + lado2) or (lado3- lado2) < lado1 < (lado3 + lado2) or (lado1 - lado3) < lado2 < (lado1 + lado3)) or (lado1<=0) and (lado2<=0) and (lado3<=0):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:12:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 >= lado2 + lado3) or (lado2 >= lado1 + lado3) or (lado3 >= lado1 + lado2)):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:12:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 >= lado2 + lado3) or (lado2 >= lado1 + lado3) or (lado3 >= lado1 + lado2)):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:12:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 >= lado2 + lado3) or (lado2 >= lado1 + lado3) or (lado3 >= lado1 + lado2)):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 18:12:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 >= lado2 + lado3) or (lado2 >= lado1 + lado3) or (lado3 >= lado1 + lado2)):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 18:13:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
lado1 = float(input("Digite um numero: "))
lado2 = float(input("Digite um numero: "))
lado3 = float(input("Digite um numero: "))
print("Entradas:", lado1, ",",lado2, ",", lado3 )

if ((lado1 >= lado2 + lado3) or (lado2 >= lado1 + lado3) or (lado3 >= lado1 + lado2)):
	print("Tipo de triangulo:" " invalido")
else:
	if((lado1 == lado2) and (lado1 == lado3) and (lado2 == lado3)):
		print("Tipo de triangulo:" " equilatero")
	else:
		if((lado1 == lado2) or (lado1 == lado3) or (lado2 == lado3)):
			print("Tipo de triangulo:" " isosceles")
		else:
			print("Tipo de triangulo:" " escaleno")
-- EXECUTION TIME:
0.261884
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
