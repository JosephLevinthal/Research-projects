== TEST (2019-04-01 00:31:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(float(A))
print(float(p))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:33:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 00:33:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- EXECUTION TIME:
0.138432
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:33:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 00:33:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- EXECUTION TIME:
0.186618
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:34:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    A = srqt(SC)
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:35:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
srqt

A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    srqt
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:35:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
srqt()

A = srqt(SC)

print(round(p, 5))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    srqt()
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:37:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
srqt()

print(round(p, 5))
print(round(srqt(A, 5))
-- ERROR:
File "XXXX", line 24
    
                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:38:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
srqt()

print(round(p, 5))
print(round(srqt(A, 5))
-- ERROR:
File "XXXX", line 24
    
                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:38:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
srqt()

print(round(p, 5))
print(round(srqt(A, 5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    srqt()
NameError: name 'srqt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:38:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
sqrt()

print(round(p, 5))
print(round(sqrt(A, 5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    sqrt()
TypeError: sqrt() takes exactly one argument (0 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 00:39:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
sqrt

print(round(p, 5))
print(round(sqrt(A, 5)))
-- EXECUTION TIME:
0.214605
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 23, in <module>
    print(round(sqrt(A, 5)))
TypeError: sqrt() takes exactly one argument (2 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:39:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *
sqrt

print(round(p, 5))
print(round(sqrt(A, 5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print(round(sqrt(A, 5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 00:40:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = sqrt(SC)

print(round(p, 5))
print(round(A, 5))
-- EXECUTION TIME:
0.187637
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
43.7
1516.81989
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
120.0
36000.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
131.0
46450.40865
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:40:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

SC = x*y*z

from math import *
A = sqrt(SC)

print(round(p, 5))
print(round(A, 5))
-- OUTPUT:
43.7
1516.81989
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 00:46:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *

print(round(math.sqrt(A), 5))
-- EXECUTION TIME:
0.128203
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 21, in <module>
    print(round(math.sqrt(A), 5))
NameError: name 'math' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:46:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *

print(round(math.sqrt(A), 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print(round(math.sqrt(A), 5))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:47:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *

print(round(math.sqrt(A), 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    print(round(math.sqrt(A), 5))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:56:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z

from math import *

print(round(sqrt(A)), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:02:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

from math import *

print(round(sqrt(A)), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:02:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

from math import *

print(round(sqrt(A)), 5)


-- EXECUTION TIME:
0.148144
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
1517 5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
36000 5
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
46450 5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:02:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

from math import *

print(round(sqrt(A)), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:06:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

s = a/2 + b/2 + c/2
  
A = s*(s - a)(s - b)(s - c)

from math import *

print(round(sqrt(A)), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    A = s*(s - a)(s - b)(s - c)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:06:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = int(input("Qual o tamanho do lado A?"))
b = int(input("Qual o tamanho do lado B?"))
c = int(input("Qual o tamanho do lado C?"))

s = a/2 + b/2 + c/2
  
A = s*(s - a)(s - b)(s - c)

from math import *

print(round(sqrt(A)), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:11:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

from math import *

print(round(sqrt(A)), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:18:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

k = x*y*z

from math import *
A = sqrt(k)

print(round(A), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:20:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt(k)

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

k = x*y*z

k = x*y*z

print(round(A), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    A = sqrt(k)
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:20:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt()

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

k = x*y*z

k = x*y*z

print(round(A), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    A = sqrt()
TypeError: sqrt() takes exactly one argument (0 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:20:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

k = x*y*z

k = x*y*z

print(round(A), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print(round(A), 5)
TypeError: type builtin_function_or_method doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:21:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

print(round(A), 5)


-- OUTPUT:
2300743 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:22:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = sqrt(x*y*z)

print(round(A), 5)


-- EXECUTION TIME:
0.155444
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
1517 5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
36000 5
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
46450 5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:22:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
A = sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = sqrt(x*y*z)

print(round(A), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:24:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
sqrt()

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

k = sqrt(A)
print(round(k), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    sqrt()
TypeError: sqrt() takes exactly one argument (0 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:24:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

k = sqrt(A)
print(round(k), 5)


-- EXECUTION TIME:
0.143501
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
1517 5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
36000 5
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
46450 5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:24:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *
sqrt

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

k = sqrt(A)
print(round(k), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:34:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z

k = math.sqrt(A)
print(round(k), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 21, in <module>
    k = math.sqrt(A)
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:35:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z
k = math.sqrt(A)

print(round(k), 5)


-- EXECUTION TIME:
0.168152
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 20, in <module>
    k = math.sqrt(A)
NameError: name 'math' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:35:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*(s - a)
y = s*(s - b)
z = s*(s - c)

A = x*y*z
k = sqrt(A)

print(round(k), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:35:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

print(round(k), 5)


-- OUTPUT:
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:36:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

print(round(k), 5)


-- EXECUTION TIME:
0.098398
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
1517 5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
36000 5
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
46450 5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:36:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

print(p)
print(round(k), 5)


-- OUTPUT:
43.7
1517 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:45:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

o = print(sqrt(A))
print(round(o), 5)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print(round(o), 5)
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:45:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

o = print(sqrt(A))
print(round((o), 5))


-- EXECUTION TIME:
0.125365
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 23, in <module>
    print(round((o), 5))
TypeError: type NoneType doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:45:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

o = print(sqrt(A))
print(round((o), 5))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 23, in <module>
    print(round((o), 5))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:47:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

from math import *

p = a + b + c

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

from math import *

o = print(sqrt(A))
print(round((o), 5))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 25, in <module>
    print(round((o), 5))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:47:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

from math import *
A = x*y*z
k = sqrt(A)
o = print(sqrt(A))
print(round((o), 5))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    k = sqrt(A)
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:47:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

s = a/2 + b/2 + c/2
  
x = s*s - s*a
y = s*s - s*b
z = s*s - s*c

A = x*y*z
k = sqrt(A)

from math import *
A = x*y*z
k = sqrt(A)
o = print(sqrt(A))
print(round((o), 5))


-- EXECUTION TIME:
0.205304
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 16, in <module>
    k = sqrt(A)
NameError: name 'sqrt' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:52:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a/2
l = b/2
m = c/2

f = k + l +m

from math import *

A = f*(s)

print(f)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    A = f*(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:52:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a/2
l = b/2
m = c/2

f = k + l +m

from math import *

print(f)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:53:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k + l +m

from math import *

print(f)
-- OUTPUT:
43.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:54:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

from math import *

print(f)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:55:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c
f = k/2
g = l/2
h = m/2

from math import *

print(f)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:56:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k + l + m

from math import *

print(k)
-- OUTPUT:
11.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:57:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

from math import *

print(k)
-- OUTPUT:
11.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 02:03:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (s - k)
G = (s - l)
H = (s - m)

D = s*F*G*H

from math import *

A = sqrt(D)

print(A)



print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    F = (s - k)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 02:03:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (s - k)
G = (s - l)
H = (s - m)

D = s*F*G*H

from math import *

A = sqrt(D)

print(A)



print(k)
-- EXECUTION TIME:
0.175365
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 15, in <module>
    F = (s - k)
NameError: name 's' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 02:03:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (s - k)
G = (s - l)
H = (s - m)

D = s*F*G*H

from math import *

A = sqrt(D)

print(A)



print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    F = (s - k)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 02:04:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (f - k)
G = (f - l)
H = (f - m)

D = f*F*G*H

from math import *

A = sqrt(D)

print(A)



print(k)
-- OUTPUT:
69.41967475975385
11.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 02:05:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (f - k)
G = (f - l)
H = (f - m)

D = f*F*G*H

from math import *

A = sqrt(D)

print(A)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 02:05:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (f - k)
G = (f - l)
H = (f - m)

D = f*F*G*H

from math import *

A = sqrt(D)

print(A)

-- EXECUTION TIME:
0.157008
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967475975385
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.1665442616423
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 02:05:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

a = float(input("Qual o tamanho do lado A?"))
b = float(input("Qual o tamanho do lado B?"))
c = float(input("Qual o tamanho do lado C?"))

k = a
l = b
m = c

f = k/2 + l/2 + m/2

F = (f - k)
G = (f - l)
H = (f - m)

D = f*F*G*H

from math import *

A = sqrt(D)

print(round(A, 5))

-- EXECUTION TIME:
0.189908
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
