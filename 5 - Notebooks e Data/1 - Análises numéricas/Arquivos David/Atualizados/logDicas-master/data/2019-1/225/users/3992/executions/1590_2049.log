== TEST (2019-03-21 14:13:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))

quo = x//y
rest = x%y
print(x
	  y
	  quo
	  rest)
-- ERROR:
File "XXXX", line 10
    y
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:14:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))

quo = x//y
rest = x%y
print(x y quo rest)
-- ERROR:
File "XXXX", line 9
    print(x y quo rest)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:14:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))

quo = float(x//y)
rest = float(x%y)
print(x y quo rest)
-- ERROR:
File "XXXX", line 9
    print(x y quo rest)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:15:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print()
-- ERROR:
File "XXXX", line 9
    print(x y quo rest)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:16:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd divi)
-- ERROR:
File "XXXX", line 10
    print(divd divi)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:16:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer"))
y = float(input("numero qualquer"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi)
-- OUTPUT:
8.0 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:18:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- EXECUTION TIME:
0.271465
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0 5.0 1.0 3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0 2.0 7.0 0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0 2.0 173.0 1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:18:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- OUTPUT:
8.0 5.0 1.0 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:18:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 20
y = 5
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- EXECUTION TIME:
0.161205
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
20 5 4.0 0.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
20 5 4.0 0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
20 5 4.0 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:18:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 20
y = 5
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- OUTPUT:
20 5 4.0 0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:20:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 20
y = 5
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- EXECUTION TIME:
0.193888
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
20 5 4.0 0.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
20 5 4.0 0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
20 5 4.0 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:21:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- OUTPUT:
8.0 5.0 1.0 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:21:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- EXECUTION TIME:
0.269686
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0 5.0 1.0 3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0 2.0 7.0 0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0 2.0 173.0 1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:22:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- OUTPUT:
8.0 5.0 1.0 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:22:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- EXECUTION TIME:
0.217472
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0 5.0 1.0 3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0 2.0 7.0 0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0 2.0 173.0 1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:23:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd,divi,quo,rest)
-- OUTPUT:
8.0 5.0 1.0 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:24:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd divi quo rest,1)
-- ERROR:
File "XXXX", line 10
    print(round(divd divi quo rest,1)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 14:24:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd divi quo rest,1))
-- ERROR:
File "XXXX", line 10
    print(round(divd divi quo rest,1))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 14:24:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd divi quo rest,1))
-- EXECUTION TIME:
0.1279
-- ERROR:
  File "/home/codebench/codes/1590/2049/main.py", line 10
    print(round(divd divi quo rest,1))
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:58:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd divi quo rest,1))
-- ERROR:
File "XXXX", line 10
    print(round(divd divi quo rest,1))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:58:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid,divi,quo,rest)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(divid,divi,quo,rest)
NameError: name 'divid' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 13:58:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid,divi,quo,rest)
-- EXECUTION TIME:
0.221292
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 10, in <module>
    print(divid,divi,quo,rest)
NameError: name 'divid' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:58:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid,divi,quo,rest)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(divid,divi,quo,rest)
NameError: name 'divid' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:59:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid,divi,quo,rest)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(divid,divi,quo,rest)
NameError: name 'divid' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:59:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid divi quo rest)
-- ERROR:
File "XXXX", line 10
    print(divid divi quo rest)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 13:59:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divid divi quo rest)
-- ERROR:
File "XXXX", line 10
    print(divid divi quo rest)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:00:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd)
print(divi)
print(quo)
print(rest)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:00:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd)
print(divi)
print(quo)
print(rest)
-- EXECUTION TIME:
0.186188
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.0
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.0
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:00:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(divd)
print(divi)
print(quo)
print(rest)
-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:01:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd))
print(round(divi))
print(round(quo))
print(round(rest))
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:01:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd))
print(round(divi))
print(round(quo))
print(round(rest))
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:01:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = float(input("numero qualquer:"))
y = float(input("numero qualquer:"))
divd= x
divi= y
quo = float(x//y)
rest = float(x%y)
print(round(divd))
print(round(divi))
print(round(quo))
print(round(rest))
-- EXECUTION TIME:
0.125112
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
