== SUBMITION (2019-04-15 12:56:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*n**2) * (3r - n))/ 3

if(1 == n):
	print(round(4, v1))
else:
	print(round(4, v2))
-- EXECUTION TIME:
0.200848
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 12
    v2 = ((pi*n**2) * (3r - n))/ 3
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*n**2) * (3r - n))/ 3

if(1 == n):
	print(round(4, v1))
else:
	print(round(4, v2))
-- ERROR:
File "XXXX", line 12
    v2 = ((pi*n**2) * (3r - n))/ 3
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3r - n))/ 3

if(1 == n):
	print(round(4, v1))
else:
	print(round(4, v2))
-- ERROR:
File "XXXX", line 12
    v2 = ((pi*(n**2) * (3r - n))/ 3
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(1 == n):
	print(round(4, v1))
else:
	print(round(4, v2))
-- ERROR:
File "XXXX", line 14
    if(1 == n):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(1 == n):
	print(round(4, v2))
else:
	print(round(4, v1))
-- ERROR:
File "XXXX", line 14
    if(1 == n):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:58:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1):
	print(round(4, v1))
else:
	print(round(4, v2))
-- ERROR:
File "XXXX", line 14
    if(n == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:00:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:01:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == "1"):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == "1"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:04:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = input("1/2")

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == "1"):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == "1"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:05:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == "1"):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == "1"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:05:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:05:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1)
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 15
    print(round(4, v2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:05:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1):
	print(round(4, v2))
else:
	print(round(4, v2 - v1))
-- ERROR:
File "XXXX", line 14
    if(n == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:06:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1)
	print(round(v2, 4))
else:
	print(round(, v2 - v1))
-- ERROR:
File "XXXX", line 15
    print(round(v2, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:06:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1)
	print(round(v2, 4))
else:
	print(round(v2 - v1, 2))
-- ERROR:
File "XXXX", line 15
    print(round(v2, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:06:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1)
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 15
    print(round(v2, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:07:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
n = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(n**2) * (3*r - n))/ 3

if(n == 1):
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 14
    if(n == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:11:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
x = int(input("1/2"))

v1 = 4*pi*r**3/ 3
v2 = ((pi*(x**2) * (3*r - x))/ 3

if(x == 1):
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 14
    if(x == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:14:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
x = int(input("1/2"))

v1 = 4*math.pi*r**3/ 3
v2 = ((math.pi*(x**2) * (3*r - x))/ 3

if(x == 1):
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 14
    if(x == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:17:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
x = int(input("1/2"))

v1 = (4*math.pi*r**3)/ 3
v2 = ((math.pi*(h**2) * (3*r - h))/ 3

if(x == 1):
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 14
    if(x == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:17:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

import math

r = float(input("Raio: "))
x = float(input("Altura da coluna de ar na parte superior do tanque: "))
opcao = int(input("Opcao (1 - volume de ar / 2 - volume de combustivel): "))

ve = (4 * math.pi * (r ** 3)) / 3
vce = (math.pi * (x ** 2) * ((3 * r) - x)) / 3

if(opcao == 1):
	print(round(vce, 4))
else:
	print(round(ve - vce, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:18:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

import math

r = float(input("Raio: "))
x = float(input("Altura da coluna de ar na parte superior do tanque: "))
opcao = int(input("Opcao (1 - volume de ar / 2 - volume de combustivel): "))

ve = (4 * math.pi * (r ** 3)) / 3
vce = (math.pi * (x ** 2) * ((3 * r) - x)) / 3

if(opcao == 1):
	print(round(vce, 4))
else:
	print(round(ve - vce, 4))
-- EXECUTION TIME:
0.166267
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:20:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

from math import*

r = float(input("Qual o raio? "))
h = float(input("Qual a altura da coluna? "))
x = int(input("1/2"))

v1 = (4*math.pi*r**3)/ 3
v2 = ((math.pi*(h**2) * (3*r - h))/ 3

if(x == 1):
	print(round(v2, 4))
else:
	print(round(v2 - v1, 4))
-- ERROR:
File "XXXX", line 14
    if(x == 1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
