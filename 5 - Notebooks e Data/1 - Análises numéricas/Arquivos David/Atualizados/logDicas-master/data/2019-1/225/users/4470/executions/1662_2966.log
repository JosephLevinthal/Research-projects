== TEST (2019-04-15 15:23:15) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + )
	
else:
	print("para não mulheres")
-- ERROR:
File "XXXX", line 5
    print("para mulheres" + )
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:23:21) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para não mulheres")
-- OUTPUT:
para não mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:23:46) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:23:56) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para nao mulheres")
-- EXECUTION TIME:
0.132509
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
para nao mulheres
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
para nao mulheres
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
para nao mulheres
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:23:59) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:07) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:16) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres" + nome )
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:25) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:38) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:18) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:36) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:44) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (p>q=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:24) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p>q
if  (z=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:29) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p>q
if  (z=="S"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:49) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p>q
if  (z=="N"):
	print("para mulheres")
	
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:28:35) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/q*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:28:40) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/q*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:19) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/20*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:26) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/20*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:30:26) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/20*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- EXECUTION TIME:
0.142879
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
para nao mulheres
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
para nao mulheres
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
para nao mulheres
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:28) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/20*p
if  (z=="S"):
	print("para mulheres")
else:
	print("para nao mulheres")
-- OUTPUT:
para nao mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:36:33) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (z-q):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if  (z-q):
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:36:39) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (z-q):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if  (z-q):
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:24) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (p>q=="S"):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:29) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (p>q=="S"):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:35) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (p>q=="S"):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:40) 
-- CODE:
x = input()
p = float(input())
q = int(input())

if  (p>q=="S"):
	z = p/q*20/100
else:
	z = p/q*20/100
print(round(2, z))

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:41:27) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:41:41) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	

-- EXECUTION TIME:
0.15367
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:

-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:

-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:41:45) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:42:47) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(z, 2))
-- OUTPUT:
1.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:42:51) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, z))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:42:58) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = 20/100*p/q
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, z))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:44:45) 
-- CODE:
x = input()
p = float(input())
q = int(input())
z = p/q*0.2
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, z))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, z))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:45:17) 
-- CODE:
x = input()
p = float(input())
q = int(input())
x = p/q*0.2
if  (z=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, z))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if  (z=="S"):
NameError: name 'z' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:46:52) 
-- CODE:
x = input()
p = float(input())
q = int(input())
x = p/q*0.2
if  (x=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, x))
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:47:39) 
-- CODE:
x = input()
p = float(input())
q = int(input())
x = p/q*0.2
if  (x=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, x))
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:48:09) 
-- CODE:
x = input()
p = float(input())
q = int(input())
x = p/q*0.2
if  (x=="S"):
	x = "para mulheres"
else:
	x = "nao para mulheres"
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(2, x))
TypeError: 'str' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:49:49) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (x=="S"):
	x = p/q*0.2
else:
	x = p/q
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, x))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:49:54) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (x=="S"):
	x = p/q*0.2
else:
	x = p/q
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, x))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:50:56) 
-- CODE:
x = input()
p = float(input())
q = int(input())
if  (x=="S"):
	x = 20/p-q
else:
	x = p-q
	
print(round(2, x))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(2, x))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:05) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:07) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:08) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:09) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:09) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:10) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:11) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:11) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:12) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:12) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:13) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
print("para mulheres")
else:
print("nao para mulheres")
	

-- ERROR:
File "XXXX", line 7
    print("para mulheres")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:21) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
	print("para mulheres")
else:
	print("nao para mulheres")
	

-- OUTPUT:
nao para mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:54:29) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
	print("para mulheres")
else:
	print("nao para mulheres")
	

-- OUTPUT:
nao para mulheres
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:54:31) 
-- CODE:
x = input()
p = float(input())
q = int(input())
P = p/20*p
Q = p-q
if  (P>Q=="S"):
	print("para mulheres")
else:
	print("nao para mulheres")
	

-- EXECUTION TIME:
0.150007
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
nao para mulheres
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
nao para mulheres
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
nao para mulheres
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
