== TEST (2019-03-23 12:39:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
ValorA = int(input(a))
ValorB = int(input(b))
ValorC = int(input(c))
max(ValorA,ValorB,ValorC)
min(ValorA,ValorB,ValorC)
ValorA + ValorB + ValorC - (min)
ValorA + ValorB + ValorC - (max)


				 
				 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    ValorA = int(input(a))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:42:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
ValorA = int(input(a))
ValorB = int(input(b))
ValorC = int(input(c))
max(ValorA,ValorB,ValorC)
min(ValorA,ValorB,ValorC)
Min = (ValorA + ValorB + ValorC - (min))
Max = (ValorA + ValorB + ValorC - (max))
print(Min)
print(Max + Min / 2)
print(Max)

				 
				 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    ValorA = int(input(a))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:51:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+C) - (M-m)
print(m)
print(medio)
print(M)
				 
				 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    medio = (a+b+C) - (M-m)
NameError: name 'C' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 12:52:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+C) - (M-m)
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.149036
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1015/main.py", line 9, in <module>
    medio = (a+b+C) - (M-m)
NameError: name 'C' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:53:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(M-m)
print(m)
print(medio)
print(M)
				 
				 
-- OUTPUT:
-2
-4
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 12:53:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(M-m)
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.141423
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
-4
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:54:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input(a))
b = int(input(b))
c = int(input(c))
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(M-m)
print(m)
print(medio)
print(M)
				 
				 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input(a))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 12:54:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input("a"))
b = int(input("b"))
c = int(input("c"))
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(M-m)
print(m)
print(medio)
print(M)
				 
				 
-- OUTPUT:
-2
-4
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 12:54:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input("a"))
b = int(input("b"))
c = int(input("c"))
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(M-m)
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.130685
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
-4
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:07:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input("a"))
b = int(input("b"))
c = int(input("c"))
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(m-M)
print(m)
print(medio)
print(M)
				 
				 
-- OUTPUT:
-2
20
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 13:07:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input("a"))
b = int(input("b"))
c = int(input("c"))
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(m-M)
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.132378
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
20
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:11:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(m-M)
print(m)
print(medio)
print(M)
				 
				 
-- OUTPUT:
-2
20
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 13:11:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-(m-M)
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.131154
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
20
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:11:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-M - m
print(m)
print(medio)
print(M)
				 
				 
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 13:11:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu 
a = int(input())
b = int(input())
c = int(input())
M = max(a,b,c)
m = min(a,b,c)
medio = (a+b+c)-M - m
print(m)
print(medio)
print(M)
				 
				 
-- EXECUTION TIME:
0.131788
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
