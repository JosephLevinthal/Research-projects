== SUBMITION (2019-06-19 13:58:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.0323532
-- ERROR:
Error response from daemon: Container 1c7c8097459468e97072d3b41e456d6d03ea367830eefd270bfefe81aa86f27b is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 13:59:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.025645
-- ERROR:
Error response from daemon: Container 1c7c8097459468e97072d3b41e456d6d03ea367830eefd270bfefe81aa86f27b is not running

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:59:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:59:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:01:25) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.24599
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1838/2602/main.py", line 6, in <module>
    v= dot(inv(vet),q)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 545, in inv
    _assertRankAtLeast2(a)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 207, in _assertRankAtLeast2
    'at least two-dimensional' % a.ndim)
numpy.linalg.LinAlgError: 1-dimensional array given. Array must be at least two-dimensional

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:01:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.146
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1838/2602/main.py", line 6, in <module>
    v= dot(inv(vet),q)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 545, in inv
    _assertRankAtLeast2(a)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 207, in _assertRankAtLeast2
    'at least two-dimensional' % a.ndim)
numpy.linalg.LinAlgError: 1-dimensional array given. Array must be at least two-dimensional

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:01:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
1.06527
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1838/2602/main.py", line 6, in <module>
    v= dot(inv(vet),q)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 545, in inv
    _assertRankAtLeast2(a)
  File "/usr/local/lib/python3.4/dist-packages/numpy/linalg/linalg.py", line 207, in _assertRankAtLeast2
    'at least two-dimensional' % a.ndim)
numpy.linalg.LinAlgError: 1-dimensional array given. Array must be at least two-dimensional

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:05:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
q = q.T
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:09:56) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
q = q.T
v= dot(inv(vet),q)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == max(v):
	print("estafilococo")
elif v[1] == max(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:11:06) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
vet = vet.T
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(q),vet)
print("estafilococo: ",round(preco[0],1))
print("salmonela: ", round(preco[1],1))
print("coli: ", round(preco[2],1))

if v[0] == min(v):
	print("estafilococo")
elif v[1] == min(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 14:11:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
vet = vet.T
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(q),vet)
print("estafilococo: ",round(v[0],1))
print("salmonela: ", round(v[1],1))
print("coli: ", round(v[2],1))

if v[0] == min(v):
	print("estafilococo")
elif v[1] == min(v):
	print("salmonela")
else:
	print("coli")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 14:11:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
vet = array(eval(input("Digite X,Y,Z: ")))
vet = vet.T
#QUANTIDADE
q = array([[2,1,4],[1,2,0],[2,3,2]])
v= dot(inv(q),vet)
print("estafilococo: ",round(v[0],1))
print("salmonela: ", round(v[1],1))
print("coli: ", round(v[2],1))

if v[0] == min(v):
	print("estafilococo")
elif v[1] == min(v):
	print("salmonela")
else:
	print("coli")
-- EXECUTION TIME:
0.943639
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
