== TEST (2019-04-04 18:02:58) 
-- CODE:
# Valores fixos
g = 9.8
# Entradas
from math import*
Vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo alpha: ")))
D = float(input("Distania D: "))
R = ((Vo) ** 2 * sin(2 * alpha))/g

if( abs(D - R)<= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 18:03:22) 
-- CODE:
# Valores fixos
g = 9.8
# Entradas
from math import*
Vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo alpha: ")))
D = float(input("Distania D: "))
R = ((Vo) ** 2 * sin(2 * alpha))/g

if( abs(D - R)<= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 18:03:40) 
-- CODE:
# Valores fixos
g = 9.8
# Entradas
from math import*
Vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo alpha: ")))
D = float(input("Distania D: "))
R = ((Vo) ** 2 * sin(2 * alpha))/g

if( abs(D - R)<= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 18:04:24) 
-- CODE:
# Valores fixos
g = 9.8
# Entradas
from math import*
Vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo alpha: ")))
D = float(input("Distania D: "))
R = ((Vo) ** 2 * sin(2 * alpha))/g

if( abs(D - R)<= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 18:04:42) 
-- CODE:
# Valores fixos
g = 9.8
# Entradas
from math import*
Vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo alpha: ")))
D = float(input("Distania D: "))
R = ((Vo) ** 2 * sin(2 * alpha))/g

if( abs(D - R)<= 0.1):
	msg = "sim"
else:
	msg = "nao"
print(msg)
-- EXECUTION TIME:
0.211977
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
