== TEST (2019-04-22 14:23:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)") #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:02:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)") #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != (R or I or C):
-- ERROR:
File "XXXX", line 11
    
                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)") #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != (R or I or C):
	
-- ERROR:
File "XXXX", line 12
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:04:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)") #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != (R or I or C):
	print("continue")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
continue
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:04:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != (R or I or C):
	print("continue")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
continue
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:05:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C)").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("continue")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
continue
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:12:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("continue")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
continue
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:27:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		x
-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:38:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:43:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:47:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- EXECUTION TIME:
0.188885
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:27:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- EXECUTION TIME:
0.158539
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:29:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:31:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- EXECUTION TIME:
0.132491
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:32:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y != ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:33:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or y not("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- ERROR:
File "XXXX", line 10
    if (x < 0) or y not("R" or "I" or "C"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:33:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not(x == ("R" or "I" or "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- ERROR:
File "XXXX", line 10
    if (x < 0) or not(x == ("R" or "I" or "C"):
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:34:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not(x == ("R" or "I" or "C")):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:35:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( x == "R" or x == "I" or x == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:35:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( x == "R" or x == "I" or x == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:36:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:36:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:40:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z)
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 15:41:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 15:41:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)

-- EXECUTION TIME:
0.207775
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:45:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:45:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("consumo: "))            #Consumo
y = input("tipo de instalacao: (R/I/C) ").upper() #Residencial/Industrial/Comercial

print("Entradas: ",x,"kWh e tipo ",y)

if (x < 0) or not( y == "R" or y == "I" or y == "C"):
	print("Dados invalidos")
elif y == "R":
	if x < 500:
		z = x * 0.44
	else:
		z = x * 0.65
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "I":
	if x < 1000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)
elif y == "C":
	if x < 5000:
		z = x * 0.55
	else:
		z = x * 0.60
	z = round(z, 2)
	print("Valor total: R$", z)

-- EXECUTION TIME:
0.150538
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
