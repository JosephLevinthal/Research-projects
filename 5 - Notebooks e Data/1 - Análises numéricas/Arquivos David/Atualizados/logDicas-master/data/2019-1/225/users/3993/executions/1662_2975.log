== TEST (2019-04-15 14:11:54) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(total)	

-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:12:06) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(total)	

-- EXECUTION TIME:
0.218773
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
4
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
3
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:12:21) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(total)
print(m)

-- OUTPUT:
4
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:12:29) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(total)
print(m)

-- EXECUTION TIME:
0.231498
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
4
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
3
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
8
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:12:51) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2)
print(m)

-- ERROR:
File "XXXX", line 10
    print(m)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:13:07) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2)
print(m)

-- ERROR:
File "XXXX", line 10
    print(m)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:13:37) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2))
print(m)

-- OUTPUT:
4
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:13:45) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = s + sl
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2))
print(m)

-- EXECUTION TIME:
0.146188
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
4
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
3
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
8
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:14:15) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = float(s + sl)
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2))
print(m)

-- OUTPUT:
4.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:14:25) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = float(s + sl)
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2))
print(m)

-- EXECUTION TIME:
0.258694
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
4.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
3.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
8.0
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:14:34) 
-- CODE:
s = int(input("quantidade de sucos"))
sl = int(input("quantidade de salgados"))
v = float(input("valor disponivel")) #duas casas decimais
total = float(s + sl)
if v >= total:
	m = "Sim"
else:
	m = "Nao"
print(round(total, 2))
print(m)

-- OUTPUT:
4.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:30:38) 
-- CODE:
qs = int(input("quantidade de sucos"))
qsal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))
vt = qs + qsal
if v > vt:
	print("Sim")
else: 
	print("Nao")
print(vt)

-- OUTPUT:
Sim
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:31:27) 
-- CODE:
qs = int(input("quantidade de sucos"))
qsal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))
vt = qs + qsal
if v > vt:
	m = "Sim"

else: 
	m = "Nao"
print(vt)
print(m)

-- EXECUTION TIME:
0.225181
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
4
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
3
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
8
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:31:29) 
-- CODE:
qs = int(input("quantidade de sucos"))
qsal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))
vt = qs + qsal
if v > vt:
	m = "Sim"

else: 
	m = "Nao"
print(vt)
print(m)

-- OUTPUT:
4
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:36:59) 
-- CODE:
qs = int(input("quantidade de suco"))
sal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))
ps = float(input("preco suco"))
psal = float(input("preco salgado"))
vt = (qs * ps) + (sal * psal)
if v >= vt:
	m = "Sim"
else:
	m = "Nao"
print(round(vt, 2))
print(m)
													

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    ps = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:37:27) 
-- CODE:
qs = int(input("quantidade de suco"))
sal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))
ps = float(input("preco suco"))
psal = float(input("preco salgado"))
vt = (qs * ps) + (sal * psal)
if v >= vt:
	m = "Sim"
else:
	m = "Nao"
print(round(vt, 2))
print(m)
													

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    ps = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:38:01) 
-- CODE:
qs = int(input("quantidade de suco"))
sal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))

vt = (qs * 3) + (sal * 3.50)
if v >= vt:
	m = "Sim"
else:
	m = "Nao"
print(round(vt, 2))
print(m)
													

-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:38:09) 
-- CODE:
qs = int(input("quantidade de suco"))
sal = int(input("quantidade de salgados"))
v = float(input("valor disponivel"))

vt = (qs * 3) + (sal * 3.50)
if v >= vt:
	m = "Sim"
else:
	m = "Nao"
print(round(vt, 2))
print(m)
													

-- EXECUTION TIME:
0.181314
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
