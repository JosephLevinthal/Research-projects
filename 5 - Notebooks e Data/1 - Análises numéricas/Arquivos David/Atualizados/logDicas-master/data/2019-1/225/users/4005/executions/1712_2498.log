== TEST (2019-05-12 12:02:43) 
-- CODE:
numa = int(input("Digite um numero: "))
numb = int(input("Digite um numero: "))
pa = float(input("Digite um numero: "))
pb = float(input("Digite um numero: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numa=numa*pa+numa
	cont+=1
print(cont)
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:04:06) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:04:31) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:04:32) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.155357
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:05:38) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.14741
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:05:40) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:06:09) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while numa <= numb:
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.170109
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:06:23) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa <= numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.174009
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:06:23) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa <= numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:06:37) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:06:44) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.12667
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:06:52) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:08:33) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.177692
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:08:45) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont=cont+1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:08:46) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont=cont+1
print(cont)
-- EXECUTION TIME:
0.190947
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2498/main.py", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:09:34) 
-- CODE:
numa = int(input("numero de habitantes A: "))
pa = float(input("percentual A: "))
numb = int(input("numero de habitantes B: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont=cont+1
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    numb = int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-12 12:10:20) 
-- CODE:
numa = int(input("numero de habitantes A: "))
numb = int(input("numero de habitantes B: "))
pa = float(input("percentual A: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont=cont+1
print(cont)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-12 12:10:21) 
-- CODE:
numa = int(input("numero de habitantes A: "))
numb = int(input("numero de habitantes B: "))
pa = float(input("percentual A: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont=cont+1
print(cont)
-- EXECUTION TIME:
0.151614
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 12:28:41) 
-- CODE:
numa = int(input("numero de habitantes A: "))
numb = int(input("numero de habitantes B: "))
pa = float(input("percentual A: "))
pb = float(input("percentual B: "))
pa=pa/100
pb=pb/100
cont=0
while(numa < numb):
	numb=numb*pb+numb
	numa=numa*pa+numa
	cont+=1
print(cont)
-- EXECUTION TIME:
0.176584
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
