== TEST (2019-05-29 11:59:12) 
-- CODE:
 from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- ERROR:
File "XXXX", line 1
    from numpy import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 11:59:13) 
-- CODE:
 from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- EXECUTION TIME:
0.159459
-- ERROR:
  File "/home/codebench/codes/1756/1580/main.py", line 1
    from numpy import *
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:59:17) 
-- CODE:
 from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- ERROR:
File "XXXX", line 1
    from numpy import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 11:59:18) 
-- CODE:
 from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- EXECUTION TIME:
0.183294
-- ERROR:
  File "/home/codebench/codes/1756/1580/main.py", line 1
    from numpy import *
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:59:30) 
-- CODE:
from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 11:59:32) 
-- CODE:
from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)

-- EXECUTION TIME:
0.501221
-- TEST CASE 1:
---- input:
[9,8,7,6,5,4,3,2,1,-1,-1,-1]
['A','B','C','D','E','F','G','H','I','J','K','L']
---- correct output:
3
4
5
5.0
A
---- user output:
3
4
5
5.0
A
-- TEST CASE 2:
---- input:
[-1,1.2,-1,2.3,-1,3.4,-1,4.5,-1,5.6,-1]
['ALICE','BENTO','CLARA','DAVI','ELSON','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
6
0
5
3.4
JULIA
---- user output:
6
0
5
3.4
JULIA
-- TEST CASE 3:
---- input:
[1.23,3.45,5.67,6.78,7.89,8.9,9,10,0,9.8,7.6]
['CLARA','DAVI','ELSON','ALICE','BENTO','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
0
7
4
6.39
HELOISA
---- user output:
0
7
4
6.39
HELOISA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
