== TEST (2019-03-23 15:10:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input())
y=int(input())
z=int(input())
M=max(x,y,z)
m=min(x,y,z)
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:10:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input())
y=int(input())
z=int(input())
M=max(x,y,z)
m=min(x,y,z)
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- EXECUTION TIME:
0.182193
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 6, in <module>
    z=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:10:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input())
y=int(input())
z=int(input())
M=(max(x,y,z))
m=(min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- EXECUTION TIME:
0.171299
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 6, in <module>
    z=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:11:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input())
y=int(input())
z=int(input())
M=(max(x,y,z))
m=(min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:11:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input())
y=int(input())
z=int(input())
M=(max(x,y,z))
m=(min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- EXECUTION TIME:
0.208832
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 6, in <module>
    z=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:11:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input())
y= int(input())
z= int(input())
M= (max(x,y,z))
m= (min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z= int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:11:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input())
y= int(input())
z= int(input())
M= (max(x,y,z))
m= (min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z= int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:12:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x= int(input())
y= int(input())
z= int(input())
M= (max(x,y,z))
m= (min(x,y,z))
r=(x+y+z)-(M+m)
print(m)
print(r)
print(M)
-- EXECUTION TIME:
0.174049
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 6, in <module>
    z= int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:15:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r= float(input())
from math import*
A= pi*(r**2)
V= (4*pi*r*r*r)*1/3
print(round(A, 3))
print(round(V, 3))
-- OUTPUT:
201.062
2144.661
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:16:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r= float(input())
from math import*
A= pi*(r**2)
V= (4*pi*r*r*r)*1/3
print(round(A, 3))
print(round(V, 3))
-- EXECUTION TIME:
0.140314
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
201.062
2144.661
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
615.752
11494.04
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
378276.03
175015709.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:19:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("digite o numero:"))
soma= 0
div= 1000
while v != 0:
	x=v//div
	soma=soma+x
	v=v%div
	div=div/10
print(int(soma))
-- EXECUTION TIME:
0.133643
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 7, in <module>
    while v != 0:
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:21:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("digite o numero:"))
soma = 0
div = 1000
while v != 0:
	x = v // div
	soma = soma + x
	v = v % div
	div = div/10
print(int(soma))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    while v != 0:
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:21:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("digite o numero:"))
soma = 0
div = 1000
while v != 0:
	x = v // div
	soma = soma + x
	v = v % div
	div = div/10
print(int(soma))
-- EXECUTION TIME:
0.186827
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/2049/main.py", line 7, in <module>
    while v != 0:
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:32:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n= 123
soma= sum(int(i) for i in str(n))
print(soma)
-- EXECUTION TIME:
0.205529
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
6
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
6
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 11:50:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= dividendo
var1= divisor
var2= var//var1
var3=var%var1
print(var, var1, var2,var3)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var= dividendo
NameError: name 'dividendo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:03:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= 346
var1= 2
var2= var//var1
var3=var%var1
print(var, var1, var2,var3)


-- OUTPUT:
346 2 173 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:03:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= 346
var1= 2
var2= var//var1
var3=var%var1
print(var, var1, var2,var3)


-- EXECUTION TIME:
0.150828
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
346 2 173 0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
346 2 173 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
346 2 173 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:04:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= 346
var1= 2
var2= var//var1
var3=var%var1
print(var)
print(var1)
print(var2)
print(var3)


-- OUTPUT:
346
2
173
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:04:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= 346
var1= 2
var2= var//var1
var3=var%var1
print(var)
print(var1)
print(var2)
print(var3)


-- EXECUTION TIME:
0.20672
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
346
2
173
0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
346
2
173
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
346
2
173
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 12:05:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= 346
var1= 2
var2= var//var1
var3=var%var1
print(var, var1, var2, var3)



-- OUTPUT:
346 2 173 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:23:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X= float(input())
Y= float(input())

B=(X//Y)
C=(X%Y)
print(int(X))
print(int(Y))
print(int(B))
print(int(C))
-- EXECUTION TIME:
0.205808
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
