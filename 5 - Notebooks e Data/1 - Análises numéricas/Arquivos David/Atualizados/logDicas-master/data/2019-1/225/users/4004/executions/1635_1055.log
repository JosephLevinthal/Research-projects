== TEST (2019-04-08 14:30:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

v0 = float(input("velocidade inicial(m/s): "))
alpha = float(input("angulo: "))
D = float(input("distancia horizontal: "))
g = 9.8

alpha = radians(alpha)
den = (v0 ** 2) * sen(2 * alpha)
R = den / g

if abs(D - R) <= 0.1:
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    den = (v0 ** 2) * sen(2 * alpha)
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

v0 = float(input("velocidade inicial(m/s): "))
alpha = float(input("angulo: "))
D = float(input("distancia horizontal: "))
g = 9.8

alpha = radians(alpha)
den = (v0 ** 2) * sin(2 * alpha)
R = den / g

if abs(D - R) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:31:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

v0 = float(input("velocidade inicial(m/s): "))
alpha = float(input("angulo: "))
D = float(input("distancia horizontal: "))
g = 9.8

alpha = radians(alpha)
den = (v0 ** 2) * sin(2 * alpha)
R = den / g

if abs(D - R) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.151755
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
