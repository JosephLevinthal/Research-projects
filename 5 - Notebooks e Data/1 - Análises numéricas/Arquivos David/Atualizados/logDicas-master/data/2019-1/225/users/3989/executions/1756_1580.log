== TEST (2019-05-28 19:18:53) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = round(media/(aprov + reprov),2)

print(falta)
print(aprov)
print(reprov)
print(media)
print(maior)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:25:04) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = (media/(aprov + reprov),2)

print(falta)
print(aprov)
print(reprov)
print (round(media), 2) 
print(maior)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:26:00) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = (media/(aprov + reprov))

print(falta)
print(aprov)
print(reprov)
print (round(media), 2) 
print(maior)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:27:19) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = notas[cont1]/size(elementos)

print(falta)
print(aprov)
print(reprov)
print (round(media), 2) 
print(maior)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:27:46) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = notas[cont1]/size(nomes)

print(falta)
print(aprov)
print(reprov)
print (round(media), 2) 
print(maior)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-28 19:28:24) 
-- CODE:
from numpy import*
notas =  array(eval(input("Notas dos alunos: ")))
nomes =  input("Nomes dos alunos: ")

cont1 = 0
falta = 0
aprov = 0
reprov = 0
media = 0
while cont1 < size(nomes):
	#falta
	if notas[cont1] == -1:
		falta = falta + 1
	#aprovados
	if notas[cont1] > 5 and notas[cont1] < 11:
		aprov = aprov + 1 
	#reprovados
	if notas[cont1] > -1 and notas[cont1] < 6:
		reprov = reprov + 1
	#media
	if notas[cont1] > -1 and notas[cont1] < 11:
		media = media + notas[cont1]
	#maior nota
	if notas[cont1] == max(notas):
		maior = nomes[cont1]
	cont1 = cont1 + 1
media = notas[cont1]/size(nomes)

print(falta)
print(aprov)
print(reprov)
print (round(media), 2) 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:36:47) 
-- CODE:
from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)
-- EXECUTION TIME:
0.512021
-- TEST CASE 1:
---- input:
[9,8,7,6,5,4,3,2,1,-1,-1,-1]
['A','B','C','D','E','F','G','H','I','J','K','L']
---- correct output:
3
4
5
5.0
A
---- user output:
3
4
5
5.0
A
-- TEST CASE 2:
---- input:
[-1,1.2,-1,2.3,-1,3.4,-1,4.5,-1,5.6,-1]
['ALICE','BENTO','CLARA','DAVI','ELSON','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
6
0
5
3.4
JULIA
---- user output:
6
0
5
3.4
JULIA
-- TEST CASE 3:
---- input:
[1.23,3.45,5.67,6.78,7.89,8.9,9,10,0,9.8,7.6]
['CLARA','DAVI','ELSON','ALICE','BENTO','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
0
7
4
6.39
HELOISA
---- user output:
0
7
4
6.39
HELOISA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:43:44) 
-- CODE:
from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:43:53) 
-- CODE:
from numpy import *

notas = array(eval(input("Digite ")))
nomes =  array(eval(input("Digite ")))

faltas = 0
aprovacoes = 0
presentes = 0
reprovacoes = 0
soma = 0
n = 0
aluno = 0

i = 0
while (i < size(notas)):
	if (notas[i] == -1):
		faltas += 1
	if (notas[i] >= 6):
		aprovacoes += 1
	if (notas[i] != -1):
		presentes += 1
		if (notas[i] < 6):
			reprovacoes += 1
		soma += notas[i]
		n += 1
	if (notas[i] == max(notas)):
		aluno = nomes[i]
	i += 1

print(faltas)
print(aprovacoes)
print(reprovacoes)
media = round(soma/n, 2)
print(media)
print(aluno)
-- EXECUTION TIME:
0.408239
-- TEST CASE 1:
---- input:
[9,8,7,6,5,4,3,2,1,-1,-1,-1]
['A','B','C','D','E','F','G','H','I','J','K','L']
---- correct output:
3
4
5
5.0
A
---- user output:
3
4
5
5.0
A
-- TEST CASE 2:
---- input:
[-1,1.2,-1,2.3,-1,3.4,-1,4.5,-1,5.6,-1]
['ALICE','BENTO','CLARA','DAVI','ELSON','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
6
0
5
3.4
JULIA
---- user output:
6
0
5
3.4
JULIA
-- TEST CASE 3:
---- input:
[1.23,3.45,5.67,6.78,7.89,8.9,9,10,0,9.8,7.6]
['CLARA','DAVI','ELSON','ALICE','BENTO','FLAVIO','GABI','HELOISA','IRIS','JULIA','KARLA']
---- correct output:
0
7
4
6.39
HELOISA
---- user output:
0
7
4
6.39
HELOISA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
