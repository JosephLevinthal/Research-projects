== TEST (2019-04-22 14:16:56) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
elif (x <= a) and (x => b):
	print(x, "nao pertence ao intervalo", a,",", b)
elif (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- ERROR:
File "XXXX", line 6
    elif (x <= a) and (x => b):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:17:24) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
elif (x <= a) and (x >= b):
	print(x, "nao pertence ao intervalo", a,",", b)
elif (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- ERROR:
File "XXXX", line 6
    elif (x <= a) and (x => b):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:17:33) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
elif (x <= a) and (x >= b):
	print(x, "nao pertence ao intervalo", a,",", b)
elif (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- ERROR:
File "XXXX", line 6
    elif (x <= a) and (x => b):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:18:37) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
elif (x <= a) and (x >= b):
	print(x, "nao pertence ao intervalo", a,",", b)
elif (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- ERROR:
File "XXXX", line 6
    elif (x <= a) and (x => b):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:19:04) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
elif (x <= a) and (x >= b):
	print(x, "nao pertence ao intervalo", a,",", b)
elif (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- ERROR:
File "XXXX", line 6
    elif (x <= a) and (x => b):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:20:24) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)
if (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:20:31) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)
if (b <= a) or (a >= b):
	print("Entradas ", a, " e ", b, " invalidas")

-- EXECUTION TIME:
0.138618
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:21:28) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (b <= a) or (b >= a):
	print("Entradas ", a, " e ", b, " invalidas")
elif (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)


-- OUTPUT:
Entradas  3.0  e  4.0  invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:21:32) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (b <= a) or (b >= a):
	print("Entradas ", a, " e ", b, " invalidas")
elif (x >= a) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)


-- EXECUTION TIME:
0.150513
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas  3.0  e  4.0  invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas  1.1  e  22.2  invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:28:34) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (b <= a):
	print("Entradas ", a, " e ", b, " invalidas")
elif (a <= x) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)


-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:28:47) 
-- CODE:
x = float(input("n1: "))
a = float(input("n2: "))
b = float(input("n3: "))
if (b <= a):
	print("Entradas ", a, " e ", b, " invalidas")
elif (a <= x) and (x <= b):
	print(x, "pertence ao intervalo", a,",", b )
else:
	print(x, "nao pertence ao intervalo", a,",", b)


-- EXECUTION TIME:
0.210282
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
