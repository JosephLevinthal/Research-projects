== TEST (2019-05-15 14:15:56) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 

while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	y+=2
print(round(j, 6))
-- OUTPUT:
-0.051404
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:21) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 

while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	y+=2
print(round(j, 6))
-- OUTPUT:
-0.051404
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:38) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
j=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	y+=2
print(round(j+n, 6))
-- OUTPUT:
0.948596
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:16:52) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
j=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	y+=2
print(round(j+n, 6))
-- OUTPUT:
0.948596
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:17:05) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
j=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	y+=2
print(round(j+n, 6))
-- OUTPUT:
0.948596
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:17:41) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.233701
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:11) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.233701
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:18:13) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- EXECUTION TIME:
0.199408
-- TEST CASE 1:
---- input:
pi**2/8
3

---- correct output:
0.446567
---- user output:
-0.233701
-- TEST CASE 2:
---- input:
pi**4/15
3
---- correct output:
-0.489834
---- user output:
-5.493939
-- TEST CASE 3:
---- input:
pi**1/2
6
---- correct output:
0.312176
---- user output:
-2.926991
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:14) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.233701
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:18) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.233701
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:28) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.233701
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:18:53) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.377859
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:06) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.377859
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:14) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.377859
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:19:26) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- EXECUTION TIME:
0.186681
-- TEST CASE 1:
---- input:
pi**2/8
3

---- correct output:
0.446567
---- user output:
-0.377859
-- TEST CASE 2:
---- input:
pi**4/15
3
---- correct output:
-0.489834
---- user output:
-23.332594
-- TEST CASE 3:
---- input:
pi**1/2
6
---- correct output:
0.312176
---- user output:
-10.782583
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:27) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
print(round(w+n, 6))
-- OUTPUT:
-0.377859
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:19:51) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:20:16) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:21:07) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:21:48) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=1 #termo inicial

while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:22:01) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=1 #termo inicial

while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:23:04) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:23:55) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:24:08) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:24:24) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<=k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.317124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:09) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=0 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<=k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.317067
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:25:09) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=0 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<=k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- EXECUTION TIME:
0.139824
-- TEST CASE 1:
---- input:
pi**2/8
3

---- correct output:
0.446567
---- user output:
0.317067
-- TEST CASE 2:
---- input:
pi**4/15
3
---- correct output:
-0.489834
---- user output:
-4.42857
-- TEST CASE 3:
---- input:
pi**1/2
6
---- correct output:
0.312176
---- user output:
0.106257
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:10) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=0 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<=k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=(x**f/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.317067
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:55) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))

c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de sinais 
y=2 #fatorial 
w=1 #termo inicial
f=1 # expoente de x
while(c<=k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
0.317124
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:02) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:18) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:28) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=(x**i/factorial(y))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:52) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=1 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+2))
		h=((x**i)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:28:52) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:29:18) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w+n, 6))
-- OUTPUT:
0.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:29:56) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j+n
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
1.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:30:09) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j+n
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
1.319732
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:30:32) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:30:36) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:30:53) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:31:05) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:31:26) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=(t)*(h)
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:31:35) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=(-1**(i+1))
		h=((x**f)/(factorial(y)))
		j=(t)*(h)
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.680268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:31:42) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=((-1)**(i+1))
		h=((x**f)/(factorial(y)))
		j=(t)*(h)
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w, 6))
-- OUTPUT:
-0.553433
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:32:07) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=((-1)**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w+n, 6))
-- OUTPUT:
0.446567
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:32:16) 
-- CODE:
from math import*
x=eval(input("angulo:"))
k=int(input("termos:"))
n=1.0 #primeiro termo
c=1 #acumuladora da quantidade de termos 
i=0 #diferenca de expoentes e sinais 
y=2 #fatorial 
w=0
f=1
while(c<k):
	if(x>=0 and k>0):
		t=((-1)**(i+1))
		h=((x**f)/(factorial(y)))
		j=t*h
	c+=1
	i+=1
	w=w+j
	y+=2
	f+=1
print(round(w+n, 6))
-- EXECUTION TIME:
0.195678
-- TEST CASE 1:
---- input:
pi**2/8
3

---- correct output:
0.446567
---- user output:
0.446567
-- TEST CASE 2:
---- input:
pi**4/15
3
---- correct output:
-0.489834
---- user output:
-0.489834
-- TEST CASE 3:
---- input:
pi**1/2
6
---- correct output:
0.312176
---- user output:
0.312176
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
