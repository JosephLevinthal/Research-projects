== TEST (2019-06-24 14:47:06) 
-- CODE:
from numpy import *
from numpy.linalg import *

frutas = array([[3, 12, 1], [12 ,0  , 2 ], [0 ,2  ,3  ]])

compras = array([23.6, 52.6, 27.7])
v = compras.T

preco = dot(inv(frutas) ,v )

print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

if preco[0] == max(preco):
    print("estafilococ")
elif preco[1] == max(preco):
    print("salmonela")
else:
    print("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:47:15) 
-- CODE:
from numpy import *
from numpy.linalg import *

frutas = array([[3, 12, 1], [12 ,0  , 2 ], [0 ,2  ,3  ]])

compras = array([23.6, 52.6, 27.7])
v = compras.T

preco = dot(inv(frutas) ,v )

print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

if preco[0] == min(preco):
    print("estafilococ")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 14:47:20) 
-- CODE:
from numpy import *
from numpy.linalg import *

frutas = array([[3, 12, 1], [12 ,0  , 2 ], [0 ,2  ,3  ]])

compras = array([23.6, 52.6, 27.7])
v = compras.T

preco = dot(inv(frutas) ,v )

print("estafilococo: ", round(preco[0], 1))
print("salmonela: ", round(preco[1], 1))
print("coli: ", round(preco[2], 1))

if preco[0] == min(preco):
    print("estafilococ")
elif preco[1] == min(preco):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
1.09014
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  2.9
salmonela:  0.5
coli:  8.9
salmonela
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  2.9
salmonela:  0.5
coli:  8.9
salmonela
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  2.9
salmonela:  0.5
coli:  8.9
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:55:35) 
-- CODE:
from numpy import *
from numpy.linalg import *

f = array([[2, 1, 4], [1 ,2  , 0], [2 ,3  ,2  ]])
v = array(eval(input())).T

p = dot(inv(frutas) ,v )

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))

if p[0] == min(p):
    print("estafilococo")
elif p[1] == min(p):
    print("salmonela")
else:
    print("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:55:57) 
-- CODE:
from numpy import *
from numpy.linalg import *

f = array([[2, 1, 4], [1 ,2  , 0], [2 ,3  ,2  ]])
v = array(eval(input())).T

p = dot(inv(f) ,v )

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))

if p[0] == min(p):
    print("estafilococo")
elif p[1] == min(p):
    print("salmonela")
else:
    print("coli")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 14:56:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

f = array([[2, 1, 4], [1 ,2  , 0], [2 ,3  ,2  ]])
v = array(eval(input())).T

p = dot(inv(f) ,v )

print("estafilococo: ", round(p[0], 1))
print("salmonela: ", round(p[1], 1))
print("coli: ", round(p[2], 1))

if p[0] == min(p):
    print("estafilococo")
elif p[1] == min(p):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
0.97956
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
