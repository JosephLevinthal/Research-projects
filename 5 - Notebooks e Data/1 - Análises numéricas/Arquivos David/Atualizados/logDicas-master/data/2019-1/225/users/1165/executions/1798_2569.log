== SUBMITION (2019-06-12 10:58:49) 
-- CODE:
#Desvio Padrão
from numpy import*
ele=array(eval(input("Valores do vetor: ")))# Valores de x
me=sum(ele)/size(ele)#Média dos valores
d=0 #Acumuladora
for i in range(size(ele)):# Quantidade de repetições
	w=(ele[i]-me)**2
	d=d+w
j=(d/(size(ele)-1))**0.5
print(round(j,3))
-- EXECUTION TIME:
0.99091
-- TEST CASE 1:
---- input:
[-4,250,-1,30,12]
---- correct output:
108.498
---- user output:
108.498
-- TEST CASE 2:
---- input:
[12.5,25.2,50.39,47.3,0.9]
---- correct output:
21.526
---- user output:
21.526
-- TEST CASE 3:
---- input:
[1.5,1.9,1.2,1.3,1.4,1.1,1.75]

---- correct output:
0.29
---- user output:
Valores do vetor: 0.29
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 10:59:15) 
-- CODE:
#Desvio Padrão
from numpy import*
ele=array(eval(input("Valores do vetor: ")))# Valores de x
me=sum(ele)/size(ele)#Média dos valores
d=0 #Acumuladora
for i in range(size(ele)):# Quantidade de repetições
	w=(ele[i]-me)**2
	d=d+w
j=(d/(size(ele)-1))**0.5
print(round(j,3))
-- EXECUTION TIME:
0.805372
-- TEST CASE 1:
---- input:
[-4,250,-1,30,12]
---- correct output:
108.498
---- user output:
108.498
-- TEST CASE 2:
---- input:
[12.5,25.2,50.39,47.3,0.9]
---- correct output:
21.526
---- user output:
21.526
-- TEST CASE 3:
---- input:
[1.5,1.9,1.2,1.3,1.4,1.1,1.75]

---- correct output:
0.29
---- user output:
0.29
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
