== TEST (2019-04-28 19:43:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("radio dos bojos semiesfericos:"))
if(H>0)or(h<0)or(r>0):
	volume=-1
elif(h<r):
	volume=(1/3)*pi*h**2*(3*r-h)
elif(h<H=r):
	volume=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<==H):
	volume=(4/3)*pi*r**3+pi*r**2*(h-2*r)-(3/5)*pi*(H-h)**2*(3*r-H+h)

-- ERROR:
File "XXXX", line 13
    elif(h<H=r):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:44:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("radio dos bojos semiesfericos:"))
if(H>0)or(h<0)or(r>0):
	volume=-1
elif(h<r):
	volume=(1/3)*pi*h**2*(3*r-h)
elif(h<H-r):
	volume=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<==H):
	volume=(4/3)*pi*r**3+pi*r**2*(h-2*r)-(3/5)*pi*(H-h)**2*(3*r-H+h)

-- ERROR:
File "XXXX", line 15
    elif(h<==H):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:44:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("radio dos bojos semiesfericos:"))
if(H>0)or(h<0)or(r>0):
	volume=-1
elif(h<r):
	volume=(1/3)*pi*h**2*(3*r-h)
elif(h<H-r):
	volume=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	volume=(4/3)*pi*r**3+pi*r**2*(h-2*r)-(3/5)*pi*(H-h)**2*(3*r-H+h)

-- ERROR:
File "XXXX", line 15
    elif(h<==H):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:45:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("radio dos bojos semiesfericos:"))
if(H>0)or(h<0)or(r>0):
	x=-1
elif(h<r):
	x=(1/3)*pi*h**2*(3*r-h)
elif(h<H-r):
	x=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	x=(4/3)*pi*r**3+pi*r**2*(h-2*r)-(3/5)*pi*(H-h)**2*(3*r-H+h)
else:
	x=-1
print(round(x, 3))

-- OUTPUT:
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:45:48) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H=float(input("altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("radio dos bojos semiesfericos:"))
if(H>0)or(h<0)or(r>0):
	x=-1
elif(h<r):
	x=(1/3)*pi*h**2*(3*r-h)
elif(h<H-r):
	x=(2/3)*pi*r**3+pi*r**2*(h-r)
elif(h<=H):
	x=(4/3)*pi*r**3+pi*r**2*(h-2*r)-(3/5)*pi*(H-h)**2*(3*r-H+h)
else:
	x=-1
print(round(x, 3))

-- OUTPUT:
-1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
