== TEST (2019-04-29 12:35:48) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ")
#R = residencias
#I = industrias
#C = comercios



-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:39) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ")
print("Entrada: " , cek , "e tipo" , instal)
#R = residencias
#I = industrias
#C = comercios



-- OUTPUT:
Entrada:  -56.0 e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:39:56) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ")
print("Entrada: " , cek , "e tipo" , instal)
#R = residencias
#I = industrias
#C = comercios



-- OUTPUT:
Entrada:  -56.0 e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:40:32) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ")
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias
#I = industrias
#C = comercios



-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:40:57) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias
#I = industrias
#C = comercios



-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:45:57) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias
#I = industrias
#C = comercios

if((cek <= 500) and (instal == "R")):
	vt = (500 * 0.44) 
	print (vt)


-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:50:24) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias   #I = industrias   #C = comercios

if((cek <= 500) and (instal == "R")):
	vt = (500 * 0.44) 
	print (vt)
elif((cek > 500) and (instal == "R")):
	vt = (500 * 0.65)
	print (vt)

-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:51:39) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias   #I = industrias   #C = comercios

if((cek <= 500) and (instal == "R")):
	vt = (500 * 0.44) 
	print (vt)
elif((cek > 500) and (instal == "R")):
	vt = (500 * 0.65)
	print (round(vt, 2))

-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:52:35) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias   #I = industrias   #C = comercios

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))

-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:53:27) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencias   #I = industrias   #C = comercios

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))

-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:57:51) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:00:51) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.158935
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada:  -56.0 kWh e tipo I
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada:  955.5 kWh e tipo R
621.08
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:59:19) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:24:30) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entrada: " , cek , "kWh" , "e tipo" , instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entrada:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:26:00) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:26:19) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:26:55) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
		print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
		print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
		print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
		print (round(vt, 2))
else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    print (round(vt, 2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:27:16) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
		print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
		print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
		print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
		print (round(vt, 2))
else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 8
    print (round(vt, 2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:27:42) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
		print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
		print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
		print (round(vt, 2))
else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    print (round(vt, 2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:27:50) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
		print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
		print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
		print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
		print (round(vt, 2))
else:
		print("Dados invalidos")
-- ERROR:
File "XXXX", line 11
    print (round(vt, 2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:28:02) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:28:47) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:29:15) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))

-- EXECUTION TIME:
0.13887
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:29:22) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:30:29) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	vt = "Dados invalidos"
	print(vt)
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:31:18) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
		print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:32:58) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:34:35) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor total", vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
if((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
if((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:46:09) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor total", vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:46:28) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor total", vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.138731
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:48:07) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: " ,cek ,"kWh" ,"e tipo" ,instal)
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor total", vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:49:33) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)
print("Valor total:")
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 16:49:54) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)
print("Valor total:")
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.206829
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total:
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total:
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:50:00) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)
print("Valor total:")
#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:50:26) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
print("Valor total:")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
Valor total:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:51:22) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total", (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 10
    elif((cek > 500) and (instal == "R")):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:52:15) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total",(round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 10
    elif((cek > 500) and (instal == "R")):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:53:22) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total",(round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 10
    elif((cek > 500) and (instal == "R")):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:54:31) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total",(round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 10
    elif((cek > 500) and (instal == "R")):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:55:06) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")
print("Valor total:")
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
Valor total:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:55:24) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:56:27) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = ("Valor total"(cek * 0.44)) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = ("valor total"(cek * 0.60))
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:57:50) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor toal" vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 9
    print (round("Valor toal" vt, 2))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:58:03) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("Valor total", vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 16:58:45) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	"Valor total" vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 8
    "Valor total" vt = (cek * 0.44) 
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:18:17) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round(vt, 2))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:30:19) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total: "(round(vt, 2)))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:31:45) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total: ", (round(vt, 2)))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:33:57) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total: ", (round(vt, 2)))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:34:32) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print (round("valor total"(vt, 2)))
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:36:09) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total: ", vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:36:28) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print ("Valor total: ", vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print (round(vt, 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:37:23) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print ("Valor total: " , vt)
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print (round(vt, 2))
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print (round(vt, 2))
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print (round(vt, 2))
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:39:07) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print ("Valor total: " , vt)
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print ("Valor total: "vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print ("Valor total: " , vt)
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 18
    print ("Valor total: "vt)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:39:18) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print ("Valor total: " , vt)
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print ("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print ("Valor total: " , vt)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:39:51) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print ("Valor total: " , vt)
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print ("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print ("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print ("Valor total: " , vt)
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.133825
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total:  621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:41:05) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print("Valor total: " , (round (vt)))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:41:20) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print("Valor total: " , (round ( , 2)))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- ERROR:
File "XXXX", line 12
    print("Valor total: " , (round ( , 2)))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:41:35) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print("Valor total: " , (round (vt , 2)))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:42:18) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print(round("Valor total: " , (vt , 2)))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:59:00) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial

if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print(round("Valor total: " , vt , 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Valor total:  -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:59:59) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial
abs(round(vt,2))
if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print(round("Valor total: " , vt , 2))
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    abs(round(vt,2))
NameError: name 'vt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:00:24) 
-- CODE:
cek = float(input("Consumo de energia em kWh: "))
instal = input("Tipo de instalacao: ").upper()
print("Entradas: ",cek ,"kWh" ,"e tipo" ,instal)

#R = residencial   #I = industrial   #C = comercial
abs(round(vt,2))
if((cek <= 500) and (instal == "R")):
	vt = (cek * 0.44) 
	print("Valor total: " , vt)
elif((cek > 500) and (instal == "R")):
	vt = (cek * 0.65)
	print("Valor total: " , vt)
elif((cek <= 1000) and (instal == "C")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 1000) and (instal == "C")):
	vt = (cek * 0.60)
	print("Valor total: ", vt)
elif((cek <= 5000) and (instal == "I")):
	vt = (cek * 0.55) 
	print("Valor total: " , vt)
elif((cek > 5000) and (instal == "I")):
	vt = (cek * 0.60)
	print("Valor total: " , vt)
else:
	print("Dados invalidos")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    abs(round(vt,2))
NameError: name 'vt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
