== TEST (2019-04-22 20:08:05) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 20:08:12) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.205226
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:08:30) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")2
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- ERROR:
File "XXXX", line 12
    print("Animal: Mico-leao-dourado")2
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:08:40) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")2
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- ERROR:
File "XXXX", line 12
    print("Animal: Mico-leao-dourado")2
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:08:49) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 20:08:58) 
-- CODE:
cedula = int(input("digite cedula: "))

print("Entrada:", cedula)

if (cedula == 2):
	print("Animal: Tartaruga")
elif (cedula == 5):
	print("Animal: Garca")
elif (cedula == 10):
	print("Animal: Arara")
elif (cedula == 20):
	print("Animal: Mico-leao-dourado")
elif (cedula == 50):
	print("Animal: Onca-pintada")
elif (cedula == 100):
	print("Animal: Garoupa")
else:
	print("Animal: Invalido")
-- EXECUTION TIME:
0.209351
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
