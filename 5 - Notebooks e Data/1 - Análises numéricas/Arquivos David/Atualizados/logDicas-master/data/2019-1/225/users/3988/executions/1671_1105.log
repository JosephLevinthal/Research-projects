== TEST (2019-04-24 15:08:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!=lula)and(n!="esfolado")and(n!="turta")):
	d = "invalido"
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 4
    if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!=lula)and(n!="esfolado")and(n!="turta")):
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:08:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!=lula)and(n!="esfolado")and(n!="turta")):
	d = "invalido"
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 4
    if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!=lula)and(n!="esfolado")and(n!="turta")):
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:08:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	d = "invalido"
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 4
    if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:15:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	d = "Brasao invalido"
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 4
    if((n!="lobo")and(n!="leao")and(n!="veado")and(n="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 19
    elif(n="lula"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 19
    elif(n="lula"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 19
    elif(n="lula"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 19
    elif(n="lula"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- ERROR:
File "XXXX", line 19
    elif(n="lula"):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
	print(s)
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n=="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:17:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao Invalido"
elif(n=="lobo"):
	d = "Stark"
elif(n=="leao"):
	d = "Lannister"
elif(n=="veado"):
	d = "Baratheon"
elif(n=="dragao"):
	d = "targaryen"
elif(n=="rosa"):
	d = "Tyrell"
elif(n=="sol"):
	d = "Martell"
elif(n=="lula"):
	d = "Greyjoy"
elif(n=="esfolado"):
	d = "Bolton"
else:
	d = "Tully"
print("Entrada: ", n)
print("Casa: ", d)
print(s)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 26, in <module>
    print(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa:" 
	d = "Stark"
elif(n=="leao"):
	s = "Casa:"
	d = "Lannister"
elif(n=="veado"):
	s = "Casa:"
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa:"
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa:"
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa:"
	d = "Martell"
elif(n=="lula"):
	s = "Casa:"
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa:"
	d = "Bolton"
else:
	s = "Casa:"
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:22:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa:" 
	d = "Stark"
elif(n=="leao"):
	s = "Casa:"
	d = "Lannister"
elif(n=="veado"):
	s = "Casa:"
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa:"
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa:"
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa:"
	d = "Martell"
elif(n=="lula"):
	s = "Casa:"
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa:"
	d = "Bolton"
else:
	s = "Casa:"
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- EXECUTION TIME:
0.20028
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao  invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:22:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- EXECUTION TIME:
0.138664
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa:  Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao  invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa:  targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s, d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:23:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- EXECUTION TIME:
0.11669
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa:  Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao  invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa:  targaryen
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:23:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- OUTPUT:
Entrada:  lula
Casa:  Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:25:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
n = input("entrada:")
if((n!="lobo")and(n!="leao")and(n!="veado")and(n!="dragao")and(n!="rosa")and(n!="sol")and(n!="lula")and(n!="esfolado")and(n!="turta")):
	s = "Brasao "
	d = "invalido"
elif(n=="lobo"):
	s = "Casa: " 
	d = "Stark"
elif(n=="leao"):
	s = "Casa: "
	d = "Lannister"
elif(n=="veado"):
	s = "Casa: "
	d = "Baratheon"
elif(n=="dragao"):
	s = "Casa: "
	d = "Targaryen"
elif(n=="rosa"):
	s = "Casa: "
	d = "Tyrell"
elif(n=="sol"):
	s = "Casa: "
	d = "Martell"
elif(n=="lula"):
	s = "Casa: "
	d = "Greyjoy"
elif(n=="esfolado"):
	s = "Casa: "
	d = "Bolton"
else:
	s = "Casa: "
	d = "Tully"
print("Entrada: ", n)
print(s,d)
	
-- EXECUTION TIME:
0.210975
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa:  Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao  invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa:  Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
