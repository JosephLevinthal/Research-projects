== TEST (2019-04-29 13:05:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

if(H>0) and (h>0) and (r>0):
-- ERROR:
File "XXXX", line 12
    
                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
-- ERROR:
File "XXXX", line 12
    
                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:07:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

if(h > 0) and (r > 0):
-- ERROR:
File "XXXX", line 12
    
                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

if((H > 0) and (h > 0) and (r > 0)):
-- ERROR:
File "XXXX", line 12
    
                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:08:29) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	print("dfgf")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
dfgf
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:09:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z)
-- ERROR:
File "XXXX", line 13
    if(H > h) and (H > z)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:09:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		
-- ERROR:
File "XXXX", line 15
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:12:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
from math import *
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		V = pi*(r**2)*x
		print(round(V,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    V = pi*(r**2)*x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:13:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
from math import *
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		V = pi*(r**2)
		print(round(V,2))
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
16.62
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:14:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
from math import *
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		V = pi*(r**2)
		print("Volume:", round(V,2),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 16.62 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:15:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
from math import *
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		V = pi*(r**2)
		print("Volume:", round(V,2),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 16.62 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:16:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura total: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio de bojos: "))
z = 2*r
from math import *
print("Entradas:", H,",", h,",",r)

if(H > 0) and (h > 0) and (r > 0):
	if(H > h) and (H > z):
		V = pi*(r**2)
		print("Volume:", round(V,2),"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 16.62 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
