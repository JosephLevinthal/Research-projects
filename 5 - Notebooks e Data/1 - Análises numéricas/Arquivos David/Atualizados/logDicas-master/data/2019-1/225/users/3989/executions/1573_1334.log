== TEST (2019-03-11 15:46:23) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", ...)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  Ellipsis
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:46:29) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", ...)
-- EXECUTION TIME:
0.106199
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  Ellipsis
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:46:31) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", ...)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  Ellipsis
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:47:06) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", 2^3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:48:10) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", 2^3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:48:44) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", 2*2*2)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:48:47) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", 2*2*2)
-- EXECUTION TIME:
0.171513
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:51:50) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 24/16)

print("Potenciacao: ", 2*2*2)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  1.5
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:52:38) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 24%16)

print("Potenciacao: ", 2*2*2)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-11 15:56:44) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 24%16)

print("Potenciacao: ", 2*2*2)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-11 15:56:47) 
-- CODE:
print("Adicao: ", 6 + 2)

print("Subtracao: ", 18-10)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 24%16)

print("Potenciacao: ", 2*2*2)
-- EXECUTION TIME:
0.230972
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
