== TEST (2019-04-14 18:48:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2x + y

if(reta == 3):
	mensagem = "ponto_pertece_a_reta"
else:
	mensagem = "ponto_nao_pertece_a_reta"

print(mensagem)
-- ERROR:
File "XXXX", line 8
    reta = 2x + y
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:51:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	mensagem = "ponto_pertece_a_reta"
else:
	mensagem = "ponto_nao_pertece_a_reta"

print(mensagem)
-- OUTPUT:
ponto_pertece_a_reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	mensagem = "ponto_pertece_a_reta"
else:
	mensagem = "ponto_nao_pertece_a_reta"

print(mensagem)
-- EXECUTION TIME:
0.198411
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto_pertece_a_reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto_nao_pertece_a_reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:57:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.146168
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:57:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:59:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y - 3

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:59:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y - 3

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:59:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y - 3

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.205775
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y - 3

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:00:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y - 3

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.212338
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:08:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:09:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:09:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:09:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.129992
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:12:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:13:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y - 3

reta = a + b

if(reta == 0):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.142873
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:16:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y 

reta = a + b

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:16:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y 

reta = a + b

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:16:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y 

reta = a + b

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:16:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

a = 2*x
b = y 

reta = a + b

if(reta == 3):
	mensagem = "ponto pertece a reta"
else:
	mensagem = "ponto nao pertece a reta"

print(mensagem)
-- EXECUTION TIME:
0.1576
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:31:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print(ponto pertece a reta)
else:
	print(ponto nao pertece a rea)

-- ERROR:
File "XXXX", line 11
    print(ponto pertece a reta)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:32:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print(ponto pertence a reta)
else:
	print(ponto nao pertence a rea)

-- EXECUTION TIME:
0.150966
-- ERROR:
  File "/home/codebench/codes/1635/1054/main.py", line 11
    print(ponto pertence a reta)
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:32:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print(ponto pertence a reta)
else:
	print(ponto nao pertence a rea)

-- ERROR:
File "XXXX", line 11
    print(ponto pertence a reta)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:32:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print(ponto pertence a reta)
else:
	print(ponto nao pertence a reta)

-- ERROR:
File "XXXX", line 11
    print(ponto pertence a reta)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:34:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print(ponto pertence a reta)
else:
	print(ponto nao pertence a reta)

-- ERROR:
File "XXXX", line 11
    print(ponto pertence a reta)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:34:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Coordenada X: "))
y = float(input("Coordenada Y: "))

reta = 2*x + y

if(reta == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.287947
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
