== TEST (2019-04-24 13:10:10) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
-- OUTPUT:
2.0 4.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:10:19) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
-- EXECUTION TIME:
0.123648
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:10:35) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:10:45) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- EXECUTION TIME:
0.171175
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:10:53) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:11:04) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c):
	mensagem=("equilatero")
else:
	if(a==b>c)and(a==c>b)and(b==c>a):
		mensagem=("isosceles")
	else:
		if(a<0)and(b<0)and(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- EXECUTION TIME:
0.182686
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:13:52) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c)and(a>0)and(b>0)and(c>0):
	mensagem=("equilatero")
else:
	if(a==b)or(a==c)or(b==c):
		mensagem=("isosceles")
	else:
		if(a<0)or(b<0)or(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:14:07) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c)and(a>0)and(b>0)and(c>0):
	mensagem=("equilatero")
else:
	if(a==b)or(a==c)or(b==c):
		mensagem=("isosceles")
	else:
		if(a<0)or(b<0)or(c<0):
			mensagem=("escaleno")
		else:
			mensagem=("invalido")
print(mensagem)
-- EXECUTION TIME:
0.259741
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:15:05) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c)and(a>0)and(b>0)and(c>0):
	mensagem=("equilatero")
else:
	if(a==b)or(a==c)or(b==c):
		mensagem=("isosceles")
	else:
		if(a<0)or(b<0)or(c<0):
			mensagem=("invalido")
		else:
			mensagem=("escaleno")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:15:11) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a==b==c)and(a>0)and(b>0)and(c>0):
	mensagem=("equilatero")
else:
	if(a==b)or(a==c)or(b==c):
		mensagem=("isosceles")
	else:
		if(a<0)or(b<0)or(c<0):
			mensagem=("invalido")
		else:
			mensagem=("escaleno")
print(mensagem)
-- EXECUTION TIME:
0.1464
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:25:02) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)and(b+c<a)and(c+a<b):
	mensagem=("invalido")
elif(a==b==c):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:25:14) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)and(b+c<a)and(c+a<b):
	mensagem=("invalido")
elif(a==b==c):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- EXECUTION TIME:
0.148924
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:26:10) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b==c):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:26:26) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b==c):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- EXECUTION TIME:
0.214054
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:27:37) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:27:44) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print(a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print(mensagem)
-- EXECUTION TIME:
0.185538
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:29:06) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("entradas:", a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- OUTPUT:
entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:29:11) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:29:19) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a, b, c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.159587
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:30:22) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a"," b"," c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.17969
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a"," b"," c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:30:38) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b "," c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.148069
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a",",b "," c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:30:44) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b ,"," c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.20744
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a",",b ,"," c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:30:59) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b ",", c)
if(a+b<c)or(b+c<a)or(c+a<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.133582
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a",",b ",", c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:31:18) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b ",", c)
if(a+b=<c)or(b+c=<a)or(c+a=<b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.178192
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a",",b ",", c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:31:40) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b ",", c)
if(a+b<=c)or(b+c<=a)or(c+a<=b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.122637
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a",",b ",", c)
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:32:12) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a",",b ",", c)
if(a+b<=c)or(b+c<=a)or(c+a<=b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 4
    print("Entradas:", a",",b ",", c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:32:40) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a,",",b ",", c)
if(a+b<=c)or(b+c<=a)or(c+a<=b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.142654
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 4
    print("Entradas:", a,",",b ",", c)
                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:32:41) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a,",",b ",", c)
if(a+b<=c)or(b+c<=a)or(c+a<=b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- ERROR:
File "XXXX", line 4
    print("Entradas:", a,",",b ",", c)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 13:32:47) 
-- CODE:
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
print("Entradas:", a,",",b ,",", c)
if(a+b<=c)or(b+c<=a)or(c+a<=b):
	mensagem=("invalido")
elif(a==b)and(b==c)and(b==a):
	mensagem=("equilatero")
elif(a==b)or(a==c)or(b==c):
	mensagem=("isosceles")
else:
	mensagem=("escaleno")
print("Tipo de triangulo:", mensagem)
-- EXECUTION TIME:
0.159274
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
