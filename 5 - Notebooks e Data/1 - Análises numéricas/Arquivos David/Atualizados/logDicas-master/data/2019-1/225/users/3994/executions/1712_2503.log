== TEST (2019-05-14 08:55:25) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i+=t
	h+=1
print(round(i,8))
	
	
	
-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 08:55:58) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i+=t
	h+=1
print(round(i,8))
	
	
	
-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 08:56:55) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i+=t
	i=i+t
print(round(i,8))
	
	
	
-- OUTPUT:
27.50466866
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 08:57:10) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i+=t
	i=i+t
print(round(i,8))
	
	
	
-- OUTPUT:
27.50466866
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 08:57:38) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i=i+t
	h=h+1
print(round(i,8))
	
	
	
-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 09:00:24) 
-- CODE:
n= int(input("Digite o numero natural: "))
soma=0
i=0
j=1
h=1
while(soma<n):
	if(n>1):
		w=(((-1)**(h+1)))
		g=4/j
		t=g*w
	else:
		i=4.0
	soma+=1
	j+=2
	i=i+t
	h=h+1
print(round(i,8))
	
	
	
-- EXECUTION TIME:
0.188404
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
