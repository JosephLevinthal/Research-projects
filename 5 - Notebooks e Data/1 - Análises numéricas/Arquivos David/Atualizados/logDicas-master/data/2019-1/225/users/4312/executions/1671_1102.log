== TEST (2019-04-29 10:54:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < o):
	vol = -1
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
print(vol)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(h < 0 or H < 0 or r < o):
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:16:02) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < o):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
print(round(vol, 3))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if(h < 0 or H < 0 or r < o):
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:16:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
print(round(vol, 3))
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:17:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
print(vol)
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:18:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
print(vol)
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:19:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
print(round(vol, 3)
	
-- EXECUTION TIME:
0.163407
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 24
    
     ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:20:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round(vol, 3)
	
-- EXECUTION TIME:
0.174628
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    
     ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:20:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round(vol, 3)
	
-- ERROR:
File "XXXX", line 26
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:20:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round(vol, 3)
	
-- ERROR:
File "XXXX", line 26
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:20:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round(vol, 3)	
-- ERROR:
File "XXXX", line 25
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:20:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	
print(round(vol, 3)	
-- ERROR:
File "XXXX", line 24
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:21:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round(vol, 3))
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:22:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
print(round("volume:" , vol, 3))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print(round("volume:" , vol, 3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:24:17) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 3)
print(msg)
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:24:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 3)
print("Volume:" , msg)
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:25:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 3)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:25:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:26:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:26:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.117495
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.16846
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.235159
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.169371
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.20295
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.290753
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.408664
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.62522
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:26:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.402051
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:26:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:27:12) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:27:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:27:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.260676
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Volume: 226.194671 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:27:44) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nivel de combustivel: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:28:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.212366
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:28:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.236692
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:28:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = "Entradas invalidos"
	print(vol)
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = "Entradas invalidos"
	print(vol)
msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.285835
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:30:39) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:31:05) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.217007
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.118907
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.238051
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.278256
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.203972
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.204593
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.308401
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidos
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:31:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	print("Entradas invalidos")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	print("Entradas invalidos")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.40689
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 23, in <module>
    msg = round(vol, 6)
NameError: name 'vol' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:32:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.2235
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:39:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalida")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 11:40:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalida")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.186407
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:40:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalida")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:40:48) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Entrada invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:21:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
	print("Volume:" , msg , "litros")
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
	print("Volume:" , msg , "litros")
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
	print("Volume:" , msg , "litros")
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    print("Volume:" , msg , "litros")
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:21:55) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
print("Volume:" , msg , "litros")
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
print("Volume:" , msg , "litros")
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
print("Volume:" , msg , "litros")
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")

	
-- ERROR:
File "XXXX", line 17
    elif(h < H - r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:39:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.146986
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Entrada invalidas
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Entrada invalidas
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:39:09) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.134578
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Entrada invalidas
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Entrada invalidas
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:41:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1

msg = round(vol, 6)
print("Entrada invalidas")
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Entrada invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:42:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:43:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:22) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.133492
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.157974
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:23) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.185093
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.373744
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.214734
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.444097
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:25) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.293349
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.498915
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.556778
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.542323
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.48724
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.677442
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.609551
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:26) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.726714
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1/3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2/3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.122966
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.116135
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.179282
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.158643
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.129419
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.162374
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.272492
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entrada invalidas
Volume: -1 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 234.572251 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.299841
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:43:35) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
H = float(input("Digite a altura: "))
h = float(input("Digite o nivel de combustivel: "))
r = float(input("Digite o raio: "))
print("Entradas:" ,H, "," ,r, "," ,h)

if(h < 0 or H < 0 or r < 0):
	vol = -1
	print("Entrada invalidas")
elif(h < r):
	vol = (1./3) * pi * h**2 * (3 * r - h)
elif(h < H - r):
	vol = (2./3) * pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3) * pi * r**3 + pi * r**2 * (H - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h )
else:
	vol = -1
	print("Entrada invalidas")

msg = round(vol, 6)
print("Volume:" , msg , "litros")
	
-- EXECUTION TIME:
0.286328
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
