== TEST (2019-04-10 14:14:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >19,8):
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:14:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >19,8):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.183025
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:15:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >9.9):
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >9.9):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.166425
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:18:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >9.9):
	print(abs("sim"))
else:
	print(abs("nao")

-- ERROR:
File "XXXX", line 14
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:18:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if (R >9.9):
	print(abs("sim"))
else:
	print(abs("nao"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(abs("sim"))
TypeError: bad operand type for abs(): 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:18:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
r = abs(R)
if (R >9.9):
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:19:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
r = abs(R)
if (R >9.9):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.254125
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if abs(d>=R-0.1 and d<=R+0.1):
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
sin
vo = float(input("inicial:"))
a = radians(float(input("angulo:")))
d = float(input("distancia:"))
R = ((vo)**2 * sin(2*a))/9.8
if abs(d>=R-0.1 and d<=R+0.1):
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.139299
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
