== TEST (2019-06-12 14:08:53) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
print(st)
-- ERROR:
File "XXXX", line 3
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:08) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:37) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:37) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:38) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:38) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:38) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:09:38) 
-- CODE:

st = array(eval(input("Estado de origem: ").split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:10:01) 
-- CODE:

st = array(eval(int(input("Estado de origem: ")).split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:10:15) 
-- CODE:
from numpy import*
st = array(eval(int(input("Estado de origem: ")).split(",")
					 
print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:10:26) 
-- CODE:
from numpy import*
st = array(eval(int(input("Estado de origem: ")).split(",")
print(st)
-- ERROR:
File "XXXX", line 3
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:10:51) 
-- CODE:
from numpy import*
st = array(eval(int(input("Estado de origem: ")).split(",")
print(st)
-- ERROR:
File "XXXX", line 3
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:03) 
-- CODE:
from numpy import*
st = array(eval(int(input("Estado de origem: ")).split(",")

print(st)
-- ERROR:
File "XXXX", line 4
    print(st)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:21) 
-- CODE:
from numpy import*
n = array(eval(int(input("Estado de origem: ")).split(",")

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:43) 
-- CODE:
from numpy import*
n = array(eval(int(input("Estado de origem: ")).split(',')

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:01) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").split(',')

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:07) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ")

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:09) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ")

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:10) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ")

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:18) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ")

print(n)
-- ERROR:
File "XXXX", line 4
    print(n)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:13:14) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").split(',')
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    c = 0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:13:31) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").split(',')
c = 0
	print(n)
-- ERROR:
File "XXXX", line 3
    c = 0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:13:42) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").split(',')
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    c = 0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:43:34) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:09) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:12) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:12) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:13) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:13) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:13) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:44:24) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
print(n)
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:46:46) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
c = 0
for i in range(size(n)):
	
-- ERROR:
File "XXXX", line 3
    AM = 0
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:46:53) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')

for i in range(size(n)):
	
-- ERROR:
File "XXXX", line 4
    for i in range(size(n)):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:49:10) 
-- CODE:
from numpy import*
n = array(eval(input("Estado de origem: ").upper().split(',')

for i in n:
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
print(n)
-- ERROR:
File "XXXX", line 4
    for i in n:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:50:52) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')

for i in n:
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:51:19) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')


print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:56:54) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
for i in n:
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE +1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP +1
	elif(n[i] == RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:57:22) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
for i in n:
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE +1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP +1
	elif(n[i] == RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:58:01) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE +1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP +1
	elif(n[i] == RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:00:31) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM[0] = AM + 1
	elif(n[i] == PE):
		PE[1] = PE +1
	elif(n[i] == MG):
		MG[2] = MG + 1
	elif(n[i] == SP):
		SP[3] = SP +1
	elif(n[i] == RS):
		RS[4] = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:01:31) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:02:06) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] = AM):
		AM = AM + 1
	elif(n[i] = PE):
		PE = PE + 1
	elif(n[i] = MG):
		MG = MG + 1
	elif(n[i] = SP):
		SP = SP + 1
	elif(n[i] = RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
File "XXXX", line 10
    if(n[i] = AM):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:03:26) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").upper().split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0
b = zeros(5,dtype=int)
for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a=sum(AM + PE + MG + SP + RS)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:05:22) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:06:21) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am[i] = am[i] + 1
	elif(n[i] == pe):
		pe[i] = pe[i] + 1
	elif(n[i] == mg):
		mg[i] = mg[i] + 1
	elif(n[i] == sp):
		sp[i] = sp[i] + 1
	elif(n[i] == rs):
		rs[i] = rs[i] + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:07:09) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:07:46) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a = sum(size(n))
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:07:59) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a = sum(n)
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:08:15) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a = sum(size(n))
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:08:39) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a = sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:08:49) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(n)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:09:07) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(size(n))
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:10:43) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(max(am + pe + mg + sp + rs))
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:10:56) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:11:31) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(max(n[i]))
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:12:51) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n == am):
		am = am + 1
	elif(n == pe):
		pe = pe + 1
	elif(n == mg):
		mg = mg + 1
	elif(n == sp):
		sp = sp + 1
	elif(n == rs):
		rs = rs + 1
		
a=n[i]
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:13:20) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n == am):
		am = am + 1
	elif(n == pe):
		pe = pe + 1
	elif(n == mg):
		mg = mg + 1
	elif(n == sp):
		sp = sp + 1
	elif(n == rs):
		rs = rs + 1
		
a=max(n[i])
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:14:11) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=max(n[i])
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:14:26) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=max(n)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:14:59) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=max(sum(n))
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:15:09) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		am = am + 1
	elif(n[i] == pe):
		pe = pe + 1
	elif(n[i] == mg):
		mg = mg + 1
	elif(n[i] == sp):
		sp = sp + 1
	elif(n[i] == rs):
		rs = rs + 1
		
a=sum(n)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:23:58) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a=sum(n)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:24:53) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a=sum(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:25:28) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a=max(am[i] + pe[i] + mg[i] + sp[i] + rs[i])
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:25:58) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a=max(am + pe + mg + sp + rs)
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:26:13) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a= am + pe + mg + sp + rs
b=zeros(5, dtype=int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:26:54) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:27:13) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(int(n[i]))
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:30:56) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
1.25462
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:02) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
1.78306
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:04) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
5.8927
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:05) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
8.02606
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:07) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
7.76769
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:08) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
7.89676
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:14) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
7.36113
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
Estado de origem: s
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:16) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
6.90003
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
Estado de origem: s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:16) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
4.75264
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
Estado de origem: s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:17) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
4.04205
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
s
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
Estado de origem: s
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:31:17) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[0] = am + 1
	elif(n[i] == pe):
		n[1] = pe + 1
	elif(n[i] == mg):
		n[2] = mg + 1
	elif(n[i] == sp):
		n[3] = sp + 1
	elif(n[i] == rs):
		n[4] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
3.79329
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1828/1654/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:31:44) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[i] = am + 1
	elif(n[i] == pe):
		n[i] = pe + 1
	elif(n[i] == mg):
		n[i] = mg + 1
	elif(n[i] == sp):
		n[i] = sp + 1
	elif(n[i] == rs):
		n[i] = rs + 1
		
a = max(n[i])
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:32:26) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").lower().split(',')
am = 0
pe = 0
mg = 0
sp = 0
rs = 0

for i in range(size(n)):
	if(n[i] == am):
		n[i] = am + 1
	elif(n[i] == pe):
		n[i] = pe + 1
	elif(n[i] == mg):
		n[i] = mg + 1
	elif(n[i] == sp):
		n[i] = sp + 1
	elif(n[i] == rs):
		n[i] = rs + 1
		
a = sum(am + pe + mg + sp + rs)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:34:12) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		n[i] = AM + 1
	elif(n[i] == PE):
		n[i] = PE + 1
	elif(n[i] == MG):
		n[i] = MG + 1
	elif(n[i] == SP):
		n[i] = SP + 1
	elif(n[i] == RS):
		n[i] = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:35:29) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:36:44) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM[0] = 0
PE[1] = 0
MG[2] = 0
SP[3] = 0
RS[4] = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM[0] = AM[0] + 1
	elif(n[i] == PE):
		PE[1] = PE[1] + 1
	elif(n[i] == MG):
		MG[2] = MG[2] + 1
	elif(n[i] == SP):
		SP[3] = SP[3] + 1
	elif(n[i] == RS):
		RS[4] = RS[4] + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:37:18) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM[0] = 0
PE[1] = 0
MG[2] = 0
SP[3] = 0
RS[4] = 0

for i in range(size(n)):
	if(n[i] == AM[0]):
		AM[0] = AM[0] + 1
	elif(n[i] == PE[1]):
		PE[1] = PE[1] + 1
	elif(n[i] == MG[2]):
		MG[2] = MG[2] + 1
	elif(n[i] == SP[3]):
		SP[3] = SP[3] + 1
	elif(n[i] == RS[4]):
		RS[4] = RS[4] + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:37:48) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM[0] = 0
PE[1] = 0
MG[2] = 0
SP[3] = 0
RS[4] = 0

for i in range(size(n)):
	if(n[i] == AM[0]):
		AM[0] = AM[0] + 1
	elif(n[i] == PE[1]):
		PE[1] = PE[1] + 1
	elif(n[i] == MG[2]):
		MG[2] = MG[2] + 1
	elif(n[i] == SP[3]):
		SP[3] = SP[3] + 1
	elif(n[i] == RS[4]):
		RS[4] = RS[4] + 1
		
a = sum(AM[I]+PE[I]+MG[I]+SP[I]+RS[I])
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:38:48) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:38:55) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
1.17438
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
0
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:39:43) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
1.7651
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
0
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:39:44) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
5.0659
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
0
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:39:44) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
4.94264
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:
0
[0 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:39:44) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(5, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
5.88027
-- TEST CASE 1:
---- input:
PE,MG,MG,SP,PE,SP,MG,MG,MG,MG,AM,AM,RS,SP,RS,AM,AM,PE,MG,RS
---- correct output:
7
[4 3 7 3 3]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 2:
---- input:
MG,RS,PE,SP,PE,PE,MG,MG,MG,AM,RS
---- correct output:
4
[1 3 4 1 2]
---- user output:
0
[0 0 0 0 0]
-- TEST CASE 3:
---- input:
SP,MG,AM,PE,MG,MG,MG,AM,MG,PE,RS
---- correct output:
5
[2 2 5 1 1]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:41:07) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
qtd = max(int(n))
b = zeros(qtd, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:41:38) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
qtd = " "
a = sum(AM+PE+MG+SP+RS)
b = zeros(qtd, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:49:19) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = sum(AM+PE+MG+SP+RS)
b = zeros(n, dtype = int)
print(a)
print(b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:49:41) 
-- CODE:
from numpy import*
n = input("Estado de origem: ").split(',')
AM = 0
PE = 0
MG = 0
SP = 0
RS = 0

for i in range(size(n)):
	if(n[i] == AM):
		AM = AM + 1
	elif(n[i] == PE):
		PE = PE + 1
	elif(n[i] == MG):
		MG = MG + 1
	elif(n[i] == SP):
		SP = SP + 1
	elif(n[i] == RS):
		RS = RS + 1
		
a = 0
b = zeros(n, dtype = int)
print(a)
print(b)
-- EXECUTION TIME:
1.07158
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1828/1654/main.py", line 22, in <module>
    b = zeros(n, dtype = int)
TypeError: 'str' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
