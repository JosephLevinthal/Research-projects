== TEST (2019-05-14 22:05:38) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	acum = sinal + ((sinal)** 2 * cont + 1) / factorial(2 * cont + 1)
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.5708262805
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:06:21) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	acum = ((sinal)** 2 * cont + 1) / factorial(2 * cont + 1)
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
2.99537e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:07:24) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	acum = acum + ((sinal)** 2 * cont + 1) / factorial(2 * cont + 1)
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:07:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	acum = acum + ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:08:36) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	sin(acum) = acum + ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 10
    sin(acum) = acum + ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:10:27) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n):
	acum = acum + sinal +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
3.1998502527
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:11:43) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while (cont < n and -pi =< sinal and sinal =< pi ):
	acum = acum + sinal +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 9
    while (cont < n and -pi =< sinal and sinal =< pi ):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:12:27) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = acum + sinal +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
3.1998502527
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:12:42) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = acum + ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:13:01) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
2.99537e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:13:04) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
2.99537e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:13:18) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- EXECUTION TIME:
0.177668
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.99537e-05
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
0.0016671038
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.0266103785
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:13:24) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = ((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = -sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
2.99537e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:15:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = acum +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:16:15) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal =  - x
cont = 0
acum = 0

while ((cont < n) and (-pi <= sinal) and (sinal <= pi) ):
	acum = acum +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:16:46) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal =  - x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** 2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- OUTPUT:
1.6290539259
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:24) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal =  - x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:40) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal =  - x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:56) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum +((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:18:22) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = - sinal
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:18:47) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

sinal = x
cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((sinal)** (2 * cont + 1) / (factorial(2 * cont + 1))
	sinal = sinal * ( -1)
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    sinal = sinal * ( -1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:19:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x = x  * ( -1)
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 10
    x = x  * ( -1)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:19:21) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x = x  * ( -1)
	cont = cont + 1
print(round(acum , 10))
-- EXECUTION TIME:
0.131931
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 10
    x = x  * ( -1)
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:19:21) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x = x  * ( -1)
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 10
    x = x  * ( -1)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:19:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x = x  * (-1)
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 10
    x = x  * (-1)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:20:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n) ):
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x =  - x
	cont = cont + 1
print(round(acum , 10))
-- ERROR:
File "XXXX", line 10
    x =  - x
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:22:04) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1))
	x = x * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 11
    x = x * (-1)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:23:15) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:17) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.16901
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:18) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.18112
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:23:18) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:18) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.14634
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:18) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.184387
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.466488
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.571763
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.646967
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.796537
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.568111
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2505/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:19) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.63432
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2505/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:20) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.347399
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:20) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.491677
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2505/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:20) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.46222
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2505/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:23:20) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal = sinal * (-1)
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.394576
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    sinal = sinal * (-1)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:23:36) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum - ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal =  - sinal 
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    sinal =  - sinal 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:25:40) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
sinal = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	sinal =  - 1
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    sinal =  - 1
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:26:12) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	s =  - 1
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    s =  - 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:26:38) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	s = s * -(1) 
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    s = s * -(1) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:26:46) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	s = s * (-1) 
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    s = s * (-1) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:26:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
		s = s * (-1) 
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    s = s * (-1) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:42:46) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	s = s * (-1) 
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    s = s * (-1) 
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:42:54) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:42:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	cont = cont + 1
	
print(round(acum , 10))
-- EXECUTION TIME:
0.13829
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:42:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 1) / (factorial(2 * cont + 1)) * sinal
	cont = cont + 1
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:43:31) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:43:49) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
						s = s * (-1)
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:43:51) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
						s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.146187
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:43:51) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
						s = s * (-1)
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:43:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while ((cont < n)):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
						cont = cont + 1
						s = s * (-1)
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:46:54) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:56) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.137118
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.185048
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:57) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.126902
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.37791
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.502225
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.651942
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.667103
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:58) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.315406
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.483549
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.391776
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.404966
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.582881
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1712/2505/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.574915
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:46:59) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.431119
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:47:00) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- EXECUTION TIME:
0.463004
-- ERROR:
  File "/home/codebench/codes/1712/2505/main.py", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 23:09:35) 
-- CODE:
from math import*
x = eval(input("angulo:"))
n = int(input("numero de termos:"))

cont = 1
acum = 0
s = 1

while (cont < n):
	
	acum = acum + ((x)** (2 * cont + 2) / (factorial(2 * cont + 2)) * sinal
	cont = cont + 1
	s = s * (-1)
	
print(round(acum , 10))
-- ERROR:
File "XXXX", line 12
    cont = cont + 1
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:45:07) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 3
	
print(round(acum , 10))
-- OUTPUT:
1.3217834279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 11:45:13) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 3
	
print(round(acum , 10))
-- EXECUTION TIME:
0.196719
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.3217834279
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.8291727909
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.9973640062
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:46:09) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (- pi <= x and x <= pi and cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 3
	
print(round(acum , 10))
-- OUTPUT:
1.3217834279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 11:46:12) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (- pi <= x and x <= pi and cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 3
	
print(round(acum , 10))
-- EXECUTION TIME:
0.178155
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.3217834279
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.8291727909
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.9973640062
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:46:39) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (- pi <= x and x <= +pi and cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 3
	
print(round(acum , 10))
-- OUTPUT:
1.3217834279
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:47:16) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (- pi <= x and x <= +pi and cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 2
	
print(round(acum , 10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 11:47:24) 
-- CODE:
from math import*
x = eval(input("angulo:"))
t = int(input("numero de termos:"))

cont = 0
acum = 0
s = 1
n = 1

while (- pi <= x and x <= +pi and cont < t):
	
	acum = acum + (x ** n / factorial(n)) * s
	cont = cont + 1
	s = s * (-1)
	n = n + 2
	
print(round(acum , 10))
-- EXECUTION TIME:
0.154729
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
