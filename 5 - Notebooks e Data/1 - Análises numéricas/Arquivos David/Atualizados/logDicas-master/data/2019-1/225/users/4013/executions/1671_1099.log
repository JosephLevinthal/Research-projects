== TEST (2019-04-22 14:41:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( a "," , b "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("invalido")
else:
	if((a == b) and (b == c)):
		print("equilatero")
	else:
		if ((a == b) and(b == a)):
			print("isosceles")
		else:
			print("escaleno")
-- ERROR:
File "XXXX", line 7
    print( a "," , b "," , c)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:43:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:44:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.158933
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:44:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.212601
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.131995
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.201146
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.334036
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.449841
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.598059
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.652506
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.602158
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.372948
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.459451
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.564824
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.494469
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.473997
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.401376
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.404069
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.32763
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.32406
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:46:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a >= b + c) or (b >= a + c) or (c >= b + a)):
	print("Tipo de triangulo: invalido")
else:
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) and(b == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.422693
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1099/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:53:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a > 0) or (b > 0) or (c > 0)):
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triamgulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triamgulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:54:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a > 0) or (b > 0) or (c > 0)):
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:55:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a > 0) or (b > 0) or (c > 0)):
	if((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.134409
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:55:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a > 0) or (b > 0) or (c > 0)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:57:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a > 0) or (b > 0) or (c > 0)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 14:58:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) or (b < c + a) or (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 14:58:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) or (b < c + a) or (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.146534
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:00:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:00:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.132741
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:00:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:00:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:00:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:01:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.169288
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:04:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:08:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b) and (a != 0)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: escaleno
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:16:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b) and (a != 0)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:16:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b) and (a != 0)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.181495
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:17:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:17:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.199145
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:35:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a:"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print( "Entradas:" , a , "," , b , "," , c)

if ((a < b + c) and (b < c + a) and (c < a + b)):
	
	if((a == b) and (b == c) and (a == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if((a == b) or (b == c) or (c == a)):
			print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.213744
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
