== TEST (2019-04-27 16:00:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:" ,a ,"," ,b)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:02:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:02:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))
print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:03:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:19:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif (a >= c) and (a <= d) and (b => d):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif (a >= c) and (a <= d) and (b => d):
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:20:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif ((a >= c) and (a <= d) and (b => d)):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif ((a >= c) and (a <= d) and (b => d)):
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 16:20:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif (a >= c and a <= d and b => d):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif (a >= c and a <= d and b => d):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:53:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif (a >= c and a <= d and b => d):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif (a >= c and a <= d and b => d):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:54:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif ((a >= c) and (a <= d) and (b => d)):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif ((a >= c) and (a <= d) and (b => d)):
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:57:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b <= a) or (d <= c):
	print("Nao ha intersecao")
elif (a >= c and a <= d and b => d):
	print("Ha intersecao")
elif (a < c) and (c < b) and (b < d):
	print("Ha intersecao")


-- ERROR:
File "XXXX", line 13
    elif (a >= c and a <= d and b => d):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:55:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)



-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:04:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("a: "))
b = float(input("b: "))
c = float(input("c: "))
d = float(input("d: "))

print("Intervalo 1:" ,a ,"," ,b)
print("Intervalo 2:" ,c ,"," ,d)
if (b > a) and (d > a):
	if ((c < a) and (d < a)) or ((b < c) and (b < d)):
		print("Nao ha intersecao")
	else:
		print("Ha intersecao")
else:
	print("Entradas invalidas")



-- EXECUTION TIME:
0.231966
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
