== TEST (2019-04-01 13:20:27) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= int(5 * d1 ** 1 / 2) + (pi ** d2 / 3)

print(dano)
-- OUTPUT:
322.4630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:21:29) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= int(5 * d1 ** 1 / 2) + (pi ** d2 / 3)

print(dano)
-- OUTPUT:
322.4630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:21:43) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 ** 1 / 2) + (pi ** d2 / 3)

print(dano)
-- OUTPUT:
322.9630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:21:46) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 ** 1 / 2) + (pi ** d2 / 3)

print(dano)
-- EXECUTION TIME:
0.160515
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322.9630645251014
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
335.4630645251014
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.5471975511965974
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:24:47) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 ** (1 / 2) + (pi ** d2 / (3))

print(dano)
-- ERROR:
File "XXXX", line 8
    print(dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:25:35) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 * * (1 / 2) + (pi * * d2 / (3))

print(dano)
-- ERROR:
File "XXXX", line 6
    dano= (5 * d1 * * (1 / 2) + (pi * * d2 / (3))
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:25:51) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 * * (1 / 2)) + (pi * * d2 / (3))

print(dano)
-- ERROR:
File "XXXX", line 6
    dano= (5 * d1 * * (1 / 2)) + (pi * * d2 / (3))
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:26:22) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 * * 1 / 2) + (pi * * d2 / 3)

print(dano)
-- ERROR:
File "XXXX", line 6
    dano= (5 * d1 * * 1 / 2) + (pi * * d2 / 3)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:26:55) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1 * * 1 / 2) + (pi ** d2 / 3)

print(dano)
-- ERROR:
File "XXXX", line 6
    dano= (5 * d1 * * 1 / 2) + (pi ** d2 / 3)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:28:17) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1) ** (1 / 2) + (pi ** d2 / 3)

print(dano)
-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:29:13) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (5 * d1) ** (1 / 2) + (pi) ** (d2 / 3)

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:30:32) 
-- CODE:
p= input("vidas iniciais: ")
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:31:03) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:31:17) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))

print(dano)
-- EXECUTION TIME:
0.19971
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12.105672378589148
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15.34682997614102
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.700659865061313
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:32:27) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))

print(p - dano)
-- OUTPUT:
187.89432762141087
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:33:38) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))
a= dano / / 1

print(p - dano)
-- ERROR:
File "XXXX", line 7
    a= dano / / 1
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:33:54) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))
a= dano / / 1

print(p - dano)
-- ERROR:
File "XXXX", line 7
    a= dano / / 1
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:34:29) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))
a= dano // 1

print(p - dano)
-- OUTPUT:
187.89432762141087
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:34:36) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))
a= dano // 1

print(p -a)
-- OUTPUT:
188.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:34:50) 
-- CODE:
p= float(input("vidas iniciais: "))
d1=int(input("dado 1: "))
d2=int(input("dado 2: "))
from math import * 

dano= (((5 * d1) ** (1 / 2)) + ((pi) ** (d2 / 3)))
a= dano // 1

print(p -a)
-- EXECUTION TIME:
0.186218
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188.0
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285.0
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
