== TEST (2019-04-05 15:45:23) 
-- CODE:
n1 = float(input("digite n1: "))
n2 = float(input("digite n2: "))

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if preco > pagamento:
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:45:28) 
-- CODE:
n1 = float(input("digite n1: "))
n2 = float(input("digite n2: "))

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if preco > pagamento:
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:45:29) 
-- CODE:
n1 = float(input("digite n1: "))
n2 = float(input("digite n2: "))

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if preco > pagamento:
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:45:34) 
-- CODE:
n1 = float(input("digite n1: "))
n2 = float(input("digite n2: "))

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if preco > pagamento:
NameError: name 'preco' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:46:39) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:48:30) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = pagamento + preco
Y = pagamento - preco

if preco > pagamento:
	print("Falta X")
else:
	print("Troco de Y")
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:49:58) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = pagamento + preco
Y = pagamento - preco

if preco > pagamento:
	print(round("Falta X", 2))
else:
	print(round("Troco de Y", 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round("Falta X", 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 15:50:46) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = pagamento + preco
Y = pagamento - preco

if preco > pagamento:
	print("Falta X")
	
else:
	print("Troco de Y")
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 16:09:48) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = pagamento + preco
Y = pagamento - preco

if preco > pagamento:
	print("Falta X")
	
else:
	print("Troco de Y")
-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:26:19) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta" + X)
	
else:
	print("Troco de" + Y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:26:32) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta" + X)
	
else:
	print("Troco de" + Y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:26:47) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta" + X)
	
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:29:16) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta" + X)
	
else:
	print("Troco de Y")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Falta" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:38:38) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta de" X)
	
else:
	print("Troco de" Y)
-- ERROR:
File "XXXX", line 7
    print("Falta de" X)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:52) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Troco de X")
else:
	print("Troco de Y")
	
-- OUTPUT:
Troco de X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:30:54) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print(X)
else:
	print(Y)
	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:26) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
Troco de X = preco - pagamento
Troco de Y = pagamento - preco

if preco > pagamento:
	print(Troco de X)
else:
	print(Troco de Y)
	
-- ERROR:
File "XXXX", line 3
    Troco de X = preco - pagamento
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:44) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
TrocodeX = preco - pagamento
TrocodeY = pagamento - preco

if preco > pagamento:
	print(Troco de X)
else:
	print(Troco de Y)
	
-- ERROR:
File "XXXX", line 7
    print(Troco de X)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:57) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
TrocodeX = preco - pagamento
TrocodeY = pagamento - preco

if preco > pagamento:
	print(TrocodeX)
else:
	print(TrocodeY)
	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:34:28) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
TrocodeX = preco - pagamento
TrocodeY = pagamento - preco

if preco > pagamento:
	print("Troco de" X)
else:
	print("Troco de" Y)
	
-- ERROR:
File "XXXX", line 7
    print("Troco de" X)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:34:58) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Troco de" + X)
else:
	print("Troco de" + Y)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Troco de" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:35:11) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Troco de" + X)
else:
	print("Troco de" Y)
	
-- ERROR:
File "XXXX", line 9
    print("Troco de" Y)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:35:17) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Troco de" + X)
else:
	print("Troco de" - Y)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Troco de" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:35:27) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Troco de" + X)
else:
	print("Troco de" - Y)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Troco de" + X)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:45:33) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print(X)
else:
	print(Y)
	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:48:09) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("troco de"X)
else:
	print("troco de" Y)
	
-- ERROR:
File "XXXX", line 7
    print("troco de"X)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:48:13) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("troco de" X)
else:
	print("troco de" Y)
	
-- ERROR:
File "XXXX", line 7
    print("troco de" X)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:52:11) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = troco de + X
else:
	mens = troco de + Y

print(mens)
-- ERROR:
File "XXXX", line 7
    mens = troco de + X
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:52:31) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "troco de" + X
else:
	mens = "troco de" + Y

print(mens)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "troco de" + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:53:00) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "troco de" + X
else:
	mens = "troco de" + Y

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "troco de" + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:53:11) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "troco de" + X
else:
	mens = "troco de" + Y

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "troco de" + X
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:54:04) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "troco de" (X)
else:
	mens = "troco de" (Y)

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "troco de" (X)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:54:32) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "falta" (X)
else:
	mens = "troco de" (Y)

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "falta" (X)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:54:45) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = "falta" (X)
else:
	mens = "troco de" (Y)

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mens = "falta" (X)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:57:31) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = ("Falta", X)
else:
	mens = ("Troco de", Y)

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(mens, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:57:37) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = ("Falta", X)
else:
	mens = ("Troco de", Y)

print(round(mens, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(mens, 2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:58:01) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = ("Falta", X)
else:
	mens = ("Troco de", Y)

print(mens)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:58:07) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	mens = ("Falta", X)
else:
	mens = ("Troco de", Y)

print(mens)
-- OUTPUT:
('Falta', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:58:41) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta", X)
else:
	print("Troco de", Y)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:58:50) 
-- CODE:
preco = float(input("digite preco: "))
pagamento = float(input("digite pagamento: "))
X = preco - pagamento
Y = pagamento - preco

if preco > pagamento:
	print("Falta", X)
else:
	print("Troco de", Y)
-- EXECUTION TIME:
0.119736
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
