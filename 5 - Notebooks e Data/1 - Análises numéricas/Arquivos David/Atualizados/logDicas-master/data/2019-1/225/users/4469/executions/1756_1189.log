== TEST (2019-05-24 01:49:47) 
-- CODE:
s = input().upper()

i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		print(r)
		break
	i = i + 1
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 01:56:10) 
-- CODE:
s = input().upper()

i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		print(r)
		
		t = ""
		j = len(r) - 1
		while(j >= 0):
			t = t + r[j]
			j = j - 1
		
		if(t == s):
			print(1)
		else:
			print(0)
		
		break
	i = i + 1
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 01:57:48) 
-- CODE:
s = input().upper()

i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		print(r)
		
		t = ""
		j = len(r) - 1
		while(j >= 0):
			t = t + r[j]
			j = j - 1
		
		if(t == s):
			print(1)
		else:
			print(0)
		
		break
	i = i + 1
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 01:57:55) 
-- CODE:
s = input().upper()

i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		print(r)
		
		t = ""
		j = len(r) - 1
		while(j >= 0):
			t = t + r[j]
			j = j - 1
		
		if(t == s):
			print(1)
		else:
			print(0)
		
		break
	i = i + 1
-- OUTPUT:
123
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:03:35) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1
		
if(t == s):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:06:42) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

print(t)

if(t == s):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:07:42) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

print(t)

if(t == s.upper()):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:08:30) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

if(t == r):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:08:44) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

if(t == r):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:08:54) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

if(t == r):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-24 02:09:02) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

if(t == r):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-24 02:09:24) 
-- CODE:
s = input().upper()

r = s
i = 0
while(i < len(s)):
	if(s[i] == " "):
		r = s.replace(" ", "")
		break
	i = i + 1

print(r)
		
t = ""
j = len(r) - 1
while(j >= 0):
	t = t + r[j]
	j = j - 1

if(t == r):
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.262834
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
