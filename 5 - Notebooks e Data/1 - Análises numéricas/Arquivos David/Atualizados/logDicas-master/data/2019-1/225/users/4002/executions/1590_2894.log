== TEST (2019-03-20 15:04:19) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((110*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:04:22) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((110*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.200335
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:04:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((110*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:04:39) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:04:40) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.125132
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:04:59) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:05:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.183345
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:05:01) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:05:02) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:05:03) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.135576
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:05:04) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
float(input(845))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:07:44) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input()))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:07:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input()))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.147493
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:07:59) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(100)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:00) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(100)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.128497
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:08:06) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:08) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.134945
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:09) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.228441
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:08:34) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var*8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.144956
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.160933
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.190552
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:

-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:08:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = (float(input(845)))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var*8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.207651
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:14:40) 
-- CODE:
jogo = 100.0
frete = 45.0

var = input ((100*8) + 45)
print(845)
-- OUTPUT:
845845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:14:42) 
-- CODE:
jogo = 100.0
frete = 45.0

var = input ((100*8) + 45)
print(845)
-- EXECUTION TIME:
0.137162
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:14:42) 
-- CODE:
jogo = 100.0
frete = 45.0

var = input ((100*8) + 45)
print(845)
-- EXECUTION TIME:
0.203636
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:19:45) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ()

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:19:46) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ()

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.137778
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:20:54) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100 * 8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:20:56) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((100 * 8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.181202
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:22:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var * 8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:22:48) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var * 8) + 45)

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.147182
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
100845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
100845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
100845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:22:50) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(100))

# Calculo do valor a ser pago, incluindo o frete:
total = ((var * 8) + 45)

# Impressao do valor total:
print(845)
-- OUTPUT:
100845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:29) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(845)
-- OUTPUT:
845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:25:31) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(845)
-- EXECUTION TIME:
0.210946
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
845
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
845
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
845
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:32) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(845)
-- OUTPUT:
845
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:25:56) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- OUTPUT:
54.84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:26:00) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
valor = float(input("Qual o valor unitario do jogo?"))

# Calculo do valor a ser pago, incluindo o frete:
total = (valor * 8) + 45

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.205702
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
54.84
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
2893.0
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
991941.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
