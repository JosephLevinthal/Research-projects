== TEST (2019-04-11 11:16:38) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4))
-- ERROR:
File "XXXX", line 13
    print(round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:17:21) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							print(round(x,4))
-- ERROR:
File "XXXX", line 12
    print(round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:18:57) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4))
-- EXECUTION TIME:
0.332255
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    print(round(x,4))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:19:04) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print (round(x,4))
-- EXECUTION TIME:
0.227904
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    print (round(x,4))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:19:05) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print (round(x,4))
-- ERROR:
File "XXXX", line 13
    print (round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:19:20) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4)))
-- ERROR:
File "XXXX", line 13
    print(round(x,4)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:19:24) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4))
-- ERROR:
File "XXXX", line 13
    print(round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 02:08:43) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4))
-- ERROR:
File "XXXX", line 13
    print(round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:48:49) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(x,4))
-- ERROR:
File "XXXX", line 13
    print(round(x,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:51:22) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(v,4))
-- ERROR:
File "XXXX", line 13
    print(round(v,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:51:28) 
-- CODE:
from math import*

r=float(imput("valor do raio: "))
a=float(imput("altura do tanque: "))
n=float(imput("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(v, 4))
-- ERROR:
File "XXXX", line 13
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:51:52) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=float(input("opcao desejada: "))

if(n==7):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(v, 4))
-- ERROR:
File "XXXX", line 13
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:52:17) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=float(input("opcao desejada:1/2 "))

if(n==1):
	v=(pi*a**2*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(v, 4))
-- ERROR:
File "XXXX", line 13
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:53:18) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=float(input("opcao desejada:1/2 "))

if(n==1):
	v=(pi*(a**2)*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
							
print(round(v, 4))
-- ERROR:
File "XXXX", line 13
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:54:22) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=float(input("opcao desejada:1/2 "))

if(n==1):
	v=(pi*(a**2)*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
print(round(v, 4))
								
-- ERROR:
File "XXXX", line 12
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:55:02) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=float(input("opcao desejada:1/2 "))

if(n==1):
	v=(pi*(a**2)*(3*r-a))/3
	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
print(round("v", 4))
								
-- ERROR:
File "XXXX", line 12
    print(round("v", 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:10) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3
print(round(v, 4))
								
-- ERROR:
File "XXXX", line 10
    print(round(v, 4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:28) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3)
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:56:42) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3)
print(round(v, 4))
								
-- EXECUTION TIME:
0.140054
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:46) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3)
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:18) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:57:19) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- EXECUTION TIME:
0.172256
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:21) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=(pi*(a**2)*(3*r-a))/3	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:35) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=((pi*(a**2)*(3*r-a))/3)	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:57:37) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=((pi*(a**2)*(3*r-a))/3)	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- EXECUTION TIME:
0.149424
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:38) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
if(n==1):
	v=((pi*(a**2)*(3*r-a))/3)	
else:
	v=(((4*pi*r**3)/3) - ((pi*a**2*(3*r-a))/3))
print(round(v, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:59:08) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3) - v
if(n==1):
	print(round(v, 4))
else:
	print(round(h, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:59:20) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3) - v
if(n==1):
	print(round(v, 4))
else:
	print(round(h, 4))
								
-- EXECUTION TIME:
0.196727
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:59:21) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3) - v
if(n==1):
	print(round(v, 4))
else:
	print(round(h, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:59:49) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3)
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:59:51) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3)
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- EXECUTION TIME:
0.138032
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:59:52) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=((pi*(a**2)*(3*r-a))/3)	
h=((4*pi*r**3)/3)
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:00:55) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=(pi*(a**2)*(3*r-a))/3	
h=(4*pi*(r**3))/3
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:00:57) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=(pi*(a**2)*(3*r-a))/3	
h=(4*pi*(r**3))/3
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- EXECUTION TIME:
0.149203
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:00:58) 
-- CODE:
from math import*

r=float(input("valor do raio: "))
a=float(input("altura do tanque: "))
n=input("opcao desejada:1/2 ")
v=(pi*(a**2)*(3*r-a))/3	
h=(4*pi*(r**3))/3
j=h-v
if(n==1):
	print(round(v, 4))
else:
	print(round(j, 4))
								
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:06:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- EXECUTION TIME:
0.194941
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
