== TEST (2019-03-22 22:00:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
R=6371,01
d= R*acos*(sen(t1)*sen(t2)+cos(t1)*cos(t2)*cos(g1-g2)) 
print(round(d, 2))
-- ERROR:
File "XXXX", line 9
    R=6371,01
            ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:01:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371,01*acos*(sen(t1)*sen(t2)+cos(t1)*cos(t2)*cos(g1-g2)) 
print(round(d, 2))
-- ERROR:
File "XXXX", line 9
    d= 6371,01*acos*(sen(t1)*sen(t2)+cos(t1)*cos(t2)*cos(g1-g2)) 
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:02:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *acos*(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d= 6371.01 *acos*(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
TypeError: unsupported operand type(s) for *: 'float' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:03:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *arcos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d= 6371.01 *arcos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:03:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:03:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- EXECUTION TIME:
0.18357
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:27:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:28:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de P1:")))
t2 = radians(float(input("latitude de P2:")))
g2 = radians(float(input("longitude de P2:")))
d= 6371.01 *acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
print(round(d, 2))
-- EXECUTION TIME:
0.139298
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
