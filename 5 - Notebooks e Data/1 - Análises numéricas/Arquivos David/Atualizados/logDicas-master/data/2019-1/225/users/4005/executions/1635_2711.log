== TEST (2019-04-15 12:55:20) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt+qpdo*vdp)
if(vd>=soma)
print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 7
    if(vd>=soma)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:55:34) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt+qpdo*vdp)
if(vd>=soma):
print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 8
    print("SUFICIENTE")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:55:41) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt+qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    soma=(qrtu*vdt+qpdo*vdp)
NameError: name 'qrtu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:55:52) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt+qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    soma=(qrtu*vdt+qpdo*vdp)
NameError: name 'qrtu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:56:45) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt)+(qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.132818
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2711/main.py", line 6, in <module>
    soma=(qrtu*vdt)+(qpdo*vdp)
NameError: name 'qrtu' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:56:47) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qrtu*vdt)+(qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    soma=(qrtu*vdt)+(qpdo*vdp)
NameError: name 'qrtu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:57:23) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qtru*vdt)+(qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:57:42) 
-- CODE:
vd=float(input("valor disponivel:"))
qtru=float(input("quantidade de tickets do ru:"))
vdt=float(input("valor dos tickets:"))
qpdo=float(input("quantidades de passes de onibus"))
vdp=float(input("valor dos passes"))
soma=(qtru*vdt)+(qpdo*vdp)
if(vd>=soma):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.148441
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
