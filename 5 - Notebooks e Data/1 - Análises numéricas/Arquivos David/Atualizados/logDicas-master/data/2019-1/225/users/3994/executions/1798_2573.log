== TEST (2019-06-10 16:19:30) 
-- CODE:
from numpy import*
p = array(eval(input("Peso: ")))
a = array(eval(input("Altura:"))
imc = p/a**2
print(imc)

-- ERROR:
File "XXXX", line 4
    imc = p/a**2
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:19:42) 
-- CODE:
from numpy import*
p = array(eval(input("Peso: ")))
a = array(eval(input("Altura:"))
imc = (p/a)**2
print(imc)

-- ERROR:
File "XXXX", line 4
    imc = (p/a)**2
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:20:23) 
-- CODE:
from numpy import*
p = array(eval(input("Peso: ")))
a = array(eval(input("Altura:"))
imc= p/(a)**2
print(imc)

-- ERROR:
File "XXXX", line 4
    imc= p/(a)**2
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:21:05) 
-- CODE:
from numpy import*


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:24:46) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
imc = p/(a)**2
print(imc)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:26:13) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
imc = p/(a)**2
print(round(imc,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 16:28:36) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
print(max(round(imc = p/(a)**2,2)))

-- ERROR:
File "XXXX", line 4
    print(max(round(imc = p/(a)**2,2)))
                                  ^
SyntaxError: positional argument follows keyword argument
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 14:58:38) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 14:59:17) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.963541
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
OBESIDADE SEVERA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:00:03) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:01:07) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 15:03:07) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 15:03:37) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
h=0
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
	h=h+1
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
1.15125
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:25:56) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
1.10534
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:26:29) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
1.30649
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
Digite o peso:Digite a altura:[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
Digite o peso:Digite a altura:[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:26:40) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(p), dtype= float)
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
1.30231
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:28:20) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:28:25) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.9856
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:28:32) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.740519
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:28:37) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.96522
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:28:48) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(p)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.793159
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
Digite o peso:Digite a altura:[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:28:51) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size()):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 13:28:55) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 13:28:59) 
-- CODE:
from numpy import*
p = array(eval(input("Digite o peso:")))
a = array(eval(input("Digite a altura:")))
v = zeros(size(a), dtype= float)
for i in range(size(a)):
	IMC= round((p[i]/(a[i]**2)),2)
	v[i]=IMC
print(v)
print("O MAIOR IMC DA TURMA EH:",max(v))
if(max(v)<17):
	print("muito abaixo do peso".upper())
elif(max(v)>17 and max(v)<18.49):
	print("abaixo do peso".upper())
elif(max(v)>18.5 and max(v)<24.99):
	print("peso normal".upper())
elif(max(v)>25 and max(v)<29.99):
	print("acima do peso".upper())
elif(max(v)>30 and max(v)<34.99):
	print("obesidade".upper())
elif(max(v)>35 and max(v)<39.99):
	print("obesidade severa".upper())
elif(max(v)>40):
	print("obesidade morbida".upper())


-- EXECUTION TIME:
0.921868
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
