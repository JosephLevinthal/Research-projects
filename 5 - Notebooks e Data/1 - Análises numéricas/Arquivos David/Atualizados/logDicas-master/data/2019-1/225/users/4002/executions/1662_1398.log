== TEST (2019-04-15 14:07:24) 
-- CODE:
tempo = float(input("tempo de voo: "))
p1 = 5000
min1 = 100
p2 = 8000
min2 = 90
eq1 = (pi + (tempo*min1))
eq2 = (p2 + (200*min1) + ((tempo - 200)*min2))
if tempo <= 200:
	print(round(eq1, 2))
else:
	print(round(eq2, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    eq1 = (pi + (tempo*min1))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:07:29) 
-- CODE:
tempo = float(input("tempo de voo: "))
p1 = 5000
min1 = 100
p2 = 8000
min2 = 90
eq1 = (pi + (tempo*min1))
eq2 = (p2 + (200*min1) + ((tempo - 200)*min2))
if tempo <= 200:
	print(round(eq1, 2))
else:
	print(round(eq2, 2))
-- EXECUTION TIME:
0.124356
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1662/1398/main.py", line 6, in <module>
    eq1 = (pi + (tempo*min1))
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:07:30) 
-- CODE:
tempo = float(input("tempo de voo: "))
p1 = 5000
min1 = 100
p2 = 8000
min2 = 90
eq1 = (pi + (tempo*min1))
eq2 = (p2 + (200*min1) + ((tempo - 200)*min2))
if tempo <= 200:
	print(round(eq1, 2))
else:
	print(round(eq2, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    eq1 = (pi + (tempo*min1))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:07:45) 
-- CODE:
tempo = float(input("tempo de voo: "))
p1 = 5000
min1 = 100
p2 = 8000
min2 = 90
eq1 = (p1 + (tempo*min1))
eq2 = (p2 + (200*min1) + ((tempo - 200)*min2))
if tempo <= 200:
	print(round(eq1, 2))
else:
	print(round(eq2, 2))
-- OUTPUT:
17100.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:07:46) 
-- CODE:
tempo = float(input("tempo de voo: "))
p1 = 5000
min1 = 100
p2 = 8000
min2 = 90
eq1 = (p1 + (tempo*min1))
eq2 = (p2 + (200*min1) + ((tempo - 200)*min2))
if tempo <= 200:
	print(round(eq1, 2))
else:
	print(round(eq2, 2))
-- EXECUTION TIME:
0.145915
-- TEST CASE 1:
---- input:
121
---- correct output:
17100.0
---- user output:
17100.0
-- TEST CASE 2:
---- input:
450
---- correct output:
50500.0
---- user output:
50500.0
-- TEST CASE 3:
---- input:
1
---- correct output:
5100.0
---- user output:
5100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
