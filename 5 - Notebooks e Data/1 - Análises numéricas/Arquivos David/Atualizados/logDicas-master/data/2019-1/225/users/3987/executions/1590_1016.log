== TEST (2019-03-29 16:13:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)/2
from math import *
sqrt (s(s-a)*(s-b)*(s-c))
print(round(sqrt,5)
-- ERROR:
File "XXXX", line 11
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:13:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)/2
from math import *
sqrt (s(s-a)*(s-b)*(s-c))
print(round(sqrt,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:14:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)/2
from math import *
sqrt (x)
A = sqrt((s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:14:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)/2
from math import *
sqrt(x)
A = sqrt((s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:15:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)/2
from math import *
sqrt(s)
A = sqrt((s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:15:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = (a+b+c)//2
from math import *
sqrt(s)
A = sqrt((s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:16:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = ((a+b+c)/2)
from math import *
sqrt(s)
A = sqrt((s-a)*(s-b)*(s-c))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:17:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = ((a+b+c)/2)
from math import *
sqrt(s)
A = sqrt(s*((s-a)*(s-b)*(s-c)))
print(round(A,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:17:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("o comprimento do lado a do triangulo e:"))
b = int(input("o comprimento do lado b do triangulo e:"))
c = int(input("o comprimento do lado c do triangulo e:"))
s = ((a+b+c)/2)
from math import *
sqrt(s)
A = sqrt(s*((s-a)*(s-b)*(s-c)))
print(round(A,5))
-- EXECUTION TIME:
0.201453
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 4, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 11:37:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("o comprimento do lado a do triangulo e:"))
b = float(input("o comprimento do lado b do triangulo e:"))
c = float(input("o comprimento do lado c do triangulo e:"))
s = ((a+b+c)/2)
from math import *
sqrt(s)
A = sqrt(s*((s-a)*(s-b)*(s-c)))
print(round(A,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 11:38:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("o comprimento do lado a do triangulo e:"))
b = float(input("o comprimento do lado b do triangulo e:"))
c = float(input("o comprimento do lado c do triangulo e:"))
s = ((a+b+c)/2)
from math import *
sqrt(s)
A = sqrt(s*((s-a)*(s-b)*(s-c)))
print(round(A,5))
-- EXECUTION TIME:
0.160192
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
