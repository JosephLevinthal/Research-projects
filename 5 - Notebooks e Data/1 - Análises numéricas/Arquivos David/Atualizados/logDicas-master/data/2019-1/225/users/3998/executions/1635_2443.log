== SUBMITION (2019-04-10 12:48:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#combs

if (n==1):
	print(round(v-v2,4)
else:(n==2)
	print(round(v2,4)
-- EXECUTION TIME:
0.140373
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:(n==2)
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:48:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#combs

if (n==1):
	print(round(v-v2,4)
else:
	print(round(v2,4)
-- EXECUTION TIME:
0.128007
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.198324
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.185641
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.142133
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.16855
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.12073
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.155836
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.17042
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.233293
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.302736
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4)
else:
	print(round(v-v2,4)
-- EXECUTION TIME:
0.356082
-- ERROR:
  File "/home/codebench/codes/1635/2443/main.py", line 13
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:49:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.146043
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.201561
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.189335
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.202646
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.214576
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.174384
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.150807
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.172041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:50:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.183124
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:50:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v = 4 * pi * r **3/3#total
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:51:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:51:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.121878
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:51:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.115916
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:51:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.194054
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:51:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.194511
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:51:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.220337
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2443/main.py", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:51:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = 4 * pi * r **3/3#total
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = (4/3)*pi*(r**3)
v2= pi * x ** 2(3*r - x)#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    v2= pi * x ** 2(3*r - x)#ar
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:53:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.122787
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:56:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 12:56:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.120897
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
raio: altura: volume 9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio: altura: volume 290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:35:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = float(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:35:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = int(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:36:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = int(input("volume "))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.164478
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:50:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = int(input("volume 1/2?"))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*

r = float(input("raio: "))
x= float(input("altura: "))
n = int(input("volume 1/2?"))

v = (4/3)*pi*(r**3)
v2= (pi*(x** 2)*(3*r-x))/3#ar

if (n==1):
	print(round(v2,4))
else:
	x=v-v2
	print(round(x,4))
-- EXECUTION TIME:
0.177973
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
