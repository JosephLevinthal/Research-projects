== TEST (2019-03-20 15:38:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros?"))
var2= float(input("Quantidade que ficar√°"))
print=(var2,3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:38:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros?"))
var2= float(input("Quantidade que ficara"))
print=(var2,3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:38:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros?"))
var2= float(input("Quantidade que ficara?"))
print=(var2,3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:40:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros?"))
var2= float(input("Quantidade que ficara?"))
print=(var2,3)
-- EXECUTION TIME:
0.133652
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:46:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3"))
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:47:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("4"))
var2= float(input("var1/3"))
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 15:47:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3"))
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 15:48:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3"))
print= (round(var2,3))
-- EXECUTION TIME:
0.140461
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 23:54:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3"))
print= (round(var2,3))
-- EXECUTION TIME:
0.146882
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 23:56:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3*var1"))
print= (round(var2,3))
-- EXECUTION TIME:
0.169138
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:56:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1/3*var1"))
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:19:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input("var1//3"))
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:20:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input("var1//3")
print= (round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:45:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input("var1//3")
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:05:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 14:05:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- EXECUTION TIME:
0.204879
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:05:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:06:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:06:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//%3)
print(round(var2,3))
-- ERROR:
File "XXXX", line 5
    var2= input(var1//%3)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:08:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 14:09:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- EXECUTION TIME:
0.130775
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:09:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 14:09:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,3))
-- EXECUTION TIME:
0.196628
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:10:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:10:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 14:10:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,3))
-- EXECUTION TIME:
0.209936
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:25:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var1,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 14:25:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var1,3))
-- EXECUTION TIME:
0.277046
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:26:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:26:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,03))
-- ERROR:
File "XXXX", line 6
    print(round(var2,03))
                      ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:26:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,03))
-- ERROR:
File "XXXX", line 6
    print(round(var2,03))
                      ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:27:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:27:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:27:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:28:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:28:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:28:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:32:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1//3))
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1//3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:32:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:33:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:33:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:33:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 2))
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:37:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 2))
print(round(var2, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:37:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= float(input(var1/3))
print(round(var2, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(input(var1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:38:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:38:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 14:38:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:03:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:03:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/3)
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:03:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1/%3)
print(round(var2,3))

-- ERROR:
File "XXXX", line 5
    var2= input(var1/%3)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:21:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2= input(var1//3)
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:26:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2 = input(var1//3)
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = input(var1//3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:27:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=float(input("Quantos litros foram comprados?"))
var2 = input(round(var1//3,3))
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = input(round(var1//3,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:39:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros foram comprados?"))
var2 = input((var1/3,3))
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = input((var1/3,3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:39:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros foram comprados?"))
var2 = input(var1/3)
print(round(var2,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:42:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros foram comprados?"))
var2 = input(var1/3)
print(round(var1/3,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = input(var1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:48:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros foram comprados?"))
var2 = input(var*1/3)
print(round(var*1/3,3))

-- EXECUTION TIME:
0.216122
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2 = input(var*1/3)
NameError: name 'var' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:48:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Quantos litros foram comprados?"))
var2 = input(var*1//3)
print(round(var*1//3,3))

-- EXECUTION TIME:
0.144457
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    var2 = input(var*1//3)
NameError: name 'var' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:51:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(var*1/3,3))

-- EXECUTION TIME:
0.122413
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    B = input(A*1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:51:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
B = input(A*//3)
print(round(var*//3,3))

-- EXECUTION TIME:
0.140173
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 5
    B = input(A*//3)
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:53:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
B = input(A*//3)
print(round(B,3))

-- EXECUTION TIME:
0.138127
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 5
    B = input(A*//3)
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 19:53:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(B,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    B = input(A*1/3)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:15:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(B,3))

-- EXECUTION TIME:
0.139004
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    B = input(A*1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:15:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(B,3))

-- EXECUTION TIME:
0.200225
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 4
    A = input())
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:18:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(B*1/3,3))

-- EXECUTION TIME:
0.140929
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 4
    A = input())
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:18:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?"))
B = input(A*1/3)
print(round(B*1/3,3))

-- EXECUTION TIME:
0.197279
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 4
    A = input())
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 20:20:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?")
B = input(A*1/3)
print(round(B*1/3,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    B = input(A*1/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:26:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?")
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.137112
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 20:26:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?")
X = input(A*1/3)
print(round(X,3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    X = input(A*1/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:36:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?")
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.168872
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:36:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input("Quantos litros foram comprados?")
X = input(A*1/3)
print(round(X,2))

-- EXECUTION TIME:
0.180387
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:36:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = input(float("Quantos litros foram comprados?"))
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.13304
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 4, in <module>
    A = input(float("Quantos litros foram comprados?"))
ValueError: could not convert string to float: 'Quantos litros foram comprados?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 20:37:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.200115
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:01:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.150819
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:01:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(A//3)
print(round(X,3))

-- EXECUTION TIME:
0.135885
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A//3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:01:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(A/3)
print(round(X,3))

-- EXECUTION TIME:
0.137969
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:02:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(A*1/3)
print(round(X,3))

-- EXECUTION TIME:
0.192136
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(A*1/3)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:06:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(round(A*1/3,n))
print(round(X,3))

-- EXECUTION TIME:
0.200452
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(round(A*1/3,n))
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:07:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(round(A*1/3,3))
print(round(X,3))

-- EXECUTION TIME:
0.1213
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(round(A*1/3,3))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:07:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = input(round(A*1/3,n))
print(round(X,3))

-- EXECUTION TIME:
0.148874
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = input(round(A*1/3,n))
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 12:07:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = (round(A*1/3,n))
print(round(X,3))

-- EXECUTION TIME:
0.153514
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 5, in <module>
    X = (round(A*1/3,n))
NameError: name 'n' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:08:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = float(input("Quantos litros foram comprados?"))
X = A*1/3
print(round(X,3))

-- EXECUTION TIME:
0.220803
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
