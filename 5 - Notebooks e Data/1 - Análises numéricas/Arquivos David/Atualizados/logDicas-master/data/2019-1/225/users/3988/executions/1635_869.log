== TEST (2019-04-10 13:15:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var=>200):
	x = (var - (var*0.05))
else :
	x = var
print(x)	
-- ERROR:
File "XXXX", line 5
    if (var=>200):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:15:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else :
	x = var
print(x)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:16:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else :
	x = var
print(x)	
-- EXECUTION TIME:
0.177394
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/869/main.py", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:16:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = var
print(x)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:16:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = var
print(x)	
-- EXECUTION TIME:
0.153634
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/869/main.py", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:16:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(x)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x. 2)	
-- ERROR:
File "XXXX", line 9
    print(round(x. 2)	
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2)	
-- ERROR:
File "XXXX", line 10
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2)	
-- ERROR:
File "XXXX", line 10
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2)	
-- ERROR:
File "XXXX", line 10
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x. 2))	
-- ERROR:
File "XXXX", line 9
    print(round(x. 2))	
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:18:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:18:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var*0.05))
else:
	x = (var)
print(round(x, 2))	
-- EXECUTION TIME:
0.170943
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/869/main.py", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:19:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var * 0.05))
else:
	x = (var)
print(round(x, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:19:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	x = (var - (var * 0.05))
else:
	x = (var)
print(round(x, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:20:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	var = (var - (var * 0.05))
else:
	var = var
print(round(var, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:20:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	var = (var - (var * 0.05))
else:
	var = var
print(round(var, 2))	
-- EXECUTION TIME:
0.248709
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/869/main.py", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:20:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = int(input("valor:"))
if (var>=200):
	var = (var - (var * 0.05))
else:
	var = var
print(round(var, 2))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:20:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var = float(input("valor:"))
if (var>=200):
	var = (var - (var * 0.05))
else:
	var = var
print(round(var, 2))	
-- EXECUTION TIME:
0.206254
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
