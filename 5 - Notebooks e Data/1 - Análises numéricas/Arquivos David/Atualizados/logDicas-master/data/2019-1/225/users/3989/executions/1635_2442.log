== TEST (2019-04-03 19:05:01) 
-- CODE:
num= input("Digite um numero: ")

if (num % 2 == 0)
	print ("Par")
else
	print("Impar")

print(mnum)

-- ERROR:
File "XXXX", line 3
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:05:09) 
-- CODE:
num= input("Digite um numero: ")

if (num % 2 == 0)
	print ("Par")
else
	print("Impar")

print(num)

-- ERROR:
File "XXXX", line 3
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:06:04) 
-- CODE:
num= input("Digite um numero: ")

if (num % 2 == 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (num % 2 == 0):
TypeError: not all arguments converted during string formatting
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:06:18) 
-- CODE:
num= input("Digite um numero: ")

if (num % 2 = 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- ERROR:
File "XXXX", line 3
    if (num % 2 = 0):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:06:32) 
-- CODE:
num= input("Digite um numero: ")

if (num % 2 == 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (num % 2 == 0):
TypeError: not all arguments converted during string formatting
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:06:59) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- OUTPUT:
Impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:07:05) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- EXECUTION TIME:
0.200478
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
Impar
55
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
Par
842
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:07:19) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("Par")
else:
	print("Impar")

print(num)

-- OUTPUT:
Impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:07:46) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")

print(num)

-- OUTPUT:
impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:08:56) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")

print(num)

-- OUTPUT:
impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:09:05) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")

print(num)

-- EXECUTION TIME:
0.165964
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
55
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
842
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:09:17) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
   print(num)

-- EXECUTION TIME:
0.132571
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 8
    print(num)
             ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:09:28) 
-- CODE:
num= int(input("digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
   print(num)

-- ERROR:
File "XXXX", line 8
    print(num)
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:09:44) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
   print(num)

-- ERROR:
File "XXXX", line 8
    print(num)
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:09:53) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
print(num)

-- EXECUTION TIME:
0.161735
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
55
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
842
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:09:55) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
print(num)

-- OUTPUT:
impar
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:10:02) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")
	
print(num)

-- EXECUTION TIME:
0.143253
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
55
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
842
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:10:30) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")


-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:10:35) 
-- CODE:
num= int(input("Digite um numero: "))

if (num % 2 == 0):
	print ("par")
else:
	print("impar")


-- EXECUTION TIME:
0.15315
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
