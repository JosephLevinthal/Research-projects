== TEST (2019-03-25 14:28:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- ERROR:
File "XXXX", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:28:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- EXECUTION TIME:
0.143751
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:28:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- EXECUTION TIME:
0.208206
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:28:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- ERROR:
File "XXXX", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:28:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- EXECUTION TIME:
0.136617
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:28:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30**
print(round(lucro, 2))
-- ERROR:
File "XXXX", line 5
    lucro = 30**
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 30**
print(round(lucro, 2))
-- EXECUTION TIME:
0.165066
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30**
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:29:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.190406
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:29:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.207304
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.206346
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:29:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro =  0.30
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro =  0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.166283
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(int("Total de vendas?"))
lucro =  0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.135714
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 4, in <module>
    var = float(int("Total de vendas?"))
ValueError: invalid literal for int() with base 10: 'Total de vendas?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:29:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro =  0.30
print(round(lucro, 2))
-- OUTPUT:
0.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:29:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro =  0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.159159
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
0.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- ERROR:
File "XXXX", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- EXECUTION TIME:
0.13872
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 30%
print(round(lucro, 2))
-- EXECUTION TIME:
0.200786
-- ERROR:
  File "/home/codebench/codes/1590/1014/main.py", line 5
    lucro = 30%
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.215737
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.142928
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.200476
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
30.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = 100 * 0.30
print(round(lucro, 2))
-- OUTPUT:
30.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:32:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = var*0.30
print(round(lucro, 2))
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:32:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float(input("Total de vendas?"))
lucro = var*0.30
print(round(lucro, 2))
-- EXECUTION TIME:
0.175991
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
