== TEST (2019-04-22 21:15:40) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
		print("escaleno")# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- ERROR:
File "XXXX", line 14
    print("escaleno")# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
                                                                                                                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:16:28) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:17:05) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- EXECUTION TIME:
0.13935
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:17:15) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:17:40) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- EXECUTION TIME:
0.176673
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:18:09) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:25:24) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- EXECUTION TIME:
0.204598
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:25:38) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída

-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:26:15) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.128902
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:26:32) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:26:45) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:26:50) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.14151
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:27:04) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:27:28) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.180477
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:27:35) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:28:04) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.140515
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:28:07) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:29:36) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:29:41) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.164822
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:31:04) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:31:13) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.124588
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:36:34) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:36:43) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:39:05) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.142678
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:39:16) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:39:59) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.148129
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:43:55) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:44:16) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.12751
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:44:48) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:45:26) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.137868
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:45:34) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:47:36) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:49:21) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:50:33) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.194723
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:50:37) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:50:47) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.169442
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:51:07) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:51:27) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.120875
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:51:36) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:51:52) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:52:18) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.134967
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:52:21) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:52:41) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.25553
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 21:53:14) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 21:53:47) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.146092
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:21:29) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:22:08) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.204979
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:22:15) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:22:31) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.168405
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:23:06) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:24:19) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:24:27) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.193863
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:24:31) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:24:42) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.17439
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:24:51) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:25:09) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.131152
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:25:30) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:25:48) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.144508
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:25:59) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:26:07) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.19374
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:26:14) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:26:30) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.129354
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:26:35) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:26:56) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.191086
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:27:00) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:27:27) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.170886
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:27:32) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:27:53) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.171496
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:27:58) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:28:13) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.121423
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:28:45) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:28:55) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.174484
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 22:29:00) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 22:29:08) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.169092
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 23:00:08) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 23:00:58) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.179476
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:24:51) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:26:58) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.134721
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:28:41) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:28:55) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.142497
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:29:07) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:29:41) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.165129
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:29:45) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:29:53) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.181414
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:30:13) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 17:31:03) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 17:31:12) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.195191
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 18:55:13) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 18:55:44) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.195455
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 18:55:54) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 18:56:14) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 18:56:26) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.215123
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 18:57:49) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 18:59:12) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 19:00:08) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.190395
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:01:32) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 19:01:53) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")


-- EXECUTION TIME:
0.141076
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 19:33:03) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 19:34:03) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
-- EXECUTION TIME:
0.184362
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:11:34) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 20:13:51) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) and (c != a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		   print("escaleno")
-- EXECUTION TIME:
0.127107
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:16:18) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	  
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:16:40) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	  
-- EXECUTION TIME:
0.185632
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:18:05) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
			print("invalido")
-- EXECUTION TIME:
0.194513
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 14
    print("invalido")
                    ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:18:06) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
			print("invalido")
-- ERROR:
File "XXXX", line 14
    print("invalido")
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:18:42) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
			print("Invalido")
-- ERROR:
File "XXXX", line 14
    print("Invalido")
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:18:52) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		print("Invalido")
-- ERROR:
File "XXXX", line 14
    print("Invalido")
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:18:54) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   else: 
		print("Invalido")
-- EXECUTION TIME:
0.198051
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 14
    print("Invalido")
                    ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:19:05) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:19:11) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- EXECUTION TIME:
0.150531
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:20:45) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		print("isosceles")
	   
-- ERROR:
File "XXXX", line 12
    print("isosceles")
                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:21:09) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:21:22) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:21:34) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- EXECUTION TIME:
0.135009
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:22:54) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:23:05) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Invalido")
else:
   if ((a == b) and (b == c)):
	   print ("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- EXECUTION TIME:
0.185367
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:11) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:24:22) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- EXECUTION TIME:
0.235284
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:24:26) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("invalido")
else:
   if ((a == b) and (b == c)):
	   print("equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("isosceles")
	   
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:27:06) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("Tipo de triangulo: isosceles")
	   
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:27:13) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("Tipo de triangulo: isosceles")
	   
-- EXECUTION TIME:
0.204275
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:28:04) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("Tipo de triangulo: isosceles")
	   else: 
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 14
    print("Tipo de triangulo: escaleno")
                                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:29:33) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
		   print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else: 
         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:30:40) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 12
    print("Tipo de triangulo: isosceles")
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:31:03) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
   print("Tipo de triangulo: invalido")
else:
   if ((a == b) and (b == c)):
	   print("Tipo de triangulo: equilatero")
   else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 11
    if ((a == b) or (b == c) or (a == c)):
                                         ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:32:03) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:32:08) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.162966
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:32:37) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:32:45) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.159844
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:33:44) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:33:49) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.187843
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:33:59) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:34:18) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.243694
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:34:37) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:34:47) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.165293
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:35:01) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:35:20) 
-- CODE:
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.141736
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:36:27) 
-- CODE:
a = float(input("entrada: a "))
b = float(input("entrada: b "))
c = float(input("entrada: c "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:36:39) 
-- CODE:
a = float(input("entrada: a "))
b = float(input("entrada: b "))
c = float(input("entrada: c "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.0994959
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:37:02) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:37:14) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
		print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.217236
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:37:46) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:38:29) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:38:35) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.219055
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:41:47) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:41:52) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.237842
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:43:23) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:43:27) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.190711
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:03) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:44:14) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.148952
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:20) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:44:53) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.146772
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:45:28) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:45:33) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.155913
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:46:01) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:46:06) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.208138
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:47:12) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:47:15) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.192093
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:47:46) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:47:50) 
-- CODE:
a = float(input("entrada a: "))
b = float(input("entrada b: "))
c = float(input("entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.160955
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:48:47) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:48:51) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.171227
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:49:07) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:49:15) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.180086
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:49:29) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:49:33) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.16339
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:50:11) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:50:14) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.207241
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:50:21) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:50:25) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c != a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.298817
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:50:41) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:50:45) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.155807
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:51:08) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:51:22) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.145753
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:51:31) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:51:31) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:51:35) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.236332
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:51:42) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:51:51) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.149025
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:52:03) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:52:06) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.135728
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:52:17) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:52:22) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.152627
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:52:33) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:52:36) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))

if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.28222
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:55:26) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:55:31) 
-- CODE:
a = float(input("Entrada a: "))
b = float(input("Entrada b: "))
c = float(input("Entrada c: "))
print("Entradas:", a, ",", b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print("Tipo de triangulo: invalido")
else:
	if ((a == b) and (b == c)):
		print("Tipo de triangulo: equilatero")
	else:
		if ((a == b) or (b == c) or (a == c)):
			print("Tipo de triangulo: isosceles")
		else: 
			print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.13211
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
