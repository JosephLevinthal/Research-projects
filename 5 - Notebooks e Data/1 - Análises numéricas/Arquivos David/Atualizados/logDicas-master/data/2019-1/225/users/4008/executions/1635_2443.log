== TEST (2019-04-12 19:19:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 3)
else:
	print(round( V - v, 3))
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:19:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 3)
else :
	print(round( V - v, 3))
-- ERROR:
File "XXXX", line 12
    else :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:21:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)
else:
	print(round( V - v, 4))
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:21:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)
else :
	print(round( V - v, 4))
-- ERROR:
File "XXXX", line 12
    else :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:23:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)
else:
	print(round( V - v, 4))
-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:23:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)

else:
	print(round( V - v, 4))
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:24:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)
f = V - v
else:
	print(round(f, 4))
-- ERROR:
File "XXXX", line 12
    f = V - v
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:24:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)

-- ERROR:
File "XXXX", line 12
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:24:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3
if(opcao == 1):
	print(round(v, 4)
-- ERROR:
File "XXXX", line 12
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:25:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = (pi*x**2(3*r - x))/3

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    v = (pi*x**2(3*r - x))/3
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:27:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:27:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:28:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 19:29:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- EXECUTION TIME:
0.190714
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:29:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 19:30:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- EXECUTION TIME:
0.133812
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:30:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("digite sua opcao: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:31:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 19:31:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
v = ((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4))

-- EXECUTION TIME:
0.221821
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:34:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
V =((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-V, 4)

-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:35:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
V2 =((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-V2, 4)

-- ERROR:
File "XXXX", line 14
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:35:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
V2 =((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-V2, 4)

-- ERROR:
File "XXXX", line 14
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:36:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
V2 =((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-V2, 4)
-- ERROR:
File "XXXX", line 14
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 19:36:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r = float(input("qual o raio: ")) 
x = float(input("qual a altura da coluna de ar: "))
opcao = int(input("um ou dois: "))
V = (4*pi*r**3)/3
v =((pi*x**2)*(3*r - x))/3
if(opcao == 1):
	print(round(V, 4))
else:
	print(round(V-v, 4)
-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:11:39) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
opcao = int(input("digite um numero: (1/2)"))
-- ERROR:
File "XXXX", line 14
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:16:32) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
opcao = int(input("digite um numero: (1/2):"))
V = (pi*h**2 * (3*r - h))/3
v = (4*pi*r**3)/3
if (opcao == 1):
	print(round(V, 4))
else:
	print(v - V, 4)
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 09:16:56) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
opcao = int(input("digite um numero: (1/2):"))
V = (pi*h**2 * (3*r - h))/3
v = (4*pi*r**3)/3
if (opcao == 1):
	print(round(V, 4))
else:
	print(v - V, 4)
-- EXECUTION TIME:
0.135129
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3407570570127 4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:17:12) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
opcao = int(input("digite um numero: (1/2):"))
V = (pi*h**2 * (3*r - h))/3
v = (4*pi*r**3)/3
if (opcao == 1):
	print(round(V, 4))
else:
	print((v - V), 4)
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 09:17:24) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
opcao = int(input("digite um numero: (1/2):"))
V = (pi*h**2 * (3*r - h))/3
v = (4*pi*r**3)/3
if (opcao == 1):
	print(round(V, 4))
else:
	print((v - V), 4)
-- EXECUTION TIME:
0.139933
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3407570570127 4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:20:22) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
n = int(input("digite um numero de (1/2):"))
volume_calota = pi * h**2 * (3*r - h)/3
volume_esfera = 4*pi*r**3 / 3
if (opcao == 1):
	msg = volume_calota
else:
	msg = volume_esfera - volume_calota
print(round(msg, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (opcao == 1):
NameError: name 'opcao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 09:20:54) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
n = int(input("digite um numero de (1/2):"))
volume_calota = pi * h**2 * (3*r - h)/3
volume_esfera = 4*pi*r**3 / 3
if (n == 1):
	msg = volume_calota
else:
	msg = volume_esfera - volume_calota
print(round(msg, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 09:21:07) 
-- CODE:
from math import*
r = float(input("raio da circunferencia: "))
h = float(input("altura da coluna de ar: "))
n = int(input("digite um numero de (1/2):"))
volume_calota = pi * h**2 * (3*r - h)/3
volume_esfera = 4*pi*r**3 / 3
if (n == 1):
	msg = volume_calota
else:
	msg = volume_esfera - volume_calota
print(round(msg, 4))
-- EXECUTION TIME:
0.18273
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
