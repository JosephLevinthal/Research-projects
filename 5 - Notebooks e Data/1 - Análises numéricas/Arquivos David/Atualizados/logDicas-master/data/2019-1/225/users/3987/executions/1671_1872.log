== TEST (2019-04-29 17:13:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("x:"))
y = float(input("y:"))

if(x == y == 0):
	print("Origem")
elif(x == 0):
	print("Eixo Y")
elif(y == 0):
	print("Eixo X")

	
-- OUTPUT:
420.0 extras e 20.0 de falta
RS 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:13:29) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("x:"))
y = float(input("y:"))

if(x == y == 0):
	print("Origem")
elif(x == 0):
	print("Eixo Y")
elif(y == 0):
	print("Eixo X")

	
-- EXECUTION TIME:
0.133289
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:

-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 17:18:36) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("x:"))
y = float(input("y:"))

if(x == y == 0):
	print("Origem")
elif(x == 0):
	print("Eixo Y")
elif(y == 0):
	print("Eixo X")
elif(x >= 1) and (y >= 1):
	print("Q1")
elif(x <= 1) and (y >= 1):
	print("Q2")
elif(x <= 1) and (y <= 1):
	print("Q3")
elif(x >=1) and (y <= 1):
	print("Q4")
	

	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 17:18:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("x:"))
y = float(input("y:"))

if(x == y == 0):
	print("Origem")
elif(x == 0):
	print("Eixo Y")
elif(y == 0):
	print("Eixo X")
elif(x >= 1) and (y >= 1):
	print("Q1")
elif(x <= 1) and (y >= 1):
	print("Q2")
elif(x <= 1) and (y <= 1):
	print("Q3")
elif(x >=1) and (y <= 1):
	print("Q4")
	

	
-- EXECUTION TIME:
0.149594
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
