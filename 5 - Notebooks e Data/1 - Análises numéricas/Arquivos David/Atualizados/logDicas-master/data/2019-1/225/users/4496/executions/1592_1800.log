== TEST (2019-05-02 12:01:10) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

print(round(a**2 + b**2 + c**2 / a + b + c, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(a**2 + b**2 + c**2 / a + b + c, 7))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:02:20) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

print(round((a**2) + (b**2) + (c**2) / a + b + c, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round((a**2) + (b**2) + (c**2) / a + b + c, 7))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:03:01) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

print(round(((a**2) + (b**2) + (c**2)) / (a + b + c), 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(((a**2) + (b**2) + (c**2)) / (a + b + c), 7))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:03:37) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

print(round(((a^2) + (b^2) + (c^2)) / (a + b + c), 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(((a^2) + (b^2) + (c^2)) / (a + b + c), 7))
TypeError: unsupported operand type(s) for ^: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:04:47) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a**2 + b**2 + c**2)/(a+b+c)
print(round(
-- ERROR:
File "XXXX", line 7
    
                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:04:59) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a**2 + b**2 + c**2)/(a+b+c)
print(round(x , 7)
-- ERROR:
File "XXXX", line 7
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:05:06) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a**2 + b**2 + c**2)/(a+b+c)
print(round(x, 7)
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:05:15) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = ((a**2 + b**2 + c**2)/(a+b+c))
print(round(x, 7)
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:05:38) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a**2 + b**2 + c**2) / (a + b + c)
print(round(x, 7)
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:07:03) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a*a + b*b + c*c) / (a + b + c)

print(round(x, 7)
-- ERROR:
File "XXXX", line 8
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:07:11) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a*a + b*b + c*c) / (a + b + c)

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = (a*a + b*b + c*c) / (a + b + c)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:07:52) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = ((a**2) + (b**2) + (c**2)) / (a + b + c)

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = ((a**2) + (b**2) + (c**2)) / (a + b + c)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:08:05) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = ((a**2) + (b**2) + (c**2)) / (a + b + c)

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = ((a**2) + (b**2) + (c**2)) / (a + b + c)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:08:33) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = (a**2) + (b**2) + (c**2) / (a + b + c)

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = (a**2) + (b**2) + (c**2) / (a + b + c)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:08:49) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = a**2 + b**2 + c**2 / a + b + c

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = a**2 + b**2 + c**2 / a + b + c
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:09:19) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = a ** 0.5 + b ** 0.5 + c ** 0.5 / a + b + c

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = a ** 0.5 + b ** 0.5 + c ** 0.5 / a + b + c
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:09:47) 
-- CODE:
a = input("Digite o valor de a: ")
b = input("Digite o valor de b: ")
c = input("Digite o valor de c: ")

x = a ** 2 + b ** 2 + c ** 2 / a + b + c

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x = a ** 2 + b ** 2 + c ** 2 / a + b + c
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:10:38) 
-- CODE:
a = input(int("Digite o valor de a: "))
b = input(int("Digite o valor de b: "))
c = input(int("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 / a + b + c

print(round(x, 7))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    a = input(int("Digite o valor de a: "))
ValueError: invalid literal for int() with base 10: 'Digite o valor de a: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:11:03) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 / a + b + c

print(round(x, 7))
-- OUTPUT:
1125.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:11:13) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 / a + b + c

print(round(x, 7))
-- EXECUTION TIME:
0.14618
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
1125.0
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
216496.2765957
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
22622.0444444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:11:20) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 / a + b + c

print(round(x, 7))
-- OUTPUT:
1125.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:11:43) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 // a + b + c

print(round(x, 7))
-- OUTPUT:
1125
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:11:57) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 2 + b ** 2 + c ** 2 // a + b + c

print(round(x, 7))
-- EXECUTION TIME:
0.284097
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
1125
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
216496
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
22622
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:12:11) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 0.5 + b ** 0.5 + c ** 0.5 // a + b + c

print(round(x, 7))
-- OUTPUT:
64.472136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:12:17) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 0.5 + b ** 0.5 + c ** 0.5 // a + b + c

print(round(x, 7))
-- EXECUTION TIME:
0.14093
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
64.472136
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
785.3297097
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
142.4412841
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:12:21) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = a ** 0.5 + b ** 0.5 + c ** 0.5 // a + b + c

print(round(x, 7))
-- OUTPUT:
64.472136
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:12:36) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = (a ** 0.5 + b ** 0.5 + c ** 0.5) // (a + b + c)

print(round(x, 7))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:12:44) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = (a ** 0.5 + b ** 0.5 + c ** 0.5) / (a + b + c)

print(round(x, 7))
-- OUTPUT:
0.1993248
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 12:12:58) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = (a ** 2 + b ** 2 + c ** 2) / (a + b + c)

print(round(x, 7))
-- OUTPUT:
25.6666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 12:13:04) 
-- CODE:
a = int(input("Digite o valor de a: "))
b = int(input("Digite o valor de b: "))
c = int(input("Digite o valor de c: "))

x = (a ** 2 + b ** 2 + c ** 2) / (a + b + c)

print(round(x, 7))
-- EXECUTION TIME:
0.164098
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
