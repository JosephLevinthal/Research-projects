== TEST (2019-04-03 14:12:25) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dao 1:"))
d2= float(input("Valor do dado 2:"))
 
from math import*
dano= (sqrt(5*d1)+(pi)*(d2/3)
-- ERROR:
File "XXXX", line 7
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:12:50) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dao 1:"))
d2= float(input("Valor do dado 2:"))
 
from math import*
dano= (sqrt(5*d1)+(pi)*(d2/3)
print(dano)
-- ERROR:
File "XXXX", line 7
    print(dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:13:11) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dao 1:"))
d2= float(input("Valor do dado 2:"))
 
from math import*
var= (sqrt(5*d1)+(pi)*(d2/3)
print(var)
-- ERROR:
File "XXXX", line 7
    print(var)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:13:26) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dao 1:"))
d2= float(input("Valor do dado 2:"))
 
from math import*
x= (sqrt(5*d1)+(pi)*(d2/3)
print(x)
-- ERROR:
File "XXXX", line 7
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:14:19) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dao 1:"))
d2= float(input("Valor do dado 2:"))
 
from math import*
x= (sqrt(5*d1)+(pi)*(d2/3)
print(int(x))
-- ERROR:
File "XXXX", line 7
    print(int(x))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:14:48) 
-- CODE:
c= int(input("Pontos de vida iniciais:"))
d1= int(input("Valor do dao 1:"))
d2= int(input("Valor do dado 2:"))
 
from math import*
x= (sqrt(5*d1)+(pi)*(d2/3)
print(int(x))
-- ERROR:
File "XXXX", line 7
    print(int(x))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:14:54) 
-- CODE:
c= int(input("Pontos de vida iniciais:"))
d1= int(input("Valor do dao 1:"))
d2= int(input("Valor do dado 2:"))
 
from math import*
x= (sqrt(5*d1)+(pi)*(d2/3)
print(x)
-- ERROR:
File "XXXX", line 7
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:15:06) 
-- CODE:
c= int(input("Pontos de vida iniciais:"))
d1= int(input("Valor do dao 1:"))
d2= int(input("Valor do dado 2:"))
 
from math import*
x= int((sqrt(5*d1)+(pi)*(d2/3))
print(x)
-- ERROR:
File "XXXX", line 7
    print(x)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:16:48) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
print(x)
-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:17:17) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
print(int(x))
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:17:47) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
v = (c-x)
print(int(v))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 14:17:58) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
v = (c-x)
print(int(v))
-- EXECUTION TIME:
0.183781
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:17:59) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
v = (c-x)
print(int(v))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:18:15) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3
v= c-x
print(int(v))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:18:43) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= sqrt(5*d1)+pi*d2/3

print(int(x))
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:19:03) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= (sqrt(5*d1)+pi*d2/3)

print(int(x))
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:25:29) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= (sqrt(5*d1)+pi*d2/3)

print(int(x))
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:25:50) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= (sqrt(5*d1)+pi*d2/3)
v= (c-x)
print(int(x))
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 14:26:03) 
-- CODE:
c= float(input("Pontos de vida iniciais:"))
d1= float(input("Valor do dado 1:"))
d2= float(input("Valor do dado 2:"))

 
from math import*
x= (sqrt(5*d1)+pi*d2/3)
v= (c-x)
print(int(v))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
