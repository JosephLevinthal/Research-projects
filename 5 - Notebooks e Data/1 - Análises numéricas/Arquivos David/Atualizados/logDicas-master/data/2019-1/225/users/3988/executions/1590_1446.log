== TEST (2019-03-25 14:32:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = 10 * 2//3
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:33:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = 10 * 2//3

print(round(var))
-- OUTPUT:
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:33:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = 10 * 2//3

print(round(var))
-- EXECUTION TIME:
0.224954
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
6
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:41:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = int("litros")
c = int(l) //3
k = round(c,3)
print((var))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = int("litros")
ValueError: invalid literal for int() with base 10: 'litros'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:41:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = int("litros:")
c = int(l) //3
k = round(c,3)
print((var))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = int("litros:")
ValueError: invalid literal for int() with base 10: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:42:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l) //3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:43:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:43:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:43:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l)//3
k = round(c,3)

print(k)
-- EXECUTION TIME:
0.153836
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1446/main.py", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros:")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:44:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros")
ValueError: could not convert string to float: 'litros'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:44:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float(litros)
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float(litros)
NameError: name 'litros' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:44:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros")
ValueError: could not convert string to float: 'litros'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:45:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l = float("litros :")
c = input(l)//3
k = round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l = float("litros :")
ValueError: could not convert string to float: 'litros :'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros :")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros :")
ValueError: could not convert string to float: 'litros :'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:46:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)//3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:47:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l= float("litros:")
c= input(l)/3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    l= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:48:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float("litros:")
c= input(var)/3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var= float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:48:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c= input(var)/3
k= round(c,3)

print(k)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = float("litros:")
c = input(var)/3
restante = round(c,3)

print(restante)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var = float("litros:")
ValueError: could not convert string to float: 'litros:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:49:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = input("litros:")
c = float(var)/3
restante = round(c,3)

print(restante)
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:50:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var = input("litros:")
c = float(var)/3
restante = round(c,3)

print(restante)
-- EXECUTION TIME:
0.19378
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
