== TEST (2019-03-31 17:45:41) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

dano = (5*D1)**0.5 + pi**(D2/3)

print(int(dano))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:46:42) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

dano = (5*D1)**0.5 + pi**(D2/3)

print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:48:11) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

exp = D2/3
base = 5*D1
dano = (base**0.5) + (pi**exp)

print(int(dano))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:48:53) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

exp = D2/3
base = 5*D1
dano = (base**0.5) + (pi**exp)
remain = HP - dano

print(int(remain))
-- OUTPUT:
187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:49:32) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

exp = D2/3
base = 5*D1
dano = (base**0.5) + (pi**exp)
remain = HP - int(dano)

print(int(remain))
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:49:41) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

exp = D2/3
base = 5*D1
dano = (base**0.5) + (pi**exp)
remain = HP - int(dano)

print(int(remain))
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 17:49:47) 
-- CODE:
from math import *
HP = int(input("vida inicial: "))
D1 = int(input("dado um: "))
D2 = int(input("dado dois: "))

exp = D2/3
base = 5*D1
dano = (base**0.5) + (pi**exp)
remain = HP - int(dano)

print(int(remain))
-- EXECUTION TIME:
0.228937
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
