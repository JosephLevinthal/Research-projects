== TEST (2019-04-26 20:07:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = int(input("a:"))
b = int(input("b:"))
x = int(input("c:"))
if((x<=a)and(x<=b)):
	print("x pertence ao intervalo a, b")
	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:07:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = int(input("a:"))
b = int(input("b:"))
x = int(input("c:"))
if((x<=a)and(x<=b)):
	print("x pertence ao intervalo a, b")
	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:07:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = int(input("a:"))
b = int(input("b:"))
x = int(input("x:"))
if((x<=a)and(x<=b)):
	print("x pertence ao intervalo a, b")
	
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:12:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = int(input("a:"))
b = int(input("b:"))
x = int(input("x:"))
if(a>=b):
	print("Entradas a e b invalidas")
else:
	if((x<=a)and(x<=b)):
		print("x pertence ao intervalo a, b")
	else(x>=a)and(x>=b):
		print("x nao prtence ao intervalo a,b")
-- ERROR:
File "XXXX", line 12
    else(x>=a)and(x>=b):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:13:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = int(input("a:"))
b = int(input("b:"))
x = int(input("x:"))
if(a>=b):
	print("Entradas a e b invalidas")
else:
	if((x<=a)and(x<=b)):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao prtence ao intervalo a,b")
-- OUTPUT:
x nao prtence ao intervalo a,b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:13:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a:"))
b = float(input("b:"))
x = float(input("x:"))
if(a>=b):
	print("Entradas a e b invalidas")
else:
	if((x<=a)and(x<=b)):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao prtence ao intervalo a,b")
-- OUTPUT:
x nao prtence ao intervalo a,b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:14:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a:"))
b = float(input("b:"))
x = float(input("x:"))
if(a>=b):
	print("Entradas a e b invalidas")
else:
	if((x<=a)and(x>=b)):
		print("x pertence ao intervalo a, b")
	else:
		print("x nao prtence ao intervalo a,b")
-- OUTPUT:
x nao prtence ao intervalo a,b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:17:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a:"))
b = float(input("b:"))
x = float(input("x:"))
if(a>=b):
	print("Entradas a e b invalidas")
else:
	if((a<=x)and(x<=b)):
		print(x," pertence ao intervalo ",a, b)
	else:
		print(x," nao prtence ao intervalo ",a, b)
-- OUTPUT:
4.0  nao prtence ao intervalo  2.0 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a:"))
b = float(input("b:"))
x = float(input("x:"))
if((a<=x)and(x<=b)):
	print(x," pertence ao intervalo ",a, b)
elif(a>=x)and(x>=b):
	print(x," nao prtence ao intervalo ",a, b)
else:	
	print("Entradas a e b invalidas")
-- OUTPUT:
Entradas a e b invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 20:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = float(input("a:"))
b = float(input("b:"))
x = float(input("x:"))
if((a<=x)and(x<=b)):
	print(x," pertence ao intervalo ",a, b)
elif(a>=x)and(x>=b):
	print(x," nao prtence ao intervalo ",a, b)
else:	
	print("Entradas a e b invalidas")
-- EXECUTION TIME:
0.129044
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas a e b invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas a e b invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 04:13:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b<=a):
	print("Entradas ",a,"e" , b,"invalidas")
elif(a<=x)and(x<=b):
	print(x,"prtence ao intervalo ",a,"," ,b)
else:	
	print(x,"nao pertenca ao intervalo ", a,"," ,b)
-- OUTPUT:
2.0 nao pertenca ao intervalo  3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:13:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b<=a):
	print("Entradas ",a,"e" , b,"invalidas")
elif(a<=x)and(x<=b):
	print(x,"prtence ao intervalo ",a,"," ,b)
else:	
	print(x,"nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.178255
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 prtence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:13:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b<=a):
	print("Entradas ",a,"e" , b,"invalidas")
elif(a<=x)and(x<=b):
	print(x,"pertence ao intervalo ",a,"," ,b)
else:	
	print(x,"nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.183186
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 04:14:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b<=a):
	print("Entradas ",a,"e" , b,"invalidas")
elif((a<=x)and(x<=b)):
	print(x, "pertence ao intervalo ",a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- OUTPUT:
2.0 nao pertenca ao intervalo  3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:14:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b<=a):
	print("Entradas ",a,"e" , b,"invalidas")
elif((a<=x)and(x<=b)):
	print(x, "pertence ao intervalo ",a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.133687
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:49:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if(b <= a):
	print("Entradas ", a,"e" , b,"invalidas")
elif((a <= x)and(x <= b)):
	print(x, "pertence ao intervalo ",a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.201882
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:50:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if (b <= a):
	print("Entradas ", a,"e" ,b,"invalidas")
elif ((a <= x)and(x <= b)):
	print(x, "pertence ao intervalo ",a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.128476
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:51:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if (b <= a):
	print("Entradas ", a,"e" ,b,"invalidas")
elif ((a <= x)and(x <= b)):
	print(x, "pertence ao intervalo ", a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.179866
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertenca ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 04:53:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if (b <= a):
	print("Entradas ", a,"e" ,b,"invalidas")
elif ((a <= x)and(x <= b)):
	print(x, "pertence ao intervalo ", a,"," ,b)
else:	
	print(x, "nao pertenca ao intervalo ", a,"," ,b)
-- OUTPUT:
2.0 nao pertenca ao intervalo  3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 04:53:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("x:"))
a = float(input("a:"))
b = float(input("b:"))
if (b <= a):
	print("Entradas ", a,"e" ,b,"invalidas")
elif ((a <= x)and(x <= b)):
	print(x, "pertence ao intervalo ", a,"," ,b)
else:	
	print(x, "nao pertence ao intervalo ", a,"," ,b)
-- EXECUTION TIME:
0.153542
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
