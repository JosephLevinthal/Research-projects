== TEST (2019-03-22 05:06:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import 
A= pi*r**0.5
V= 4/3*pi*(r*r**0.5)
print(round(A,3))
print(round(V,3))
-- ERROR:
File "XXXX", line 5
    from math import 
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:07:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from_math_ import 
A= pi*r**0.5
V= 4/3*pi*(r*r**0.5)
print(round(A,3))
print(round(V,3))
-- ERROR:
File "XXXX", line 5
    from_math_ import 
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:07:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math_ import 
A= pi*r**0.5
V= 4/3*pi*(r*r**0.5)
print(round(A,3))
print(round(V,3))
-- ERROR:
File "XXXX", line 5
    from math_ import 
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:08:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*(r*r**0.5)
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
39.986
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 05:08:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*(r*r**0.5)
print(round(A,3))
print(round(V,3))
-- EXECUTION TIME:
0.115727
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
6.664
39.986
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
11.036
181.577
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:08:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*r*(r**0.5)
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
39.986
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:09:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*r*(r**0.5)
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
39.986
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:09:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*r*(r**0.5)
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
39.986
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:09:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=int(input())
from math import *
A= pi*r**0.5
V= 4/3*pi*r*(r**0.5)
print(round(A,3))
print(round(V,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:12:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= (4*pi*r*r*r*)1/3
print(round(A,3))
print(round(V,3))
-- ERROR:
File "XXXX", line 7
    V= (4*pi*r*r*r*)1/3
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:12:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= (4*pi*r*r*r*)*1/3
print(round(A,3))
print(round(V,3))
-- ERROR:
File "XXXX", line 7
    V= (4*pi*r*r*r*)*1/3
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:13:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*r**0.5
V= (4*pi*r*r*r)*1/3
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:13:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*(r**0.5)
V= (4*pi*r*r*r)*1/3
print(round(A,3))
print(round(V,3))
-- OUTPUT:
6.664
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 05:14:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*(r**2)
V= (4*pi*r*r*r)*1/3
print(round(A,3))
print(round(V,3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 05:14:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input())
from math import *
A= pi*(r**2)
V= (4*pi*r*r*r)*1/3
print(round(A,3))
print(round(V,3))
-- EXECUTION TIME:
0.142362
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
