== TEST (2019-03-29 17:26:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
sqrt()
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    sqrt()
TypeError: sqrt() takes exactly one argument (0 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:27:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt()*
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 4
    from math import sqrt()*
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:27:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *sqrt()
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 4
    from math import *sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:27:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import* sqrt()
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 4
    from math import* sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:27:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
=sqrt()
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 5
    =sqrt()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
= sqrt(A)
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 5
    = sqrt(A)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
= sqrt
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 5
    = sqrt
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))*1/2
RESPOSTA= sqrt(A)
print(round(RESPOSTA))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    RESPOSTA= sqrt(A)
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))*1/2
RESPOSTA= A
print(round(RESPOSTA))
-- OUTPUT:
2410
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:28:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))*1/2
RESPOSTA= A
print(round(RESPOSTA))
-- EXECUTION TIME:
0.214683
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
2410
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
180000
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
251459
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:34:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))**0.5
RESPOSTA=
print(round(RESPOSTA))
-- ERROR:
File "XXXX", line 9
    RESPOSTA=
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:34:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))**0.5

print(round(A))
-- OUTPUT:
69
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:35:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)/2
A=(s*(s-a)*(s-b)*(s-c))**0.5

print(round(A))
-- EXECUTION TIME:
0.127925
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:45:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A))
-- OUTPUT:
69
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:45:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A))
-- EXECUTION TIME:
0.158821
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:48:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A),5)
-- OUTPUT:
69 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:49:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A),5)
-- EXECUTION TIME:
0.239097
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69 5
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600 5
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709 5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:49:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= (input("a:"))
b= (input("b:"))
c= (input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A),5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    j= s/2
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:53:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round(A),5)
-- OUTPUT:
69 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:53:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round((A),5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 17:53:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a= float(input("a:"))
b= float(input("b:"))
c= float(input("c:"))
s= (a+b+c)
j= s/2
A=(j*(j-a)*(j-b)*(j-c))**0.5
print(round((A),5))
-- EXECUTION TIME:
0.166168
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
