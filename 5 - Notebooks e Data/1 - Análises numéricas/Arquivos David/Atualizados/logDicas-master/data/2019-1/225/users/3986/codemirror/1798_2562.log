2019-6-12 12:15:38.055#viewportChange#0
2019-6-12 12:21:07.408#mousedown#{"isTrusted":true}
2019-6-12 12:21:07.421#focus#
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:09.517#change#{"from":{"line":0,"ch":0,"sticky":null,"xRel":-1,"outside":true},"to":{"line":26,"ch":0,"sticky":"after","xRel":478.40625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:21:25.759#change#{"from":{"line":25,"ch":46,"sticky":"before"},"to":{"line":26,"ch":0,"sticky":null},"text":[""],"removed":["",""],"origin":"+delete"}
2019-6-12 12:21:25.759#keyHandled#"Backspace"
2019-6-12 12:21:25.764#viewportChange#0
2019-6-12 12:21:28.181#blur#
2019-6-12 12:21:28.278#kill_program#1
2019-6-12 12:21:28.181#blur#
2019-6-12 12:21:28.278#kill_program#1
2019-6-12 12:21:28.181#blur#
2019-6-12 12:21:28.278#kill_program#1
2019-6-12 12:21:28.181#blur#
2019-6-12 12:21:28.278#kill_program#1
2019-6-12 12:21:28.181#blur#
2019-6-12 12:21:28.278#kill_program#1
2019-6-12 12:21:46.594#submit#Congratulations, your code is correct!
2019-6-12 12:21:46.594#submit#Congratulations, your code is correct!
2019-6-12 12:24:57.983#viewportChange#0
2019-6-12 12:24:57.983#viewportChange#0
2019-6-12 12:29:20.640#viewportChange#0
2019-6-12 12:29:20.640#viewportChange#0
