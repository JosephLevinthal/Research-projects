== TEST (2019-03-25 14:05:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=input("total de vendas:")
var2=var1/100
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2=var1/100
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:05:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=input("total de vendas:")
var2= var1/100
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= var1/100
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:06:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=input("total de vendas:")
var2= float(var1/100)
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= float(var1/100)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:10:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
var2 = var1*0.30 
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:10:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
var2 = float(var1*0.30) 
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = float(var1*0.30) 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:10:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input(float("total de vendas:"))
var2 = float(var1*0.30) 
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1 = input(float("total de vendas:"))
ValueError: could not convert string to float: 'total de vendas:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:10:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input(float("total de vendas:"))
var2 = float(var1*0.30) 
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1 = input(float("total de vendas:"))
ValueError: could not convert string to float: 'total de vendas:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:11:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
var2 = (var1*0.30) 
print(round(var2,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2 = (var1*0.30) 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:11:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= float(var1*0.30) 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= float(var1*0.30) 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:12:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= var1*0.30 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= var1*0.30 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:13:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("total de vendas:")
lucro= float(var1*0.30) 
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= float(var1*0.30) 
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:17:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = input("numero de vendas:")
lucro= float(var1*0.30)
print(round(lucro,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    lucro= float(var1*0.30)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:40:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("numero de vendas:"))
lucro= (var1*0.30)
print(round(lucro,2))
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:40:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("numero de vendas:"))
lucro= (var1*0.30)
print(round(lucro,2))
-- EXECUTION TIME:
0.143051
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
