== TEST (2019-04-29 14:23:44) 
-- CODE:
x=float(input("Digite x: "))
if(x<=-1):
	mensagem=x**0.5
	print(mensagem)
-- OUTPUT:
(8.637884531957315e-17+1.4106735979665885j)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:27:34) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x=-1):
	mensagem=x**0.5
	print(mensagem)
elif(x=0):
	mensagem=0
	print(mensagem)
-- ERROR:
File "XXXX", line 3
    if(x<-1 or x=-1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:27:43) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(mensagem)
elif(x=0):
	mensagem=0
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    elif(x=0):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:27:49) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
-- OUTPUT:
(8.637884531957315e-17+1.4106735979665885j)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:28:10) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif
-- ERROR:
File "XXXX", line 9
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:28:16) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)

-- OUTPUT:
(8.637884531957315e-17+1.4106735979665885j)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:28:37) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:29:44) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1):
	mensagem=x**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:32:43) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>=1):
	mensagem=x**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:33:00) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 and x>=1):
	mensagem=x**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:33:32) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 and x>=1):
	mensagem=abs(x**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:33:41) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 and x>=1):
	mensagem=abs(x**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:34:57) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>=1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:35:46) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>=1):
	mensagem=(x)**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:38:03) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=(x)**0.5
	print(abs(mensagem))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:38:35) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x<-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:39:12) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 14:39:25) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- EXECUTION TIME:
0.160847
-- TEST CASE 1:
---- input:
-1.99
---- correct output:
1.41
---- user output:
1.4106735979665885
-- TEST CASE 2:
---- input:
0.01
---- correct output:
0.01
---- user output:
0.01
-- TEST CASE 3:
---- input:
-256.0
---- correct output:
16.0
---- user output:
16.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:39:35) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:39:45) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:40:13) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs(((x)**0.5))
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs((x))
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:40:45) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs(((x)**0.5))
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs()(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:41:13) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs(((x)**0.5))
	print(mensagem)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(mensagem)

-- OUTPUT:
1.4106735979665885
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:42:57) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round(mensagem),4)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),4)

-- OUTPUT:
1 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:43:30) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round(mensagem),3)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),3)

-- OUTPUT:
1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:44:10) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round(mensagem),4)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),4)

-- OUTPUT:
1 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:44:16) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round(mensagem),4)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),4)

-- OUTPUT:
1 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:44:46) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round(mensagem),2)
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),2)

-- OUTPUT:
1 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:45:36) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=(x)**0.5
	print(round(abs(mensagem),4))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round(mensagem),2)

-- OUTPUT:
1.4107
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:46:54) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),4))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),4))

-- OUTPUT:
1.4107
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:50:29) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),4))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),4))

-- OUTPUT:
1.4107
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:50:36) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),4))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),4))

-- OUTPUT:
1.4107
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:51:10) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),2))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),2))

-- OUTPUT:
1.41
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:51:18) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),2))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),2))

-- OUTPUT:
1.41
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 14:51:21) 
-- CODE:
from math import*
x=float(input("Digite x: "))
if(x<-1 or x==-1 or x>1 or x==1):
	mensagem=abs((x)**0.5)
	print(round((mensagem),2))
elif(x==0):
	mensagem=0
	print(mensagem)
elif(x>-1 and x<0 or x>0 and x<1):
	mensagem=abs(x)
	print(round((mensagem),2))

-- EXECUTION TIME:
0.215802
-- TEST CASE 1:
---- input:
-1.99
---- correct output:
1.41
---- user output:
1.41
-- TEST CASE 2:
---- input:
0.01
---- correct output:
0.01
---- user output:
0.01
-- TEST CASE 3:
---- input:
-256.0
---- correct output:
16.0
---- user output:
16.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
