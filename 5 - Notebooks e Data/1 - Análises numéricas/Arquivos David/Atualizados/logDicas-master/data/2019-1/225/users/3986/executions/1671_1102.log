== TEST (2019-04-29 13:30:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque :"))
h=float(input("nivel do tanque :"))
r=float(input("raio dos bojos :")")
from math import *
V= pi * r ** 2 * H
VT= pi * r **2 * h
if (H > h ) and (h > 2 * r) and (H > 0) and (h > 0) and (r > 0) :
	 print("Entradas:",H,",",h,",",r)
	 print("Volume:",V,"litros")
else :
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 8
    r=float(input()")
                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:32:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque :"))
h=float(input("nivel do tanque :"))
r=float(input("raio dos bojos :")")
from math import *
V= pi * r ** 2 * H
VT= pi * r **2 * h
if (H > h ) and (h > 2 * r) and (H > 0) and (h > 0) and (r > 0) :
	print("Entradas:",H,",",h,",",r)
	print("Volume:",V,"litros")
else :
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
		  
-- ERROR:
File "XXXX", line 8
    r=float(input()")
                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:32:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque :"))
h=float(input("nivel do tanque :"))
r=float(input("raio dos bojos :"))
from math import *
V= pi * r ** 2 * H
VT= pi * r **2 * h
if (H > h ) and (h > 2 * r) and (H > 0) and (h > 0) and (r > 0) :
	print("Entradas:",H,",",h,",",r)
	print("Volume:",V,"litros")
else :
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
		  
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 187.79498405363702 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:33:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque :"))
h=float(input("nivel do tanque :"))
r=float(input("raio dos bojos :"))
from math import *
V= pi * r ** 2 * H
VT= pi * r **2 * h
if (H > h ) and (h > 2 * r) and (H > 0) and (h > 0) and (r > 0) :
	print("Entradas:",H,",",h,",",r)
	print("Volume:",VT,"litros")
else :
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
		  
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 94.72844328369301 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:33:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("altura do tanque :"))
h=float(input("nivel do tanque :"))
r=float(input("raio dos bojos :"))
from math import *
V= pi * r ** 2 * H
VT= pi * r **2 * h
if (H > h ) and (h > 2 * r) and (H > 0) and (h > 0) and (r > 0) :
	print("Entradas:",H,",",h,",",r)
	print("Volume:",V,"litros")
else :
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
		  
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 187.79498405363702 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:16:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:16:49) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume da calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.197114
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
