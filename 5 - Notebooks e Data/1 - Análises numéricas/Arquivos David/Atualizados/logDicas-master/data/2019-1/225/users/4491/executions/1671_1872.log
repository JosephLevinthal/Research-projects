== TEST (2019-04-28 16:33:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x >= 0) and (y <= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 16:34:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x >= 0) and (y <= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- EXECUTION TIME:
0.151276
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q2
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Q1
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Q1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:34:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x >= 0) and (y <= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:35:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x <= 0) and (y >= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:36:08) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input("valor de x: "))
y = input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x <= 0) and (y >= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- ERROR:
File "XXXX", line 2
    x = input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:36:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = input("valor de x: ")
y = input("valor de y: ")

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x <= 0) and (y >= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(x >= 0) and (y >= 0):
TypeError: '>=' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:36:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x <= 0) and (y >= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:37:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x >= 0) and (y >= 0):
	print("Q1")
elif(x <= 0) and (y >= 0):
	print("Q2")
elif(x <= 0) and (y <= 0):
	print("Q3")
elif(x >= 0) and (y <= 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:38:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:38:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x >= 0):
		print("Eixo X")
	elif( y >= 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:38:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x > 0):
		print("Eixo X")
	elif( y > 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:39:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x > 0):
		print("Eixo X")
	elif( y > 0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:40:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x > 0) or (x < 0):
		print("Eixo X")
	elif( y > 0) or (y <0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 16:40:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("valor de x: "))
y = float(input("valor de y: "))

if(x > 0) and (y > 0):
	print("Q1")
elif(x < 0) and (y > 0):
	print("Q2")
elif(x < 0) and (y < 0):
	print("Q3")
elif(x > 0) and (y < 0):
	print("Q4")
else:
	if(x > 0) or (x < 0):
		print("Eixo X")
	elif( y > 0) or (y <0): 
		print("Eixo Y")
	else: 
		if(x == 0) and (y == 0): 
			print("Origem")
		else: 
			print("nao existe")
-- EXECUTION TIME:
0.14644
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:
Eixo X
-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
