== TEST (2019-03-31 12:17:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:17:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:26:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:"))))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 5
    t1 = radians(float(input())))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:26:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:27:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:28:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371,01 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371,01 km
              ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:28:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371,01 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371,01 km
              ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:28:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 01 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 01 km
               ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:28:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 1 km
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:28:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371,01 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371,01 km
              ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:29:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = float(6371,01 km)
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = float(6371,01 km)
                    ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:29:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = float(6371, 0 1 km)
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = float(6371, 0 1 km)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:30:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 0 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 0 1 km
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:34:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = sin(cos(radians(float(input("Latitude de P1:")))))
g1 = cos(radians(float(input("Longitude de P1:")))
t2 = sin(cos(radians(float(input("Latitude de P2:")))))
g2 = cos(radians(float(input("Longitude de P2")))
R = 6371, 0 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 7
    t2 = sin(cos(radians(float(input()))))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:35:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = sin(cos(radians(float(input("Latitude de P1:")))
g1 = cos(radians(float(input("Longitude de P1:")))
t2 = sin(radians(float(input("Latitude de P2:")))
g2 = cos(radians(float(input("Longitude de P2")))
R = 6371, 0 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 6
    g1 = cos(radians(float(input()))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:35:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 0 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 0 1 km
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:38:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
print(sin(radians(t1)))
print(sin(radians(t2)))
print(cos(radians(t1)))
print(cos(radians(t2)))
print(cos(radians(g1 - g2)))
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:39:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
sin(radians(t1))
sin(radians(t2))
cos(radians(t1))
cos(radians(t2))
cos(radians(g1 - g2))
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:39:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
sin(radians(t1))
sin(radians(t2))
cos(radians(t1))
cos(radians(t2))
cos(radians(g1 - g2))
# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:41:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:41:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))

# distancia de dois pontos P1 E P2
d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:42:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 0 1 km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 0 1 km
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:42:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
R = 6371, 0 1km
# distancia de dois pontos P1 E P2
d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
File "XXXX", line 9
    R = 6371, 0 1km
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 12:59:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))
# distancia de dois pontos P1 E P2
d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:04:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:04:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:06:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:07:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:07:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:08:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = radians(float(input(R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))))
print(round(d, 2))




-- ERROR:
File "XXXX", line 12
    print(round(d, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:08:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = radians(float(input(R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))))
print(round(d, 2))




-- ERROR:
File "XXXX", line 12
    print(round(d, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:09:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2")))


d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:09:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R *  arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:10:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:10:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:11:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:11:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:12:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))


d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:14:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:")))
g1 = float(input("Longitude de P1:")))
t2 = float(input("Latitude de P2:")))
g2 = float(input("Longitude de P2:")))


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2))




-- ERROR:
File "XXXX", line 5
    t1 = float(input()))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:15:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2))




-- ERROR:
File "XXXX", line 17
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:16:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:17:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))


d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:18:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371, 01 km

d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 9
    R = 6371, 01 km
               ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:18:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371, 01 

d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 9
    R = 6371, 01 
               ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371. 01

d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 9
    R = 6371. 01
               ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01

d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos * (sen(t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01

d = R * arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:19:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01

d = R * arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos * (sen * (t1) * sen * (t2) + cos * (t1) * cos * (t2) * cos * (g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:20:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01

d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:20:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01

d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:23:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01


d = radians(R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = radians(R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:23:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01
arccos = ("arco-cosseno")


d = radians(R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = radians(R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:24:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01


d = radians(R * arcos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = radians(R * arcos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2)))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:26:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = sin(float(input("Latitude de P1:")))
g1 = cos((float(input("Longitude de P1:")))
t2 = sin(float(input("Latitude de P2:")))
g2 = cos(float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 7
    t2 = sin(float(input()))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:26:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = sen(float(input("Latitude de P1:")))
g1 = cos((float(input("Longitude de P1:")))
t2 = sen(float(input("Latitude de P2:")))
g2 = cos(float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 7
    t2 = sen(float(input()))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:26:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = sin(float(input("Latitude de P1:")))
g1 = cos((float(input("Longitude de P1:")))
t2 = sin(float(input("Latitude de P2:")))
g2 = cos(float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 7
    t2 = sin(float(input()))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:27:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sin(input("Latitude de P1:")))
g1 = float(input("Longitude de P1:")))
t2 = float(input("Latitude de P2:")))
g2 = float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 6
    g1 = float(input()))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:27:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sin(input("Latitude de P1:")))
g1 = float(input("Longitude de P1:")))
t2 = float(input("Latitude de P2:")))
g2 = float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
File "XXXX", line 6
    g1 = float(input()))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:27:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sin(input("Latitude de P1:")))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = float(sin(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:27:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sin(input("Latitude de P1:")))
g1 = float(cos(input("Longitude de P1:")))
t2 = float(sin(input("Latitude de P2:")))
g2 = float(cos(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = float(sin(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:27:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sin(input("Latitude de P1:")))
g1 = float(cos(input("Longitude de P1:")))
t2 = float(sin(input("Latitude de P2:")))
g2 = float(cos(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = float(sin(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:28:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sen(input("Latitude de P1:")))
g1 = float(cos(input("Longitude de P1:")))
t2 = float(sen(input("Latitude de P2:")))
g2 = float(cos(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = float(sen(input()))
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:28:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(sen(input("Latitude de P1:")))
g1 = float(cos(input("Longitude de P1:")))
t2 = float(sen(input("Latitude de P2:")))
g2 = float(cos(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = float(sen(input()))
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:29:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:30:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01
arccos = (ti,gi)


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    arccos = (ti,gi)
NameError: name 'ti' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:31:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = float(input("Latitude de P1:"))
g1 = float(input("Longitude de P1:"))
t2 = float(input("Latitude de P2:"))
g2 = float(input("Longitude de P2:"))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:33:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
g1 = radians(float(input("Longitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01


d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:35:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- OUTPUT:
0.1514945790731078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:35:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- EXECUTION TIME:
0.198363
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
0.1514945790731078
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:35:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- OUTPUT:
0.1514945790731078
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:35:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(radians(round(d, 2)))




-- EXECUTION TIME:
0.17004
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
0.1514945790731078
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:35:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- OUTPUT:
8.68
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:35:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- OUTPUT:
8.68
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:35:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- EXECUTION TIME:
0.160577
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
8.68
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:36:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(acos(round(d, 2))




-- ERROR:
File "XXXX", line 18
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:36:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(acos(round(d, 2))




-- ERROR:
File "XXXX", line 18
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:39:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01
t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:39:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))
R = 6371.01
t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))


d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- EXECUTION TIME:
0.13991
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1017/main.py", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:40:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01 km

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
File "XXXX", line 12
    R = 6371.01 km
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:40:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01 km

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
File "XXXX", line 12
    R = 6371.01 km
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:40:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:40:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:40:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- EXECUTION TIME:
0.15001
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1017/main.py", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:41:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:42:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:42:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(sin(float(input("Latitude de P1:"))))
g1 = radians(cos(float(input("Longitude de P1:"))))
t2 = radians(sin(float(input("Latitude de P2:"))))
g2 = radians(cos(float(input("Longitude de P2:"))))

t1 = radians(cos(float(input("Latitude de P1:"))))
t2 = radians(cos(float(input("Latitude de P2:"))))
R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- EXECUTION TIME:
0.193165
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1017/main.py", line 10, in <module>
    t1 = radians(cos(float(input())))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:48:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))


R = 6371.01

d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:05:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))


R = 6371.01

d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:09:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
arcos = sin * sin + cos * cos * cos

R = 6371.01

d = R * arcos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    arcos = sin * sin + cos * cos * cos
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:10:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))


R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:10:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))


R = 6371.01

d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- EXECUTION TIME:
0.224284
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:17:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))


R = 6371.01

d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:17:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))

print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:18:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:23:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
d = 6371.01 * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = 6371.01 * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:31:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
d = R * acos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = R * acos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:32:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = R * acos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:32:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:32:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- EXECUTION TIME:
0.128763
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:33:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:33:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))




-- EXECUTION TIME:
0.1889
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:33:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(radians(round(d, 2))




-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:34:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(float(round(d, 2))




-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:34:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(radians(round(d, 2))




-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:36:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(radians(float(round(d, 2))))




-- OUTPUT:
138.3225792083066
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:36:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(radians(float(round(d, 2))))




-- EXECUTION TIME:
0.178224
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
138.3225792083066
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:37:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:38:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("sin:")))
t2 = radians(float(input("sin:")))
g1 = radians(float(input("cos:")))
g2 = radians(float(input("cos:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:38:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("sin:")))
t2 = radians(float(input("sin:")))
g1 = radians(float(input("cos:")))
g2 = radians(float(input("cos:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.182582
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:39:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("sin:")))
t2 = radians(float(input("sin:")))
g1 = radians(float(input("cos:")))
g2 = radians(float(input("cos:")))
t1 = radians(float(input("sin")))
t2 = radians(float(input("cos")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    t1 = radians(float(input()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:42:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: sin")))
t2 = radians(float(input("Latitude de P2: sin")))
g1 = radians(float(input("Longitude de P1: cos")))
g2 = radians(float(input("Longitude de P2: cos")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:42:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: sin")))
t2 = radians(float(input("Latitude de P2: sin")))
g1 = radians(float(input("Longitude de P1: cos")))
g2 = radians(float(input("Longitude de P2: cos")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.144604
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:42:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:42:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.175687
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:49:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:49:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.139076
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:52:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:52:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:52:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1:")))
t2 = radians(float(input("Latitude de P2:")))
g1 = radians(float(input("Longitude de P1:")))
g2 = radians(float(input("Longitude de P2:")))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.183021
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:12:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:12:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.175144
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:13:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d = R * arccos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:14:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:14:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.138552
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:15:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input())
t2 = radians(float(input())
g1 = radians(float(input())
g2 = radians(float(input())
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- ERROR:
File "XXXX", line 6
    t2 = radians(float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:15:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:15:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R * acos(sin(t1) * sin(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.126263
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:16:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:16:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
R = 6371.01
d = R*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.143791
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:18:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:18:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.14533
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:18:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:18:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.148554
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
7925.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:19:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:20:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:20:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
t2 = radians(float(input()))
g1 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
7925.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:20:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:20:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))
r = 6371.01
d = r*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1 - g2))
print(round(d, 2))


-- EXECUTION TIME:
0.143917
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
