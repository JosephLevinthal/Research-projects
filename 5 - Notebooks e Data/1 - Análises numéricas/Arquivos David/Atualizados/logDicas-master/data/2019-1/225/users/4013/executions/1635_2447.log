== TEST (2019-04-10 14:27:20) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	msg = "Falta" + (p - pag)
print(msg)
else :
	msg = "Troco de" + (pag - p)
print(msg)
-- ERROR:
File "XXXX", line 6
    else :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:28) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	msg = "Falta" + (p - pag)
print(msg)
else:
	msg = "Troco de" + (pag - p)
print(msg)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:34) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	msg = "Falta" + (p - pag)

else:
	msg = "Troco de" + (pag - p)
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    msg = "Falta" + (p - pag)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:01:54) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" , round(p - pag), 2)
else:
	print("Troco de" , round(pag - p), 2) 
-- OUTPUT:
Falta 26 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:03:00) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" round(p - pag), 2)
else:
	print("Troco de" round(pag - p), 2) 
-- ERROR:
File "XXXX", line 4
    print("Falta" round(p - pag), 2)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:03:19) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" + round(p - pag), 2)
else:
	print("Troco de" + round(pag - p), 2) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Falta" + round(p - pag), 2)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:03:56) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" + round((p - pag), 2)
else:
	print("Troco de" + round((pag - p), 2) 
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:04:09) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" + round((p - pag), 2)
else:
	print("Troco de" + round((pag - p), 2) 
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:05:00) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" + round((p - pag), 2))
else:
	print("Troco de" + round((pag - p), 2)) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("Falta" + round((p - pag), 2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 13:05:46) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" , round((p - pag), 2))
else:
	print("Troco de" , round((pag - p), 2)) 
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 13:06:30) 
-- CODE:
p = float(input("preco:"))
pag = float(input("pagamento:"))
if (p > pag):
	print("Falta" , round((p - pag), 2))
else:
	print("Troco de" , round((pag - p), 2)) 
-- EXECUTION TIME:
0.146106
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
