== TEST (2019-04-28 23:47:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ("Entradas: ", consumo "kWh e tipo", tipo)

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ("Entradas: ", consumo "kWh e tipo", tipo)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:47:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ("Entradas: ", consumo "kWh e tipo", tipo)

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ("Entradas: ", consumo "kWh e tipo", tipo)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:48:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ("Entradas: ", consumo "kWh e tipo" tipo)

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ("Entradas: ", consumo "kWh e tipo" tipo)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:48:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ("Entradas: ", consumo " kWh e tipo " tipo)

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ("Entradas: ", consumo " kWh e tipo " tipo)
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:48:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( "Entradas: ", consumo " kWh e tipo " tipo)

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ( "Entradas: ", consumo " kWh e tipo " tipo)
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: ") consumo ( "kWh e tipo" )  tipo )

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ( ("Entradas: ") consumo ( "kWh e tipo" )  tipo )
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:49:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: "), consumo ( "kWh e tipo" )  tipo )

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ( ("Entradas: "), consumo ( "kWh e tipo" )  tipo )
                                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:50:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: " consumo) ( "kWh e tipo" tipo) )

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ( ("Entradas: " consumo) ( "kWh e tipo" tipo) )
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 23:50:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: ", consumo ) ( "kWh e tipo" tipo) )

if ( Tipo == "R"):
	

-- EXECUTION TIME:
0.183626
-- ERROR:
  File "/home/codebench/codes/1671/1101/main.py", line 8
    print = ( ("Entradas: ", consumo ) ( "kWh e tipo" tipo) )
                                                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:50:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: ", consumo ) ( "kWh e tipo" tipo) )

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 8
    print = ( ("Entradas: ", consumo ) ( "kWh e tipo" tipo) )
                                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:51:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: ", consumo ) ( "kWh e tipo", tipo) )

if ( Tipo == "R"):
	

-- ERROR:
File "XXXX", line 12
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:51:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ")

print = ( ("Entradas: ", consumo ) ( "kWh e tipo", tipo) )

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print = ( ("Entradas: ", consumo ) ( "kWh e tipo", tipo) )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:52:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo "kWh e tipo", tipo )

-- ERROR:
File "XXXX", line 8
    print = ( "Entradas: ", consumo "kWh e tipo", tipo )
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:53:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

-- ERROR:
File "XXXX", line 8
    print = ( "Entradas: ", consumo "kWh e tipo", tipo )
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 23:54:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

-- ERROR:
File "XXXX", line 8
    print = ( "Entradas: ", consumo "kWh e tipo", tipo )
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:18:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( Tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ ", preco)
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    if ( Tipo == "R"):
NameError: name 'Tipo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:18:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ ", preco)
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:18:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ ", preco)
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:19:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ ", preco)
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:19:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ ", preco)
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:20:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( Valor total: R$ , "preco" )
else: 
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    print( Valor total: R$ , "preco" )
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:21:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print("Valor total: R$ " , preco )
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:21:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( "Valor total: R$ " preco )
else: 
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    print( "Valor total: R$ " preco )
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:22:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( "Valor total: R$ ", preco )
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:24:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( "Valor total: R$ ", preco )
	else: 
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 14
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:25:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( "Valor total: ", preco )
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:27:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo 

( consumo < 500 ) and ( consumo > 500)
preco = consumo * 0.65
print( "Valor total: R$ ", preco )
 

-- ERROR:
File "XXXX", line 11
    preco = consumo * 0.65
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:28:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	print( "Valor total: R$ ", preco. )
else: 
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 13
    print( "Valor total: R$ ", preco. )
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:29:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	
	print( "Valor total: R$ ", preco. )
	
else: 
	print("Dados invalidos")
-- ERROR:
File "XXXX", line 14
    print( "Valor total: R$ ", preco. )
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:29:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R"):
	( consumo < 500 ) and ( consumo > 500)
	preco = consumo * 0.65
	
	print( "Valor total: R$ ", preco )
	
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:31:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 500):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
else: 
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:31:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 500):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:33:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()


preco = (consumo) * (0.65)
print( "Valor total: R$ ", preco )

-- OUTPUT:
Valor total: R$  -36.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:34:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()


preco = (consumo) * (0.65)
print( "Valor total: R$ ", preco )

-- OUTPUT:
Valor total: R$  -36.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:36:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
elif: (tipo ) 
	print( "Dados invalidos" )
-- ERROR:
File "XXXX", line 13
    elif: (tipo ) 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:36:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
elif (tipo ): 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:41:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
elif: 
	print( "Dados invalidos" )
-- ERROR:
File "XXXX", line 13
    elif: 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:41:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:45:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R ", preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:45:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco, )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:46:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco, )
else: 
	print( "Dados invalidos", )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos", )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:47:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco)
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:47:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco,)
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:54:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "Valor total: R$ ", preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:55:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:57:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( "preco" )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:58:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:58:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Qual o consumo de energia? "))
tipo = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", consumo, "kWh e tipo", tipo )

if ( tipo == "R") and ( consumo < 500 ) and ( consumo > 0 ):
	preco = (consumo) * (0.65)
	print( preco )
else: 
	print( "Dados invalidos" )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print( "Dados invalidos" )
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:44:53) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if( x < 0) or (y != "R") and (y! = "I") and (y! = "C"):
	print("Dados invalidos")
elif((y == "R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif((y == "R") and (x>500)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 6
    if( x < 0) or (y != "R") and (y! = "I") and (y! = "C"):
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:45:10) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if( x < 0) or (y != "R") and (y! = "I") and (y! = "C"):
	print("Dados invalidos")
elif((y == "R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif((y == "R") and (x>500)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 6
    if( x < 0) or (y != "R") and (y! = "I") and (y! = "C"):
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:45:57) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if( x < 0) or (y!= "R") and (y! = "I") and (y! = "C"):
	print("Dados invalidos")
elif((y == "R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif((y == "R") and (x>500)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 6
    if( x < 0) or (y!= "R") and (y! = "I") and (y! = "C"):
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:46:39) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if( x < 0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y == "R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif((y == "R") and (x>500)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:49:36) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif((y == "R") and (x>500)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:51:02) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:52:30) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif((y=="I") and (x<=1000)):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif((y=="C") and (x>=1000)):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:53:31) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 15
    z = x * 0.55
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:53:43) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 15
    z = x * 0.55
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:55:03) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 15
    z = x * 0.55
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:55:18) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000)
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
File "XXXX", line 14
    elif(y=="C") and (x<=1000)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:55:29) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:56:41) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2) )
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 23:57:09) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2) )
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>=1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- EXECUTION TIME:
0.224466
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 23:58:02) 
-- CODE:
x = float(input("Qual o consumo de energia? "))
y = input("Qual eh o tipo de instalacao? ").upper()

print = ( "Entradas: ", x, "kWh e tipo", y )

if(x<0) or (y!="R") and (y!="I") and (y!="C"):
	print("Dados invalidos")
elif((y=="R") and (x <= 500)):
	z = x * 0.44
	print("Valor total: R$", round(z, 2))
elif(y=="R") and (x>500):
	z = x * 0.65
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))
elif(y=="I") and (x<=1000):
	z = x * 0.55
	print("Valor total: R$", round(z, 2))
elif(y=="C") and (x>1000):
	z = x * 0.60
	print("Valor total: R$", round(z, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Dados invalidos")
TypeError: 'tuple' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
