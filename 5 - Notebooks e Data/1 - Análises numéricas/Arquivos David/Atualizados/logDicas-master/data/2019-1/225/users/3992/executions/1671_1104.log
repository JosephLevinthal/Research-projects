== TEST (2019-04-24 15:47:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:" a, ",", b)
print("Intervalo 2:" c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- ERROR:
File "XXXX", line 10
    print("Intervalo 1:" a, ",", b)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:48:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:48:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:48:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:49:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:49:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:49:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.

a= float(input("a: "))
b= float(input("b: "))
c= float(input("c: "))
d= float(input("d: "))

print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if(b>a) and (d>c):
	if(c>=a) and (c<=b) or (d>=a) and (d<=b):
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
	
-- EXECUTION TIME:
0.226524
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
