== TEST (2019-05-11 18:08:40) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	soma = 1 + factorial(1/i)
	i = i + 1
print(soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = 1 + factorial(1/i)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:08:59) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	soma = 1 + factorial(1/i)
	i = i + 1
print(round(soma , 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = 1 + factorial(1/i)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:10:33) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + factorial(1/i)
	
print(round(soma , 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    soma = 1 + factorial(1/i)
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:14:27) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + factorial(1/i)
	
print(round(soma , 8))
-- EXECUTION TIME:
0.136578
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2499/main.py", line 8, in <module>
    soma = 1 + factorial(1/i)
ValueError: factorial() only accepts integral values

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:15:26) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:15:28) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- EXECUTION TIME:
0.191582
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
1.00019841
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
1.0
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
1.00138889
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:15:29) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:16:27) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < soma):
	i = i + 1
	soma = 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
1.00019841
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:17:32) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:17:59) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:18:05) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + 1 / factorial(i)
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:18:50) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:19:08) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))
	
	
	print(round(soma , 8))
-- OUTPUT:
2.0
3.5
4.66666667
5.70833333
6.71666667
7.71805556
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:21:33) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:21:42) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- EXECUTION TIME:
0.187169
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
8.71825397
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
16.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
7.71805556
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:21:43) 
-- CODE:
from math import*
k = int(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:21:57) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:21:59) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- EXECUTION TIME:
0.214593
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
8.71825397
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
16.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
7.71805556
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:21:59) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i))	
	
print(round(soma , 8))
-- OUTPUT:
8.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:26:03) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = soma + 1 + (1 / factorial(i)) * k 	
	
print(round(soma , 8))
-- OUTPUT:
19.02777778
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:27:33) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k 	
	
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:27:34) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k 	
	
print(round(soma , 8))
-- EXECUTION TIME:
0.118596
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
1.00138889
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
1.0
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
1.00833333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:27:35) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i < k):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k 	
	
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:30:46) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) 
	
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:30:59) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) 
	
print(round(soma , 8))
-- EXECUTION TIME:
0.321723
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
0
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
0
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:30:59) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) 
	
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:05) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
	
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:14) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
	
	print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:37) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:38) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:40) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:53) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 18:31:54) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- EXECUTION TIME:
0.173067
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
0
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
0
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:54) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

soma = 0
i = 0
while(i >= k - 1):
	i = i + 1
	soma = 1 + (1 / factorial(i)) * k
print(round(soma , 8))
-- OUTPUT:
1.00138889
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:59:11) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

acum = 0
cont = 0

while (cont < k ):
	acum = acum + (1 / (factorial(cont)))
	cont = cont + 1
print(round(acum , 8))
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 21:59:21) 
-- CODE:
from math import*
k = float(input("numero natural k :"))

acum = 0
cont = 0

while (cont < k ):
	acum = acum + (1 / (factorial(cont)))
	cont = cont + 1
print(round(acum , 8))
-- EXECUTION TIME:
0.202623
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
