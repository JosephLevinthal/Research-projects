== TEST (2019-03-14 13:52:02) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(10)
-- OUTPUT:
510
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:52:05) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(10)
-- EXECUTION TIME:
0.113274
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
510
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
510
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:52:15) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(5)
-- OUTPUT:
55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:52:22) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(5)
-- EXECUTION TIME:
0.146128
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
55
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
55
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:52:53) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print(10)
-- OUTPUT:
510
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:52:57) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print(10)
-- EXECUTION TIME:
0.207365
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
510
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
510
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:54:17) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
51234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:54:20) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.154014
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
51234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:54:27) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print()
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:54:28) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print()
-- EXECUTION TIME:
0.167892
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:54:51) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(num * 2)
-- OUTPUT:
52468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:54:55) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(num * 2)
-- EXECUTION TIME:
0.202902
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
52468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:55:10) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# Impressao do dobro do numero
print(num.2)
-- ERROR:
File "XXXX", line 7
    print(num.2)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:55:55) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print(num)
-- OUTPUT:
51234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:56:02) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print(num)
-- EXECUTION TIME:
0.183401
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
51234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 13:56:08) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print()
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 13:56:34) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# 10
print()
-- EXECUTION TIME:
0.205787
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:00:35) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5
					))

# Impressao do dobro do numero
print( num * 2 )
-- OUTPUT:
52468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:00:39) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5
					))

# Impressao do dobro do numero
print( num * 2 )
-- EXECUTION TIME:
0.175349
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
52468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:00:47) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5
					))

# Impressao do dobro do numero
print( num )
-- OUTPUT:
51234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:00:49) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5
					))

# Impressao do dobro do numero
print( num )
-- EXECUTION TIME:
0.172812
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
51234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:01:40) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# num * 2
print( num )
-- OUTPUT:
51234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:01:44) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(5))

# num * 2
print( num )
-- EXECUTION TIME:
0.149999
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
51234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:01:57) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 
print( num )
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:02:00) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 
print( num )
-- EXECUTION TIME:
0.148975
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
101234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:02:24) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print( num )
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:02:33) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print( num )
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:02:46) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print( num * 2)
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:03:32) 
-- CODE:
# 5

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10))*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10))*2)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:03:48) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10))*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10))*2)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:03:53) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10))*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10))*2)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:05:05) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print()
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:05:17) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print(num * 2)
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:05:20) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print(num * 2)
-- EXECUTION TIME:
0.174796
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
102468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:05:38) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 10 * 2
print(num * 2)
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:05:50) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 10 * 2
print(10 * 2)
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:07:01) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 10 * 2
print("num * 2")
-- OUTPUT:
10num * 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:07:10) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 10 * 2
print("num * 2")
-- OUTPUT:
10num * 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:07:49) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print("20")
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:07:51) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print("20")
-- EXECUTION TIME:
0.123094
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1020
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:08:50) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print("20")
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:08:53) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print("20")
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:08:56) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print("20")
-- EXECUTION TIME:
0.140039
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1020
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:09:09) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(20)
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:09:54) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10))*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10))*2)
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:09:57) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10))*2)
-- EXECUTION TIME:
0.161323
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(int(input(10))*2)
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:10:18) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(10)))*2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10)))*2
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:12:59) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num * 2)
print(num * 2)
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:13:18) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(20)
print(20)
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:14:03) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(num)
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:14:19) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)*2
print(num)*2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)*2
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:14:39) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num) em dobro
print(num)*2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)*2
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:14:49) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num) em dobro
print(num)*2 em dobro
-- ERROR:
File "XXXX", line 7
    print(num)*2 em dobro
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:15:09) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num) em dobro
print(num)*2 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)*2 
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:16:58) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print()
print() 
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:17:01) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print()
print() 
-- EXECUTION TIME:
0.192583
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
10
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:17:21) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(20))

# print()
print() 
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:17:23) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(20))

# print()
print() 
-- EXECUTION TIME:
0.249765
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
20
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:17:52) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(*2)
print(*2) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(*2) 
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:17:54) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(*2)
print(*2) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(*2) 
TypeError: print() argument after * must be an iterable, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:18:01) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(*2)
print(*2) 
-- EXECUTION TIME:
0.1476
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(*2) 
TypeError: print() argument after * must be a sequence, not int

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:18:15) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(20)
print(num*2) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:18:19) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(20)
print(num*2) 
-- EXECUTION TIME:
0.147142
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
102468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:18:51) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(20)
print("num * 2") 
-- OUTPUT:
10num * 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:18:58) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(20)
print("num * 2") 
-- EXECUTION TIME:
0.123468
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
10num * 2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10num * 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:19:37) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10*2))

# print(20)
print(20) 
-- OUTPUT:
2020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:19:41) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10*2))

# print(20)
print(20) 
-- EXECUTION TIME:
0.207045
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2020
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:20:01) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10*2))

# print(num)
print(num) 
-- OUTPUT:
201234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:20:04) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10*2))

# print(num)
print(num) 
-- EXECUTION TIME:
0.129231
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
201234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
20444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:20:15) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(num) 
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:20:33) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(20^) 
-- EXECUTION TIME:
0.163466
-- ERROR:
  File "/home/codebench/codes/1573/2897/main.py", line 7
    print(20^) 
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:20:34) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(20^) 
-- ERROR:
File "XXXX", line 7
    print(20^) 
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:20:58) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(20) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:21:24) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(20/2) 
-- OUTPUT:
1010.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:21:25) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(20/2) 
-- EXECUTION TIME:
0.121087
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1010.0
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1010.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:21:45) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(num)
print(40/2) 
-- OUTPUT:
1020.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:22:27) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print(num) 
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:22:30) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print(num) 
-- EXECUTION TIME:
0.172165
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
101234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:22:36) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print(20) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:23:06) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# int(input(10))*2
print(20) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:23:28) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# int(input(10))*2
print(int(input(10))*2) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(10))*2) 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:24:37) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# var = int(input(10))*2
print(var) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(var) 
NameError: name 'var' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:24:44) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# var = int(input(10))*2
print(var) 
-- EXECUTION TIME:
0.141473
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(var) 
NameError: name 'var' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:25:05) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

var = int(input(10))*2
print(var) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    var = int(input(10))*2
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:25:07) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

var = int(input(10))*2
print(var) 
-- EXECUTION TIME:
0.178794
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 6, in <module>
    var = int(input(10))*2
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:30:31) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print() 
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:31:08) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print((num)*2) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:31:24) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print(num) 
-- OUTPUT:
101234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:31:39) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num * 2
print(num * 2) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:32:47) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# num= int(input(10))*2
print(num * 2) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:33:07) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 
print(num * 2) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:33:15) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 
print() 
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:34:55) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:35:30) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(2*num)
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:35:51) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(2 * num)
print(2 * num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:43:12) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print() 
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:46:10) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# 20
print(2*) 
-- ERROR:
File "XXXX", line 7
    print(2*) 
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:46:48) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(2*)
print(2*) 
-- ERROR:
File "XXXX", line 7
    print(2*) 
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:46:55) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print(2*)
print(2*10) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:47:59) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input())

# Impressao do dobro do numero
print() 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:48:16) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*10))

# Impressao do dobro do numero
print(num) 
-- OUTPUT:
201234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:48:25) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*10))

# Impressao do dobro do numero
print(num) 
-- EXECUTION TIME:
0.168519
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
201234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
20444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:48:48) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:49:25) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(int(input(2*10))) 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(2*10))) 
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:51:52) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*10)
print(2*10) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:52:16) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*))

# print (2*10)
print(2*10) 
-- ERROR:
File "XXXX", line 4
    num = int(input(2*))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:52:34) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*10))

# print (2*10)
print(2*10) 
-- OUTPUT:
2020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:52:39) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*10))

# print (2*10)
print(2*10) 
-- EXECUTION TIME:
0.205008
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2020
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:53:00) 
-- CODE:
# 10

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*num)
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:54:13) 
-- CODE:
# 2*

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*num)
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-14 14:54:16) 
-- CODE:
# 2*

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*num)
print(2*num) 
-- EXECUTION TIME:
0.1261
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
102468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10888
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:54:32) 
-- CODE:
# 

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*num)
print(2*num) 
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-14 14:54:42) 
-- CODE:
# 

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# print (2*num)
print(2*10) 
-- OUTPUT:
1020
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-15 17:48:28) 
-- CODE:
# 

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(2*num) 
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-15 17:48:33) 
-- CODE:
# 

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(2*num) 
-- EXECUTION TIME:
0.192293
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
