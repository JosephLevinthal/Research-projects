== TEST (2019-04-10 14:15:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if = abs(d - r)<= 0.1:
		print("sim")
else:
	   print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:15:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if = abs(d - r)<= 0.1:
		print("sim")
else:
	   print("nao")
			

else:
	 
			


-- EXECUTION TIME:
0.14697
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:16:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if = abs(d - r)<= 0.1:
		print("sim")
else:
	   print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:17:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
   print("sim")
else:
	print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:17:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
   print("sim")
else:
	print("nao")
			

else:
	 
			


-- EXECUTION TIME:
0.133807
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:18:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)
   
else:
	print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:18:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	mensagem = "sim"
else:
	mensagem = "nao"
print(mensagem)
   
else:
	print("nao")
			

else:
	 
			


-- EXECUTION TIME:
0.142595
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: ")
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   
else:
	print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 8
    r = vo**2 * sin * (2*alpha) / 9.8
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   
else:
	print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   
else:
	print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   
else:
print("nao")
			

else:
	 
			


-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:19:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   
else:
print("nao")
			

else:
	 
			


-- EXECUTION TIME:
0.148321
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 15
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   


			


	 
			


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:20:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	msg = "sim"
else:
	msg = "nao"
print(msg)
   


			


	 
			


-- EXECUTION TIME:
0.212248
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
	
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
	
else:
	print("nao")

-- EXECUTION TIME:
0.275817
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
	
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.190216
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin * (2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.135104
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin(2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:22:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin(2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.133112
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin(2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:22:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = vo**2 * sin(2*alpha) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.13547
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = (vo**2 * sin(2*alpha)) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:22:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(input("Angulo em graus: "))
d = float(input("Distancia entre o passaro e o porco: "))
r = (vo**2 * sin(2*alpha)) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.136981
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha = radians(input())
TypeError: a float is required

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo em graus: ")))
d = float(input("Distancia entre o passaro e o porco: "))
r = (vo**2 * sin(2*alpha)) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
vo = float(input("Velocidade inicial: "))
alpha = radians(float(input("Angulo em graus: ")))
d = float(input("Distancia entre o passaro e o porco: "))
r = (vo**2 * sin(2*alpha)) / 9.8
if abs(d - r) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.120027
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
