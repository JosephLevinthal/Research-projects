== TEST (2019-04-08 12:52:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
V1=(r*(x**2)*(3*r-x))/3
from math import*
V=(4*pi*(r**3))/3
V2=V-V1
if(opcao==1):
	print(round(V1, 4)
else:
	print(round(V2, 4))
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:54:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
V1=(r*(x**2)*(3*r-x))/3
from math import*
V=(4*pi*(r**3))/3
V2=V-V1
if(opcao==1):
	print(round(V1, 4)
else:
	print(round(V2, 4)
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:55:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
V1=(r*(x**2)*(3*r-x))/3
from math import*
V=(4*pi*(r**3))/3
V2=V-V1
if(opcao==1):
	msg=V1
else:
	msg=V2
print(round(msg, 4))
-- OUTPUT:
169.539
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:58:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:58:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.148035
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 12:59:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=input("opcao 1/2?")
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 12:59:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.166051
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 12:52:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:04:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.132485
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:37:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.154367
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.123877
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:38:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.186006
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
raio do tanque:altura:opcao 1/2?290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:38:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.185025
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:41:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao=="1"):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.13973
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:41:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.167469
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:44:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	msg=V2
else:
	msg=V-V2
print(round(msg, 4))
-- EXECUTION TIME:
0.193747
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 12:04:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- EXECUTION TIME:
0.187412
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:04:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 12:04:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=int(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- EXECUTION TIME:
0.137492
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:19:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:19:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio do tanque:"))
x=float(input("altura:"))
opcao=float(input("opcao 1/2?"))
from math import*
V=(4*pi*(r**3))/3
V2=(pi*(x**2)*(3*r-x))/3
if(opcao ==1):
	print(round(V2, 4))
else:
	print(round(V-V2, 4))
-- EXECUTION TIME:
0.201285
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
