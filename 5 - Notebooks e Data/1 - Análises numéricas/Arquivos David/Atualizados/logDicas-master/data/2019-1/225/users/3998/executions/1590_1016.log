== TEST (2019-04-01 13:39:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
from math import *
s = a + b + c // 2
A = sqrt(s*(s - a)*(s - b)*(s - c))
print(round(A,5))
-- OUTPUT:
607.18208
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:40:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
from math import *
s = a + b + c / 2
A = sqrt(s*(s - a)*(s - b)*(s - c))
print(round(A,5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:42:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = float(input("a:"))
b = float(input("b:"))
c = float(input("c:"))
s = (a + b + c)/ 2
A = sqrt(s*(s - a)*(s - b)*(s - c))
print(round(A,5))
-- EXECUTION TIME:
0.173277
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
