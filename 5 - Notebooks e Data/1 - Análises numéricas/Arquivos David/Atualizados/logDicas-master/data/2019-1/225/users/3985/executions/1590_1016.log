== SUBMITION (2019-03-23 15:16:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r= float(input())
from math import*
A= pi*(r**2)
V= (4*pi*r*r*r)*1/3
print(round(A, 3))
print(round(V, 3))
-- EXECUTION TIME:
0.19344
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
380.133
5575.28
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
2827.433
113097.336
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
3421.194
150532.554
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:20:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("digite o numero:"))
soma= 0
div= 1000
while v != 0:
	x=v//div
	soma=soma+x
	v=v%div
	div=div/10
print(int(soma))
-- EXECUTION TIME:
0.116568
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 4, in <module>
    var1= int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:23:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("digite o numero:"))
soma = 0
div = 1000
while v != 0:
	x = v // div
	soma = soma + x
	v = v % div
	div = div/10
print(int(soma))
-- EXECUTION TIME:
0.187929
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 4, in <module>
    var1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:32:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n= 123
soma= sum(int(i) for i in str(n))
print(soma)
-- EXECUTION TIME:
0.213983
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
6
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
6
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:33:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n= 123
soma= sum(int(i) for i in str(n))
print(int(soma)
-- EXECUTION TIME:
0.171161
-- ERROR:
  File "/home/codebench/codes/1590/1016/main.py", line 7
    
                   ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
print(round(G,5))
-- EXECUTION TIME:
0.166092
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 10, in <module>
    print(round(G,5))
NameError: name 'G' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:30:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
print(round(G,5))
-- EXECUTION TIME:
0.143969
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 10, in <module>
    G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
NameError: name 'a' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:31:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
print(round(G,5))
-- EXECUTION TIME:
0.223104
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 10, in <module>
    G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
NameError: name 'a' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:31:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
print(round(G,5))
-- EXECUTION TIME:
0.203212
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 10, in <module>
    G= float(sqrt(p*(p-a)*(p-B)*(p-c)))
NameError: name 'a' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:31:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
G= float(sqrt(p*(p-A)*(p-B)*(p-c)))
print(round(G,5))
-- EXECUTION TIME:
0.216272
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1016/main.py", line 10, in <module>
    G= float(sqrt(p*(p-A)*(p-B)*(p-c)))
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:31:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
A=float(input())
B=float(input())
C=float(input())

p=(A+B+C)/2
G= float(sqrt(p*(p-A)*(p-B)*(p-C)))
print(round(G,5))
-- EXECUTION TIME:
0.218549
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
