== TEST (2019-04-08 14:50:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("number:"))
y = float(input("number:"))
a = (2*x) + (y)
if( a == 3):
	print(ponto pertence a reta)
else:
	print(ponto nao pertence a reta)
	
-- ERROR:
File "XXXX", line 8
    print(ponto pertence a reta)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("number:"))
y = float(input("number:"))
a = (2*x) + (y)
if( a == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
	
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:51:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("number:"))
y = float(input("number:"))
a = (2*x) + (y)
if( a == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
	
-- EXECUTION TIME:
0.200253
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
