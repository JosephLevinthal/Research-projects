== TEST (2019-04-15 15:17:48) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

s = so + v * t

if (s <= 100):
	print("OK")
else:
	print("ACIMA")
-- OUTPUT:
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:18:03) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

s = so + v * t

if (s <= 100):
	print("OK")
else:
	print("ACIMA")
-- EXECUTION TIME:
0.219247
-- TEST CASE 1:
---- input:
2
60
120
---- correct output:
7202
OK
---- user output:
ACIMA
-- TEST CASE 2:
---- input:
1
41
109
---- correct output:
4470
OK
---- user output:
ACIMA
-- TEST CASE 3:
---- input:
3
120
60
---- correct output:
7203
ACIMA
---- user output:
ACIMA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:18:13) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

s = so + v * t

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:20:30) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

print(int(s = so + (v * t)))

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(int(s = so + (v * t)))
TypeError: 's' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:20:57) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

print(int(s = so + (v * t)))

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(int(s = so + (v * t)))
TypeError: 's' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:21:42) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

s = so + (v * t)
print(int(s))

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
7202
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:22:01) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input (""))

s = so + (v * t)
print(int(s))

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- EXECUTION TIME:
0.205819
-- TEST CASE 1:
---- input:
2
60
120
---- correct output:
7202
OK
---- user output:
7202
ACIMA
-- TEST CASE 2:
---- input:
1
41
109
---- correct output:
4470
OK
---- user output:
4470
ACIMA
-- TEST CASE 3:
---- input:
3
120
60
---- correct output:
7203
ACIMA
---- user output:
7203
ACIMA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:23:52) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

s = int(so + (v * t))


if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:14) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

s = int(so + (v * t))
print(s)

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
7202
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:24:24) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

s = int(so + (v * t))
print(s)

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- EXECUTION TIME:
0.196768
-- TEST CASE 1:
---- input:
2
60
120
---- correct output:
7202
OK
---- user output:
7202
ACIMA
-- TEST CASE 2:
---- input:
1
41
109
---- correct output:
4470
OK
---- user output:
4470
ACIMA
-- TEST CASE 3:
---- input:
3
120
60
---- correct output:
7203
ACIMA
---- user output:
7203
ACIMA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:44) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

s = int(so + (v * t))
print("s")

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
s
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:21) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

s = int(so + (v * t))


if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:41) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

S = int(so + (v * t))
print(S)

if (s <= 100):
	print("OK")
else:
	print("ACIMA") 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (s <= 100):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:52) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

S = int(so + (v * t))
print(S)

if (S <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
7202
ACIMA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:27:05) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

S = int(so + (v * t))
print(S)

if (S <= 100):
	print("OK")
else:
	print("ACIMA") 
-- EXECUTION TIME:
0.152254
-- TEST CASE 1:
---- input:
2
60
120
---- correct output:
7202
OK
---- user output:
7202
ACIMA
-- TEST CASE 2:
---- input:
1
41
109
---- correct output:
4470
OK
---- user output:
4470
ACIMA
-- TEST CASE 3:
---- input:
3
120
60
---- correct output:
7203
ACIMA
---- user output:
7203
ACIMA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:28:52) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

S = int(so + (v * t))
print(S)

if (v <= 100):
	print("OK")
else:
	print("ACIMA") 
-- OUTPUT:
7202
OK
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:29:03) 
-- CODE:
so = int(input(""))
v = int(input(""))
t = int(input(""))

S = int(so + (v * t))
print(S)

if (v <= 100):
	print("OK")
else:
	print("ACIMA") 
-- EXECUTION TIME:
0.181812
-- TEST CASE 1:
---- input:
2
60
120
---- correct output:
7202
OK
---- user output:
7202
OK
-- TEST CASE 2:
---- input:
1
41
109
---- correct output:
4470
OK
---- user output:
4470
OK
-- TEST CASE 3:
---- input:
3
120
60
---- correct output:
7203
ACIMA
---- user output:
7203
ACIMA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
