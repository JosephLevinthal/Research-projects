== TEST (2019-04-29 13:14:42) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
V = pi*r**H
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    V = pi*r**H
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:14:48) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:17:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
from math import*
if ((H>0) and (h>0) and (H>h) and (H>2*r) and (H>r)):
	
-- ERROR:
File "XXXX", line 13
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:19:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
from math import*
if ((H>0) and (h>0) and (H>h) and (H>2*r) and (H>r)):
	if (h==r):
		vol = ((4/3) * pi * (r**3)/ 2)
	
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:36:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
from math import*
if ((H>0) and (h>0) and (H>h) and (H>2*r) and (H>r)):
	if (h==r):
		vol = ((4/3) * pi * (r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (ppi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:36:57) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
from math import*
if ((H>0) and (h>0) and (H>h) and (H>2*r) and (H>r)):
	if (h==r):
		vol = ((4/3) * pi * (r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (ppi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.158474
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:37:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)
from math import*
if ((H>0) and (h>0) and (H>h) and (H>2*r) and (H>r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.205301
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:39:50) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.176438
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:39:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.159448
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:39:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:07:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:10:15) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:10:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h = H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 20
    elif (h = H-r):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h == H - r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:12:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura: "))
h = float(input("nivel de combustivel: "))
r = float(input("raio: "))
print("Entradas:" ,H,"," ,h,"," ,r)


from math import*
if ((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if (h==r):
		vol = ((4/3)*pi*(r**3)/ 2)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h==H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h<H-r and h>r):
		vol = pi*(r**2)*(H-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else: 
		vol = pi*(r**2)*(h-r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)+(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 175053.731 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:17:58) 
-- CODE:
H = float(input("altura: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio dos bojos semiefericos e superior: "))
print("Entradas:",H,",",h,",",r)

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:34:46) 
-- CODE:
H = float(input("altura: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio dos bojos semiefericos e superior: "))
print("Entradas:",H,",",h,",",r)


from math import*
if ((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol = ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (H<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h==H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol = pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol = pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:35:08) 
-- CODE:
H = float(input("altura: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio dos bojos semiefericos e superior: "))
print("Entradas:",H,",",h,",",r)


from math import*
if ((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol = ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (H<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h==H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol = pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol = pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")	
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:35:25) 
-- CODE:
H = float(input("altura: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio dos bojos semiefericos e superior: "))
print("Entradas:",H,",",h,",",r)


from math import*
if ((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol = ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (H<r):
		vol = (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif (h==H-r):
		vol = (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol = pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol = pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")	
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.200766
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
