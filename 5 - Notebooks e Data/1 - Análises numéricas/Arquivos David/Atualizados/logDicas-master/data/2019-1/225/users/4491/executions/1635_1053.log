== TEST (2019-04-08 14:21:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("msg: ")

if (msg == cervo):
	mensagem = "cervo eh patrono do Harry Potter"
else: 
	mensagem = "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:22:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("msg: ")

if (msg = cervo):
	mensagem = "cervo eh patrono do Harry Potter"
else: 
	mensagem = "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (msg = cervo):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:23:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("msg: ")

if (msg = cervo):
	mensagem = "msg" "cervo eh patrono do Harry Potter"
else: 
	mensagem = "msg" "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (msg = cervo):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:23:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("msg: ")

if (msg == cervo):
	mensagem = "msg" "cervo eh patrono do Harry Potter"
else: 
	mensagem = "msg" "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:24:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("fei: ")

if (msg == cervo):
	mensagem = "msg" "cervo eh patrono do Harry Potter"
else: 
	mensagem = "msg" "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:24:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
msg = input("fei: ")

if (msg == cervo):
	mensagem = "msg" "cervo eh patrono do Harry Potter"
else: 
	mensagem = "msg" "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:27:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (msg == cervo):
	mensagem = "msg" "cervo eh patrono do Harry Potter"
else: 
	mensagem = "msg" "nao eh patrono do Harry Potter"
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (msg == cervo):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter"
		  )	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (msg == cervo):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (msg == cervo):
NameError: name 'msg' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:30:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (msg = cervo):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (msg = cervo):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:30:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (msg = "cervo"):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (msg = "cervo"):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string = "cervo"):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if (string = "cervo"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("msg" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
-- OUTPUT:
msgcervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:32:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("fei" "cervo eh patrono do Harry Potter")
else: 
	print("msg" "nao eh patrono do Harry Potter")
		  	
-- OUTPUT:
feicervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:32:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("fei" "cervo eh patrono do Harry Potter")
else: 
	print("fei" "nao eh patrono do Harry Potter")
		  	
-- OUTPUT:
feicervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print(fei "cervo eh patrono do Harry Potter")
else: 
	print(fei "nao eh patrono do Harry Potter")
		  	
-- ERROR:
File "XXXX", line 7
    print(fei "cervo eh patrono do Harry Potter")
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("fei" "cervo eh patrono do Harry Potter")
else: 
	print("fei" "nao eh patrono do Harry Potter")
		  	
-- OUTPUT:
feicervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:34:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("string" " cervo eh patrono do Harry Potter ")
else: 
	print("string" " nao eh patrono do Harry Potter ")
		  	
-- OUTPUT:
string cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:35:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print("string" " cervo eh patrono do Harry Potter ")
else: 
	print("string" " nao eh patrono do Harry Potter ")
		  	
-- EXECUTION TIME:
0.18821
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
string cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
string nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:39:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print( " cervo eh patrono do Harry Potter ")
else: 
	print( " nao eh patrono do Harry Potter ")
		  	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:39:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print( " cervo eh patrono do Harry Potter ")
else: 
	print( " nao eh patrono do Harry Potter ")
		  	
-- EXECUTION TIME:
0.181366
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:40:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print( " cervo eh patrono do Harry Potter ")
else: 
	print("fei" + " nao eh patrono do Harry Potter ")
		  	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:40:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print( " cervo eh patrono do Harry Potter ")
else: 
	print("string" + " nao eh patrono do Harry Potter ")
		  	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:44:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print(" cervo eh patrono do Harry Potter ")
else: 
	print(string + " nao eh patrono do Harry Potter ")
		  	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:44:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
string = input("fei: ")

if (string == "cervo"):
	print(" cervo eh patrono do Harry Potter ")
else: 
	print(string + " nao eh patrono do Harry Potter ")
		  	
-- EXECUTION TIME:
0.113286
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
