== TEST (2019-06-12 14:11:04) 
-- CODE:
from numpy imnport*
vet=array(eval(input("nota")))

ap=0
rp=0
for(componente in vet[i]):
	if(componente[i]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[i] <5.0):
		print([i])

-- ERROR:
File "XXXX", line 1
    from numpy imnport*
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:16) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0
rp=0
for(componente in vet[i]):
	if(componente[i]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[i] <5.0):
		print([i])

-- ERROR:
File "XXXX", line 6
    for(componente in vet[i]):
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:34) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0
rp=0
forcomponente in vet[i]:
	if(componente[i]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[i] <5.0):
		print([i])

-- ERROR:
File "XXXX", line 6
    forcomponente in vet[i]:
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:11:41) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0
rp=0
for componente in vet[i]:
	if(componente[i]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[i] <5.0):
		print([i])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:12:27) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0
rp=0
for componente in [vet]:
	if(componente[i]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[i] <5.0):
		print([i])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:13:00) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0
rp=0
for componente in [vet]:
	if(componente[vet]>=5.0):
		ap=ap+1
		print(ap)
	elif(componente[vet] <5.0):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:14:13) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))
print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:14:57) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))
print([vet>5])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:15:22) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))
print([vet]>5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:15:40) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))
print([vet]>5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:15:48) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))
print([vet]>5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:16:08) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))
print([vet]>5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:16:11) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))
print([vet]5)

-- ERROR:
File "XXXX", line 3
    print([vet]5)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:17:56) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0

for componente in [vet]:
	if(componente[vet>=5.0]):
		ap=ap+1
		print(ap)
	elif(componente[vet<5.0]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 14:18:00) 
-- CODE:
from numpy import*
vet=array(eval(input("nota")))

ap=0

for componente in [vet]:
	if(componente[vet>=5.0]):
		ap=ap+1
		print(ap)
	elif(componente[vet<5.0]):
		print([vet])

-- EXECUTION TIME:
4.81394
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1828/1644/main.py", line 7, in <module>
    if(componente[vet>=5.0]):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:18:03) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5.0]):
		ap=ap+1
		print(ap)
	elif(componente[vet<5.0]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:19:10) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5.0]):
		ap=ap+1
		
	elif(componente[vet<5.0]):
		print([vet])
print(ap)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:21:57) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
		print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:22:19) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
		print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:22:29) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
		print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:23:30) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:23:47) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 14:23:54) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- EXECUTION TIME:
4.4751
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1828/1644/main.py", line 7, in <module>
    if(componente[vet>=5]):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:23:59) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:03) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:09) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:11) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:21) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:28) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:32) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:24:58) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:25:13) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:25:26) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet<5]):
		print([vet])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:26:25) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	print([vet]<5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:26:41) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	print([vet<5])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:30:05) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
print([vet])

-- ERROR:
File "XXXX", line 13
    print([vet])
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:30:15) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
	print([vet])

-- ERROR:
File "XXXX", line 13
    print([vet])
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 14:30:32) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
	
print([vet])

-- ERROR:
File "XXXX", line 14
    print([vet])
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 14:39:29) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
		rp=
print(rp)

-- EXECUTION TIME:
0.653975
-- ERROR:
  File "/home/codebench/codes/1828/1644/main.py", line 13
    rp=
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 14:39:32) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
		rp=
print(rp)

-- EXECUTION TIME:
0.892994
-- ERROR:
  File "/home/codebench/codes/1828/1644/main.py", line 13
    rp=
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 15:34:47) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):
		rp=
print(rp)

-- EXECUTION TIME:
0.708962
-- ERROR:
  File "/home/codebench/codes/1828/1644/main.py", line 13
    rp=
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:34:51) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):

print(rp)

-- ERROR:
File "XXXX", line 14
    print(rp)
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:34:58) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):

	print(rp)

-- ERROR:
File "XXXX", line 14
    print(rp)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-12 15:35:02) 
-- CODE:
from numpy import*
vet=array(eval(input("nota:")))

ap=0

for componente in [vet]:
	if(componente[vet>=5]):
		ap=ap+1
print(ap)
	
for componente in [vet]:
	if(componente[vet]<5):

		print(rp)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
