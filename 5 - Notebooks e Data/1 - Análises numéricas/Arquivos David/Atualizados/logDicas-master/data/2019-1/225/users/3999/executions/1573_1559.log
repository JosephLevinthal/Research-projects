== SUBMITION (2019-03-11 15:58:20) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print(frase.upper(frase))
-- EXECUTION TIME:
0.151675
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/1559/main.py", line 2, in <module>
    print(frase.upper(frase))
TypeError: upper() takes no arguments (1 given)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:03:48) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print(frase.upper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper(frase))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:04:08) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print(upper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(upper(frase))
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:04:25) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia."
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:04:29) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia."
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:04:41) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia."
print(frase.upper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper(frase))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:05:40) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia
print(frase.upper(frase))
-- ERROR:
File "XXXX", line 1
    frase="Ada Lovelace foi a primeira programadora da historia
                                                              ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:07:22) 
-- CODE:
x="Ada Lovelace foi a primeira programadora da historia
print(x.upper(x))
-- ERROR:
File "XXXX", line 1
    x="Ada Lovelace foi a primeira programadora da historia
                                                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:08:04) 
-- CODE:
x="Ada Lovelace foi a primeira programadora da historia
print(upper(x))
-- ERROR:
File "XXXX", line 1
    x="Ada Lovelace foi a primeira programadora da historia
                                                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:08:50) 
-- CODE:
x="Ada Lovelace foi a primeira programadora da historia
print(Ada Lovelace foi a primeira programadora da historia.upper(Ada Lovelace foi a primeira programadora da historia))
-- ERROR:
File "XXXX", line 1
    x="Ada Lovelace foi a primeira programadora da historia
                                                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:13:16) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia"
print(frace.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frace.upper())
NameError: name 'frace' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:13:25) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia"
print(frase.upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:14:10) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia"
print(frase.upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 15:14:15) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia"
print(frase.upper())
-- EXECUTION TIME:
0.136731
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-12 15:14:35) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia."
print(frase.upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-12 15:14:40) 
-- CODE:
frase="Ada Lovelace foi a primeira programadora da historia."
print(frase.upper())
-- EXECUTION TIME:
0.238104
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
