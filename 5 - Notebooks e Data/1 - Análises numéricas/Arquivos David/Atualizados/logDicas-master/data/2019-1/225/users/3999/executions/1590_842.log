== TEST (2019-03-22 04:02:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=N/1000
-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 04:02:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=N/1000
print(x)
-- EXECUTION TIME:
0.163315
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9.173
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1.01
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 04:02:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=N/1000
print(x)
-- OUTPUT:
9.173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 04:05:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=(N%1000)
y=(N%100)
z=(N%10)
print(z+y+x)
-- EXECUTION TIME:
0.178088
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
249
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 04:15:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=(N/1000)
y=(N/100)
z=(N/10)
print(x+z+y)
-- OUTPUT:
1018.203
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 04:15:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
N=int(input())
x=(N/1000)
y=(N/100)
z=(N/10)
print(x+z+y)
-- EXECUTION TIME:
0.213308
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
1018.203
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
112.11
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 04:52:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=(a%1000)//100
d=(c%100)//10
e=d%10
print(b+c+d+e)
-- EXECUTION TIME:
0.204479
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
10
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 04:52:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=(a%1000)//100
d=(c%100)//10
e=d%10
print(b+c+d+e)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 04:58:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 04:58:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- EXECUTION TIME:
0.176211
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:18:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:24:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:48:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:48:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:48:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu coa
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- EXECUTION TIME:
0.151583
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:28:52) 
-- CODE:
a=int(input("Digite um numero de 4 digitos:"))
b=a//1000
c=a%1000
d=c//100
e=c%100
f=e//10
g=e%10
print(b+d+f+g)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
