== TEST (2019-04-06 12:07:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
d = 5/100 - 200
if (var1 >= d ):
	a = desconto
else :
	a = sem desconto
print(a)
-- ERROR:
File "XXXX", line 9
    a = sem desconto
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:07:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
d = 5/100 - 200
if (var1 >= d ):
	a = (desconto)
else :
	a = (" sem desconto")
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = (desconto)
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:08:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
d = 5/100 - 200
if (var1 >= d ):
	a = (desconto)
else :
	a = (" sem desconto")
print(a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = (desconto)
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:08:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
d = 5/100 - 200
if (var1 >= d ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = (desconto)
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:09:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 5/100 - 200
if (var1 >= d ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (var1 >= d ):
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:09:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 5/100 - 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
-199.95
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:10:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 5/100 + 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
200.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * >= 200
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
File "XXXX", line 5
    desconto = (5/100) * >= 200
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:12:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = (5/100) * var1
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:13:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 0,05 * var1
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
File "XXXX", line 5
    desconto = 0,05 * var1
                  ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:14:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 0,5 * var1
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (var1 >= desconto ):
TypeError: '>=' not supported between instances of 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 12:14:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago"))
desconto = 0,5 * 
if (var1 >= desconto ):
	a = (desconto)
else :
	a = (" sem desconto")
print(round(a,2))
-- ERROR:
File "XXXX", line 5
    desconto = 0,5 * 
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:40:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 200):
	mensagem = "sem desconto"
else :
	mensagem = "com desconto"
print ( mensagem)
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 200):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:42:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 5/100 * 200):
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 5/100 * 200):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 5/100 * 200):
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 5/100 * 200):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:43:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 5/100 * 200):
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 5/100 * 200):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:43:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 5/100 * 200) :
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 5/100 * 200) :
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 13:46:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
var1 = float(input("valor a ser pago")
if (var1 < 5/100 * 200):
				 mensgem = " sem desconto"
				 
				 

-- ERROR:
File "XXXX", line 5
    if (var1 < 5/100 * 200):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:22:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * 200
else:
	mensagem = "nao tem desconto"
print (mensagem (round,2))
	
	
				 
				

				 
				 
				 
				 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (mensagem (round,2))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:22:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * 200
else:
	mensagem = "nao tem desconto"
print (mensagem(round,2))
	
	
				 
				

				 
				 
				 
				 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (mensagem(round,2))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:23:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * 200
else:
	mensagem = "nao tem desconto"
print (mensagem(round,2))
	
	
				 
				

				 
				 
				 
				 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (mensagem(round,2))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:27:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
d = 5/100 * 200
if (x >= 200) :
	mensagem = "tem desconto"
	
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:28:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
d = 5/100 * x
if (x >= 200) :
	mensagem = "tem desconto"
	
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:28:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
d = 5/100 * x
if (x >= 200) :
	mensagem = "tem desconto"
	
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:29:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:31:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x
else:
	mensagem = "nao tem desconto"
print(round(x,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
200.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:33:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:35:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x 
	b = x - d
else:
	mensagem = "nao tem desconto"
print(round(d,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:36:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x 
	b = x - d
else:
	mensagem = "nao tem desconto"
print(round(b,2))

	
	
				 
				

				 
				 
				 
				 

-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:36:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor"))
if (x >= 200) :
	mensagem = "tem desconto"
	d = 5/100 * x 
	b = x - d
else:
	mensagem = "nao tem desconto"
print(round(b,2))

	
	
				 
				

				 
				 
				 
				 

-- EXECUTION TIME:
0.161483
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
