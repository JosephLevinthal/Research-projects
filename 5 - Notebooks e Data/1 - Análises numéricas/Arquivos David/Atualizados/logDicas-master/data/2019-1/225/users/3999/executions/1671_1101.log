== TEST (2019-04-24 00:58:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:11:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
		z=x*0.65
		else:
			if(x<=1000)and(y=="C")
			z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
						else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- ERROR:
File "XXXX", line 13
    z=x*0.65
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:11:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C")
			z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
						else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- ERROR:
File "XXXX", line 15
    if(x<=1000)and(y=="C")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:11:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
						else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- ERROR:
File "XXXX", line 23
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:12:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- OUTPUT:
Entradas: -56.0 Kwh Tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:13:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- EXECUTION TIME:
0.126411
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh Tipo I
Valor total: -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh Tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:13:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","Tipo",y)
print("Valor total:",z)
		
			
-- OUTPUT:
Entradas: -56.0 Kwh Tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:14:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:",z)
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:14:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.6
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:",z)
		
			
-- EXECUTION TIME:
0.220951
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:14:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:",z)
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:15:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:",z)
		
			
-- EXECUTION TIME:
0.16981
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:15:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",z)
		
			
-- EXECUTION TIME:
0.137365
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:15:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",z)
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 01:16:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,3))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 01:16:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,3))
		
			
-- EXECUTION TIME:
0.115798
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:31:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,3))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:32:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:32:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
else:
	if(x<=500)and(y=="R"):
		z= x*0.44
	else:
		if(x>500)and(y=="R"):
			z=x*0.65
		else:
			if(x<=1000)and(y=="C"):
				z=x*0.55
			else:
				if(x>1000)and(y=="C"):
					z=x*0.60
				else:
					if(x<=5000)and(y=="I"):
						z=x*0.55
					else:
							if(x>5000)and(y=="I"):
								z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- EXECUTION TIME:
0.213213
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:38:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:38:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- EXECUTION TIME:
0.128172
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 Kwh e Tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:39:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:39:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:40:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:40:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I"):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:41:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")and(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:41:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x>0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- OUTPUT:
Entradas: -56.0 Kwh e Tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:42:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total:","R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:42:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- EXECUTION TIME:
0.122037
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total:","R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:42:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total:","R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total:","R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:43:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:43:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh","e","Tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.148196
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:44:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:44:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.206057
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:45:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 12:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.192437
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:26:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:28:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if(y!="C")and(y!="R")and(y!="I")or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.195641
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:29:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:06:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.227598
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:13:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:13:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
elif (y == "R"):
	if(x<=500):
		z= x*0.44
	else:
		z=x*0.65
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
	else:	
		z=x*0.60
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
	else:
		z=x*0.6
print("Entradas:",x,"Kwh e tipo",y)
print("Valor total: R$",round(z,2))
		
			
-- EXECUTION TIME:
0.120547
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1101/main.py", line 24, in <module>
    print("Valor total: R$",round(z,2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:17:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
	else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:18:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
	print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
	else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:18:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
	print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
	else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:19:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
	print("Valor total: R$",round(z,2))
else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
	if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
	else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
	if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 16
    elif(y=="C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:20:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
	print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:23:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
	print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:23:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y == "R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:24:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:25:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2)
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2)
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:25:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif(y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:25:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"Kwh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:25:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"kWh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:28:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total: R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"kWh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total: R$",round(z,2))
                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:28:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total:R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))
print("Entradas:",x,"kWh e tipo",y)

		
			
-- ERROR:
File "XXXX", line 12
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:30:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total:R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))


		
			
-- ERROR:
File "XXXX", line 13
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:56:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Consumo:"))
y=input("Instalacao:").upper()
print("Entradas:",x,"kWh e tipo",y)
if((y!="C")and(y!="R")and(y!="I"))or(x<0):
	z="Dados invalidos"
	print(z)
elif (y=="R"):
	if(x<=500):
	   z= x*0.44
		print("Valor total:R$",round(z,2))
	else:
		z=x*0.65
		print("Valor total: R$",round(z,2))
elif (y=="C"):
		if(x<=1000):
		z=x*0.55		
		print("Valor total: R$",round(z,2))
		else:	
		z=x*0.60
		print("Valor total: R$",round(z,2))
elif(y=="I"):
		if(x<=5000):
		z=x*0.55
		print("Valor total: R$",round(z,2))
		else:
		z=x*0.6
		print("Valor total: R$",round(z,2))


		
			
-- ERROR:
File "XXXX", line 13
    print("Valor total:R$",round(z,2))
                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
