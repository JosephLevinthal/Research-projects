== TEST (2019-04-15 14:16:21) 
-- CODE:
consumo=input(float(1.20))
if(consumo**2):
	valor="minuto + "
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    if(consumo**2):
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:22:13) 
-- CODE:
consumo=input(float(1.20))
if(consumo):
	valor=" "
else:
	valor=""
-- EXECUTION TIME:
0.186715
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
1.2
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
1.2
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
1.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:22:13) 
-- CODE:
consumo=input(float(1.20))
if(consumo):
	valor=" "
else:
	valor=""
-- OUTPUT:
1.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:26:46) 
-- CODE:
consumo=input(float(1.20))
if(consumo%2==0):
	valor=" "
else:
	valor=""
print()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    if(consumo%2==0):
TypeError: not all arguments converted during string formatting
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:41:24) 
-- CODE:
con=input(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- OUTPUT:
120.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:43:02) 
-- CODE:
con=input(float(100*1.20))
if(con+):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:43:42) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:43:59) 
-- CODE:
con=(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:04) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:05) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:44:06) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- EXECUTION TIME:
0.157805
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:

-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:

-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:06) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:07) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- ERROR:
File "XXXX", line 2
    if(con+):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:44:07) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor=""
else:
	valor=""
print()
-- EXECUTION TIME:
0.290796
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:

-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:

-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:51) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:44:53) 
-- CODE:
con=int(float(100*1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:45:14) 
-- CODE:
con=int(float(100%1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- EXECUTION TIME:
0.16752
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
0
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
0
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:45:14) 
-- CODE:
con=int(float(100%1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:45:15) 
-- CODE:
con=int(float(100%1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:45:17) 
-- CODE:
con=int(float(100%1.20))
if(con):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- EXECUTION TIME:
0.151028
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
0
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
0
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:45:49) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:45:51) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0):
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:46:21) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- EXECUTION TIME:
0.183724
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
120
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
120
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
120
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:46:21) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:46:22) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:46:22) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:46:23) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- EXECUTION TIME:
0.132681
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
120
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
120
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
120
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:46:23) 
-- CODE:
con=int(float(100*1.20))
if(100*120==0)+25:
    	valor="100"
else:
   	valor="1.40"
print(con)
-- EXECUTION TIME:
0.150236
-- TEST CASE 1:
---- input:
50
---- correct output:
60.0
---- user output:
120
-- TEST CASE 2:
---- input:
120
---- correct output:
193.0
---- user output:
120
-- TEST CASE 3:
---- input:
199

---- correct output:
303.6
---- user output:
120
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:46:43) 
-- CODE:
con=input(float(100*1.20))
if():
    	valor="100"
else:
   	valor="1.40"
print(con)
-- OUTPUT:
120.050
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
