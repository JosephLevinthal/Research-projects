== TEST (2019-05-14 22:40:32) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
	pi = soma * 6
	pi = sqrt(soma)
print(round(pi, 6))
-- OUTPUT:
1.513699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:41:24) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
soma = soma * 6
soma = sqrt(soma)
print(round(pi, 6))
-- OUTPUT:
3.141593
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:41:36) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
   soma = soma * 6
soma = sqrt(soma)
print(round(pi, 6))
-- ERROR:
File "XXXX", line 8
    soma = soma * 6
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:41:53) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
   soma = soma * 6

soma = sqrt(soma)
print(round(pi, 6))
-- ERROR:
File "XXXX", line 8
    soma = soma * 6
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:42:07) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
   

soma = sqrt(soma)
print(round(pi, 6))
-- OUTPUT:
3.141593
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:42:23) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0
soma = 0
while (cont < n):
	soma = soma + (1 / (cont ** cont))
	cont = cont + 1
   

soma = sqrt(soma*6)
print(round(pi, 6))
-- OUTPUT:
3.141593
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-29 19:53:24) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
p = 0
i = 0
while (i < n):
	p = p + 1 / i ** 2
	i = i + 1

pi = sqrt(p * 6)
print(round(pi, 6))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    p = p + 1 / i ** 2
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-29 19:53:46) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
p = 0
i = 1
while (i < n):
	p = p + 1 / i ** 2
	i = i + 1

pi = sqrt(p * 6)
print(round(pi, 6))

-- OUTPUT:
3.13968
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-29 19:54:17) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
p = 0
i = 1
while (i <= n):
	p = p + 1 / i ** 2
	i = i + 1

pi = sqrt(p * 6)
print(round(pi, 6))

-- OUTPUT:
3.139684
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-29 19:54:53) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
p = 0
i = 1
while (i <= n):
	p = p + 1 / i ** 2
	i = i + 1

pi = sqrt(p * 6)
print(round(pi, 6))

-- EXECUTION TIME:
7.56666
-- TEST CASE 1:
---- input:
500
---- correct output:
3.139684
---- user output:
3.139684
-- TEST CASE 2:
---- input:
159863
---- correct output:
3.141587
---- user output:
3.141587
-- TEST CASE 3:
---- input:
100
---- correct output:
3.132077
---- user output:
3.132077
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
