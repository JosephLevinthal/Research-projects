== TEST (2019-04-08 14:49:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = (2*x) + y = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 6
    r = (2*x) + y = 3
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = ((2*x) + y) = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 6
    r = ((2*x) + y) = 3
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = 2*x + y = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 6
    r = 2*x + y = 3
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:50:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = 2*x + y = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.143538
-- ERROR:
  File "/home/codebench/codes/1635/1054/main.py", line 6
    r = 2*x + y = 3
       ^
SyntaxError: can't assign to operator

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = 2*x + y = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 6
    r = 2*x + y = 3
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = (2*x + y) = 3
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
File "XXXX", line 6
    r = (2*x + y) = 3
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:51:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = (2*x) + (y) 
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:51:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("a coordenada x e: "))
y = float(input("a coordenada y e: "))
r = (2*x) + (y) 
if (r == 3):
   print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.128347
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
