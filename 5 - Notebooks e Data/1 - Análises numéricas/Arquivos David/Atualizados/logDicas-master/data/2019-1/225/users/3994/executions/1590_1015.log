== TEST (2019-03-22 22:29:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input(int("Digite um numero"))
var2= input(int("Digite um numero"))
var3= input(int("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = (max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1= input(int("Digite um numero"))
ValueError: invalid literal for int() with base 10: 'Digite um numero'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:30:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= input(int("Digite um numero"))
var3= input(int("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = (max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= input(int("Digite um numero"))
ValueError: invalid literal for int() with base 10: 'Digite um numero'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:30:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(inpu("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = (max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var2= int(inpu("Digite um numero"))
NameError: name 'inpu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:30:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = (max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print = (max-min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:31:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = ("max-min")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print = (max-min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:31:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)
print = ("max-min")
-- EXECUTION TIME:
0.141513
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:31:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print = (max-min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:32:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print= max(var1,var2,var3)
print= min(var1,var2,var3)
print =(var1+var2+var3)

-- EXECUTION TIME:
0.167528
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:33:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))

-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:35:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))
print((max-min))

-- EXECUTION TIME:
0.134725
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1015/main.py", line 10, in <module>
    print((max-min))
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:36:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))



-- EXECUTION TIME:
0.183059
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:36:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))




-- EXECUTION TIME:
0.119267
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:36:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))




-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:37:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))
print((var2-var3))





-- EXECUTION TIME:
0.181526
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
8
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:38:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))
print((var2-var3))





-- EXECUTION TIME:
0.211879
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
8
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:38:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print((var1+var2+var3))
print((var2-var3))





-- OUTPUT:
10
-2
8
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:43:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))






-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:43:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))






-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:43:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))






-- EXECUTION TIME:
0.13562
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:44:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))






-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:44:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))







-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:47:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-max-min)






-- EXECUTION TIME:
0.127998
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1015/main.py", line 9, in <module>
    print(var1+var2+var3-max-min)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:47:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-max-min)






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-max-min)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:47:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(max-min))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-(max-min))
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:50:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)






-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:51:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)-(max,min)






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3)-(max,min)
TypeError: unsupported operand type(s) for -: 'NoneType' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:05:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(min+max)






-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:05:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(min+max))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:06:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max(var1,var2,var3))







-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:07:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max(var1,var2,var3)))







-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:07:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max(var1,var2,var3))))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-(print(max(var1,var2,var3))))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:07:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:07:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)-print(max(var1,var2,var3))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3)-print(max(var1,var2,var3))
TypeError: unsupported operand type(s) for -: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:08:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:11:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max(var1,var2,var3))
print(min(var1,var2,var3)))







-- ERROR:
File "XXXX", line 10
    print(min(var1,var2,var3)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:23:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(min(var1,var2,var3)))







-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:23:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(min(var1,var2,var3))







-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:23:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(min,max))







-- ERROR:
File "XXXX", line 16
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:15:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:15:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)-1







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3)-1
TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 00:16:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)-(-1)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3)-(-1)
TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:15:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))
var4= (var1+var2+var3)-print(max(var1,var2,var3))
print(max(var1,var2,var3))
print(min(var1,var2,var3))
print("var4:", var4)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    var4= (var1+var2+var3)-print(max(var1,var2,var3))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:15:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print("var4:", var4)







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("var4:", var4)
NameError: name 'var4' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:15:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max,min)))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(var1+var2+var3-(print(max,min)))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:15:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3-(print(max,min)))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(var1+var2+var3-(print(max,min)))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:16:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("Digite um numero"))
var2= int(input("Digite um numero"))
var3= int(input("Digite um numero"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(int(var1+var2+var3-(print(max,min))))







-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(int(var1+var2+var3-(print(max,min))))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 17:12:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("6"))
var2= int(input("2"))
var3= int(input("4"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(int(var1+var2+var3-var2+var1))







-- EXECUTION TIME:
0.215181
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 17:12:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("6"))
var2= int(input("2"))
var3= int(input("4"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(int(var1+var2+var3-var2+var1))







-- EXECUTION TIME:
0.187863
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
20
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 17:12:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("6"))
var2= int(input("2"))
var3= int(input("4"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(int(var1+var2+var3))







-- EXECUTION TIME:
0.137876
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
-2
8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:13:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("6"))
var2= int(input("2"))
var3= int(input("4"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:13:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("6"))
var2= int(input("2"))
var3= int(input("4"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:13:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max(var1,var2,var3))
print(min(var1,var2,var3))
print(var1+var2+var3)







-- OUTPUT:
10
-2
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:15:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

var4(max(var1,var2,var3)
var5(min(var1,var2,var3))
print(var1+var2+var3 -var4-var5)








-- ERROR:
File "XXXX", line 9
    var5(min(var1,var2,var3))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:16:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

var4(max(var1,var2,var3)
var5(min(var1,var2,var3)
print(var1+var2+var3 -var4-var5)








-- ERROR:
File "XXXX", line 9
    var5(min(var1,var2,var3)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:16:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

var4(max (var1,var2,var3)
var5(min (var1,var2,var3)
print(var1+var2+var3 -var4-var5)








-- ERROR:
File "XXXX", line 9
    var5(min (var1,var2,var3)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:17:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

var4(max (var1,var2,var3)
var5(min (var1,var2,var3)









-- ERROR:
File "XXXX", line 9
    var5(min (var1,var2,var3)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:18:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3)
print(min (var1,var2,var3)









-- ERROR:
File "XXXX", line 9
    print(min (var1,var2,var3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:18:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))









-- OUTPUT:
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:19:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
print(var1+var2+var3-(max+min))









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(var1+var2+var3-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:20:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
print(var1,var2,var3 -max-min)









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(var1,var2,var3 -max-min)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:20:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
print(var1+var2+var3-max-min)









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(var1+var2+var3-max-min)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:21:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
int(var1+var2+var3-max-min)









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    int(var1+var2+var3-max-min)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:33:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
int(var1+var2+var3-(print(max (var1,var2,var3))-(print(min (var1,var2,var3)))









-- ERROR:
File "XXXX", line 19
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:34:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
int(var1+var2+var3-(print(max (var1,var2,var3)))-(print(min (var1,var2,var3))))









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    int(var1+var2+var3-(print(max (var1,var2,var3)))-(print(min (var1,var2,var3))))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:34:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1/var2/var3))
print(min (var1/var2/var3))
int(var1+var2+var3-(print(max (var1/var2/var3)))-(print(min (var1/var2/var3))))









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(max (var1/var2/var3))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:37:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input("numero"))
var2= int(input("numero"))
var3= int(input("numero"))

print(max (var1,var2,var3))
print(min (var1,var2,var3))
print(int(var1+var2+var3-(print(max (var1,var2,var3)))-(print(min (var1,var2,var3)))))









-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(int(var1+var2+var3-(print(max (var1,var2,var3)))-(print(min (var1,var2,var3)))))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:47:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input())
var2= int(input())
var3= int(input())
			 
F= (max (var1,var2,var3))
G= (min (var1,var2,var3))
A= ((var1 + var2 + var3) - (F + G))
print(A)









-- EXECUTION TIME:
0.121724
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 19:48:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= int(input())
var2= int(input())
var3= int(input())
			 
F= (max (var1,var2,var3))
G= (min (var1,var2,var3))
A= ((var1 + var2 + var3) - (F + G))
print(G)
print(A)
print(F)









-- EXECUTION TIME:
0.131849
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
