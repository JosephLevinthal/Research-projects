== TEST (2019-04-28 18:02:34) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,","h,",",r)

from math import*
#volume de calota
if(H>0) and ()
-- ERROR:
File "XXXX", line 9
    print("Entradas:",H,","h,",",r)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:02:59) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h",",r)

from math import*
#volume de calota
if(H>0) and ()
-- ERROR:
File "XXXX", line 9
    print("Entradas:",H,",",h",",r)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:03:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if(H>0) and ()
-- ERROR:
File "XXXX", line 13
    if(H>0) and ()
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:04:24) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
-- ERROR:
File "XXXX", line 14
    
                                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:05:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
-- ERROR:
File "XXXX", line 14
    
                                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:05:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
-- EXECUTION TIME:
0.137009
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 14
    
                                                ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:05:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
-- ERROR:
File "XXXX", line 14
    
                                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:08:46) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:", (round((vol*1000), 3)), "litros")
			  
-- ERROR:
File "XXXX", line 16
    print("Volume:", (round((vol*1000), 3)), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:09:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
			  
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:10:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)), "litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:12:00) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:15:01) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)

-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:17:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:22:27) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)), "litro"))
-- EXECUTION TIME:
0.187472
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:22:30) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)), "litro"))
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:22:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro"))
-- EXECUTION TIME:
0.215196
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:22:40) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro"))
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:22:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- EXECUTION TIME:
0.149618
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:22:48) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:23:07) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:23:21) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 16
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:23:50) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:24:46) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:24:49) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- EXECUTION TIME:
0.127668
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:25:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
if(h==r):
	vol=((4/3*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- EXECUTION TIME:
0.134872
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 9
    if(h==r):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:25:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
if(h==r):
	vol=((4/3*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 9
    if(h==r):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:25:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
	vol=((4/3*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 10
    vol=((4/3*pi*(r**3))/2
                         ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:25:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
	vol=((4/3)*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 10
    vol=((4/3)*pi*(r**3))/2
                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:26:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
	vol=((4/3)*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- EXECUTION TIME:
0.159851
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 10
    vol=((4/3)*pi*(r**3))/2
                          ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:26:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
	vol=((4/3)*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 10
    vol=((4/3)*pi*(r**3))/2
                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:26:23) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
	print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:26:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 16
    elif(h==H-r):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:26:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
 elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 16
    elif(h==H-r):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 17
    vol=round(((pi*(**2)*(H-2*r))(2/3)*pi*(r**3)),3)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:27:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 25
    
                                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:27:31) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
-- ERROR:
File "XXXX", line 25
    
                                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:28:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:29:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")


else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:29:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")


else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 22
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:48:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")


else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 22
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:48:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")
 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")


else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 22
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:50:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:51:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:51:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.125024
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.188033
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.141445
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.178646
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.173053
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.139565
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.0958891
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.144156
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.107634
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.230404
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.195066
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.238132
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.241541
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:51:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

 else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:51:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

  else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

  else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

  else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

  else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.174272
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:51:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

  else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

  else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.149588
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:51:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

  else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

  else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:52:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

  else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

 else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:52:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

 else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:52:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:52:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:52:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.133143
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.125481
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.112765
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.191167
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.141219
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.113369
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.184243
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.217014
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.334447
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.29581
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:53:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
			
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.44154
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:53:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:54:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

 else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:54:17) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:54:23) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.161907
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.166879
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.0953162
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.129197
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.159735
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.1953
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.12545
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.215895
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.244628
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.371907
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.314709
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.379194
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.269008
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.400777
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.334064
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:54:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")
else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.326699
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:55:49) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.175245
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.173324
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.173715
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.16809
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.136395
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.123909
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.113173
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.104406
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.158961
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.130867
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.241542
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.338115
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:55:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.315776
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:57:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("Nivel de conbustivel no tanque:"))
r=float(input("Raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:58:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
 if(h==r):
   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:59:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
if(h==r):
	vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 9
    if(h==r):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 18:59:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
if(h==r):
	vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.158982
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 9
    if(h==r):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 18:59:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 10
    vol=((4/3)*pi*(r**3))/2
                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:00:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.13219
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:00:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
   print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	vol=(pi/3)*(h**2)*(3*r-h)
	print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:01:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:01:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:02:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:03:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:04:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:05:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:05:46) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:05:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
      print("Volume:",(round((vol*1000),3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000),3)),"litros")
                                                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:07:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:07:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.158662
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:08:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.150509
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:08:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.129949
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:08:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.180592
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:08:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:08:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
	   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- EXECUTION TIME:
0.166167
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 11
    print("Volume:",(round((vol*1000), 3)),"litros")
                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:08:15) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
   vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 10
    vol=((4/3)*pi*(r**3))/2
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:08:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
   if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
	   vol=(pi/3)*(h**2)*(3*r-h)
	   print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 10
    vol=((4/3)*pi*(r**3))/2
                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:11:17) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
   elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
elif(h==H-r):
   vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
   print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 12
    elif(h<r):
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:14:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
  #volume da esfera e o volume do cilindro!
   elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
elif(h<H-r and h>r):
   vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
   print("Volume:",(round((vol*1000), 3)), "litros")

else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 16
    elif(h==H-r):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:16:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
   vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
   print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 24
    vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
                                                                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:16:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:17:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:17:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

	else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:17:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

	else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.252636
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:17:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

	else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:19:17) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:19:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.156046
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.122714
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:37) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.113647
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.168641
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.153576
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.113249
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.16842
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.143601
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.195942
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.176566
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

 else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.286511
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:19:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

	else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:19:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

	else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.136767
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:20:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:22:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:22:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Entradas invalidas")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:23:07) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:25:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:25:24) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:26:18) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:26:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:

		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 28
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:27:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:

		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:

		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 28
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:27:13) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:28:49) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.209963
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:28:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.137146
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:28:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:29:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")


		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 28
    print("Entradas invalidas")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:29:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    print("Entradas invalidas")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:29:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")

		print("Entradas invalidas")
-- EXECUTION TIME:
0.187774
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    print("Entradas invalidas")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:29:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:30:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	elif:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:30:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:30:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.176192
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:30:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:32:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- EXECUTION TIME:
0.203754
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 26
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:32:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:33:23) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:33:24) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:33:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:33:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
   else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:33:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
   else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:35:44) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
   else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
   else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:35:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
   else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 23
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:38:38) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:38:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 26
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:40:18) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:40:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:41:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
	else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:41:08) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
	else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.146959
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:41:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.192369
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:41:21) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:41:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.213378
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:41:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:42:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
 else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:42:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
 else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.1798
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:43:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
 else:
	 print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:44:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
 else:
	 print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 19:44:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
 else:
	 print("Entradas invalidas")
-- EXECUTION TIME:
0.176552
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:44:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
 print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 19:47:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro")
	  
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:09:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:31) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.209413
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.165553
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.193104
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.330923
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.351453
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.20552
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.343796
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:09:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.184175
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:09:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:10:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.139437
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:10:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.130184
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:10:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.129859
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:10:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.139576
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:10:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.135006
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:08) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.152091
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.160473
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.185976
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.112334
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.168686
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:11:10) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.101179
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:11:11) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:11:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:12:08) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:12:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.140029
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:12:48) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
	else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.128275
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:12:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.132341
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:15:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.124939
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:15:16) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:15:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)), "litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.111808
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:22:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:22:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.140114
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.135696
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.160214
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.130402
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:40) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.110561
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.148425
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.0794089
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:41) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.122512
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.15964
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.264073
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.272671
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:42) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.238708
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.251703
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.299888
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.3319
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:24:43) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.353339
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.143536
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.240875
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.134153
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.219263
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.165823
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.205782
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.186549
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:52) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.229669
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.251579
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.100626
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.39454
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:53) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.238169
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.314698
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.22546
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.357654
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.373051
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.420546
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Altura total do tanque:nivel de conbustivel no tanque:raio inferior e superior:Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:26:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.235305
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:27:49) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.191713
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 6
    elif
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:27:49) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 6
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:27:49) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.156287
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 6
    elif
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:27:49) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 6
    elif
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:27:50) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.182286
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 6
    elif
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:27:50) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.368094
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 6
    elif
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:27:50) 
-- CODE:

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.320319
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:29:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.163937
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:29:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:29:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.153944
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:29:20) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.152961
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:29:25) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:29:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.137266
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:30:54) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:30:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.255042
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:30:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
	  
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.151683
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:31:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
		else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.160226
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:32:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
		else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:32:09) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
	else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:12) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
	else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.173471
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:32:16) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:18) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))
		
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.139742
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:32:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:32) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.115437
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.138406
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.128595
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	
	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.195132
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:32:50) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.133271
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:33:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.130897
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:33:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.212486
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 20:33:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 20:33:18) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.116677
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:20:27) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.217883
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:20:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:20:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.189402
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:20:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.204786
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:20:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.241782
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:20:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.366213
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:55) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.219927
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:56) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.253904
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.281604
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.225257
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.396234
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.586426
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.659043
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.605213
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:58) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.374373
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.509815
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:27:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.606018
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.494866
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.518692
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.438878
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:00) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.757334
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.705311
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.624888
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.479752
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:01) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.66254
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.741171
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.450432
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.492234
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.530559
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.345589
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:03) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.34288
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.681699
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.67958
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.523457
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:04) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.734056
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.559573
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.807619
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.59875
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 11.3 , 5.7 , 2.3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:05) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.358271
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.344317
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.394724
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:06) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.346903
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:

-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:14) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.200061
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:30) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.178485
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.231919
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:34) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.355965
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:28:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:28:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- ERROR:
File "XXXX", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:35) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.209658
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.323381
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.526636
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.369039
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.495635
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:36) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

   else:
	   print("Entradas invalidas")
-- EXECUTION TIME:
0.758025
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 27
    else:
        ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:28:50) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:  print("Entradas invalidas")
-- EXECUTION TIME:
0.167111
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:28:59) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:29:02) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	
	print("Entradas invalidas")
-- EXECUTION TIME:
0.155343
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:29:33) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.159585
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:29:39) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:30:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:30:22) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.14333
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:30:26) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.136693
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:30:28) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.151913
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:30:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.208442
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:30:29) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de conbustivel no tanque:"))
r=float(input("raio inferior e superior:"))
print("Entradas:",H,",",h,",",r)

from math import*
#volume de calota
if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
#volume da esfera e o volume do cilindro!
	elif(h==H-r):
		vol=round(((pi*(r**2)*(H-2*r))+(2/3)*pi*(r**3)),3)
		print("Volume:",(vol*1000),"litros")
	elif(h<H-r and h>r):  
		vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")

	else:
		vol=pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000, 3)),"litro"))

else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.189702
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1102/main.py", line 20, in <module>
    vol=pi*(r**2)*(h-r)+((4/3)*pi(r**3))/2
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
