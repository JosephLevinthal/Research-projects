== TEST (2019-04-24 19:03:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
consumo = input("Digite uma faixa: ")
inst = input("tp?  (R/I/C)")
print("Entradas:", consumo "kWh e tipo " tp )

if()
-- ERROR:
File "XXXX", line 6
    print("Entradas:", consumo "kWh e tipo " tp )
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:03:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
consumo = input("Digite uma faixa: ")
inst = input("tp?  (R/I/C)")
print("Entradas:", consumo "kWh e tipo ", tp )

if()
-- ERROR:
File "XXXX", line 6
    print("Entradas:", consumo "kWh e tipo ", tp )
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:04:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
consumo = input("Digite uma faixa: ")
inst = input("tp?  (R/I/C)")
print("Entradas:", consumo "kWh e tipo ", tp)

if()
-- ERROR:
File "XXXX", line 6
    print("Entradas:", consumo "kWh e tipo ", tp)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:05:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
consumo = input("Digite uma faixa: ")
inst = input("tp?  (R/I/C)")
print("Entradas:", consumo "kWh e tipo " , tp)

if()
-- ERROR:
File "XXXX", line 6
    print("Entradas:", consumo "kWh e tipo " , tp)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:05:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
consumo = input("Digite uma faixa: ")
inst = input("tp?  (R/I/C)")
print("Entradas:", consumo "kWh" "e" "tipo " , tp)

if()
-- ERROR:
File "XXXX", line 6
    print("Entradas:", consumo "kWh" "e" "tipo " , tp)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:22:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", consumo "kWh e tipo " , tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif ((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 6
    print("Entradas: ", consumo "kWh e tipo " , tipo)
                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:23:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif ((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif ((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif ((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:25:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:35:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo) 

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:36:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo) 

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 00:37:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = input("tp?  (R/I/C)")
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:53:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = (input("tp de instalacao: "))
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2)
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
File "XXXX", line 13
    elif((tipo == "R") and (csm>500)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:54:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = (input("tp de instalacao: "))
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo!= "C")):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:55:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = (input("tp de instalacao: "))
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo != "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if((csm<0) or (tipo !="R") and (tipo != "I") and (tipo != "C")):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 11:55:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
csm = input("Digite consumo: ")
tipo = (input("tp de instalacao: "))
print("Entradas: ", csm, "kWh e tipo ", tipo)

if((csm<0) or (tipo != "R") and (tipo != "I") and (tipo != "C")):
	print("Dados invalidos")
elif((tipo == "R") and (csm<=500)):
	csmtotal = csm * 0.44
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "R") and (csm>500)):
	csmtotal = csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm>=5000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "I") and (csm <5000)):
	csmtotal == csm * 0.60
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm>=1000)):
	csmtotal == csm * 0.55
	print("Valor total: R$ ", round(csmtotal,2))
elif((tipo == "C") and (csm<1000)):
	csmtotal == csm * 0.60
	
			
	
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if((csm<0) or (tipo != "R") and (tipo != "I") and (tipo != "C")):
TypeError: '<' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:09:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:09:33) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- EXECUTION TIME:
0.121746
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:12:51) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:12:54) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- EXECUTION TIME:
0.185092
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:12:56) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:13:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:13:38) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))


-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:15:19) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))

-- EXECUTION TIME:
0.122121
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:15:25) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:15:28) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
    print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- EXECUTION TIME:
0.155093
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:15:44) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- EXECUTION TIME:
0.137986
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:16:17) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:16:20) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- EXECUTION TIME:
0.149382
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:20:42) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- EXECUTION TIME:
0.216958
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:20:44) 
-- CODE:
ce = float(input("Digite o consumo de energia: "))
ti = (input("Tipo de instalacao:"))
print("Entradas: ", ce, "kWh e tipo",  ti)

if ((ce<0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce<=500)):
   consumo_total = ce * 0.44
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "R") and (ce>500)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce<=5000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "I") and (ce>5000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce<=1000)):
   consumo_total = ce * 0.55
   print("Valor total: R$ ", round(consumo_total, 2))
elif ((ti == "C") and (ce>1000)):
   consumo_total = ce * 0.60
   print("Valor total: R$ ", round(consumo_total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:28:45) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:28:57) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- EXECUTION TIME:
0.104263
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:29:03) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:29:14) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- EXECUTION TIME:
0.15799
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$  525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:43:30) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:44:32) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$ ", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$ ", round(total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:46:54) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$", round(total, 2))
-- OUTPUT:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 12:47:04) 
-- CODE:
ce = float(input("digite: "))
ti = input("digite: ")
print("Entradas: ", ce, "kWh e tipo", ti)

if ((ce < 0) or (ti != "R") and (ti != "I") and (ti != "C")):
	print("Dados invalidos")
elif ((ti == "R") and (ce <= 500)):
	total = ce * 0.44
	print("Valor total: R$", round(total, 2))
elif ((ti == "R") and (ce > 500)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "I") and (ce <= 5000)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "R") and (ce > 5000)):
	total = ce * 0.60
	print("Valor total: R$", round(total, 2))
elif ((ti == "C") and (ce <= 1000)):
	total = ce * 0.55
	print("Valor total: R$", round(total, 2))
elif ((ti == "C") and (ce > 1000)):
	total = ce * 0.60
	print("Valor total: R$", round(total, 2))
-- EXECUTION TIME:
0.210372
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo R
Valor total: R$ 525.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:09:44) 
-- CODE:
ce = float(input(""))
y = input("")
print("Entradas:", ce, "kWh e tipo", y)

if ((ce < 0) or (y != "R") and (y != "I") and (y != "C")):
	print("Dados invalidos")
elif ((y == "R") and (ce <= 500)):
	conta = ce * 0.44
	print("Valor total: R$", round(conta, 2))
elif ((y == "R") and (ce > 500)):
	conta = ce * 0.65
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce <= 5000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce > 5000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce <= 1000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce > 1000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:09:57) 
-- CODE:
ce = float(input(""))
y = input("")
print("Entradas:", ce, "kWh e tipo", y)

if ((ce < 0) or (y != "R") and (y != "I") and (y != "C")):
	print("Dados invalidos")
elif ((y == "R") and (ce <= 500)):
	conta = ce * 0.44
	print("Valor total: R$", round(conta, 2))
elif ((y == "R") and (ce > 500)):
	conta = ce * 0.65
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce <= 5000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "I") and (ce > 5000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce <= 1000)):
	conta = ce * 0.55
	print("Valor total: R$", round(conta, 2))
elif ((y == "C") and (ce > 1000)):
	conta = ce * 0.60
	print("Valor total: R$", round(conta, 2))
-- EXECUTION TIME:
0.235877
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
