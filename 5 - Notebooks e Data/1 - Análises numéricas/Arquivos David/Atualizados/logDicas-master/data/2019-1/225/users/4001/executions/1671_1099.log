== TEST (2019-04-18 13:41:12) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("invalido")
elif (L == L2) and (L2 == L3):
	print("equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("isosceles")
else:
	print("escaleno")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 13:41:28) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("invalido")
elif (L == L2) and (L2 == L3):
	print("equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("isosceles")
else:
	print("escaleno")
-- EXECUTION TIME:
0.14112
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:43:38) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("invalido")
elif (L == L2) and (L2 == L3):
	print("equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("isosceles")
else:
	print("escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:45:50) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L"," L2"," L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", L"," L2"," L3 )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:46:07) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L",", L2",", L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", L",", L2",", L3 )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:46:33) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 13:46:38) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- EXECUTION TIME:
0.187185
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:46:42) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) and (L2 >= L + L3) and (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:48:33) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:49:06) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L + " , " , L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("Entradas: ", L + " , " , L2, L3 )
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:58:14) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 13:59:00) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 14:00:03) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 14:00:11) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 14:00:14) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- EXECUTION TIME:
0.124373
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 14:00:55) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L',', L2, L3 )
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- EXECUTION TIME:
0.151393
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 5
    print("Entradas: ", L',', L2, L3 )
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:25:48) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L) and (", ", L2) and (", ", L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:26:24) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print(("Entradas: ", L) and (", ", L2) and (", ", L3))
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
(', ', 4.0)
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:27:33) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print(("Entradas: ", L) and (, L2) and (, L3))
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print(("Entradas: ", L) and (, L2) and (, L3))
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:27:57) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print(("Entradas: ", L) and ("," L2) and ("," L3))
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print(("Entradas: ", L) and ("," L2) and ("," L3))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:28:16) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:28:43) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L"," L2"," L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", L"," L2"," L3)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 15:28:44) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L"," L2"," L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- EXECUTION TIME:
0.136989
-- ERROR:
  File "/home/codebench/codes/1671/1099/main.py", line 5
    print("Entradas: ", L"," L2"," L3)
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:28:45) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L"," L2"," L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- ERROR:
File "XXXX", line 5
    print("Entradas: ", L"," L2"," L3)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 15:28:59) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L, L2, L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 13:58:23) 
-- CODE:
# Entradas
L = float(input("Lado 1: "))
L2 = float(input("Lado 2: "))
L3 = float(input("Lado 3: "))
print("Entradas: ", L,",", L2,",", L3)
# Condicoes
if (L >= L2 + L3) or (L2 >= L + L3) or (L3 >= L + L2):
	print("Tipo de triangulo: invalido")
elif (L == L2) and (L2 == L3):
	print("Tipo de triangulo: equilatero")
elif (L == L2) or (L == L3) or (L2 == L3):
	print("Tipo de triangulo: isosceles")
else:
	print("Tipo de triangulo: escaleno")
	
-- EXECUTION TIME:
0.181391
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
