== TEST (2019-04-08 15:07:27) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
if(preco>pagamento):
	mensagem = falta (preco - pagamento)
else:
	mensagem = troco (pagamento - preco)
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem = falta (preco - pagamento)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:08:29) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco>pagamento):
	mensagem = falta X
else:
	mensagem = troco Y
print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = falta X
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:08:42) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco>pagamento):
	mensagem = "falta X"
else:
	mensagem = "troco Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:08:59) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco>pagamento):
	mensagem = "falta X"
else:
	mensagem = "troco Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:09:04) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco>pagamento):
	mensagem = "falta X"
else:
	mensagem = "troco Y"
print(mensagem)
-- EXECUTION TIME:
0.157037
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco Y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco Y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:13:07) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
if(preco>pagamento):
	mensagem = falta A - B
else:
	mensagem = troco B - A
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 4
    mensagem = falta A - B
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:14:02) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(preco>pagamento):
	mensagem = falta X
else:
	mensagem = troco de Y
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 6
    mensagem = falta X
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:14:11) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(preco>pagamento):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:14:54) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(round(mensagem, 2)
-- ERROR:
File "XXXX", line 10
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:15:15) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:15:50) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:16:12) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:16:21) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "falta X"
else:
	mensagem = "troco de Y"
print(mensagem)
-- OUTPUT:
falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:19:06) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	valor = (falta = A - B)
else:
	valor = (troco = B -A)
print(round(valor, 2)
-- ERROR:
File "XXXX", line 6
    valor = (falta = A - B)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:33:29) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "troco de "
print(mensagem, round(Y, 2))
-- OUTPUT:
Falta 26.0
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:33:40) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A>B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.178174
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:34:20) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.139526
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:34:23) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "troco de "
print(mensagem, round(Y, 2))
-- OUTPUT:
Falta 26.0
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:34:30) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.126817
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:34:37) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- OUTPUT:
Falta 26.0
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:34:45) 
-- CODE:
A = float(input("digite o preco: "))
B = float(input("digite o pagamento :"))
X = A - B
Y = B - A
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.143989
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:35:51) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(A > B):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(A > B):
NameError: name 'A' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:36:13) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco > pagamento ):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.140055
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:36:14) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco > pagamento ):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- OUTPUT:
Falta 26.0
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:36:22) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento :"))
X = preco - pagamento
Y = pagamento - preco
if(preco > pagamento ):
	mensagem = "Falta"
	print(mensagem, round(X,2))
else:
	mensagem = "Troco de "
print(mensagem, round(Y, 2))
-- EXECUTION TIME:
0.131661
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:37:24) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))
X = preco - pagamento
Y = pagamento - preco
if(preco > pagamento ):
	mensagem = "Falta "
	print(mensagem, round (X,2))
else:
	mensagem = "Troco de "
   print(mensagem, round (Y, 2))
-- ERROR:
File "XXXX", line 10
    print(mensagem, round (Y, 2))
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:38:17) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))
X = preco - pagamento
Y = pagamento - preco
if(preco > pagamento ):
	mensagem = " Falta "
	print(mensagem, round (X,2))
else:
	mensagem = "Troco de "
   print(mensagem, round (Y, 2))
-- ERROR:
File "XXXX", line 10
    print(mensagem, round (Y, 2))
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:38:43) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))
x = preco - pagamento
y = pagamento - preco
if(preco > pagamento ):
	mensagem = " Falta "
	print(mensagem, round (x, 2))
else:
	mensagem = "Troco de "
   print(mensagem, round (y, 2))
-- ERROR:
File "XXXX", line 10
    print(mensagem, round (y, 2))
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:39:21) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = " Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = "Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:39:44) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = " Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:40:38) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:40:44) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:40:45) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- EXECUTION TIME:
0.139818
-- ERROR:
  File "/home/codebench/codes/1635/2447/main.py", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:41:28) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:42:15) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
   print(mensagem, round(y, 2))
-- ERROR:
File "XXXX", line 11
    print(mensagem, round(y, 2))
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:43:14) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
	print(mensagem, round(y, 2))
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:43:21) 
-- CODE:
preco = float(input("digite o preco: "))
pagamento = float(input("digite o pagamento: "))

x = preco - pagamento
y = pagamento - preco
if(preco > pagamento):
	mensagem = "Falta "
	print(mensagem, round(x, 2))
else:
	mensagem = " Troco de "
	print(mensagem, round(y, 2))
-- EXECUTION TIME:
0.131806
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
