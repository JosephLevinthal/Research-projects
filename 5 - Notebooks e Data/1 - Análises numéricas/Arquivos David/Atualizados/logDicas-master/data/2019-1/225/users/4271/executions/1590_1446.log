== TEST (2019-03-27 15:11:52) 
-- CODE:
var = input(quantos litros)
print(var)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(quantos litros)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:12:09) 
-- CODE:
var = input(quantos litros?)
print(var)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(quantos litros?)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:12:33) 
-- CODE:
var = input(2//3)
print(var)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
07
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:12:37) 
-- CODE:
var = input(2//3)
print(var)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.108719
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
07
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
020.0
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
015
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:13:47) 
-- CODE:
var = input(10.0)
print(3.333)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:13:49) 
-- CODE:
var = input(10.0)
print(3.333)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.130087
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
10.03.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
10.03.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.03.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:13:50) 
-- CODE:
var = input(10.0)
print(3.333)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:13:50) 
-- CODE:
var = input(10.0)
print(3.333)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:13:50) 
-- CODE:
var = input(10.0)
print(3.333)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:14:00) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
103
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:14:01) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
103
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:14:01) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
103
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:14:01) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.120999
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
103
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
103
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
103
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:14:02) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.130648
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
103
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
103
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
103
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:14:02) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.171042
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1590/1446/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:14:02) 
-- CODE:
var = input(10)
print(3)
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.157904
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
103
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
103
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
103
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:09) 
-- CODE:
var = input(10)
print(round(3.333,2))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
103.33
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:22) 
-- CODE:
var = input(12//3)
print(round(3.333,2))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
43.33
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:23) 
-- CODE:
var = input(12//3)
print(round(3.333,2))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
43.33
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:15:25) 
-- CODE:
var = input(12//3)
print(round(3.333,2))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.183701
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
43.33
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
43.33
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
43.33
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:26) 
-- CODE:
var = input(12//3)
print(round(3.333,2))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
43.33
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:39) 
-- CODE:
var = input(12//3)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
43.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:15:49) 
-- CODE:
var = input(2//3)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:15:51) 
-- CODE:
var = input(2//3)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.174526
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
03.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
03.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
03.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:16:06) 
-- CODE:
var = input(2\\3)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(2\\3)
                    ^
SyntaxError: unexpected character after line continuation character
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:16:43) 
-- CODE:
var = input(2\\3))
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(2\\3))
                     ^
SyntaxError: unexpected character after line continuation character
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:17:21) 
-- CODE:
var = input(quantos litros)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(quantos litros)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:37) 
-- CODE:
var = input(quantos litros?)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    var = input(quantos litros?)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:49) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:51) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:52) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:52) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:52) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:52) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:52) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:53) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:54) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:18:56) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:19:08) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:19:12) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.142198
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
10.03.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
10.03.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.03.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:19:16) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.229836
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
10.03.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
10.03.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.03.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:19:19) 
-- CODE:
var = input(10.0)
print(round(3.333,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10.03.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:20:29) 
-- CODE:
var = input(3.5)
print(round(3.5,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
3.53.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 15:20:30) 
-- CODE:
var = input(3.5)
print(round(3.5,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
3.53.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 15:20:32) 
-- CODE:
var = input(3.5)
print(round(3.5,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.127832
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.53.5
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
3.53.5
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
3.53.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:13:38) 
-- CODE:
var = input(3.5)
print(round(3.5,3))
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
3.53.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:45:44) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 /3 * litro)
print("%.3f" % var)
-- ERROR:
File "XXXX", line 2
    var = (1 /3 * litro)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:45:45) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 /3 * litro)
print("%.3f" % var)
-- EXECUTION TIME:
0.131167
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 2
    var = (1 /3 * litro)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:45:52) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- ERROR:
File "XXXX", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:45:53) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- EXECUTION TIME:
0.13459
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:45:59) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- ERROR:
File "XXXX", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:46:01) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- EXECUTION TIME:
0.129601
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:46:21) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 \ 3 * litro)
print("%.3f" % var)
-- ERROR:
File "XXXX", line 2
    var = (1 \ 3 * litro)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:46:22) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 \ 3 * litro)
print("%.3f" % var)
-- EXECUTION TIME:
0.152495
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 2
    var = (1 \ 3 * litro)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:46:26) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- ERROR:
File "XXXX", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:46:26) 
-- CODE:
litro = float(input("quantos litros?")
var = (1 / 3 * litro)
print("%.3f" % var)
-- EXECUTION TIME:
0.175337
-- ERROR:
  File "/home/codebench/codes/1590/1446/main.py", line 2
    var = (1 / 3 * litro)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:47:26) 
-- CODE:
litro = float(input("quantos litros?"))
var = (1 / 3 * litro)
print(round(var, 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:47:34) 
-- CODE:
litro = float(input("quantos litros?"))
var = (1 / 3 * litro)
print(round(var, 3))
-- EXECUTION TIME:
0.230712
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
