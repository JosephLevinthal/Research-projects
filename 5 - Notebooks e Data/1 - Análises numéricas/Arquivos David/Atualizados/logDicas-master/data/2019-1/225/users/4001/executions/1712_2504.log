== TEST (2019-05-13 23:14:53) 
-- CODE:
qv = int(input("Qtd. inicial do virus: "))
ql = int(input("Qtd. inicial do leucocitos: "))
pv = float(input("Percentual do virus: "))
pl = float(input("Percentual dos leucocitos: "))
t = 0 
while (ql <= 2 * qv):
	qv = qv * pv/100
	t = t + 1
	ql = ql * pl/100
print(t)
	
	
	
	
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 23:18:54) 
-- CODE:
qv = int(input("Qtd. inicial do virus: "))
ql = int(input("Qtd. inicial do leucocitos: "))
pv = float(input("Percentual do virus: "))
pl = float(input("Percentual dos leucocitos: "))
t = 0 
while (ql <= 2 * qv):
	qv = qv * pv/100
	t = t + 1
	ql = ql * pl/100
print(t)
	
	
	
	
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 23:21:26) 
-- CODE:
qv = int(input("Qtd. inicial do virus: "))
ql = int(input("Qtd. inicial do leucocitos: "))
pv = float(input("Percentual do virus: "))
pl = float(input("Percentual dos leucocitos: "))
t = 0 
while (ql <=  qv):
	qv = qv * pv/100
	t = t + 1
	ql = ql * pl/100

print(t)
	
	
	
	
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 12:20:16) 
-- CODE:
qv = int(input("Qtd. inicial do virus: "))
ql = int(input("Qtd. inicial do leucocitos: "))
pv = float(input("Percentual do virus: "))
pl = float(input("Percentual dos leucocitos: "))
t = 0 
while (ql < 2 * qv):
	q = qv * pv/100
	qv = qv + q
	q2 = ql * pl/100
	ql = ql + q2
	t = t + 1
	if (ql >= 2 * qv):
		print(t)
	
	
	
	
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 12:20:31) 
-- CODE:
qv = int(input("Qtd. inicial do virus: "))
ql = int(input("Qtd. inicial do leucocitos: "))
pv = float(input("Percentual do virus: "))
pl = float(input("Percentual dos leucocitos: "))
t = 0 
while (ql < 2 * qv):
	q = qv * pv/100
	qv = qv + q
	q2 = ql * pl/100
	ql = ql + q2
	t = t + 1
	if (ql >= 2 * qv):
		print(t)
	
	
	
	
-- EXECUTION TIME:
0.20091
-- TEST CASE 1:
---- input:
350625
5500
2
75
---- correct output:
9
---- user output:
9
-- TEST CASE 2:
---- input:
650090
90045
4
90
---- correct output:
5
---- user output:
5
-- TEST CASE 3:
---- input:
419250
1725
9
59
---- correct output:
17
---- user output:
17
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
