== TEST (2019-04-14 20:02:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*(sin*2*a) / g 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*(sin*2*a) / g 
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:10:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if (r <= 0.1)
	mensagem = "sim"
	print(mensagem)
else
	mensagem = "nao"
	print(mensagem)
-- ERROR:
File "XXXX", line 11
    if (r <= 0.1)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:10:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if (r <= 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:10:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if (r <= 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
-- EXECUTION TIME:
0.164358
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:11:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if (r <= 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:16:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:16:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
-- EXECUTION TIME:
0.195638
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:20:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = (float(input("v0: ")))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.206798
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:23:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:23:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.233694
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:24:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.191854
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:24:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.163953
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:25:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) // 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) // 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:25:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) // 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.174623
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) // 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:26:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.14476
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:26:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be an iterable, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:26:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(*2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.219994
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 9, in <module>
    r = (v0**2)*sin(*2*a) / 9.8
TypeError: sin() argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:34:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:34:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0 = float(input("v0: "))
a = radians(float(input("a: ")))
d = float(input("d: "))

r = (v0**2)*sin(2*a) / 9.8

if abs(d-r) <= 0.1:
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.160196
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
