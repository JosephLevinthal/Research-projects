== TEST (2019-04-08 15:54:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(digite o numero ))
y = float (input(digite o numero))
-- ERROR:
File "XXXX", line 4
    x = float(input(digite o numero ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:37:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input(digite o numero ))
y = float (input(digite o numero ))
-- ERROR:
File "XXXX", line 4
    x = float(input(digite o numero ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:38:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))
-- ERROR:
File "XXXX", line 4
    x = float(input(digite o numero ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:45:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))
if x = 1
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 6
    if x = 1
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))
if x = 1
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 6
    if x = 1
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))
if x = 1
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 6
    if x = 1
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))
if x = 1
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 6
    if x = 1
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))

if x = 1
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 7
    if x = 1
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))

if x = 1:
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 7
    if x = 1:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:47:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o numero "))
y = float (input("digite o numero "))

if x = float(input(1)):
	mensagem = " ponto pertence a reta"
else :
	menssagem = " ponto nao pertence a reta"
print (mensagem)
-- ERROR:
File "XXXX", line 7
    if x = float(input(1)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:47:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

-- ERROR:
File "XXXX", line 7
    if x = float(input(1)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:36) 
-- CODE:
var1 = float(input(digite um numero))
	var1 == var1
if x = 2*x + y == 3:
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if y = 2*x + y == 3
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 1
    var1 = float(input(digite um numero))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:51) 
-- CODE:
var1 = float(input("digite um numero"))
	var1 == var1
if x = 2*x + y == 3:
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if y = 2*x + y == 3
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 2
    var1 == var1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:08) 
-- CODE:
var1 = float(input("digite um numero"))
	var1 == (var1)
if x = 2*x + y == 3:
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if y = 2*x + y == 3
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 2
    var1 == (var1)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:26) 
-- CODE:
var1 = float(input("digite um numero"))

if x = 2*x + y == 3:
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if y = 2*x + y == 3
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 3
    if x = 2*x + y == 3:
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:15) 
-- CODE:
var1 = float(input("digite um numero"))

if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if y = 2*x + y == 3
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 8
    if y = 2*x + y == 3
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:28) 
-- CODE:
var1 = float(input("digite um numero"))

if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y = 2*x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 8
    if (y = 2*x + y == 3):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:34) 
-- CODE:
var1 = float(input("digite um numero"))

if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (x == 2*x + y == 3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:23:38) 
-- CODE:
var1 = float(input("digite um numero "))

if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (x == 2*x + y == 3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:01) 
-- CODE:
var1 = float(input("digite um numero "))

if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (x == 2*x + y == 3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:00) 
-- CODE:
var1 = float(input("digite um numero "))
var2 = float(input("digite um numero "))
if (x == 2*x + y == 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (x == 2*x + y == 3):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:47) 
-- CODE:
var1 = float(input("digite um numero "))
var2 = float(input("digite um numero "))
if (x == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y = 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 3
    if (x == 2*x + y = 3):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:58) 
-- CODE:
var1 = float(input("digite um numero "))
var2 = float(input("digite um numero "))

if (x == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y = 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x == 2*x + y = 3):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:59) 
-- CODE:
var1 = float(input("digite um numero "))
var2 = float(input("digite um numero "))

if (x == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"

if (y == 2*x + y = 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x == 2*x + y = 3):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:37:58) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (2*x + y = 3):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:42:22) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (2*x + y = 3):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:45:17) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (y == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x == 2*x + y = 3):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:54:32) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (y == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x == 2*x + y = 3):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:55:13) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (y == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y = 3):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:55:48) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
if (y == 2*x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y = 3):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:55:55) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))


	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print (mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:57:39) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2*x + y = 3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y = 3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:57:48) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2 * x + y = 3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2 * x + y = 3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:58:06) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x=2*x+y=3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x=2*x+y=3)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:58:24) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if x=2*x+y=3
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if x=2*x+y=3
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 17:58:37) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if x = 2*x + y = 3
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if x = 2*x + y = 3
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:21:08) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2*x + y)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:21:23) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))


-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:21:30) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))


-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:21:41) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2*x + y = 3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2*x + y = 3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:21:54) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if "x = 2*x + y = 3"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if "x = 2*x + y = 3"
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:22:05) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if x = 2*x + y = 3
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if x = 2*x + y = 3
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:23:00) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2, y = 3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2, y = 3)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:23:20) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if "x = 2, y = 3"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if "x = 2, y = 3"
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:23:48) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x= 2, y=3)
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x= 2, y=3)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:25:06) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:26:29) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:26:51) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:27:01) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:27:09) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:27:25) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- EXECUTION TIME:
0.171711
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:10:17) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x, 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:15:47) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (2*x+y=3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (2*x+y=3):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:16:11) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (2x+y=3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y, 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (2x+y=3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:16:58) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (x = 2):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 4
    if (x = 2):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:17:36) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
File "XXXX", line 8
    if (y = 3):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:17:53) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y = 3)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (float(y = 3)):
TypeError: 'y' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:19:25) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:19:38) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- EXECUTION TIME:
0.124318
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:20:02) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != 2)):
	mensagem = "ponto nao pertence a reta"
else:
	mensagem = "ponto pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:20:13) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != 2)):
	mensagem = "ponto nao pertence a reta"
else:
	mensagem = "ponto pertence a reta"

	
print (mensagem)
-- EXECUTION TIME:
0.116872
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:21:21) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y = 3/1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (float(y = 3/1)):
TypeError: 'y' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:21:44) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y = 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (float(y = 1)):
TypeError: 'y' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:23:20) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:23:33) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- EXECUTION TIME:
0.189141
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:23:48) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:24:13) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:24:32) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x = 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:26:01) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem1 = "ponto pertence a reta"
else:
	mensagem2 = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem3 = "ponto pertence a reta"
else:
	mensagem4 = "ponto nao pertence a reta"

	
print (mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 14, in <module>
    print (mensagem)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:26:29) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:26:57) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
	print (mensagem)
-- EXECUTION TIME:
0.128927
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:27:05) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:27:05) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:27:05) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 1)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:30:55) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
	print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:31:08) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:31:17) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y >= 3/2)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- EXECUTION TIME:
0.146338
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:33:17) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:33:36) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:33:46) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:35:39) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:36:19) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:37:39) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x != y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y != x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:42:50) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x > y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y < x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 11:42:59) 
-- CODE:
x = float(input("digite x "))
y = float(input("digite y "))

if (float(x > y)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
if (float(y < x)):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"

	
print (mensagem)
-- EXECUTION TIME:
0.18173
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
