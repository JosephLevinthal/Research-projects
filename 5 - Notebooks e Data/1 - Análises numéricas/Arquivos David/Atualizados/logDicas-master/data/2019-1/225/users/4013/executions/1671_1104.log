== TEST (2019-04-24 15:40:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:41:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:43:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
	else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 17
    print("Entradas invalidas")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:44:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.133025
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.155335
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
valor de a:valor de b:valor de c:valor de d:Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:44:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:27:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.135329
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:27:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((a < c) and (a < d) or (b < c) and (b < d)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:30:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:15:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c) and (a <= d) or (b >= c) and (b <= d)):
		print("Ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:21:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.266235
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:21:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Nao ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:22:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Nao ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.238872
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:22:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Nao ha intersecao")
	elif((c >= a) and (d <= a) or (c >= b) and (d <= c)):
		print("Ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 12:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Nao ha intersecao")
	elif((a < c) or (d < b)):
		print("Ha intersecao")
else:
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 12:23:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("valor de a:"))
b = float(input("valor de b:"))
c = float(input("valor de c:"))
d = float(input("valor de d:"))
print("Intervalo 1:", a, ",", b)
print("Intervalo 2:", c, ",", d)

if ((b > a) and (d > c)):
	if((a >= c)  or (d >= b)):
		print("Nao ha intersecao")
	elif((a < c) or (d < b)):
		print("Ha intersecao")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.151252
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
