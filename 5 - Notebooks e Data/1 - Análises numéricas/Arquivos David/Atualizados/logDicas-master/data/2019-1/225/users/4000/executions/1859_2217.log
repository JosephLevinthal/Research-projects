== TEST (2019-06-26 14:40:16) 
-- CODE:
from numpy import*
m = array(eval(input()))
for i in range:
	for j in range:
		if i > j:
			x = -1
			print(x)
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:40:50) 
-- CODE:
from numpy import*
m = array(eval(input()))
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:41:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:41:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
			

-- EXECUTION TIME:
1.2865
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    for i in range(shape(m)):
TypeError: 'tuple' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:41:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:44:18) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		
			
			

-- ERROR:
File "XXXX", line 9
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:44:27) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		
			
			

-- ERROR:
File "XXXX", line 9
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:44:27) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		
			
			

-- EXECUTION TIME:
0.754197
-- ERROR:
  File "/home/codebench/codes/1859/2217/main.py", line 9
    
       ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:45:27) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:45:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:45:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
			
		
			
			

-- EXECUTION TIME:
1.09413
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    for i in range(m[i]):
NameError: name 'i' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:51:14) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros((m,m)dtype=int)
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 4
    v = zeros((m,m)dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:52:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros((m,m)dtype=int)
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 4
    v = zeros((m,m)dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:52:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros((m,m)dtype=int)
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
0.881182
-- ERROR:
  File "/home/codebench/codes/1859/2217/main.py", line 4
    v = zeros((m,m)dtype=int)
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:54:54) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros((m,m)dtype=int)
for i in range(m[i]):
	for j in range(m[j]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 4
    v = zeros((m,m)dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:55:54) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros((m,m)dtype=int)
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 4
    v = zeros((m,m)dtype=int)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:56:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m)):
	for j in range(shape(m)):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:57:04) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:57:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:57:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.25494
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    for i in range(shape(m), 4):
TypeError: 'tuple' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:59:45) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:59:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.01884
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    for i in range(shape(m), 4):
TypeError: 'tuple' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:00:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:00:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:00:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 4):
	for j in range(shape(m), 4):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.20912
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    v = zeros(m, dtype = int)
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:07:01) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 3):
	for j in range(shape(m), 3):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:07:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 3):
	for j in range(shape(m), 3):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:07:06) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
v = zeros(m, dtype = int)
for i in range(shape(m), 3):
	for j in range(shape(m), 3):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.19744
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 4, in <module>
    v = zeros(m, dtype = int)
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:13:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (n**2-n) //2
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(v))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:14:05) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			print(x)
v[i,j] = m(min(v))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:15:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			print(x)
v[i][j] = m(min(v))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:15:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:17:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
c=0
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			c = c+1
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:21:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = (m, dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 5
    v = (m, dtype=int)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:21:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2

for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:21:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2

for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.24246
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 12, in <module>
    v[i][j] = m(min(x))
TypeError: 'int' object is not iterable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:23:01) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2

for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:25:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = ((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 5
    v = ((m,m), dtype=int)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:26:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:26:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:26:14) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:26:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- EXECUTION TIME:
1.1722
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1859/2217/main.py", line 5, in <module>
    v = zeros((m,m), dtype=int)
TypeError: only integer scalar arrays can be converted to a scalar index

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:26:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m,m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:27:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (m**2-m) //2
v = zeros((m), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			x = -1
			
			print(x)
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:33:21) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 10
    v[i][j] = m(min(x))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:33:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			
v[i][j] = m(min(x))
print(v)
		
	
			
		
			
			

-- ERROR:
File "XXXX", line 10
    v[i][j] = m(min(x))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:35:30) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[i][j]=-1
			
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:39:48) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			
			
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:40:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			
			
			
z = min(v)
print(z)
		
	
			
		
			
			

-- EXECUTION TIME:
0.98667
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
20.0
---- user output:
0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
11.1
---- user output:
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:40:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:40:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
			
z = min(v)
print(z)
		
	
			
		
			
			

-- EXECUTION TIME:
1.16529
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
20.0
---- user output:
20
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
11.1
---- user output:
11
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:41:30) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:41:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:42:23) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x), dtype=int)
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:42:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x))
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
z = min(v)
print(z)
		
	
			
		
			
			

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 15:42:54) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input()))
c=0
x = (shape(m)[0]**2-shape(m)[0]) //2
v = zeros((x))
for i in range(shape(m)[0]):
	for j in range(shape(m)[1]):
		if i > j:
			v[c]=m[i][j]
			c = c+1
			
z = min(v)
print(z)
		
	
			
		
			
			

-- EXECUTION TIME:
1.10979
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
20.0
---- user output:
20.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.12
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
11.1
---- user output:
11.1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
