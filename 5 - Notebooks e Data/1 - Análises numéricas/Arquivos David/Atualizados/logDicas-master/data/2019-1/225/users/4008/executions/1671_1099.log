== TEST (2019-04-24 14:14:47) 
-- CODE:
n1 = float(input("digite o n1: "))
n2 = float(input("digite o n2: "))
n3 = float(input("digite o n3: "))
print("Entradas: n1, n2, n3")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(a == b) and (c == b) and (a == c):
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:15:21) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: n1, n2, n3")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: n1, n2, n3
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:07) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: a, b, c
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:16:18) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")
-- EXECUTION TIME:
0.138807
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: a, b, c
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: a, b, c
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: a, b, c
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:16:36) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")
-- OUTPUT:
Entradas: a, b, c
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:20:40) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a<0) or (b<0) or (c<0):
	print("invalido")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:

if
	
-- ERROR:
File "XXXX", line 15
    if
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:20:48) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a<0) or (b<0) or (c<0):
	print("invalido")
if(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")



	
-- OUTPUT:
Entradas: a, b, c
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:22:51) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: a, b, c
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:23:00) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas: a, b, c")
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- EXECUTION TIME:
0.146782
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: a, b, c
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: a, b, c
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: a, b, c
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:23:57) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a, b, c)
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- EXECUTION TIME:
0.198329
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:23:57) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a, b, c)
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:24:09) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a, b, c)
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- EXECUTION TIME:
0.164435
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:26:15) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a, b, c)
if(a<=0) or (b<=0) or (c<=0):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	tipo de triangulo = equilatero
elif(a==b) or (a==c) or (c==b):
	tipo de triangulo = isosceles
elif(a!=b) and (b!=c) and (a!=c):
	tipo de triangulo = escaleno
	print(tipo de triangulo)
	else:
	print("invalido")


	
-- ERROR:
File "XXXX", line 8
    tipo de triangulo = equilatero
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:32:56) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a,",", b,",")
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b)
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
	print(tipo de triangulo)
	else:
	print("invalido")


	
-- ERROR:
File "XXXX", line 5
    if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b)
                                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:32:57) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a,",", b,",")
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b)
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
	print(tipo de triangulo)
	else:
	print("invalido")


	
-- ERROR:
File "XXXX", line 5
    if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b)
                                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:33:33) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a,",", b,",")
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
	else:
	print("invalido")


	
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:33:37) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print(a,",", b,",")
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
2.0 , 4.0 ,
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:34:18) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:34:27) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- EXECUTION TIME:
0.14462
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:34:45) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if(a<=0) or (b<=0) or (c<=0) and (a>b+c)or (b>a+c)or(c>a+b):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:36:36) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:36:46) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:36:51) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:36:58) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("invalido")
elif(a == b) and (c == b) and (a == c):
	print("equilatero")
elif(a==b) or (a==c) or (c==b):
	print("isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("escaleno")
else:
	print("invalido")


	
-- EXECUTION TIME:
0.184478
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:32) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("Tipo de triangulo: invalido")
elif(a == b) and (c == b) and (a == c):
	print("Tipo de triangulo: equilatero")
elif(a==b) or (a==c) or (c==b):
	print("Tipo de triangulo: isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")


	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:39:32) 
-- CODE:
a = float(input("digite o n1: "))
b = float(input("digite o n2: "))
c = float(input("digite o n3: "))
print("Entradas:", a,",", b,",",c)
if((a<=0) or (b<=0) or (c<=0)) or ((a>=b+c) or (b>=a+c)or(c>=a+b)):
	print("Tipo de triangulo: invalido")
elif(a == b) and (c == b) and (a == c):
	print("Tipo de triangulo: equilatero")
elif(a==b) or (a==c) or (c==b):
	print("Tipo de triangulo: isosceles")
elif(a!=b) and (b!=c) and (a!=c):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")


	
-- EXECUTION TIME:
0.207798
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
