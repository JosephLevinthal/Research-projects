== TEST (2019-04-08 14:50:16) 
-- CODE:
nota = (float(input("digite a nota: ")))
bonificacao = (float(input("tem bonificacao? ")))
if (bonificacao == S):
	nota = nota + (10/100)*nota
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = (float(input()))
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:25) 
-- CODE:
nota = (float(input("digite a nota: ")))
bonificacao = (float(input("tem bonificacao? ")))
if (bonificacao == S):
	nota = nota + (10/100)*nota
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = (float(input()))
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:50:59) 
-- CODE:
nota = float(input("digite a nota: "))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == S):
	nota = nota + (10/100)*nota
else:
	nota = nota
print(nota)
-- EXECUTION TIME:
0.158846
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:50:59) 
-- CODE:
nota = float(input("digite a nota: "))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == S):
	nota = nota + (10/100)*nota
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:51:55) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == S):
	nota = nota + (10/100)*nota
else:
	nota = nota
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:53:16) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == S):
	nota = (nota + (10/100)*nota)
else:
	nota = (nota)
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:54:38) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == S):
	nota = (nota + (10/100)*nota)
else:
	nota = (nota)
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:56:03) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = float(input("tem bonificacao? "))
if (bonificacao == "S"):
	nota = (nota + (10/100)*nota)
else:
	nota = (nota)
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bonificacao = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:56:37) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = (input("tem bonificacao? "))
if (bonificacao == "S"):
	nota = (nota + (10/100)*nota)
else:
	nota = (nota)
print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 14:56:44) 
-- CODE:
nota = float(input("digite a nota:"))
bonificacao = (input("tem bonificacao? "))
if (bonificacao == "S"):
	nota = (nota + (10/100)*nota)
else:
	nota = (nota)
print(nota)
-- EXECUTION TIME:
0.123989
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
