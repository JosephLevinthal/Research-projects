== TEST (2019-04-12 23:24:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:24:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:28:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")

if (patrono = cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 6
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:29:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:33:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")

if (patrono = "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 6
    if (patrono = "cervo"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:35:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")

if (patrono = cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 6
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:35:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite seu patrono: ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 23:36:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:25:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:26:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:37:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == cervo):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:38:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:38:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e? ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.163494
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:39:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = string(input("seu patrono e? "))

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    patrono = string(input())
NameError: name 'string' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:40:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = (input("seu patrono e?: ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.151596
-- ERROR:
  File "/home/codebench/codes/1635/1053/main.py", line 6
    if (patrono == "cervo"):
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:40:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = (input("seu patrono e?: ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 6
    if (patrono == "cervo"):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:40:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e?: ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:40:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e?: ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.155665
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:40:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e?: ")

if (patrono = "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 6
    if (patrono = "cervo"):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:41:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("seu patrono e?: ")

if (patrono == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:43:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.145657
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:44:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p == "animal prateado"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.170046
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:44:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p == "animal prateado"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:44:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p == "animal prateado"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.195979
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:48:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:48:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "nao eh patrono do Harry Potter"
else:
	msg = "eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:48:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "nao eh patrono do Harry Potter"
else:
	msg = "eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.203368
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:21:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = "eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:21:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = "<p> eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
<p> eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:22:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = <p>" eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 9
    msg = <p>" eh patrono do Harry Potter"
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:22:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(<p> + msg)
-- ERROR:
File "XXXX", line 11
    print(<p> + msg)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:22:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:23:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "<p> nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- EXECUTION TIME:
0.160212
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode<p> nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:23:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = "nao eh patrono do Harry Potter"
else:
	msg = "eh patrono do Harry Potter"
	
print(p + msg)
-- OUTPUT:
cervoeh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:24:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = " nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p = input("patrono: ")

if (p != "cervo"):
	msg = " nao eh patrono do Harry Potter"
else:
	msg = " eh patrono do Harry Potter"
	
print(p + msg)
-- EXECUTION TIME:
0.16274
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
