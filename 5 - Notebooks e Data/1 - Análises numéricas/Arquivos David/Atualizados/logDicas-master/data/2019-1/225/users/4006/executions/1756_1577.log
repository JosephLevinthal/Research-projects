== TEST (2019-05-27 12:56:06) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:09) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.51777
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:11) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.33565
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:11) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.34265
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:11) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.4218
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:18) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.144869
-- ERROR:
  File "/home/codebench/codes/1756/1577/main.py", line 10
    i=i+1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:34) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.417701
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 12:56:35) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:35) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.366464
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
valor aceleracaovelocidade inicialnumeros inteiros[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:37) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.421792
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.76284
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.33447
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.637101
-- ERROR:
  File "/home/codebench/codes/1756/1577/main.py", line 9
    d[i]=((a*(t[i]**2)/2)+v*t[i]))
                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.61105
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.407775
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1756/1577/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:39) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i]))
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.123237
-- ERROR:
  File "/home/codebench/codes/1756/1577/main.py", line 9
    d[i]=((a*(t[i]**2)/2)+v*t[i]))
                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-27 12:56:41) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:45) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.635433
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:45) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
0.807207
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:56:45) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
	print(d)
			
			
	
-- EXECUTION TIME:
1.05063
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-27 12:57:08) 
-- CODE:
from numpy import*
a= array(eval(input("valor aceleracao")))
v = array(eval(input("velocidade inicial")))
n = array(eval(input("numeros inteiros")))
t = arange(n)
d=zeros(n)
i=0
while(i<n):
	d[i]=((a*(t[i]**2)/2)+v*t[i])
	i=i+1
print(d)
			
			
	
-- EXECUTION TIME:
0.333139
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[    0.     81.4   172.6   273.6   384.4   505.    635.4   775.6   925.6
  1085.4  1255.   1434.4  1623.6  1822.6  2031.4  2250.   2478.4  2716.6
  2964.6  3222.4  3490.   3767.4  4054.6  4351.6  4658.4  4975.   5301.4
  5637.6  5983.6  6339.4  6705.   7080.4  7465.6  7860.6  8265.4  8680.
  9104.4  9538.6  9982.6 10436.4 10900.  11373.4 11856.6]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
