== TEST (2019-06-26 14:48:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

v=array(eval(input()))
k=0
for i in v:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	else(p[j]>p[i]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 11
    else(p[j]>p[i]):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:48:53) 
-- CODE:
from numpy import*
from numpy.linalg import*

v=array(eval(input()))
k=0
for i in v:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	else(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 11
    else(p[i]<p[j]):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:48:59) 
-- CODE:
from numpy import*
from numpy.linalg import*

v=array(eval(input()))
k=0
for i in v:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:49:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
k=0
for i in v:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:49:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
k=0
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:50:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array((input())
k=0
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 5
    k=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:50:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input())
k=0
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 5
    k=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:51:04) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input())
		  k=0
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 5
    k=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:51:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input())
k=0
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
File "XXXX", line 5
    k=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:51:35) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:51:59) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p):
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:52:25) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in len(p):
	if(p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
	elif(p[i]<p[j]):
		r=min(p[i][j])
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:53:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
if(p[i]==p[j]):
	break
elif(p[i]>p[j]):
	r=min(p[i][j])
	print(r)
elif(p[i]<p[j]):
	e=min(p[i][j])
	print(e)
-- ERROR:
File "XXXX", line 6
    break
    ^
SyntaxError: 'break' outside loop
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:53:31) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
elif(p[i]>p[j]):
	r=min(p[i][j])
	print(r)
elif(p[i]<p[j]):
	e=min(p[i][j])
	print(e)
-- ERROR:
File "XXXX", line 5
    elif(p[i]>p[j]):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:53:35) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
if(p[i]>p[j]):
	r=min(p[i][j])
	print(r)
elif(p[i]<p[j]):
	e=min(p[i][j])
	print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:54:13) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:55:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:56:25) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p,dtype=float):
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:56:44) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in size(p,dtype=float):
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 14:57:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:00:14) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:03:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p(shape[0])):
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:04:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p(shape[0])):
	for i in range(p(shape[1])):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:04:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p[shape[0]]):
	for i in range(p[shape[1]]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:05:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p(shape[0]):
	for j in p(shape[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:05:30) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:06:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if (p[i]==p[j]):
		break
	elif(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:07:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
if (p[i]==p[j]):
	break
elif(p[i]>p[j]):
	r=min(p[i][j])
	print(r)
elif(p[i]<p[j]):
	e=min(p[i][j])
	print(e)
-- ERROR:
File "XXXX", line 6
    break
    ^
SyntaxError: 'break' outside loop
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:07:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
if(p[i]>p[j]):
	r=min(p[i][j])
	print(r)
elif(p[i]<p[j]):
	e=min(p[i][j])
	print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:08:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in p:
	if(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:10:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(p):
	if(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:11:12) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in len(p):
	if(p[i]>p[j]):
		r=min(p[i][j])
		print(r)
	elif(p[i]<p[j]):
		e=min(p[i][j])
		print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:15:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
			elif(p[i]<p[j]):
				e=min(p[i][j])
				print(e)
-- ERROR:
File "XXXX", line 10
    elif(p[i]<p[j]):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:15:13) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:16:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p,dtype=float)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:16:31) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(float(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 5
    for i in shape(p)[0]:
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:16:41) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(float(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 5
    for i in shape(p)[0]:
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:17:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(float(input())))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:17:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in len(shape(p)[0]):
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:17:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(shape(p)[0]):
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:18:13) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(shape(p)[0]):
	for j in range(shape(p[1])):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:18:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(shape(p)[0]):
	for j in shape(p[1]):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:19:12) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(shape(p)[0]):
	for j in shape(p[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:19:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:20:04) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p)[0]:
	for j in shape(p[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:20:27) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in len(shape(p)[0]):
	for j in shape(p[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:20:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in range(shape(p)[0]):
	for j in shape(p[1]):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:20:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in shape(p)[0]:
	for j in range(shape(p[1])):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:21:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
for i in (shape(p)[0]):
	for j in range(shape(p[1])):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:01) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in n:
	for j in m:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shope(p)[0]
m=shape(p)[1]
for i in n:
	for j in m:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shope(p)[0]
m=shape(p)[1]
for i in n:
	for j in m:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in n:
	for j in m:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in m:
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:22:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if (p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:23:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:23:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]!=p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:24:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:24:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[j]>p[i]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:25:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:26:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if((p[i])>(p[j])):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:27:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p.all(i)>p.all(j)):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:28:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:28:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
		elif(p[i]==p[j]):
			break
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:30:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:30:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i][j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:32:12) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i,:])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:32:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:32:49) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i,j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:33:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:33:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:33:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all())
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:34:24) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(i::))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all(i::))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:34:37) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:34:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]<p[j]):
			r=min(p.all[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:35:21) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(a.all(p))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:35:32) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:36:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]==p[j]):
			break
		elif(p[i]>p[j]):
			r=min(p.all(p))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:37:15) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p{i::}))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all(p{i::}))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:37:22) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p[i::]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:37:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p[i,:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:37:46) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p[i:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:37:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all([i:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all([i:]))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:38:09) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all([i::]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all([i::]))
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:38:14) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all([i<:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all([i<:]))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:38:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all([i,:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
File "XXXX", line 10
    r=min(p.all([i,:]))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:38:27) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all(p[i:]))
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:38:44) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p.all())
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:39:03) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			j=p.all()
			r=min(j)
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:39:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i:])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:39:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i::])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:40:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[i:])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:40:20) 
-- CODE:
from numpy import*
from numpy.linalg import*

p=array(eval(input()))
n=shape(p)[0]
m=shape(p)[1]
for i in range(n):
	for j in range(m):
		if(p[i]>p[j]):
			r=min(p[:j])
			print(r)
		elif(p[i]<p[j]):
			e=min(p[i][j])
			print(e)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
