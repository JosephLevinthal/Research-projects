== SUBMITION (2019-03-31 23:31:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r***3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.132259
-- ERROR:
  File "/home/codebench/codes/1590/825/main.py", line 11
    V = (4/3*pi*r***3)
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r***3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
File "XXXX", line 11
    V = (4/3*pi*r***3)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r***3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
File "XXXX", line 11
    V = (4/3*pi*r***3)
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:31:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.20024
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import pi


A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:31:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import pi


A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.156289
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:32:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:33:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:33:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.179292
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:33:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(input("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:34:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("Qual e o raio?"))
ValueError: could not convert string to float: 'Qual e o raio?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:34:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("Qual e o raio?"))
ValueError: could not convert string to float: 'Qual e o raio?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:34:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.19563
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(float("Qual e o raio?"))
ValueError: could not convert string to float: 'Qual e o raio?'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:34:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("Qual e o raio?"))
ValueError: could not convert string to float: 'Qual e o raio?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:34:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio?"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("Qual e o raio?"))
ValueError: could not convert string to float: 'Qual e o raio?'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:34:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("Qual e o raio"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("Qual e o raio"))
ValueError: could not convert string to float: 'Qual e o raio'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:36:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("qual e o raio"))
ValueError: could not convert string to float: 'qual e o raio'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:36:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import *
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.18092
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(float("qual e o raio"))
ValueError: could not convert string to float: 'qual e o raio'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:39:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import *

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("qual e o raio"))
ValueError: could not convert string to float: 'qual e o raio'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:39:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import *

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.14907
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/825/main.py", line 5, in <module>
    r = int(float("qual e o raio"))
ValueError: could not convert string to float: 'qual e o raio'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:39:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import * pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
File "XXXX", line 7
    from math import * pi
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:39:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = int(float("qual e o raio"))

from math import * 
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    r = int(float("qual e o raio"))
ValueError: could not convert string to float: 'qual e o raio'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:40:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = float(input("qual e o raio"))

from math import * 
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:40:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = float(input("qual e o raio"))

from math import * 
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.146947
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:40:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

r = float(input("qual e o raio"))

from math import * 
pi

A = (pi*r**2)
V = (4/3*pi*r**3)

print(round(A, 3))
print(round(V, 3))


-- EXECUTION TIME:
0.152529
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
