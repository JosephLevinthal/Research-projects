== TEST (2019-06-25 13:19:54) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( compras, frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:20:58) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 0], [ 12, 0, 2], [ 1, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( compras, frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:21:20) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 0], [ 12, 0, 2], [ 1, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( frutas, compras)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:21:40) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 0], [ 12, 0, 2], [ 1, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot(frutas, inv(compras))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == min(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:22:31) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T

# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:24:35) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
compras = compras.T
print(compras)
# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:25:00) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
print(compras)
# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:25:05) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])
print(compras.T)
# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:25:26) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7])

# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras.T),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:25:40) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7]).T

# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras.T),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:25:52) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([23.6, 52.6, 27.7]).T()

# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras.T),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:33:49) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]]).T

# Resolucao do sistema de equacoes lineares
preco = dot( inv(compras.T),frutas)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:35:30) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]]).T

# Resolucao do sistema de equacoes lineares
preco = dot( compras.T,inv(frutas))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if preco[0] == max(preco):
    print("abacate")
elif preco[0] == max(preco):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:36:44) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]]).T

# Resolucao do sistema de equacoes lineares
preco = dot( compras.T,inv(frutas)).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:36:58) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]]).T

# Resolucao do sistema de equacoes lineares
preco = dot( compras.T,inv(frutas)).T
print(preco)
# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:37:16) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot( compras.T,inv(frutas)).T
print(preco)
# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:37:24) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot( compras.T,inv(frutas))
print(preco)
# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:37:41) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
print(preco)
# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:37:54) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
print(preco.T)
# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:38:05) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:38:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

print(preco)

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:38:40) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

print(preco[0])
print(preco[1])
print(preco[2])

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:38:52) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

print(preco[0][0])
print(preco[1])
print(preco[2])

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:39:17) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:39:30) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:39:44) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))

# Imprime nome da fruta mais cara
if (preco[0][0] == max(preco)):
    print("abacate")
elif (preco[0][0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:40:06) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T
print(max(preco))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))

# Imprime nome da fruta mais cara
if (preco[0][0] == max(preco)):
    print("abacate")
elif (preco[0][0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:40:33) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T
print(max(max(preco)))

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))

# Imprime nome da fruta mais cara
if (preco[0][0] == max(preco)):
    print("abacate")
elif (preco[0][0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:41:33) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco.T)):
    print("abacate")
elif (preco[0] == max(preco.T)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:41:49) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))
print(max(preco.T))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco.T)):
    print("abacate")
elif (preco[0] == max(preco.T)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:42:00) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))
print(max(preco.T[0]))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco.T)):
    print("abacate")
elif (preco[0] == max(preco.T)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:42:32) 
-- CODE:
"""
Lab 07 – Exercicio 01
@author: IComp / UFAM
SISTEMAS DE EQUACOES LINEARES -- FRUTAS
"""

from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T).T

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0][0], 1))
print("banana: ", round(preco[0][1], 1))
print("caqui: ", round(preco[0][2], 1))
print(max(preco.T[0]))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco.T[0])):
    print("abacate")
elif (preco[0] == max(preco.T[0])):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:49:12) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))
print(max(preco.T[0]))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:49:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))
print(max(preco.T[0]))

# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:49:43) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))


# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:49:53) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))


# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-25 13:49:53) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))


# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-25 13:49:59) 
-- CODE:
from numpy import *
from numpy.linalg import *

# Matriz do sistema linear (informado no enunciado)
frutas = array([[ 3, 12, 1], [ 12, 0, 2], [ 0, 2, 3]])

# Vetor de constantes (informado no enunciado)
compras = array([[23.6, 52.6, 27.7]])

# Resolucao do sistema de equacoes lineares
preco = dot(inv(frutas), compras.T)
p = zeros(3)
for i in range(3):
	p[i] = preco[i][0]
preco = p

# Imprime o preco de cada fruta
print("abacate: ", round(preco[0], 1))
print("banana: ", round(preco[1], 1))
print("caqui: ", round(preco[2], 1))


# Imprime nome da fruta mais cara
if (preco[0] == max(preco)):
    print("abacate")
elif (preco[0] == max(preco)):
    print("banana")
else:
    print("caqui")

-- EXECUTION TIME:
1.05283
-- TEST CASE 1:
---- input:
nada
---- correct output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui

---- user output:
abacate:  2.9
banana:  0.5
caqui:  8.9
caqui
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
