== TEST (2019-04-07 22:32:52) 
-- CODE:
n = float(input("nota do aluno: "))
b = input(input("boinificacao: ".upper()))

if b == "S":
	n = n * 1.1
	print(n)
else:
	print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = input(input("boinificacao: ".upper()))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:33:29) 
-- CODE:
n = float(input("nota do aluno: "))
b = input(input("boinificacao: "))

if b.upper() == "S":
	n = n * 1.1
	print(n)
else:
	print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = input(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:38:05) 
-- CODE:
n = float(input("nota do aluno: "))
b = input(input("boinificacao: "))

if b.upper() == "S":
	n = n * 1.1
	print(n)
else:
	print(n)
-- EXECUTION TIME:
0.14397
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 2, in <module>
    b = input(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:38:23) 
-- CODE:
n = float(input("nota do aluno: "))
b = input(input("boinificacao: "))

if b.upper() == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = input(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:38:56) 
-- CODE:
n = float(input("nota do aluno: "))
b = input(input("boinificacao: "))

if b == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- EXECUTION TIME:
0.179734
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 2, in <module>
    b = input(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:43:41) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: "))

if b == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 2
    b = input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:45:34) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if b == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:46:16) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if b.upper() == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- EXECUTION TIME:
0.155246
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:46:17) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if b.upper() == "S":
	f = n * 1.1
	print(n)
else:
	print(n)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:49:46) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if b.upper() == "S", n == {0,10}:
	f = n * 1.1
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 4
    if b.upper() == "S", n == {0,10}:
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:50:02) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	f = n * 1.1
	print(n)
else:
	print(n)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:55:33) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S"
	n = n * 1.1 
	print(n)
else:
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 5
    if b.upper() == "S"
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:55:41) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	n = n * 1.1 
	print(n)
else:
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 6
    n = n * 1.1 
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:56:05) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	t = n * 1.1 
	print(t)
else:
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 6
    t = n * 1.1 
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:56:22) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	   t = n * 1.1 
	   print(t)
else:
	print(n)
else:
	print(n)
-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:57:10) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	   t = n * 1.1 
	   print(t)
else:
	   print(n)

-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:58:02) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	   t = n + (n / 10) 
	   print(t)
else:
	   print(n)

-- EXECUTION TIME:
0.192754
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 23:02:11) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: ")

if n == {0,10}:
	if b.upper() == "S":
	   t = n + (n / 10) 
	   print(t)
else:
	   print(n)

-- EXECUTION TIME:
0.162007
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 13:44:36) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: S/N")

if b == "S":
	   n = n + (n / 10) 
else:
	 print(n)
		
print(n)
-- EXECUTION TIME:
0.210767
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 13:45:12) 
-- CODE:
n = float(input("nota do aluno: "))
b = input("bonificacao: S/N")

if b == "S":
   n = n + (n / 10)
   print(n)
else:
	 print(n)
-- EXECUTION TIME:
0.127891
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
