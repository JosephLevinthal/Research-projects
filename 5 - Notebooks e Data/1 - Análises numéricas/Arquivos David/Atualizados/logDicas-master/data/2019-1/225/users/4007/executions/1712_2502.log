== TEST (2019-05-13 14:31:39) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)* 1 / 1 - (2*i + 1)*(3**(2*i+1)) 


-- OUTPUT:
874
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:31:39) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)* 1 / 1 - (2*i + 1)*(3**(2*i+1)) 


-- OUTPUT:
874
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:32:08) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)* 1 / 1 - (2*i + 1)*(3**(2*i+1)) 
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
-244183870044.8949
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:33:03) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)* 1 / (2*i + 1)*(3**(2*i+1)) - 1
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
1967533814.6942942
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:33:23) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*( 1 / (2*i + 1)*(3**(2*i+1)) - 1)
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
1967533787.5891764
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:33:47) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**(2*i+1)) - 1)
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
1536982844.9427285
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:35:13) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal /  1/1 - (2*i + 1)*(3**(2*i+1)) )
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
-845877738741.6438
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:35:42) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal /  -1/1  (2*i + 1)*(3**(2*i+1)) )
	sinal = -sinal
	i = i + 1
print(soma)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = soma + sqrt(12)*(sinal /  -1/1  (2*i + 1)*(3**(2*i+1)) )
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 14:36:01) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / -1/1+(2*i + 1)*(3**(2*i+1)) )
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
845877738741.6438
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:00:29) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**i-1))
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
7122.787856215119
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:22) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**(i-1))
	sinal = -sinal
	i = i + 1
print(soma)


-- ERROR:
File "XXXX", line 8
    sinal = -sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:42) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**(i-1)))
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
2375.1957079397057
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:03:55) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**(i-1)))
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
2375.1957079397057
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:13:31) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3**(i-1)))
	sinal = -sinal
	i = i + 1
print(soma)


-- OUTPUT:
2375.1957079397057
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:16:02) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3 **b )
	sinal = -sinal
	i = i + 1
	b = b + 1								
print(soma)


-- ERROR:
File "XXXX", line 9
    sinal = -sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:16:08) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + sqrt(12)*(sinal / (2*i + 1)*(3 **b ))
	sinal = -sinal
	i = i + 1
	b = b + 1								
print(soma)


-- OUTPUT:
7125.5871238191185
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:17:43) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (sqrt(12)*(sinal / (2*i + 1)*(3 **b )))
	sinal = - sinal
	i = i + 1
	b = b + 1								
print(soma)


-- OUTPUT:
7125.5871238191185
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:18:23) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (sqrt(12)*(sinal / (2*i + 1)*(3 ** b )))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- OUTPUT:
2.8776118235792675e+25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:18:35) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (sqrt(12)*(sinal / (2*i + 1)*(3 ** b )))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- OUTPUT:
2.8776118235792675e+25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:19:34) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (sinal / (2*i + 1)*(3 ** b ))*(sqrt(12)
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- ERROR:
File "XXXX", line 9
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:19:42) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (sinal / (2*i + 1)*(3 ** b ))*(sqrt(12))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- OUTPUT:
2.8776118235792675e+25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:25) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (12 * 0.5 (sinal / (2*i + 1)*(3 ** b )))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    soma = soma + (12 * 0.5 (sinal / (2*i + 1)*(3 ** b )))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:54) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (12 * 0.5 * (sinal / (2*i + 1)*(3 ** b )))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- OUTPUT:
4.984169882900221e+25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:21:49) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
b = 0
while (i < n):
	soma = soma + (12 * 0.5 * (sinal / (2*i + 1)*(3 ** b )))
	sinal = - sinal
	i = i + 1
	b = b + i								
print(soma)


-- OUTPUT:
4.984169882900221e+25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:18:01) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
while (i < n):
	soma = soma + (12 * 0.5 * (sinal / (2*i + 1)*(3 ** i)))
	sinal = - sinal
	i = i + 1
								
print(soma)


-- OUTPUT:
12341.878932213296
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:20:07) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
r = sqrt(12)
while (i < n):
	soma = soma + r * (sinal / (2*i + 1)*(3 ** i))
	sinal = - sinal
	i = i + 1
								
print(soma)


-- OUTPUT:
7125.5871238191185
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:20:56) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
r = sqrt(12)
while (i < n):
	soma = soma + r * (sinal / (2*i + 1)*(3 ** i))
	sinal = - sinal
	i = i + 1
								
print(round(soma, 8))


-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:21:23) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = +1
r = sqrt(12)
while (i < n):
	soma = soma + r * (sinal / (2*i + 1)*(3 ** i))
	sinal = - sinal
	i = i + 1
								
print(round(soma, 8))


-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:23:02) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = -1
r = sqrt(12)
while (i < n):
	soma = soma + r * (sinal / (1 - (2*i + 1)*(3 ** i)))
	sinal = - sinal
	i = i + 1
								
print(round(soma, 8))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    soma = soma + r * (sinal / (1 - (2*i + 1)*(3 ** i)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:28:08) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = 1
r = sqrt(12
e = 0			
while (i < n):
	soma = soma + r * (sinal / (i * 3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- ERROR:
File "XXXX", line 7
    e = 0			
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:28:29) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (i * 3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + r * (sinal / (i * 3 ** e))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:29:05) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0 
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (i * (3 ** e)))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = soma + r * (sinal / (i * (3 ** e)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:29:20) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 1 
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (i * (3 ** e)))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- OUTPUT:
3.14260475
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:30:20) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- OUTPUT:
-25.92410939
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:30:36) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- OUTPUT:
-25.92410939
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:30:49) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- OUTPUT:
-25.92410939
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:30:55) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
while (i < n):
	soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- OUTPUT:
-25.92410939
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:37:41) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1 and i < n):
	soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
	sinal = - sinal
	i = i + 2
	e = e + 1
								
print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:38:10) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1 and i < n):
		soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
		sinal = - sinal
		i = i + 2
		e = e + 1
	print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:38:33) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1 and i < n):
			soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
			sinal = - sinal
			i = i + 2
			e = e + 1
	print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:38:51) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1 and i < n):
		soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
			sinal = - sinal
			i = i + 2
			e = e + 1
	print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:40:02) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1) and (i	 < n):
		soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
		sinal = - sinal
		i = i + 2
		e = e + 1
	print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 19:46:54) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
i = 0
sinal = 1
r = sqrt(12)
e = 0	
if (n == 1):
	print(r)
else:
   while (i > 1) and (i	 < n):
		soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
		sinal = - sinal
		i = i + 2
		e = e + 1
	print(round(soma, 8))


-- ERROR:
File "XXXX", line 12
    soma = soma + r * (sinal / (2 * i + 1) * (3 ** e))
                                                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:10:03) 
-- CODE:
from math import*
n = int(input("numero de termos: "))

soma = 0
cont = 0
r = sqrt(12)
sinal = 1
i = 1
while (cont < n):
	soma = soma + (r * ( sinal / (i * (3 ** cont - 1))))
	sinal = - sinal
	cont = cont + 1
	i = i + 2
print(soma)
	



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = soma + (r * ( sinal / (i * (3 ** cont - 1))))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:10:48) 
-- CODE:
from math import*
n = int(input("numero de termos: "))

soma = 0
cont = 0
r = sqrt(12)
sinal = 1
i = 1
while (cont < n):
	soma = soma + (r * ( sinal / (i * (3 ** (cont - 1))))
	sinal = - sinal
	cont = cont + 1
	i = i + 2
print(soma)
	



-- ERROR:
File "XXXX", line 11
    sinal = - sinal
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:11:08) 
-- CODE:
from math import*
n = int(input("numero de termos: "))

soma = 0
cont = 0
r = sqrt(12)
sinal = 1
i = 1
while (cont < n):
	soma = soma + (r * ( sinal / (i * (3 ** (cont - 1)))))
	sinal = - sinal
	cont = cont + 1
	i = i + 2
print(soma)
	



-- OUTPUT:
9.424779913509242
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:12:54) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = 1
while (cont < n):
	i = 1
	soma = soma + (r * ( sinal / (i * (3 ** (cont - 1)))))
	sinal = - sinal
	cont = cont + 1
	i = i + 2
print(soma)
	



-- OUTPUT:
7.794272632708721
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:28:02) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(r)
else:
	while (cont < n):
		soma = soma + (r * (sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:28:52) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(r)
else:
	while (cont < n):
		soma = soma + (r * (sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:29:05) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(r)
else:
	while (cont < n):
		soma = soma + (r * (sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:29:31) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:29:45) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:31:01) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:32:36) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:32:48) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:33:41) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal =  1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - sinal / (2 * cont + 1) * (3 ** cont)))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7087.48200605
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:34:22) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal =  1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - (sinal / (2 * cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7087.48200605
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:35:06) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		soma = soma + (r * (1 - (sinal / (2 * cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:36:43) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		cont + 1
		soma = soma + (r * (1 - (sinal / (2 * cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:37:07) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 0
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):
		cont = cont - 1
		soma = soma + (r * (1 - (sinal / (2 * cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
7163.69224159
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:41:33) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 2
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):				
		soma = soma + (r * (1 - (sinal / ( cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
13650.32278157
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:42:14) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 1
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):				
		soma = soma + (r * (1 - (sinal / (2 * cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-7087.48200605
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:42:38) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
soma = 0
cont = 1
r = sqrt(12)
sinal = - 1
if (n == 1):
	print(round(r, 8))
else:
	while (cont < n):				
		soma = soma + (r * (1 - (sinal / ( cont + 1) * (3 ** cont))))
		sinal = - sinal
		cont = cont + 1
	print(round(soma, 8))
		
								  
		
	



-- OUTPUT:
-13579.30869846
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:12:48) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
e = e * sqrt(12)
print(e)
		
								  
		
	



-- OUTPUT:
15499.674639639561
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:13:10) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(e)
		
								  
		
	



-- OUTPUT:
7125.5871238191185
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:13:32) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:14:02) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- EXECUTION TIME:
0.143607
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:14:15) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:17:37) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- OUTPUT:
7125.58712382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:18:11) 
-- CODE:
from math import*
n = int(input("numero de termos: "))
cont = 0 
d = 1
e = 0 #soma inicializada com 0
sinal = 1
while (cont < n):
	e = e + (sinal *( 1 / d * (3**cont)))
	cont = cont + 1
	d = d + 2
	sinal = - sinal
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- EXECUTION TIME:
0.164546
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
7125.58712382
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
420865.97458955
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
-363.2842469
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:18:53) 
-- CODE:
from math import*

n = int(input())

c = 0 # contador para percorrer o laco
d = 1 # denominador
e = 0 # soma inicializada com zero
aux = 1 # variavel auxiliar varia entre -1 e 1

while(c < n):
	e = e + (aux * (1 / (d * (3 ** c))))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2
	
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:19:41) 
-- CODE:
from math import*

n = int(input())

c = 0 # contador para percorrer o laco
d = 1 # denominador
e = 0 # soma inicializada com zero
aux = 1 # variavel auxiliar varia entre -1 e 1

while(c < n):
	e = e + (aux * (1 / (d * (3 ** c))))
	if(aux == 1):
		aux = -1
	else:
		aux = 1
		
	c = c + 1
	d = d + 2
	
e = e * sqrt(12)
print(round(e, 8))
		
								  
		
	



-- EXECUTION TIME:
0.224516
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
