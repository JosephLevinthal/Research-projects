== TEST (2019-03-29 20:35:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) = X
max(A,B,C) = Y
I = A + B + C - Y - X
print(X)
print(I)
print(Y)


-- ERROR:
File "XXXX", line 7
    min(A,B,C) = X
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:36:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) = X
max(A,B,C) = Y
I = A + B + C - Y - X
print(X,I,Y)



-- EXECUTION TIME:
0.140704
-- ERROR:
  File "/home/codebench/codes/1590/1015/main.py", line 7
    min(A,B,C) = X
    ^
SyntaxError: can't assign to function call

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:36:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) = X
max(A,B,C) = Y
I = A + B + C - Y - X
print(X,I,Y)



-- ERROR:
File "XXXX", line 7
    min(A,B,C) = X
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:36:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) = X
max(A,B,C) = Y
I = A + B + C - Y - X
print(X,I,Y)



-- ERROR:
File "XXXX", line 7
    min(A,B,C) = X
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:36:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) = X
max(A,B,C) = Y
I = A + B + C - Y - X
print(X,I,Y)



-- ERROR:
File "XXXX", line 7
    min(A,B,C) = X
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:37:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - Y - X
print(min)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    I = A + B + C - Y - X
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:38:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min - max
print(min)
print(I)
print(max)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    I = A + B + C - min - max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:39:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print(min)
print(I)
print(max)



-- OUTPUT:
<built-in function min>
0
<built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:40:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print(min(A,B,C))
print(I)
print(max(A,B,C))



-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:42:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:42:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C))","(I)","(max(A,B,C)))




-- ERROR:
File "XXXX", line 10
    print((min(A,B,C))","(I)","(max(A,B,C)))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:43:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:43:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print("Ordem crescente:"(min(A,B,C)),(I),(max(A,B,C)))




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print("Ordem crescente:"(min(A,B,C)),(I),(max(A,B,C)))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:44:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))
min(A,B,C) 
max(A,B,C) 
I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))

I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:45:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))

I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- EXECUTION TIME:
0.243622
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Primeiro valor:Segundo valor:Terceiro valor:-2 0 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:45:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))

I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:45:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
A = int(input("Primeiro valor:"))
B = int(input("Segundo valor:"))
C = int(input("Terceiro valor:"))

I = A + B + C - min(A,B,C) - max(A,B,C)
print((min(A,B,C)),(I),(max(A,B,C)))




-- EXECUTION TIME:
0.155305
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
