== TEST (2019-04-10 14:18:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=int(input("preco:"))
if(preco>=200.00):
	valor=(preco-(preco*5/100))
else:
	valor=preco
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=int(input("preco:"))
if(preco>=200.00):
	valor=(preco-(preco*5/100))
else:
	valor=preco
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=(preco-(preco*5/100))
else:
	valor=preco
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=(preco-(preco*5/100))
else:
	valor=preco
	print(round(int(valor),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=(preco-(preco*5/100))
else:
	valor=preco
	print(round(float(valor),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:20:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=int(preco-(preco*5/100))
else:
	valor=int(preco)
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=int(preco-(preco*5/100))
else:
	valor=int(preco)
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=int(preco-(preco*5/100))
else:
	valor=int(preco)
	print(round(valor,2))
-- EXECUTION TIME:
0.139797
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:

-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor=float(preco)
	print(round(valor,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor=float(preco)
	print(valor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    preco=int(input())
ValueError: invalid literal for int() with base 10: '200.09'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))

	print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor=preco
	print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor=(preco)
	print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else(preco<=200.00):
	valo=preco
	print(valor)
-- ERROR:
File "XXXX", line 7
    else(preco<=200.00):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- ERROR:
File "XXXX", line 7
    else(preco<=200.00):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- ERROR:
File "XXXX", line 7
    else(preco<=200.00):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:24:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- EXECUTION TIME:
0.143013
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:

-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- ERROR:
File "XXXX", line 7
    else(preco<=200.00):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:24:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- EXECUTION TIME:
0.15251
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:

-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:24:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valo=preco
	print(valor)
-- ERROR:
File "XXXX", line 7
    else(preco<=200.00):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor=
	print(valor)
-- ERROR:
File "XXXX", line 8
    valor=
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor
	print(valor)
-- ERROR:
File "XXXX", line 8
    valor=
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
else:
	valor==preco
	print(valor)
-- ERROR:
File "XXXX", line 8
    valor=
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))

	print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:25:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))

	print(valor)
-- EXECUTION TIME:
0.219059
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:25:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))

	print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
	else:
		valor=(preco)

	print(valor)
-- ERROR:
File "XXXX", line 8
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
	else:
		valor=(preco)

	print(valor)
-- ERROR:
File "XXXX", line 8
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
		valor=(preco)

	print(valor)
-- ERROR:
File "XXXX", line 11
    print(valor)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)

	print(valor)
-- ERROR:
File "XXXX", line 11
    print(valor)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:26:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
	print(valor)
-- ERROR:
File "XXXX", line 11
    print(valor)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:27:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(valor)
-- EXECUTION TIME:
0.216997
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(valor)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(round(valor.2))
-- ERROR:
File "XXXX", line 10
    print(round(valor.2))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:27:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(round(valor,2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:27:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("preco:"))
if(preco>=200.00):
	valor=float(preco-(preco*5/100))
	
else:
	valor=(preco)
print(round(valor,2))
-- EXECUTION TIME:
0.151681
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
