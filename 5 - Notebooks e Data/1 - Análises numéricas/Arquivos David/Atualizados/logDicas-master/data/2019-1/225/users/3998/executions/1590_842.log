== TEST (2019-03-25 15:25:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
l TST
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- ERROR:
File "XXXX", line 4
    l TST
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:25:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:25:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- EXECUTION TIME:
0.137316
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/842/main.py", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:25:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:26:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:29:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input(":"))
z = int(input(":"))
y = int(input(":"))
a = int(input(":"))
print(x+z+y+a)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:42:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(3141)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    z = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:49:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
y = x//2
print (y)



-- OUTPUT:
1570
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:51:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
y = x//9
print (y)



-- OUTPUT:
349
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:51:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
y = x//9
print (y)



-- EXECUTION TIME:
0.184193
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
349
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
349
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:53:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
y = x//1000
print (y)



-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:56:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
y = x//
print (y)



-- ERROR:
File "XXXX", line 5
    y = x//
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:59:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(n))
print (soma)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    soma = sum(int(i) for i in str(n))
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:00:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(x))
print (soma)



-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:00:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(x))
print (soma)



-- EXECUTION TIME:
0.2004
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:00:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(x))
print (soma)



-- EXECUTION TIME:
0.216133
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:19:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
z = 3//1000
y = 3%1000


-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:21:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
z = 3//1000
y = 3%1000
e = 1//100
h = 1%100
r = 4//10
s = 4%10
n = 1//1
j = 1%1
print= 


-- ERROR:
File "XXXX", line 13
    print= 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:22:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
z = 3//1000
y = 3%1000
e = 1//100
h = 1%100
r = 4//10
s = 4%10
n = 1//1
j = 1%1
print= (z + e + r + n)


-- ERROR:
File "XXXX", line 13
    print= 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:22:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
z = 3//1000
y = 3%1000
e = 1//100
h = 1%100
r = 4//10
s = 4%10
n = 1//1
j = 1%1
print= (z + e + r + n)


-- ERROR:
File "XXXX", line 13
    print= 
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:22:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
z = 3//1000
y = 3%1000
e = 1//100
h = 1%100
r = 4//10
s = 4%10
n = 1//1
j = 1%1
print= (z + e + r + n)


-- EXECUTION TIME:
0.132271
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:

-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:23:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(x))
print (soma)



-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:23:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = 3141
soma = sum(int(i) for i in str(x))
print (soma)



-- EXECUTION TIME:
0.135691
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:27:32) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
i = f//10
j = f%10
g = o//1
soma = b + d + i + g


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i = f//10
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:28:51) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
r = f//10
j = f%10
g = o//1
soma = b + d + r + g


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = f//10
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:29:55) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
g = e//10
g = e%10
h = g//1
soma = b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma = b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:30:19) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
g = e//10
g = e%10
h = g//1

soma = b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:30:30) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
g = e//10
g = e%10
h = g//1

soma = b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:30:58) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
g = e//10
g = e%10
h = g//1

soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:31:29) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1

soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:31:40) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1

soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:31:56) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h


-- EXECUTION TIME:
0.168539
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:

-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:31:59) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:32:48) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:33:12) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h


-- EXECUTION TIME:
0.135125
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:

-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:33:16) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma= b + d + f + h
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:33:47) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= b + d + f + h
print(soma)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 14:34:02) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= (b + d + f + h)
print(soma)

-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 14:34:05) 
-- CODE:
a = int(input("digite um numero!"))
b = a//1000
c = a%1000
d = c//100
e = c%100
f = e//10
g = e%10
h = g//1
soma= (b + d + f + h)
print(soma)

-- EXECUTION TIME:
0.189313
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
