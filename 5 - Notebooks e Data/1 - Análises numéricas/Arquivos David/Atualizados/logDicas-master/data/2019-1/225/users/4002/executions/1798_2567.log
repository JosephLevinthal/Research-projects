== TEST (2019-06-11 17:05:31) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:06:40) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:06:54) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n+1):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:07:00) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n+1):
	print(string[0:i])
-- EXECUTION TIME:
0.635906
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*********
**********
***********
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:08:21) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n+1):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:08:34) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n+1):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:08:39) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(2,n+1):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
**
***
****
*****
******
*******
********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 17:08:59) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(1,n+1):
	print(string[0:i])
-- OUTPUT:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 17:09:05) 
-- CODE:
n  = int(input(""))
string=''
for i in range(n):
	string+='*'
for i in range(n):
	print(string[0:(len(string)-i)])
for i in range(1,n+1):
	print(string[0:i])
-- EXECUTION TIME:
0.917707
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
