== TEST (2019-04-29 13:35:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if(a<=x<=b):
	print(x,"pertence ao interlavo", x,",",b)
elif: (b<=a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- ERROR:
File "XXXX", line 9
    elif: (b<=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:35:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if(a<=x<=b):
	print(x,"pertence ao interlavo", x,",",b)
elif: (b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- ERROR:
File "XXXX", line 9
    elif: (b <= a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:36:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if(a<=x<=b):
	print(x,"pertence ao interlavo", x,",",b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:36:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if(a<=x<=b):
	print(x,"pertence ao interlavo", x,",",b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- EXECUTION TIME:
0.139177
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao interlavo 6.5 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:37:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if(a<=x<=b):
	print(x,"pertence ao interlavo", x,",",b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:37:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao interlavo", a,"," ,b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:37:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao interlavo", a,"," ,b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- EXECUTION TIME:
0.143988
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao interlavo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:38:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo e 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:38:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", "e", b)
		
-- EXECUTION TIME:
0.202178
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo e 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:39:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo",a "," ,b)
		
-- EXECUTION TIME:
0.151346
-- ERROR:
  File "/home/codebench/codes/1671/1103/main.py", line 12
    print(x , "nao pertence ao intervalo",a "," ,b)
                                              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:39:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo",a "," ,b)
		
-- ERROR:
File "XXXX", line 12
    print(x , "nao pertence ao intervalo",a "," ,b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:39:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo",a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:40:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo",a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:40:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo",a, "," ,b)
		
-- EXECUTION TIME:
0.192493
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:40:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:40:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:41:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("dougras1:"))
a=float(input("dougras2:"))
b=float(input("dougras3:"))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.174334
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:41:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:41:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:41:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a <= x <= b):
	print(x , "pertence ao intervalo", a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.122878
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.325023
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.183246
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
entradas 6.5 e 3.5 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.53491
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.541035
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.365742
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.122378
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1671/1103/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.192186
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.161648
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.17227
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- EXECUTION TIME:
0.191458
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:43:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
		
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:43:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x <= b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:44:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x)and(x<=b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:44:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if (a<= x)and(x<=b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- EXECUTION TIME:
0.229853
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:47:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
	print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- ERROR:
File "XXXX", line 9
    print(x , "pertence ao intervalo" , a,"," ,b)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:47:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:47:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
elif(b <= a):
	print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- EXECUTION TIME:
0.176456
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 nao pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:48:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	elif(b <= a):
		print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:48:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	elif(b <= a):
		print("entradas" ,a, "e" ,b, "invalidas")
else:
	print(x , "nao pertence ao intervalo" , a, "," ,b)
-- EXECUTION TIME:
0.179304
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 nao pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:50:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	elif(b <= a):
		print("entradas" ,a, "e" ,b, "invalidas")
else:
	print("Entradas", a, "e",b,"invalidade")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidade
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:53:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	else:
		print(x, "nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e",b,"invalidade")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidade
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:53:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b<a):
	if (a<= x)and(x<=b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	else:
		print(x, "nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e",b,"invalidade")
-- EXECUTION TIME:
0.136353
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidade
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas 1.1 e 22.2 invalidade
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:57:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b < a):
	if (a <= x)and(x <= b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	else:
		print(x, "nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e",b,"invalidade")
-- OUTPUT:
Entradas 3.0 e 4.0 invalidade
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:57:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input(""))
a=float(input(""))
b=float(input(""))
if(b < a):
	if (a <= x)and(x <= b):
		print(x , "pertence ao intervalo" , a,"," ,b)
	else:
		print(x, "nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e",b,"invalidade")
-- EXECUTION TIME:
0.199984
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidade
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas 1.1 e 22.2 invalidade
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
