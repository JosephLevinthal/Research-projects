== TEST (2019-04-10 14:12:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:12:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:12:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print(mensagem)

-- EXECUTION TIME:
0.114365
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:17:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if: (num % 2 == 0)
	mensagem = "Par"
else:
	mensagem = "Impar"

print(mensagem)

-- EXECUTION TIME:
0.148469
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if: (num % 2 == 0)
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:19:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input(int("Digite um numero: "))

if: (num % 2 == 0)
	mensagem = "par"
else:
	mensagem = "impar"

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if: (num % 2 == 0)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:21:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input(int("Digite um numero: "))

if (num % 2 == 0) :
	mensagem = "par"
else:
	mensagem = "impar"

print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    num = input(int("Digite um numero: "))
ValueError: invalid literal for int() with base 10: 'Digite um numero: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = (int(input("Digite um numero: "))

if (num % 2 == 0) :
	mensagem = "par"
else:
	mensagem = "impar"

print(mensagem)

-- EXECUTION TIME:
0.146635
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 == 0) :
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = (int(input("Digite um numero: "))

if (num % 2 == 0) :
	mensagem = "par"
else:
	mensagem = "impar"

print(mensagem)

-- EXECUTION TIME:
0.198354
-- ERROR:
  File "/home/codebench/codes/1635/2442/main.py", line 7
    if (num % 2 == 0) :
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:21:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("Digite um numero: "))

if (num % 2 == 0) :
	mensagem = "par"
else:
	mensagem = "impar"

print(mensagem)

-- EXECUTION TIME:
0.189761
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
