== TEST (2019-06-09 23:11:39) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))

for i in range(n,0,size(n)/2):
	j=i*"*"
for i in range(n,size(n)/2,(size(n)/2)+1):
	k=i*"o"
print(j*k*j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 23:16:28) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))

for i in range(n,0,size(n)//2):
	j=i*"*"
for i in range(n, size(n)/2,size(n)%2):
	k=i*"o"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 23:17:01) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))

for i in range(n,1,size(n)//2):
	j=i*"*"
for i in range(n, size(n)/2,size(n)%2):
	k=i*"o"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-09 23:17:09) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))

for i in range(n,0,size(n)//2):
	j=i*"*"
for i in range(n, size(n)/2,size(n)%2):
	k=i*"o"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:44:23) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))
for i in range(n,0,-1):
	j=i*"*"
for i in range(n,-1,0):
	h=i*"o"
print(j*h*j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:44:45) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))
for i in range(n,0,-1):
	j=i*"*"
for i in range(n,-1,1):
	h=i*"o"
print(j*h*j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:45:13) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))
for i in range(n,0,-1):
	j=i*"*"
for i in range(n,-1,1):
	h=i*"o"
	print(j*h*j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:45:21) 
-- CODE:
from numpy import*
n=array(eval(input("numero:")))
for i in range(n,0,-1):
	j=i*"*"
for i in range(n,-1,1):
	h=i*"o"
	print(j*h*j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:45:59) 
-- CODE:
from numpy import*
n=ar
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:48:41) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(n*2,0,-1):
	print(i*"*")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:48:50) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(x*2,0,-1):
	print(i*"*")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:48:54) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(x*2,0,-1):
	print(i*"*")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:51:12) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(x*2,0,-1):
	j=i*"*"
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:51:25) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(x*2,0,-1):
	j=i*"*"
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:51:33) 
-- CODE:
from numpy import*
x=array(eval(input("quantidade:")))
for i in range(x*2,0,-1):
	j=i*"*"
	print(j)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:57:45) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==n):
		print(j)
	elif()
-- ERROR:
File "XXXX", line 6
    elif()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:57:50) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==n):
		print(j)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(i/2==n):
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:57:58) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)
	
-- OUTPUT:
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:58:53) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)
	elif()
-- ERROR:
File "XXXX", line 6
    elif()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:58:58) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)
	
-- OUTPUT:
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 14:59:08) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)
	
-- OUTPUT:
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:10:47) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)
	elif()
-- ERROR:
File "XXXX", line 6
    elif()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:10:51) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x*2,0,-1):
	j=i*"*"
	if(i/2==x):
		print(j)

-- OUTPUT:
**********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:23:00) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x,0,-1):
	s=i*"*"+2*(n-i)*"o"+i*'o'
	print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    s=i*"*"+2*(n-i)*"o"+i*'o'
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:23:07) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x,0,-1):
	s=i*"*"+2*(x-i)*"o"+i*'o'
	print(s)
-- OUTPUT:
***********ooooooooooo
**********oooooooooooo
*********ooooooooooooo
********oooooooooooooo
*******ooooooooooooooo
******oooooooooooooooo
*****ooooooooooooooooo
****oooooooooooooooooo
***ooooooooooooooooooo
**oooooooooooooooooooo
*ooooooooooooooooooooo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:23:17) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x,0,-1):
	s=i*"*"+2*(x-i)*"o"+i*"o"
	print(s)
-- OUTPUT:
***********ooooooooooo
**********oooooooooooo
*********ooooooooooooo
********oooooooooooooo
*******ooooooooooooooo
******oooooooooooooooo
*****ooooooooooooooooo
****oooooooooooooooooo
***ooooooooooooooooooo
**oooooooooooooooooooo
*ooooooooooooooooooooo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 15:23:35) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x,0,-1):
	s=i*"*"+2*(x-i)*"o"+i*"*"
	print(s)
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 15:23:41) 
-- CODE:
x=int(input("quantidade:"))
for i in range(x,0,-1):
	s=i*"*"+2*(x-i)*"o"+i*"*"
	print(s)
-- EXECUTION TIME:
0.804014
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
