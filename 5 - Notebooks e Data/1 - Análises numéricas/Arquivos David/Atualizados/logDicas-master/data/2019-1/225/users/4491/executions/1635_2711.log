== TEST (2019-04-08 15:42:37) 
-- CODE:
valor_aluno = float(input("v: "))
qtd_ticket = int(input("qtd: "))
valor_ticket = float(input("v2: "))
qtd_passe = int(input("qtd2: "))
valor_passe = float(input("v3: "))

if (valor_aluno.upper()):
	mensagem = "SUFICIENTE"
else: 
	mensagem = "INSUFICIENTE"

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (valor_aluno.upper()):
AttributeError: 'float' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:43:24) 
-- CODE:
valor_aluno = float(input("v: "))
qtd_ticket = int(input("qtd: "))
valor_ticket = float(input("v2: "))
qtd_passe = int(input("qtd2: "))
valor_passe = float(input("v3: "))

if (valor_aluno):
	mensagem = "SUFICIENTE"
else: 
	mensagem = "INSUFICIENTE"

print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:43:38) 
-- CODE:
valor_aluno = float(input("v: "))
qtd_ticket = int(input("qtd: "))
valor_ticket = float(input("v2: "))
qtd_passe = int(input("qtd2: "))
valor_passe = float(input("v3: "))

if (valor_aluno > 300):
	mensagem = "SUFICIENTE"
else: 
	mensagem = "INSUFICIENTE"

print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:43:48) 
-- CODE:
valor_aluno = float(input("v: "))
qtd_ticket = int(input("qtd: "))
valor_ticket = float(input("v2: "))
qtd_passe = int(input("qtd2: "))
valor_passe = float(input("v3: "))

if (valor_aluno > 300):
	mensagem = "SUFICIENTE"
else: 
	mensagem = "INSUFICIENTE"

print(mensagem)
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:44:03) 
-- CODE:
valor_aluno = float(input("v: "))
qtd_ticket = int(input("qtd: "))
valor_ticket = float(input("v2: "))
qtd_passe = int(input("qtd2: "))
valor_passe = float(input("v3: "))

if (valor_aluno > 300):
	mensagem = "SUFICIENTE"
else: 
	mensagem = "INSUFICIENTE"

print(mensagem)
-- EXECUTION TIME:
0.114152
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
