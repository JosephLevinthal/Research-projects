== TEST (2019-04-15 15:04:27) 
-- CODE:
s= int(input("insira a qnt de sucos"))
sal= int(input("insira a quantidade de salgados"))
vl= (s*3+sal*3.50)

-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:04:40) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)

-- EXECUTION TIME:
0.157123
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:

-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:

-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:04:41) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)

-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:05:45) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:05:54) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
-- EXECUTION TIME:
0.142879
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:05:58) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
-- EXECUTION TIME:
0.161774
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:06:06) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
-- EXECUTION TIME:
0.164171
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:06:12) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:07:20) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem("Sim")
else:
	mensagem("Nao")
print(mensagem, round,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem("Sim")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:07:38) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem:("Sim")
else:
	mensagem:("Nao")
print(mensagem, round,2)
-- EXECUTION TIME:
0.141537
-- ERROR:
  File "/home/codebench/codes/1662/2975/main.py", line 5
    mensagem:("Sim")
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:07:41) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem:("Sim")
else:
	mensagem:("Nao")
print(mensagem, round,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(mensagem, round,2)
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:07:50) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")
print(mensagem, round,2)
-- OUTPUT:
Sim <built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:08:01) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")
print(mensagem,+ round,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(mensagem,+ round,2)
TypeError: bad operand type for unary +: 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:08:48) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:10:03) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print(vl + "Sim")
else:
	print(vl + "Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(vl + "Sim")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:10:20) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:14:12) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
vlt= (vl,round,2)
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")

-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:14:32) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
vlt= (vl,round,2)
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")
print(vlt+mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(vlt+mensagem)
TypeError: can only concatenate tuple (not "str") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:14:44) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
vlt= (vl,round,2)
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")
print( vlt + mensagem )
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print( vlt + mensagem )
TypeError: can only concatenate tuple (not "str") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:15:33) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
vlt= (vl,round,2)
if(vl<=20):
	mensagem=(vlt + "Sim")
else:
	mensagem=(vlt + "Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem=(vlt + "Sim")
TypeError: can only concatenate tuple (not "str") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:01) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50,round,2)
if(vl<=20):
	mensagem=(vlt + "Sim")
else:
	mensagem=(vlt + "Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(vl<=20):
TypeError: '<=' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:21) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50,(round,2))
if(vl<=20):
	mensagem=(vlt + "Sim")
else:
	mensagem=(vlt + "Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(vl<=20):
TypeError: '<=' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:34) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50,(round,2))
if(vl<=20):
	mensagem=(vl + "Sim")
else:
	mensagem=(vl + "Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(vl<=20):
TypeError: '<=' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:16:57) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50,(round,2))
if(vl<=20):
	mensagem=("Sim")
else:
	mensagem=("Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(vl<=20):
TypeError: '<=' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:17:22) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50,(round,2))
if(vl<=20):
	print("Sim")
else:
	print("Nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(vl<=20):
TypeError: '<=' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:23:24) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
vl(round,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    vl(round,2)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:24:09) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	print("Sim")
else:
	print("Nao")
vl(round,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    vl(round,2)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:01) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem=vl+("Sim")
else:
	mensagem=vl+("Nao")
print(mensagem(round,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem=vl+("Sim")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:25:54) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem=vl(round,2)+("Sim")
else:
	mensagem=vl(round,2)+("Nao")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem=vl(round,2)+("Sim")
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:26:39) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(mensagem)
-- OUTPUT:
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:29:22) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl,2)
-- OUTPUT:
<built-in function round> 13.0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:29:38) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl)
-- OUTPUT:
<built-in function round> 13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:00) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(mensagem(round,vl))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(mensagem(round,vl))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:16) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl)
-- OUTPUT:
<built-in function round> 13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:35) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl)
print(mensagem)
-- OUTPUT:
<built-in function round> 13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:30:41) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl)
print(mensagem)
-- EXECUTION TIME:
0.232374
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
<built-in function round> 13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
<built-in function round> 10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
<built-in function round> 26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:30:43) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,vl)
print(mensagem)
-- OUTPUT:
<built-in function round> 13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:34:05) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print((round,vl))
print(mensagem)
-- OUTPUT:
(<built-in function round>, 13.0)
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:34:27) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,2,vl)
print(mensagem)
-- OUTPUT:
<built-in function round> 2 13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:34:51) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round,(vl))
print(mensagem)
-- OUTPUT:
<built-in function round> 13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:35:13) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:35:18) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.142526
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:35:21) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.276961
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:35:22) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.1639
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:35:29) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:35:38) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.237272
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:35:56) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:06) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= int(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    v= int(input())
ValueError: invalid literal for int() with base 10: '15.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:37:13) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= int(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.168027
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1662/2975/main.py", line 3, in <module>
    v= int(input())
ValueError: invalid literal for int() with base 10: '15.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:35) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= int(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    v= int(input())
ValueError: invalid literal for int() with base 10: '15.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:50) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:37:58) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:38:01) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.160826
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:38:34) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (v-s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
16.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:38:48) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.153706
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:38:50) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:39:03) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.185634
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:39:24) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:39:38) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:40:26) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:40:52) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl>=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:40:59) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl>=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.124889
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Nao
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:41:04) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(v-vl>=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.194896
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Nao
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:41:08) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl>=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.182101
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Nao
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:41:10) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl>=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 15:41:27) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- OUTPUT:
13.0
Sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:42:09) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=20):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.164982
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Sim
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 15:43:17) 
-- CODE:
s= int(input("insira a qnt de sucos:"))
sal= int(input("insira a quantidade de salgados:"))
v= float(input("insira o valor disponivel:"))
vl= (s*3+sal*3.50)
if(vl<=v):
	mensagem="Sim"
else:
	mensagem="Nao"
print(round(vl,2))
print(mensagem)
-- EXECUTION TIME:
0.225172
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
