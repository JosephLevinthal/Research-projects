== TEST (2019-06-26 10:53:13) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted(vetor,reverse=true)

for i in range(vetor):
	for j in range(vetor):
		matriz = matriz[i,j]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 10:53:51) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted(vetor,reverse=true)

for i in range(vetor):
	for j in range(vetor):
		matriz = matriz[i,j]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 10:54:34) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted(vetor,reverse=True)

for i in range(vetor):
	for j in range(vetor):
		matriz = matriz[i,j]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:08:40) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted(vetor,reverse=True)

for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 vetor[i] = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			vetor[i] = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			vetor[i] = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			vetor[i] = vetor[3]
print(vetorr)
			
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:09:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted(vetor, reverse=True)

for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 vetor[i] = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			vetor[i] = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			vetor[i] = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			vetor[i] = vetor[3]
print(vetorr)
			
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:11:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)

for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 vetor[i] = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			vetor[i] = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			vetor[i] = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			vetor[i] = vetor[3]
print(vetorr)
			
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:14:16) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
sorted.vetor(reverse=True)

for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 vetor[i] = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			vetor[i] = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			vetor[i] = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			vetor[i] = vetor[3]
print(vetorr)
			
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:24:34) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)

for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:38:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:38:20) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 11:38:20) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
vetor = array(eval(input("Insira a matriz: ")))
vetor = sorted.vetor(reverse=True)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:05:38) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted.vetor(reverse=True)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:05:55) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
v = sorted.vetor(reverse=True)
print (v)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:06:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
v = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (v)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:07:37) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:29:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros(4,4)
for i in range(vetor):
	for j in range(vetor):
		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
			 matriz = vetor[0]
		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
			matriz = vetor[1]
		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
			matriz = vetor[2]
		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:31:00) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
#matriz = zeros(4,4)
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:31:40) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtyper = int)
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:31:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:32:46) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
for w in range (vetor):
	matriz[w]=matriz[w]+ vetor[w]
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:02) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
for w in range size(vetor):
	matriz[w]=matriz[w]+ vetor[w]
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
File "XXXX", line 8
    for w in range size(vetor):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
for w in 16:
	matriz[w]=matriz[w]+ vetor[w]
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:49) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
for w in range(16):
	matriz[w]=matriz[w]+ vetor[w]
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:34:10) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
for w in range(16):
	matriz[w-1]=matriz[w-1]+ vetor[w-1]
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:35:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
while(size(vetor)>w):
	matriz[w]=matriz[w]+ vetor[w]
	w+=1
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:35:30) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
w=0
while(size(vetor)>w):
	matriz[w]=matriz[w]+ vetor[w]
	w+=1
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:36:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
#vetor = array(eval(input("Insira a matriz: ")))
vetor = [[1,10,100,1000],[2,20,200,2000],[3,30,300,3000],[4,40,400,4000]]
vetor = sorted(vetor, reverse=True)#sorted.vetor(reverse=True)
print (vetor)
matriz = zeros((4,4), dtype = int)
w=0
while(size(vetor)>w):
	matriz[w]=matriz[w] + vetor[w]
	w+=1
#for i in range(vetor):
#	for j in range(vetor):
#		if (vetor[i] < vetor[1] and vetor[i] < vetor [2] and vetor[i] < vetor [3]):
#			 matriz = vetor[0]
#		elif (vetor[i] > vetor[0] and vetor[i] < vetor[2] and vetor[i] < vetor[3]):
#			matriz = vetor[1]
#		elif (vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] < vetor[3]):
#			matriz = vetor[2]
#		elif(vetor[i] > vetor[0] and vetor[i] > vetor[1] and vetor[i] > vetor[2]):
#			matriz = vetor[3]
		
print(matriz)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
