== TEST (2019-03-31 16:05:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    t1 = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:05:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    t1 = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:06:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from import math

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- ERROR:
File "XXXX", line 4
    from import math
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:06:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- ERROR:
File "XXXX", line 4
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:06:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:07:27) 
-- CODE:
from math import*

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

R = 2
print(R)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:07:51) 
-- CODE:
from math import*
'''
t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))
'''
R = 2
print(R)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:09:57) 
-- CODE:
from math import*

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

rzin = 6371.01

distantao = rzin*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 16:10:41) 
-- CODE:
from math import*

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

rzin = 6371.01

distantao = rzin*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))

print(distantao)
-- OUTPUT:
50.43792028752357
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 16:11:37) 
-- CODE:
from math import*

t1 = radians(float(input()))
g1 = radians(float(input()))
t2 = radians(float(input()))
g2 = radians(float(input()))

rzin = 6371.01

distantao = rzin*acos(sin(t1)*sin(t2)+cos(t1)*cos(t2)*cos(g1-g2))

print(round(distantao,2))
-- EXECUTION TIME:
0.298028
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
