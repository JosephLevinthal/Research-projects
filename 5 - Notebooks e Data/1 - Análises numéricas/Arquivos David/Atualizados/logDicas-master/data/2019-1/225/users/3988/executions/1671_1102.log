== TEST (2019-04-29 12:51:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o valor: "))
h = float(input("Digite o nível do combustivel: "))

if( h<0 or H<0 or r<0):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:52:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o valor: "))
h = float(input("Digite o nível do combustivel: "))

if( h<0 or H<0 or r<0):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:55:16) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))

if( h<0 or H<0 or r<0):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 12:55:45) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))

if( h<0 or H<0 or r<0):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:06:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:07:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))
j = H - r
if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < j):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:10:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o nível do combustivel: "))
r = float(input("Digite o raio: "))

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:11:47) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:15:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o nível do combustivel: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:15:58) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("n: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
print(round(vol,3))	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
81.987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:19:33) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 82 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:20:04) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 3)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:22:19) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1./3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2./3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4./3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 

print("Volume:", vol, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.98719067828401 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:22:41) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 

print("Volume:", vol, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.98719067828401 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:23:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 3)	
print("Volume:", vol1, "litros")	

-- EXECUTION TIME:
0.144381
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Volume: 133.3 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Volume: 125.664 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 3)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:35:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros"
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- ERROR:
File "XXXX", line 18
    if(( h<0) or (H<0) or (r<0)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:36:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:49:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:50:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- ERROR:
File "XXXX", line 16
    elif(h<r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:50:52) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Entradas invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:51:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",round((vol*1000), 3),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 2.3 , 5.7
Entradas invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 18:51:43) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
r = float(input("Digite o raio: "))
h = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",round((vol*1000), 3),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- EXECUTION TIME:
0.211745
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 2.3 , 5.7
Entradas invalidas
Volume: 81.987191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 2.2 , 9.5
Entradas invalidas
Volume: 133.299871 litros
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 6.0 , 4.0
Entradas invalidas
Volume: 125.663706 litros
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:53:53) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 18:54:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:20:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")
	

if(( h<0) or (H<0) or (r<0)):
	vol = -1
elif(h<r):
	vol = (1/3)* pi * h**2 * (3 * r- h)
elif(h < H - r):
	vol = (2/3)* pi * r**3 + pi * r**2 * (h - r)
elif(h <= H):
	vol = (4/3)* pi * r**3 + pi * r**2 * (h - 2 * r) - (1/3) * pi * (H - h)**2 * (3 * r - H + h)
else:
	vol= -1 
vol1 = round(vol, 6)	
print("Volume:", vol1, "litros")	

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
Volume: 81.987191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:36:06) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(h>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+ 4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Entradas invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:37:35) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+ 4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:37:51) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
H = float(input("Digite a altura: "))
h = float(input("Digite o raio: "))
r = float(input("Digite o volume: "))
print("Entradas:", H, ",", h, ",", r)

if((H>0)and(h>0)and(r>0)and(H>h)and(H>2*r)):
	if(h==r):
		vol= ((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol= (pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h==H-r):
		vol= (pi*(r**2)*(H-2*r)+(2/3)*pi*(r**3))
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<H-r and h>r):
		vol= pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	else:
		vol= pi*(r**2)*(H-2*r)+ 4/3*pi*(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
		print("Volume:",(round((vol*1000), 3)),"litros")
else:
	print("Entradas invalidas")

-- EXECUTION TIME:
0.210275
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
