== TEST (2019-05-13 15:19:46) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 2))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:19:52) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 2))
	

	


-- EXECUTION TIME:
0.192118
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:05) 
-- CODE:
from math import*
pi = eval(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 2))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:20:11) 
-- CODE:
from math import*
pi = eval(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 2))
	

	


-- EXECUTION TIME:
0.162115
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:34) 
-- CODE:
from math import*
pi = eval(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:20:40) 
-- CODE:
from math import*
pi = eval(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- EXECUTION TIME:
0.261491
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:45) 
-- CODE:
from math import*
pi = eval(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:51) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:20:54) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- EXECUTION TIME:
0.120434
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:20:56) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:20:57) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- EXECUTION TIME:
0.217015
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:21:05) 
-- CODE:
from math import*
pi = int(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:21:06) 
-- CODE:
from math import*
pi = int(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- EXECUTION TIME:
0.201266
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
27.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
27.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
27.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:21:08) 
-- CODE:
from math import*
pi = int(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:21:28) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:21:40) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + (4/ 2*3*4 )
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:23:02) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + ((4/ 2*3*4 ) - (4/4*5*6))
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
-3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:23:03) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + ((4/ 2*3*4 ) - (4/4*5*6))
	c = c + 3
print(round(pi, 8))
	

	


-- EXECUTION TIME:
0.170147
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
-3.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
-3.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
-3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:23:04) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c =0

while(c<pi):
	pi = 3 + ((4/ 2*3*4 ) - (4/4*5*6))
	c = c + 3
print(round(pi, 8))
	

	


-- OUTPUT:
-3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:47:22) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + (-1**(c+2)) * 4/(i+0)*(i+1)*(i+2)
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
-117.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:47:39) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<e):
	e = e + (-1**(c+2)) * 4/(i+0)*(i+1)*(i+2)
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
-21.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:49:10) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<e):
	e = e + aux * 4/(i+0)*(i+1)*(i+2)
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:49:30) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<e):
	e = e + (aux * 4/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:49:36) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<e):
	e = e + (aux * 4/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- EXECUTION TIME:
0.184899
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.0
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.0
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:51:26) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + (aux * 4/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:51:47) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:53:22) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2.0
aux = 1
while(c<pi):
	e = e + aux * (4/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:53:32) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
	
	

	

	


-- OUTPUT:
27.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:54:42) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi-1):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
print(round(e, 8))
-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:56:40) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+2
print(round(e, 8))
-- OUTPUT:
42.13333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:56:48) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+2
print(round(e, 8))
-- EXECUTION TIME:
0.190431
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
42.13333333
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
-82.31625638
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
97.87508561
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 15:57:19) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+3
print(round(e, 8))
-- OUTPUT:
50.24415584
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 15:57:20) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+3
print(round(e, 8))
-- EXECUTION TIME:
0.203617
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
50.24415584
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
-126.07171403
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
134.05792386
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:53:55) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = 1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+2
print(round(e, 8))
-- OUTPUT:
42.13333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 21:55:10) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
e = 3
i = 2
aux = -1
while(c<pi):
	e = e + aux * (4.0/(i+0)*(i+1)*(i+2))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	i = i+2
print(round(e, 8))
-- OUTPUT:
-36.13333333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:20:05) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
d = 0
e = 0
aux = -1
while(c<pi):
	if(c==0):
		e= e+3
	else:
	e = e + (aux * (4/(d*(d+1)*(d+2))))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
print(round(e, 8))
-- ERROR:
File "XXXX", line 11
    e = e + (aux * (4/(d*(d+1)*(d+2))))
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:20:27) 
-- CODE:
from math import*
pi = float(input("Valor de pi: "))
c = 0
d = 0
e = 0
aux = -1
while(c<pi):
	if(c==0):
		e= e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
print(round(e, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:21:12) 
-- CODE:
from math import*
pi = int(input("Valor de pi: "))
c = 0
d = 0
e = 0
aux = -1
while(c<pi):
	if(c==0):
		e= e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
print(round(e, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 22:21:49) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	if(c==0):
		e= e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
print(round(e, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 22:21:55) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	if(c==0):
		e= e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
print(round(e, 8))
-- EXECUTION TIME:
0.151026
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 09:39:10) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	e = e + (aux * (4/(d*(d+1)*(d+2))))
	
		
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
e = e+3
print(round(e, 8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    e = e + (aux * (4/(d*(d+1)*(d+2))))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 09:39:13) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	e = e + (aux * (4/(d*(d+1)*(d+2))))
	
		
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2
e = e+3
print(round(e, 8))
-- EXECUTION TIME:
0.144147
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1712/2508/main.py", line 8, in <module>
    e = e + (aux * (4/(d*(d+1)*(d+2))))
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 09:40:13) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	if(c==0):
		e = e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
		
	
	
		
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 09:40:16) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 0
aux = -1
while(c<n):
	if(c==0):
		e = e+3
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
		
	
	
		
	
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- EXECUTION TIME:
0.177561
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 13:50:16) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 3
aux = -1
while(c<n):
	if(c==0):
		e = e
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- EXECUTION TIME:
0.195924
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 13:50:32) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 2
e = 3
aux = -1
while(c<n):
	if(c==0):
		e = e
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- EXECUTION TIME:
0.218246
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.02395382
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.02509451
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.02504286
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:50:41) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 3
aux = -1
while(c<n):
	if(c==0):
		e = e
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- OUTPUT:
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 13:50:42) 
-- CODE:
from math import*
n = int(input())
c = 0
d = 0
e = 3
aux = -1
while(c<n):
	if(c==0):
		e = e
	else:
		e = e + (aux * (4/(d*(d+1)*(d+2))))
	if(aux==1):
		aux=-1
	else:
		aux=1
	c = c+1
	d = d+2

print(round(e, 8))
-- EXECUTION TIME:
0.183754
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
