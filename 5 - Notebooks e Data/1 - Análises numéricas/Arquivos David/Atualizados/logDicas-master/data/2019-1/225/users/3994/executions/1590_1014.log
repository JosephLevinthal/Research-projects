== TEST (2019-03-22 22:11:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("Digite um valor")
print = (var1*0,3)
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:12:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("Digite um valor")
print = (var1*0,3)
-- EXECUTION TIME:
0.129343
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:12:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = (var1*0,3)
-- EXECUTION TIME:
0.190861
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:12:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = (var1*0,3)
-- EXECUTION TIME:
0.14483
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:12:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = (var1*0,3)
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:12:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = (var1*0.3)
-- EXECUTION TIME:
0.122405
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:12:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = (var1*0.3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:12:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= input("200")
print = float (var1*0.3)
-- EXECUTION TIME:
0.204187
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 5, in <module>
    print = float (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:14:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print =  (var1*0.3)
-- EXECUTION TIME:
0.130368
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:14:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print =  (var1*0.3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:14:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print =  (var1*0.3)
-- EXECUTION TIME:
0.189655
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:14:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:14:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3)
-- EXECUTION TIME:
0.15326
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:15:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3, round(x,2))
-- EXECUTION TIME:
0.148177
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 5, in <module>
    print = (var1*0.3, round(x,2))
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:16:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3, round(var1,2))
-- EXECUTION TIME:
0.143397
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:16:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3, round(var1,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:18:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = round(var1*0.3,2)
-- EXECUTION TIME:
0.183716
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:18:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = round(var1*0.3,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:18:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = round(var1*0.3,2)
-- EXECUTION TIME:
0.140854
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:19:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = (var1*0.3), round(var1,x)
-- EXECUTION TIME:
0.142217
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1590/1014/main.py", line 5, in <module>
    print = (var1*0.3), round(var1,x)
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 23:51:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = round(var1*0.3,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (var1*0.3)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 23:51:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print = round(var1*0.3,2)
-- EXECUTION TIME:
0.133572
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 13:42:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print(round(var1*0.3,2))
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 13:42:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1= float(input("Digite um numero"))
print(round(var1*0.3,2))
-- EXECUTION TIME:
0.141562
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
