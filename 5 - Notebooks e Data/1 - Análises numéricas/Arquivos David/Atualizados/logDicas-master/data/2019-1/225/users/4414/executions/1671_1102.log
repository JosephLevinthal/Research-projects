== SUBMITION (2019-04-29 22:27:16) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
		elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
		elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
		else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.211239
-- ERROR:
  File "/home/codebench/codes/1671/1102/main.py", line 16
    elif(h==H-r):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:27:19) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
		elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
		elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
		else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 16
    elif(h==H-r):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:28:45) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
	elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
	elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
	else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.152473
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas 11.3 , 5.7 , 2.3
volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 22:28:49) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
	elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
	elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
	else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas 11.3 , 5.7 , 2.3
volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:29:47) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas:",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
	elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
	elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
	else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.173242
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:29:51) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas:",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("volume:",(round((vol*1000),3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000),3)),"litros")
		
	elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("volume:",(vol*1000),"litros")
	elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("volume:",(round((vol*1000),3)),"litros")
			
	else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000),3)),"litros")
			
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.215072
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 22:32:57) 
-- CODE:
H=float(input("Altura total do tanque:"))
h=float(input("nivel de combustivel no tanque:"))
r=float(input("raio inferior e superior:"))

print("Entradas:",H,",",h,",",r)

from math import*
if((H>0) and (h>0) and (r>0) and (H>h) and (H>2*r)):
	if(h==r):
		vol=((4/3)*pi*(r**3))/2
		print("Volume:",(round((vol*1000), 3)),"litros")
	elif(h<r):
		vol=(pi/3)*(h**2)*(3*r-h)
		print("Volume:",(round((vol*1000), 3)),"litros")
		
	elif(h==H-r):
			vol=round(((pi*(r**2) * (H-2*r)) +(2/3)*pi*(r**3)),3)
			print("Volume:",(vol*1000),"litros")
	elif (h<H and h>r):
			vol=pi*(r**2)*(h-r)+((4/3)*pi*(r**3))/2
			print("Volume:",(round((vol*1000), 3)),"litros")
			
	else:
			vol=pi*(r**2)*(H-2*r)+4/3*pi(r**3)-(pi/3)*((H-h)**2)*(3*r-(H-h))
			print("volume:",(round((vol*1000), 3)),"litros")
			
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.183195
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
