== TEST (2019-04-22 20:38:17) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print("x pertence ao intervalo a, b")
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print("x nao pertence ao intervalo a, b")

-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 20:43:30) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print(x "pertence ao intervalo" a, b)
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print(x "nao pertence ao intervalo" a, b)

-- EXECUTION TIME:
0.183822
-- ERROR:
  File "/home/codebench/codes/1671/1103/main.py", line 6
    print(x "pertence ao intervalo" a, b)
                                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:43:31) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print(x "pertence ao intervalo" a, b)
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print(x "nao pertence ao intervalo" a, b)

-- ERROR:
File "XXXX", line 6
    print(x "pertence ao intervalo" a, b)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:43:36) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print(x "pertence ao intervalo" a, b)
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print(x "nao pertence ao intervalo" a, b)

-- ERROR:
File "XXXX", line 6
    print(x "pertence ao intervalo" a, b)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:44:41) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print("x pertence ao intervalo a, b")
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print("x nao pertence ao intervalo a, b")

-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:49:57) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= "x" <= b):
	print("x pertence ao intervalo a, b")
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print("x nao pertence ao intervalo a, b")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a <= "x" <= b):
TypeError: '<=' not supported between instances of 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:50:27) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print("x pertence ao intervalo a, b")
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print("x nao pertence ao intervalo a, b")

-- OUTPUT:
x nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 20:51:37) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print(x , "pertence ao intervalo" a , b)
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print(x , "nao pertence ao intervalo" a , b)

-- ERROR:
File "XXXX", line 6
    print(x , "pertence ao intervalo" a , b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:53:56) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (a <= x <= b):
	print(x, "pertence ao intervalo", a ",", b)
elif (b <= a):
	print("Entradas a e b invalidas")
else: 
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:55:38) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print("Entradas a e b invalidas")
else: 
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:56:03) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print (x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print("Entradas a e b invalidas")
else: 
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print (x, "pertence ao intervalo", a ",", b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:56:19) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print (x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print("Entradas a e b invalidas")
else: 
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print (x, "pertence ao intervalo", a ",", b)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:56:23) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print("Entradas a e b invalidas")
else: 
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:57:59) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)
else: 
	print("Entradas", a ",", b "invalidas")

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:58:18) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:58:20) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:58:20) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:58:20) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:58:20) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
elif ((a > x) and (x >= b)):
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 6
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:33:27) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas:", a ",", b "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 5
    print("Entradas:", a ",", b "invalidas")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:34:13) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas", a "e" b "invalidas" )
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 5
    print("Entradas", a "e" b "invalidas" )
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:34:30) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas", a ,"e", b "invalidas" )
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 5
    print("Entradas", a ,"e", b "invalidas" )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:34:32) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas", a ,"e", b "invalidas" )
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 5
    print("Entradas", a ,"e", b "invalidas" )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:38:23) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 5
    print("Entradas",a ",", b, "invalidas")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:00) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ",", b)

-- ERROR:
File "XXXX", line 7
    print(x, "pertence ao intervalo", a ",", b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:08) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:22) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:39:31) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.280835
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:41) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:39:53) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:40:11) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:40:53) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:41:08) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (b <=a):
	print("Entradas",a ,",", b, "invalidas")
if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:43:23) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <=a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:43:40) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <=a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.156462
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:44:00) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <=a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:49:28) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <=a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:59:18) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b < a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:59:23) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b < a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:59:34) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a <= x) and  (x<= b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b < a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.174485
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:02:36) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:02:44) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:02:52) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.181215
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:03:24) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:03:31) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:03:40) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.146854
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:04:53) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif ((a <= x) and (x <= b) and (b == a)):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:05:03) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif ((a <= x) and (x <= b) and (b == a)):
	print("Entradas",a ,",", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.132095
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:06:13) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif ((a == x) and (x == b) and (b == a)):
	print("Entradas",a ,"e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:06:27) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b) and (b != a)):
	print(x, "pertence ao intervalo", a ,",", b)
elif ((a == x) and (x == b) and (b == a)):
	print("Entradas",a ,"e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.160966
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:08:16) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,"e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:08:28) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if ((a < x) and  (x < b)):
	print(x, "pertence ao intervalo", a ,",", b)
elif (b <= a):
	print("Entradas",a ,"e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo" ,a ,",", b)

-- EXECUTION TIME:
0.165535
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
