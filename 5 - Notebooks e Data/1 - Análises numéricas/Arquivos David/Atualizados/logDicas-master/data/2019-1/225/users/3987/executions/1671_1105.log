== TEST (2019-04-24 14:46:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = float(input("descrição do brasao:"))
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d = float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:47:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = int(input("descrição do brasao:"))
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d = int(input())
ValueError: invalid literal for int() with base 10: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:47:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = int(input("descricao do brasao:"))
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d = int(input())
ValueError: invalid literal for int() with base 10: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:47:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = float(input("descricao do brasao:"))
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.15645
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1671/1105/main.py", line 3, in <module>
    d = float(input())
ValueError: could not convert string to float: 'lula'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:47:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = float(input("descricao do brasao:"))
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d = float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:48:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = float(input("descricao do brasao:"))
print("Entrada:", d)

if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    d = float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:49:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = input("descricao do brasao:"))
print("Entrada:", d)

if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
File "XXXX", line 3
    d = input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:50:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = input("descricao do brasao:")
print("Entrada:", d)

if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (d == lobo):
NameError: name 'lobo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:57:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = input("descricao do brasao:")
print("Entrada:", d)
if (d == lobo):
	print("Casa:","Stark")
elif (d == leao):
	print("Casa:","Lannister")
elif (d == veado):
	print("Casa:","Baratheon")
elif (d == dragao):
	print("Casa:","Targaryen")
elif (d == rosa):
	print("Casa:","Tyrell")
elif (d == sol):
	print("Casa:","Martell")
elif (d == lula):
	print("Casa:","Greyjoy")
elif (d == esfolado):
	print("Casa:","Bolton")
elif (d == turta):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (d == lobo):
NameError: name 'lobo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:01:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = input("descricao do brasao:")
print("Entrada:", d)
if (d == "lobo"):
	print("Casa:","Stark")
elif (d == "leao"):
	print("Casa:","Lannister")
elif (d == "veado"):
	print("Casa:","Baratheon")
elif (d == "dragao"):
	print("Casa:","Targaryen")
elif (d == "rosa"):
	print("Casa:","Tyrell")
elif (d == "sol"):
	print("Casa:","Martell")
elif (d == "lula"):
	print("Casa:","Greyjoy")
elif (d == "esfolado"):
	print("Casa:","Bolton")
elif (d == "turta"):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:01:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
d = input("descricao do brasao:")
print("Entrada:", d)
if (d == "lobo"):
	print("Casa:","Stark")
elif (d == "leao"):
	print("Casa:","Lannister")
elif (d == "veado"):
	print("Casa:","Baratheon")
elif (d == "dragao"):
	print("Casa:","Targaryen")
elif (d == "rosa"):
	print("Casa:","Tyrell")
elif (d == "sol"):
	print("Casa:","Martell")
elif (d == "lula"):
	print("Casa:","Greyjoy")
elif (d == "esfolado"):
	print("Casa:","Bolton")
elif (d == "turta"):
	print("Casa:","Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.173796
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
