== TEST (2019-03-22 19:41:36) 
-- CODE:
# Teste seu codigo aos poucos.
litros = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 3
    g1=radians(float(input())
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:42:45) 
-- CODE:
# Teste seu codigo aos poucos.
litros = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = (litros//3)

print(restante)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    restante = (litros//3)
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:43:16) 
-- CODE:
# Teste seu codigo aos poucos.
litros = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = int(litros//3)

print(restante)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    restante = int(litros//3)
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:43:35) 
-- CODE:
# Teste seu codigo aos poucos.
litros = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = int(litros/3)

print(restante)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    restante = int(litros/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:43:51) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = int(var/3)

print(restante)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    restante = int(var/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:44:17) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = float(var/3)

print(restante)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    restante = float(var/3)
TypeError: unsupported operand type(s) for /: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:44:30) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = float(var)/3

print(restante)

-- OUTPUT:
2.3333333333333335
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 19:44:35) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
restante = float(var)/3

print(restante)

-- EXECUTION TIME:
0.139986
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.3333333333333335
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 19:45:35) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d= float(var)/3
restante = round(d,3)
print(restante)

-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 19:45:41) 
-- CODE:
# Teste seu codigo aos poucos.
var = input("litros:")
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
d= float(var)/3
restante = round(d,3)
print(restante)

-- EXECUTION TIME:
0.216496
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
