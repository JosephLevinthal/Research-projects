== TEST (2019-04-24 14:30:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + cons +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500)
	print("Valor total: R$" + str(con * 0,44))
-- ERROR:
File "XXXX", line 9
    if(i.upper() == "R" and con < 500)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:30:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + cons +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + str(con * 0,44))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entrada:" + cons +"kWh e tipo" + i)
NameError: name 'cons' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:35:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + cons +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + str(con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entrada:" + cons +"kWh e tipo" + i)
NameError: name 'cons' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:35:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + cons +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + str(con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entrada:" + cons +"kWh e tipo" + i)
NameError: name 'cons' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:36:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")


if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + str(con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + str(con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 17, in <module>
    print("Valor total: R$" + str(con * 0,55))
TypeError: str() argument 2 must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:37:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + con +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + (con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + (con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + (con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + (con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entrada:" + con +"kWh e tipo" + i)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:37:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + con +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + (con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + (con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + (con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + (con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Entrada:" + con +"kWh e tipo" + i)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:38:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + str(con) +"kWh e tipo" + i)

if(i.upper() == "R" and con < 500):
	print("Valor total: R$" + (con * 0,44))
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + (con * 0,65))
elif(i.upper() == "C" and con < 1000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + (con * 0,60))
elif(i.upper() == "I" and con < 5000):
	print("Valor total: R$" + (con * 0,55))
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + (con * 0,60))
else:
	print("Dados invalidos")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print("Valor total: R$" + (con * 0,55))
TypeError: must be str, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:42:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + str(con) +"kWh e tipo" + i)

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$" + str(round(con * 0,44)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(round(con * 0,65)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$" + str(round(con * 0,55)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(round(con * 0,60)))
	
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(round(con * 0,60)))
	
else:
	print("Dados invalidos")



-- OUTPUT:
Entrada:-56.0kWh e tipoI
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:45:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$" + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$" + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- OUTPUT:
Entrada:-56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:45:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada:" + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$" + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$" + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.149748
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada:-56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada:955.5 kWh e tipo R
Valor total: R$621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:45:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$" + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$" + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con > 500):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.136587
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kWh e tipo R
Valor total: R$621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:47:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$" + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$" + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$" + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$" + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$" + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.138182
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kWh e tipo I
Valor total: R$-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kWh e tipo R
Valor total: R$621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:48:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entrada: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.148734
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:50:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.13812
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:52:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:52:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 14:53:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")



-- EXECUTION TIME:
0.13112
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:57:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:57:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 14:58:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:00:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.141117
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:02:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.209602
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:02:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 15:04:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:06:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(con > 0 and i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.160634
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 15:06:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
con = float(input("consumo de energia: "))
i = input("tipo de instalacao (R /I /C)")

print("Entradas: " + str(con) +" kWh e tipo " + i.upper())

if(con > 0 and i.upper() == "R" and con <= 500):
	print("Valor total: R$ " + str(round(con * 0.44, 2)))
	
elif(con > 0 and i.upper() == "R" and con > 500):
	print("Valor total: R$ " + str(round(con * 0.65, 2)))
	
elif(con > 0 and i.upper() == "C" and con <= 1000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(con > 0 and i.upper() == "C" and con > 1000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
elif(con > 0 and i.upper() == "I" and con <= 5000):
	print("Valor total: R$ " + str(round(con * 0.55, 2)))
	
elif(con > 0 and i.upper() == "I" and con > 5000):
	print("Valor total: R$ " + str(round(con * 0.60, 2)))
	
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.148594
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
