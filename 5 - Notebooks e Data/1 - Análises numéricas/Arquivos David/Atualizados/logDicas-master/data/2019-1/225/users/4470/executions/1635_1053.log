== TEST (2019-04-07 20:41:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:41:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:42:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:42:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:45:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:45:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patronum + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 20:45:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patronum = input()

if (patronum == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patronum + "nao eh patrono do Harry Potter"
	
print(msg)
-- EXECUTION TIME:
0.126801
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 7, in <module>
    if (patronum == cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:46:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:46:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:47:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono = cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
File "XXXX", line 7
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:47:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == cervo):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:48:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:48:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:48:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:48:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	msg = "cervo eh patrono de Harry Potter"
	
else: 
	msg = patrono + "nao eh patrono do Harry Potter"
	
print(msg)
-- OUTPUT:
cervo eh patrono de Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 20:49:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono de Harry Potter"
	
else: 
	mensagem = patrono + "nao eh patrono do Harry Potter"
	
print(mensagem)
-- EXECUTION TIME:
0.148543
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 20:50:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono de Harry Potter"
	
else: 
	mensagem = patrono + "nao eh patrono do Harry Potter"
	
print(mensagem)
-- EXECUTION TIME:
0.199435
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono de Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:51:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + "nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 20:51:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + "nao eh patrono do Harry Potter"
	
print(mensagem)
-- EXECUTION TIME:
0.137787
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:51:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:51:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 20:52:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 20:52:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input()

if (patrono == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
	
else: 
	mensagem = patrono + " nao eh patrono do Harry Potter"
	
print(mensagem)
-- EXECUTION TIME:
0.233552
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
