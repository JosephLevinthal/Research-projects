== SUBMITION (2019-04-14 17:48:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter")

if (patrono == cervo):
	print(cervo_eh_patrono_do_herry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- EXECUTION TIME:
0.117813
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 17:50:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter")

if (patrono == cervo):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- EXECUTION TIME:
0.16728
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:50:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter")

if (patrono == cervo):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patrono == cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:50:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if (patrono = cervo):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if (patrono = cervo):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:51:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono = cervo):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono = cervo):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:51:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono = "cervo"):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono = "cervo"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:51:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono =="cervo"):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(cervo_eh_patrono_do_harry_potter)
NameError: name 'cervo_eh_patrono_do_harry_potter' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:53:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == cervo)  
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono == cervo)  
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:53:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono =  cervo)  
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono =  cervo)  
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:53:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == cervo)  
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono == cervo)  
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:53:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == cervo)  :
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(patrono == cervo)  :
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:54:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == cervo)
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
File "XXXX", line 7
    if(patrono == cervo)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:55:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == "cervo"):
	print(cervo_eh_patrono_do_harry_potter)
else:
	print(nao_eh_patrono_do_harry_potter)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(cervo_eh_patrono_do_harry_potter)
NameError: name 'cervo_eh_patrono_do_harry_potter' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 17:58:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if(patrono == "cervo"):
	print("corvo_eh_patrono_do_harry_potter")
else:
	print("nao_eh_patrono_do_harry_potter")

-- OUTPUT:
corvo_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:02:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if (patrono == corvo):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if (patrono == corvo):
NameError: name 'corvo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:02:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = input("Escreva um feitico do harry potter: ")

if (patrono == corvo):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- EXECUTION TIME:
0.187564
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 7, in <module>
    if (patrono == corvo):
NameError: name 'corvo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:05:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

feiticio = ("Escreva um feitico do harry potter: ")


if (patrono == feiticio):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (patrono == feiticio):
NameError: name 'patrono' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:07:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = ("Escreva um patrono do harry potter: "


if (corvo == feiticio):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
File "XXXX", line 8
    if (corvo == feiticio):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:07:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = ("Escreva um patrono do harry potter: "


if (corvo == patrono):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
File "XXXX", line 8
    if (corvo == patrono):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:01:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = ("Escreva um patrono do harry potter: ")


if (corvo == patrono):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- EXECUTION TIME:
0.15566
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1053/main.py", line 8, in <module>
    if (corvo == patrono):
NameError: name 'corvo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:01:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = ("Escreva um patrono do harry potter: ")


if (corvo == patrono):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (corvo == patrono):
NameError: name 'corvo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:02:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

patrono = ("Escreva um patrono do harry potter: ")


if (corvo == "patrono"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (corvo == "patrono"):
NameError: name 'corvo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:03:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = ("Escreva um patrono do harry potter: ")


if (p == patrono):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if (p == patrono):
NameError: name 'patrono' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:03:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = ("Escreva um patrono do harry potter: ")


if (p == "patrono"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- OUTPUT:
nao_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:03:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = ("Escreva um patrono do harry potter: ")


if (p == "patrono"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- OUTPUT:
nao_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:03:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "patrono"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- OUTPUT:
nao_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:04:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- OUTPUT:
cervo_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:04:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- OUTPUT:
cervo_eh_patrono_do_harry_potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:04:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo_eh_patrono_do_harry_potter"
else:
	mensagem = "nao_eh_patrono_do_harry_potter"	

print(mensagem)
-- EXECUTION TIME:
0.184041
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo_eh_patrono_do_harry_potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao_eh_patrono_do_harry_potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:18:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"	

print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:19:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"	

print(mensagem)
-- EXECUTION TIME:
0.14086
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:20:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"	

print(mensagem)
-- EXECUTION TIME:
0.160182
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:20:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"	

print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:20:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"	

print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:21:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"	

print(mensagem)
-- EXECUTION TIME:
0.174903
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:22:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msgm = "nao eh patrono do Harry Potter"	

print(p, msg)
-- OUTPUT:
cervo cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:22:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = " eh patrono do Harry Potter"
else:
	msgm = "nao eh patrono do Harry Potter"	

print(p, msg)
-- EXECUTION TIME:
0.159607
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msgm = "nao eh patrono do Harry Potter"	

print(p, msg)
-- EXECUTION TIME:
0.18807
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:23:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- EXECUTION TIME:
0.138072
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:23:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- OUTPUT:
cervo cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:23:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, "msg")
-- OUTPUT:
cervo msg
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:24:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "cervo eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- OUTPUT:
cervo cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:24:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:24:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:24:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

p = input("Escreva um patrono do harry potter: ")


if (p == "cervo"):
	msg = "eh patrono do Harry Potter"
else:
	msg = "nao eh patrono do Harry Potter"	

print(p, msg)
-- EXECUTION TIME:
0.143817
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
