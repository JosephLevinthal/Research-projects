== TEST (2019-04-22 10:48:46) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
if(suco + salgado < dinheiro):
	print(round(sim, 2))

else:
	print(round(nao, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(sim, 2))
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:49:26) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
if(suco + salgado < dinheiro):
	print = (round(sim, 2))

else:
	print = (round(nao, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print = (round(sim, 2))
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:52:10) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
if(suco + salgado < dinheiro):
	msg = sim

else:
	msg = nao
print(round(msg, 2)
-- ERROR:
File "XXXX", line 10
    
                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:54:34) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = suco + salgado
if(total < dinheiro):
   msg = sim
else:
	msg = nao
print(round(msg, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    msg = sim
NameError: name 'sim' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:55:09) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = suco + salgado
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(msg, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(msg, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:55:30) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = suco + salgado
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round("msg", 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round("msg", 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:56:24) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = suco + salgado
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:57:39) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = (suco + salgado) - dinehiro
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    total = (suco + salgado) - dinehiro
NameError: name 'dinehiro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:57:57) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = (suco + salgado) - dinheiro
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
-- OUTPUT:
-11.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 10:58:17) 
-- CODE:
suco = float(input("qual a quantidade de sucos? "))
salgado = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
total = suco + salgado - dinheiro
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
-- OUTPUT:
-11.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 11:00:10) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
-- OUTPUT:
13.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 11:00:36) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total + msg, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(total + msg, 2))
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 11:01:07) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, msg, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(total, msg, 2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 11:01:48) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
print(msg)
-- OUTPUT:
13.0
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 11:01:58) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
print(msg)
-- EXECUTION TIME:
0.155396
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 11:02:14) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "sim"
else:
	msg = "nao"
print(round(total, 2))
print(msg)
-- OUTPUT:
13.0
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 11:02:36) 
-- CODE:
sucos = float(input("qual a quantidade de sucos? "))
salgados = float(input("qual a quantidade de salgados? "))
dinheiro = float(input("dinheiro disponivel? "))
suco = 3
salgado = 3.50
total = (suco * sucos) + (salgado *salgados)
if(total < dinheiro):
   msg = "Sim"
else:
	msg = "Nao"
print(round(total, 2))
print(msg)
-- EXECUTION TIME:
0.176575
-- TEST CASE 1:
---- input:
2
2
15.0
---- correct output:
13.0
Sim
---- user output:
13.0
Sim
-- TEST CASE 2:
---- input:
1
2
8.0
---- correct output:
10.0
Nao
---- user output:
10.0
Nao
-- TEST CASE 3:
---- input:
3
5
25.50
---- correct output:
26.5
Nao
---- user output:
26.5
Nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
