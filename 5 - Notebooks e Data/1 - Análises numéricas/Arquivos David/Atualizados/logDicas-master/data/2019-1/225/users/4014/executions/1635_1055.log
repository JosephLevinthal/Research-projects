== SUBMITION (2019-04-12 14:04:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
g=9.8
Vo=float(input("Vo: "))
alpha=radians(float(input("alpha:")))
D=float(input("D:"))
R=((Vo)**2*sin(2*alpha))/g
if()


-- EXECUTION TIME:
0.130338
-- ERROR:
  File "/home/codebench/codes/1635/1055/main.py", line 9
    if()
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 14:05:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
g=9.8
Vo=float(input("Vo: "))
alpha=radians(float(input("alpha:")))
D=float(input("D:"))
R=((Vo)**2*sin(2*alpha))/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alpha=radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 14:05:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
g=9.8
Vo=float(input("Vo: "))
alpha=radians(float(input("alpha:")))
D=float(input("D:"))
R=((Vo)**2*sin(2*alpha))/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")



-- EXECUTION TIME:
0.122656
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/1055/main.py", line 6, in <module>
    alpha=radians(float(input()))
NameError: name 'radians' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 14:10:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g=9.8
Vo=float(input("Vo: "))
alpha=radians(float(input("alpha:")))
D=float(input("D:"))
R=((Vo)**2*sin(2*alpha))/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")



-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 14:11:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
g=9.8
Vo=float(input("Vo: "))
alpha=radians(float(input("alpha:")))
D=float(input("D:"))
R=((Vo)**2*sin(2*alpha))/g
if(abs(D-R)<=0.1):
	print("sim")
else:
	print("nao")



-- EXECUTION TIME:
0.158916
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
