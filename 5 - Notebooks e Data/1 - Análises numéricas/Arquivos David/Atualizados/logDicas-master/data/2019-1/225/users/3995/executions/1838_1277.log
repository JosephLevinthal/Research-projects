== TEST (2019-06-24 15:54:45) 
-- CODE:
m=[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:54:52) 
-- CODE:
m=[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:55:07) 
-- CODE:
m=[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:55:27) 
-- CODE:
m=[
[0,2,11,6,15,11,1],
[2,0,7,12,4,2,15],
[11,7,0,11,8,3,13],
[6,12,11,0,10,2,1],
[15,4,8,10,0,5,13],
[11,2,3,2,5,0,14],
[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:55:32) 
-- CODE:
m=[
[0,2,11,6,15,11,1],
[2,0,7,12,4,2,15],
[11,7,0,11,8,3,13],
[6,12,11,0,10,2,1],
[15,4,8,10,0,5,13],
[11,2,3,2,5,0,14],
[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:55:52) 
-- CODE:
m=[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:56:16) 
-- CODE:
m=	[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posição coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:56:30) 
-- CODE:
m=	[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posicao coluna")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 15:56:38) 
-- CODE:
m=	[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posicao coluna:")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 15:56:41) 
-- CODE:
m=	[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posicao coluna:")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- EXECUTION TIME:
0.742571
-- TEST CASE 1:
---- input:
777
666
---- correct output:
14
---- user output:
14
-- TEST CASE 2:
---- input:
555
111
---- correct output:
15
---- user output:
15
-- TEST CASE 3:
---- input:
333
777
---- correct output:
13
---- user output:
13
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 01:50:28) 
-- CODE:
m=	[
	[0,2,11,6,15,11,1],
	[2,0,7,12,4,2,15],
	[11,7,0,11,8,3,13],
	[6,12,11,0,10,2,1],
	[15,4,8,10,0,5,13],
	[11,2,3,2,5,0,14],
	[1,15,13,1,13,14,0]]

k=input("posicao linha:")
l=input("posicao coluna:")

v=int(k[0])-1
z=int(l[0])-1
print(m[v][z])
-- OUTPUT:
14
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
