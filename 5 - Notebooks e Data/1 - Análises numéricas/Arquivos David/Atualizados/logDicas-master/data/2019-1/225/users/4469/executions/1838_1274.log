== TEST (2019-06-19 12:42:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n))

for i in range(1:n):
	for j in range(1:n):
		m[i, j] = i + 1

print(m)
-- ERROR:
File "XXXX", line 8
    for i in range(1:n):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 12:42:32) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n))

for i in range[1:n]:
	for j in range[1:n]:
		m[i, j] = i + 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 12:43:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)

for i in range[1:n]:
	for j in range[1:n]:
		m[i, j] = i + 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 12:45:18) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)

for i in range(1,n):
	for j in range(1,n):
		m[i, j] = i + 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 12:57:47) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = k = 1

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k + 1
	k += 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:04:17) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k
	k += 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:12:12) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		if(j == i):
			for l in range(i + 1,n):
				m[l, j] = l + 1
		j += 1
	j = k
	k += 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:16:58) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k
	k += 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 13:30:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k
	k += 1
	
i = 1
k = 2

for j in range(1, n):
	while(i < n):
		m[i, j] = j + 1
		i += 1
	i = k
	k += 1

print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 13:30:28) 
-- CODE:
from numpy import *
from numpy.linalg import *

n = int(input())

m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k
	k += 1
	
i = 1
k = 2

for j in range(1, n):
	while(i < n):
		m[i, j] = j + 1
		i += 1
	i = k
	k += 1

print(m)
-- EXECUTION TIME:
1.14226
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-22 22:08:52) 
-- CODE:
from numpy import *

n = int(input())
m = ones((n, n), dtype = int)
j = 1
k = 2

for i in range(1,n):
	while(j < n):
		m[i, j] = i + 1
		j += 1
	j = k
	k += 1
	
i = 1
k = 2
for j in range(1, n):
	while(i < n):
		m[i, j] = j + 1
		i += 1
	i = k
	k += 1

print(m)
-- EXECUTION TIME:
1.122
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
