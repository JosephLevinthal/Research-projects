== TEST (2019-03-21 15:35:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a"))
var2=int(input("b"))
var3=int(input("c"))
print(min(a,b,c))
print(max(a,b,c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(min(a,b,c))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:36:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(a,b,c))
print(max(a,b,c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(min(a,b,c))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:36:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:39:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(2min(var1,var2,var3))
print(max(var1,var2,var3))
-- ERROR:
File "XXXX", line 8
    print(2min(var1,var2,var3))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:39:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(min2(var1,var2,var3))
print(max(var1,var2,var3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(min2(var1,var2,var3))
NameError: name 'min2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:40:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
-- OUTPUT:
-2
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:41:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min2=(var1,var2,var3)
print(min(var1,var2,var3)<min2)

print(max(var1,var2,var3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(min(var1,var2,var3)<min2)
TypeError: '<' not supported between instances of 'int' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:41:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min2=(var1,var2,var3)
print(min(var1,var2,var3)<min2)

print(max(var1,var2,var3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(min(var1,var2,var3)<min2)
TypeError: '<' not supported between instances of 'int' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:41:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min2=(var1,var2,var3)
print(min(var1,var2,var3)<min2)
print(max(var1,var2,var3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(min(var1,var2,var3)<min2)
TypeError: '<' not supported between instances of 'int' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:43:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print(var1+var2+var3-min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-min-max)
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:44:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print((var1+var2+var3)-(max+min))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print((var1+var2+var3)-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:45:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min(var1,var2,var3)
max(var1,var2,var3)
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:46:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min(var1,var2,var3)
max(var1,var2,var3)
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print(var1+var2+var3-(max+min))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(var1+var2+var3-(max+min))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:49:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print(var1+var2+var3)

-- OUTPUT:
-2
10
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:50:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print(var1+var2+var3-(min+max))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-(min+max))
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:51:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
print(var1+var2+var3)

-- OUTPUT:
-2
10
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:52:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))
min="x"
max="y"
print(var1+var2+var3-(x+y))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(var1+var2+var3-(x+y))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:52:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
x=print(min(var1,var2,var3))
y=print(max(var1,var2,var3))
print(var1+var2+var3-(x+y))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-(x+y))
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:53:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
x=print(min(var1,var2,var3))
y=print(max(var1,var2,var3))
print(var1+var2+var3-x-y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(var1+var2+var3-x-y)
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:53:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
x=print(min(var1,var2,var3))
y=print(max(var1,var2,var3))
print(int(var1+var2+var3-x-y))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(int(var1+var2+var3-x-y))
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:54:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
x=print(min(var1,var2,var3))
y=print(max(var1,var2,var3))
print(x+y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(x+y)
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:54:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
x=print(min(var1,var2,var3))
y=print(max(var1,var2,var3))
print(int(x+y))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(int(x+y))
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:55:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
print(min(var1,var2,var3))
print(max(var1,var2,var3))


-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 15:59:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min(var1,var2,var3)
max(var1,var2,var3)




-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:00:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
min(var1,var2,var3)
max(var1,var2,var3)
print(max-min)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:01:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
print(x+y)




-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:03:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
z=(x+y)
print(x)
print(y)
print(var1+var2+var3+z)




-- OUTPUT:
10
-2
16
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:03:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
z=(x+y)
print(x)
print(y)
print(var1+var2+var3-z)




-- OUTPUT:
10
-2
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:05:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
z=(x+y)
print(y)
print(var1+var2+var3-z)
print(x)




-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 16:05:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
z=(x+y)
print(y)
print(var1+var2+var3-z)
print(x)




-- EXECUTION TIME:
0.121121
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 16:17:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1=int(input("a="))
var2=int(input("b="))
var3=int(input("c="))
y=min(var1,var2,var3)
x=max(var1,var2,var3)
z=(x+y)
print(y)
print(var1+var2+var3-z)
print(x)




-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
