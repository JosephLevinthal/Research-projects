== TEST (2019-04-29 01:16:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if: (a =< x) and ( x =< b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas")
-- ERROR:
File "XXXX", line 10
    if: (a =< x) and ( x =< b ):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:16:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a =< x) and ( x =< b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas")
-- ERROR:
File "XXXX", line 10
    if (a =< x) and ( x =< b ):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:17:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas")
-- ERROR:
File "XXXX", line 15
    print("Entradas", a, "e", b "invalidas")
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:18:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas" )
-- ERROR:
File "XXXX", line 15
    print("Entradas", a, "e", b "invalidas" )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:18:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas", )
-- ERROR:
File "XXXX", line 15
    print("Entradas", a, "e", b "invalidas", )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:18:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas". )
-- ERROR:
File "XXXX", line 15
    print("Entradas", a, "e", b "invalidas". )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:19:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print("Entradas", a, "e", b "invalidas" )
-- ERROR:
File "XXXX", line 15
    print("Entradas", a, "e", b "invalidas" )
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:19:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas", a, "e", b "invalidas" )
-- ERROR:
File "XXXX", line 15
    print( "Entradas", a, "e", b "invalidas" )
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:21:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas", a "e" b "invalidas" )
-- ERROR:
File "XXXX", line 15
    print( "Entradas", a "e" b "invalidas" )
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:21:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas", a, "e" b "invalidas" )
-- ERROR:
File "XXXX", line 15
    print( "Entradas", a, "e" b "invalidas" )
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:21:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas", a, "e" ,b ,"invalidas" )
-- OUTPUT:
4.0 nao pertence ao intervalo 2.0 , 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:21:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas", a, "e" ,b ,"invalidas" )
-- EXECUTION TIME:
0.115939
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
4.0 nao pertence ao intervalo 2.0 , 3.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
3.5 nao pertence ao intervalo 5.5 , 6.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas 6.5 e 1.1 invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:21:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
4.0 nao pertence ao intervalo 2.0 , 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:23:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
4.0 pertence ao intervalo 2.0 , 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:24:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))
x = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( b > x ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
4.0 pertence ao intervalo 2.0 , 3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:26:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:26:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- EXECUTION TIME:
0.127944
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:26:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:26:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:27:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) or ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:28:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:28:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 01:29:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 01:29:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

x = float(input("Digite um numero: "))
a = float(input("Digite um numero: "))
b = float(input("Digite um numero: "))

if (b > a):
	if (a <= x) and ( x <= b ):
		print(x ,"pertence ao intervalo", a ,",", b)
	else:
		print(x ,"nao pertence ao intervalo", a ,",", b)
else:
	print( "Entradas",a , "e" ,b ,"invalidas" )
-- EXECUTION TIME:
0.153884
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
