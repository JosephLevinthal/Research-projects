== TEST (2019-04-14 19:43:47) 
-- CODE:
b = input("o aluno recebera a bonifica√ßao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == S):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:44:17) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == S):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:45:25) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() = S):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
File "XXXX", line 4
    if (b.upper() = S):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:45:33) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == S):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:46:15) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == "S"):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:46:24) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == "S"):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- EXECUTION TIME:
0.196991
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 19:47:08) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == "S"):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- EXECUTION TIME:
0.156155
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1635/2704/main.py", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 19:47:09) 
-- CODE:
b = input("o aluno recebera a bonificacao (S/N)? ")
n = float(input("Qual a nota do aluno? "))

if (b.upper() == "S"):
	nota = n + n*0.10
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:12:08) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper() == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:12:36) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper(b) == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (b.upper(b) == "S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:13:04) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper("b") == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (b.upper("b") == "S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:13:21) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper(b) == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (b.upper(b) == "S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:14:01) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper("b") == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (b.upper("b") == "S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:14:10) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper("b") == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if (b.upper("b") == "S"):
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:15:35) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper() == "S"):
	nota = n + (n/100)
else:
	nota = n

print(nota)
-- OUTPUT:
5.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:15:58) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper() == "S"):
	nota = n + (n/10)
else:
	nota = n

print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:16:10) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper() == "S"):
	nota = n + (n/10)
else:
	nota = n

print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:16:25) 
-- CODE:
n = float(input("Qual a nota do aluno? "))
b = input("o aluno recebera a bonificacao (S/N)? ")

if (b.upper() == "S"):
	nota = n + (n/10)
else:
	nota = n

print(nota)
-- EXECUTION TIME:
0.222927
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
