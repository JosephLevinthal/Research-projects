== TEST (2019-04-10 14:00:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if(a= cervo)
print("cervo eh patrono do Harry Potter")
else()
print(a"nao eh patrono do Harry Potter")

-- ERROR:
File "XXXX", line 5
    if(a= cervo)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:00:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a = cervo)
print("cervo eh patrono do Harry Potter")
else()
print(a"nao eh patrono do Harry Potter")

-- ERROR:
File "XXXX", line 5
    if (a = cervo)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:01:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=cervo):
print("cervo eh patrono do Harry Potter")
else():
print(a"nao eh patrono do Harry Potter")

-- ERROR:
File "XXXX", line 5
    if (a=cervo):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:01:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a = cervo):
print("cervo eh patrono do Harry Potter")
else():
print(a"nao eh patrono do Harry Potter")

-- ERROR:
File "XXXX", line 5
    if (a = cervo):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:01:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
print("cervo eh patrono do Harry Potter")
else():
print(a"nao eh patrono do Harry Potter")

-- ERROR:
File "XXXX", line 6
    print("cervo eh patrono do Harry Potter")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:05:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=cervo):
menssagem="cervo_eh_patrono_do_Harry_Potter"
else():
menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 5
    if (a=cervo):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:05:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a = cervo):
menssagem="cervo_eh_patrono_do_Harry_Potter"
else():
menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 5
    if (a = cervo):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:05:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
menssagem="cervo_eh_patrono_do_Harry_Potter"
else():
menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 6
    menssagem="cervo_eh_patrono_do_Harry_Potter"
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:05:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
menssagem = "cervo_eh_patrono_do_Harry_Potter"
else():
menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 6
    menssagem = "cervo_eh_patrono_do_Harry_Potter"
            ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:06:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else():
	menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 7
    else():
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:06:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem=a"não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
File "XXXX", line 8
    menssagem=a"não_eh_patrono_do_Harry_Potter"
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:07:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a==cervo):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a==cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:09:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:09:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- EXECUTION TIME:
0.245328
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo_eh_patrono_do_Harry_Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:09:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:11:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="não_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:11:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="nao_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:11:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="nao_eh_patrono_do_Harry_Potter"
print(menssagem)

-- EXECUTION TIME:
0.195551
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo_eh_patrono_do_Harry_Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao_eh_patrono_do_Harry_Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:12:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="nao_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:12:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="asno_nao_eh_patrono_do_Harry_Potter"
print(menssagem)

-- OUTPUT:
cervo_eh_patrono_do_Harry_Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:12:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo_eh_patrono_do_Harry_Potter"
else:
	menssagem="asno_nao_eh_patrono_do_Harry_Potter"
print(menssagem)

-- EXECUTION TIME:
0.150063
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo_eh_patrono_do_Harry_Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
asno_nao_eh_patrono_do_Harry_Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo eh patrono do Harry Potter"
else:
	menssagem=(a "nao eh patrono do Harry Potter")
print(menssagem)

-- ERROR:
File "XXXX", line 8
    menssagem=(a "nao eh patrono do Harry Potter")
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo eh patrono do Harry Potter"
else:
	menssagem=(a"nao eh patrono do Harry Potter")
print(menssagem)

-- ERROR:
File "XXXX", line 8
    menssagem=(a"nao eh patrono do Harry Potter")
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo eh patrono do Harry Potter"
else:
	menssagem=(a+"nao eh patrono do Harry Potter")
print(menssagem)

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 14:13:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo eh patrono do Harry Potter"
else:
	menssagem=(a+" nao eh patrono do Harry Potter")
print(menssagem)

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 14:13:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("patrono:")
if (a=="cervo"):
	menssagem="cervo eh patrono do Harry Potter"
else:
	menssagem=(a+" nao eh patrono do Harry Potter")
print(menssagem)

-- EXECUTION TIME:
0.16636
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
