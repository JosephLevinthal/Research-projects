== TEST (2019-04-08 15:27:58) 
-- CODE:
x = float(input("valor:"))
y =float(input("pagamento:"))
troco = (h - e)
if (x > y):
	print (Falta x)
eles:
	print(troco y)
-- ERROR:
File "XXXX", line 5
    print (Falta x)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:28:48) 
-- CODE:
x = float(input("valor:"))
y =float(input("pagamento:"))
troco = (h - e)
if (x > y):
	print ("Falta", x)
eles:
	print("troco", y)
-- ERROR:
File "XXXX", line 6
    eles:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:31:13) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)

if (x > y):
	print ("Falta", x)
	
eles:
	print("Troco", y)
	
	print(round(troco, 2))
-- ERROR:
File "XXXX", line 9
    eles:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:32:22) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)

if (x > y):
	print ("Falta", x)
	
else:
	print("Troco", y)
	
	print(round(troco, 2))
-- OUTPUT:
Falta 38.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:32:34) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)

if (x > y):
	print ("Falta", x)
	
else:
	print("Troco", y)
	
	print(round(troco, 2))
-- EXECUTION TIME:
0.198483
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 38.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco 60.0
28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco 516.0
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:33:07) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)

if (x > y):
	print ("Falta", x)
	
else:
	print("Troco de", y)
	
	print(round(troco, 2))
-- OUTPUT:
Falta 38.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:34:24) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)

if (x > y):
	print ("Falta", x)
	
else:
	print("Troco de", y)
	
	print(round(troco, 2))
-- OUTPUT:
Falta 38.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:35:34) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)
e = round(troco, 2)
if (x > y):
	print ("Falta", x)
	
else:
	print("Troco de", e)
	
-- OUTPUT:
Falta 38.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:35:59) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

troco = (y - x)
e = round(troco, 2)
if (x > y):
	print ("Falta", x)
	
else:
	print("Troco de", e)
	
-- EXECUTION TIME:
0.166476
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 38.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:36:52) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

s = x - y
troco = (y - x)
e = round(troco, 2)
if (x > y):
	print ("Falta", s)
	
else:
	print("Troco de", e)
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 15:36:58) 
-- CODE:
x = float(input("preco:"))
y =float(input("pagamento:"))

s = x - y
troco = (y - x)
e = round(troco, 2)
if (x > y):
	print ("Falta", s)
	
else:
	print("Troco de", e)
	
-- EXECUTION TIME:
0.131019
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
