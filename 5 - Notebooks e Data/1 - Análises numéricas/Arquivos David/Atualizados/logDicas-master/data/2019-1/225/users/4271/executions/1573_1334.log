== TEST (2019-03-25 14:58:25) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("16 // 2", 16 // 2)

print("Resto: ", )

print("2 ** 3 ", ...)
-- OUTPUT:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
16 // 2 8
Resto: 
2 ** 3  Ellipsis
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:59:02) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("16 // 2", 16 // 2)

print("2 ** 3", )

print("2 ** 3 ", ...)
-- OUTPUT:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
16 // 2 8
2 ** 3
2 ** 3  Ellipsis
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:59:05) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("16 // 2", 16 // 2)

print("2 ** 3", )

print("2 ** 3 ", ...)
-- EXECUTION TIME:
0.140785
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
16 // 2 8
2 ** 3
2 ** 3  Ellipsis
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:00:43) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("8 // 1", 16 // 2)

print("2 ** 3", )

print("2 ** 3", ...)
-- OUTPUT:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
8 // 1 8
2 ** 3
2 ** 3 Ellipsis
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:00:47) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("8 // 1", 16 // 2)

print("2 ** 3", )

print("2 ** 3", ...)
-- EXECUTION TIME:
0.12422
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
8 // 1 8
2 ** 3
2 ** 3 Ellipsis
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:01:19) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("8 // 1", 16 // 2)

print("2 ** 3", 2 ** 3)

print("2 ** 3", 2 ** 3)
-- OUTPUT:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
8 // 1 8
2 ** 3 8
2 ** 3 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:01:34) 
-- CODE:
print("4 + 4", 5 + 3)

print("12 - 4", 10 - 2)

print("2 * 2 * 2", 4 * 2)

print("8 // 1", 16 // 2)

print("2 ** 3", 12 - 4)

print("2 ** 3", 2 ** 3)
-- OUTPUT:
4 + 4 8
12 - 4 8
2 * 2 * 2 8
8 // 1 8
2 ** 3 8
2 ** 3 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:02:40) 
-- CODE:
print("adicao", 5 + 3)

print("subtracao", 10 - 2)

print("multiplicacao", 4 * 2)

print("divisao", 16 // 2)

print("resto", 12 - 4)

print("potenciacao", 2 ** 3)
-- OUTPUT:
adicao 8
subtracao 8
multiplicacao 8
divisao 8
resto 8
potenciacao 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:03:30) 
-- CODE:
print("adicao:", 5 + 3)

print("subtracao:", 10 - 2)

print("multiplicacao:", 4 * 2)

print("divisao:", 16 // 2)

print("resto:", 12 - 4)

print("potenciacao:", 2 ** 3)
-- OUTPUT:
adicao: 8
subtracao: 8
multiplicacao: 8
divisao: 8
resto: 8
potenciacao: 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:43:59) 
-- CODE:
print("adicao:", 5 + 3)

print("subtracao:", 10 - 2)

print("multiplicacao:", 4 * 2)

print("divisao:", 16 // 2)

print("resto:",18%2 )

print("potenciacao:", 2 ** 3)
-- OUTPUT:
adicao: 8
subtracao: 8
multiplicacao: 8
divisao: 8
resto: 0
potenciacao: 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:46:13) 
-- CODE:
print("adicao:", 5 + 3)

print("subtracao:", 10 - 2)

print("multiplicacao:", 4 * 2)

print("divisao:", 16 // 2)

print("resto:",24%3)

print("potenciacao:", 2 ** 3)
-- OUTPUT:
adicao: 8
subtracao: 8
multiplicacao: 8
divisao: 8
resto: 0
potenciacao: 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:36:19) 
-- CODE:
print("adicao:", 5 + 3)

print("subtracao:", 10 - 2)

print("multiplicacao:", 4 * 2)

print("divisao:", 16 // 2)

print("resto:", 16 % 2 )

print("potenciacao:", 2 ** 3)
-- OUTPUT:
adicao: 8
subtracao: 8
multiplicacao: 8
divisao: 8
resto: 0
potenciacao: 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 21:40:47) 
-- CODE:
print("adicao:", 5 + 3)

print("subtracao:", 10 - 2)

print("multiplicacao:", 4 * 2)

print("divisao:", 16 // 2)

print("resto:", 16 % 2 == 8 )

print("potenciacao:", 2 ** 3)
-- OUTPUT:
adicao: 8
subtracao: 8
multiplicacao: 8
divisao: 8
resto: False
potenciacao: 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
