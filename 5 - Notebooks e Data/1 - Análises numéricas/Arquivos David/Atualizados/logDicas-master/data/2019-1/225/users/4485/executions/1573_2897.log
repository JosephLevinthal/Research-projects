== TEST (2019-03-29 20:07:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("21: "))

# Impressao do dobro do numero
print()
-- OUTPUT:
Ada_Lovelace
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:08:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:21"))

# Impressao do dobro do numero
print()
-- OUTPUT:
Ada_Lovelace
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:15:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:15:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.127134
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:16:44) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(21)
-- OUTPUT:
21
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:16:46) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(21)
-- EXECUTION TIME:
0.122496
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
21
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
21
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:23:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(nun*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun*2)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:23:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print(nun*2)
-- EXECUTION TIME:
0.13341
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(nun*2)
NameError: name 'nun' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:23:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21*2"))

# Impressao do dobro do numero
print(nun)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:23:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21*2"))

# Impressao do dobro do numero
print(nun)
-- EXECUTION TIME:
0.146588
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(nun)
NameError: name 'nun' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:25:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21**2"))

# Impressao do dobro do numero
print(nun)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:27:05) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:(21**2)"))

# Impressao do dobro do numero
print(nun)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 20:28:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print("Multiplicacao: ", 21*2)

-- OUTPUT:
Multiplicacao:  42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 20:28:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print("Multiplicacao: ", 21*2)

-- EXECUTION TIME:
0.210776
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
Multiplicacao:  42
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
Multiplicacao:  42
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:55:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print("nun")
-- OUTPUT:
nun
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 16:55:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:21"))

# Impressao do dobro do numero
print("nun")
-- EXECUTION TIME:
0.187318
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
nun
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
nun
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:56:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:66
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  "))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero:66
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 16:56:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:66
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  "))

# Impressao do dobro do numero
print("nun")
-- EXECUTION TIME:
0.123108
-- ERROR:
  File "/home/codebench/codes/1573/2897/main.py", line 4
    num=int(input("Digite o numero:66
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:56:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:6 
				  6"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero:6 
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 16:56:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:6 
				  6"))

# Impressao do dobro do numero
print("nun")
-- EXECUTION TIME:
0.15269
-- ERROR:
  File "/home/codebench/codes/1573/2897/main.py", line 4
    num=int(input("Digite o numero:6 
                                    ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:57:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:6 
				  6"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero:6 
                                    ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:57:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero: 
				  66"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero: 
                                   ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:58:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero: 
				  "66"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero: 
                                   ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:59:08) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input(Digite o numero:"66"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input(Digite o numero:"66"))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:59:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:"66"))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero:"66"))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:59:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:"66""))

# Impressao do dobro do numero
print("nun")
-- ERROR:
File "XXXX", line 4
    num=int(input("Digite o numero:"66""))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:66"))

# Impressao do dobro do numero
print(nun*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun*2)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:39) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(nun*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun*2)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:00:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(nun*2)
-- EXECUTION TIME:
0.205585
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(nun*2)
NameError: name 'nun' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(nun**2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun**2)
NameError: name 'nun' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:54) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:00:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:01:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num=int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2**2)
-- EXECUTION TIME:
0.130513
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
4
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:03:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:08:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:dois"))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:29) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:09:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num=2**2")
-- OUTPUT:
num=2**2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:10:29) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("2**2")
-- OUTPUT:
2**2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:10:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num**2")
-- OUTPUT:
num**2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:12:12) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("dobro de nun")
-- OUTPUT:
dobro de nun
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:12:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("dobro de num")
-- OUTPUT:
dobro de num
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:20:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("d1=num*2")
-- OUTPUT:
d1=num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:22:44) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:22:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:(2)"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:24:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)*2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)*2
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:24:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)**2
TypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:24:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)**2
-- EXECUTION TIME:
0.19964
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(num)**2
TypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:55:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num")
-- OUTPUT:
num
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:56:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num.")
-- OUTPUT:
num.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:56:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num.")
-- EXECUTION TIME:
0.136702
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
num.
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
num.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:57:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num = int")
-- OUTPUT:
num = int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:58:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num +2")
-- OUTPUT:
num +2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:59:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num,2")
-- OUTPUT:
num,2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:01:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num")
-- OUTPUT:
num
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:09:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num=2*2")
-- OUTPUT:
num=2*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:09:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("2*2=num")
-- OUTPUT:
2*2=num
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:10:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2*2=num)
-- ERROR:
File "XXXX", line 7
    print(2*2=num)
         ^
SyntaxError: keyword can't be an expression
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:06:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"2*2))

# Impressao do dobro do numero
print("num")
-- ERROR:
File "XXXX", line 4
    num = int(input("Digite o numero:"2*2))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:06:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2*2"))

# Impressao do dobro do numero
print("num")
-- OUTPUT:
num
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:09:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num**2")
-- OUTPUT:
num**2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:10:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:10:37) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num**2)
-- OUTPUT:
1522756
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:10:40) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:10:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:11:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("Digite o numero:2")
-- OUTPUT:
Digite o numero:2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 14:12:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("Digite o numero:2"*2)
-- EXECUTION TIME:
0.129635
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
Digite o numero:2Digite o numero:2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
Digite o numero:2Digite o numero:2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:12:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("Digite o numero:2"*2)
-- OUTPUT:
Digite o numero:2Digite o numero:2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:12:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("Digite o numero:2"**2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Digite o numero:2"**2)
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:12:44) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("vezes"2)
-- ERROR:
File "XXXX", line 7
    print("vezes"2)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:14:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num*2
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:14:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num**2
# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:16:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(2*2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:16:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(nun=2*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(nun=2*2)
TypeError: 'nun' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:16:37) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("nun"=2*2)
-- ERROR:
File "XXXX", line 7
    print("nun"=2*2)
         ^
SyntaxError: keyword can't be an expression
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:17:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("nun(2*2)")
-- OUTPUT:
nun(2*2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:17:38) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("nun"(2*2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("nun"(2*2))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:20:35) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num="*2)
-- OUTPUT:
num=num=
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:20:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2
					 *2"))

# Impressao do dobro do numero
print("num=",num)
-- ERROR:
File "XXXX", line 4
    num = int(input("Digite o numero:2
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:21:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2*2"))

# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:21:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num=2*2
# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:23:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num=2**2
# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:23:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num=2**2
# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:23:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num=2**2
# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:23:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
num=2**2
# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:25:06) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))
n
# Impressao do dobro do numero
num=print(2*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    n
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:39:37) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"*2))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
Digite o numero:2Digite o numero:21234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:39:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2")*2)

# Impressao do dobro do numero
print(num)
-- OUTPUT:
12341234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:40:23) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num)**2
TypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 14:40:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num)**2
-- EXECUTION TIME:
0.137778
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(num)**2
TypeError: unsupported operand type(s) for ** or pow(): 'NoneType' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:54:34) 
-- CODE:
# Use este codigo como ponto de partida
num=2*2
# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num=",num)
-- OUTPUT:
num= 1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:55:17) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print("num=2*2")
-- OUTPUT:
num=2*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:55:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2"))

# Impressao do dobro do numero
print(num=2*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=2*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:55:34) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num=2*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=2*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:56:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:")2**2)

# Impressao do dobro do numero
print(num= 2*2)
-- ERROR:
File "XXXX", line 4
    num = int(input()2**2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:56:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(2**2)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:56:54) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:57:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num=2*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=2*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:57:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num11*2)
NameError: name 'num11' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:57:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num11*2)
NameError: name 'num11' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:57:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num 11*2)
-- ERROR:
File "XXXX", line 7
    print(num 11*2)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:59:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = "Digite o numero:2*2")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = "Digite o numero:2*2")
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:59:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = "Digite o numero:2*2")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = "Digite o numero:2*2")
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:59:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = "Digite o numero:2*2")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = "Digite o numero:2*2")
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:59:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = "Digite o numero:2*2")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = "Digite o numero:2*2")
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:59:37) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = "Digite o numero:11*2")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = "Digite o numero:11*2")
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:00:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num 2*2)
-- ERROR:
File "XXXX", line 7
    print(num 2*2)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:00:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num 11*2)
-- ERROR:
File "XXXX", line 7
    print(num 11*2)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:01:39) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2
					  "))

# Impressao do dobro do numero
print(num)
-- ERROR:
File "XXXX", line 4
    num = int(input("Digite o numero:2
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:01:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:2
*2"))

# Impressao do dobro do numero
print(num)
-- ERROR:
File "XXXX", line 4
    num = int(input("Digite o numero:2
                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:02:40) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:")2*2)

# Impressao do dobro do numero
print(num)
-- ERROR:
File "XXXX", line 4
    num = int(input()2*2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:03:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:03:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))11

# Impressao do dobro do numero
print(num)
-- ERROR:
File "XXXX", line 4
    num = int(input())11
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:03:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num=11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=11*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:04:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*2))

# Impressao do dobro do numero
print(num=11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=11*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:04:08) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*2))

# Impressao do dobro do numero
print(num=11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num=11*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:04:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*2))

# Impressao do dobro do numero
print(num=11*2)
-- EXECUTION TIME:
0.121371
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1573/2897/main.py", line 7, in <module>
    print(num=11*2)
TypeError: 'num' is an invalid keyword argument for this function

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:04:15) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*2))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
41234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:04:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2*2))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.129011
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
41234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
4444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:04:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(2)*2)

# Impressao do dobro do numero
print(num)
-- OUTPUT:
212341234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:05:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(num = 11*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = 11*2)
TypeError: 'num' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:06:54) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:07:07) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.216135
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
