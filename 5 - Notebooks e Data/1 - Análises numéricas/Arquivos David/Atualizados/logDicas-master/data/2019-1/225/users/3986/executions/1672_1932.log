== TEST (2019-05-17 09:01:08) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=flaot(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=flaot(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=flaot(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
v=min(f1, f2, f3)
w=max(f1, f2, f3)
x= f1+ f2 + f3 -v -w
print(v, x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dn1=flaot(input())
NameError: name 'flaot' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-17 09:01:39) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=float(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=float(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=float(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
v=min(f1, f2, f3)
w=max(f1, f2, f3)
x= f1+ f2 + f3 -v -w
print(v, x)
-- EXECUTION TIME:
0.143062
-- TEST CASE 1:
---- input:
6.7
6.3
7.0
4.0
7.0
6.6
---- correct output:
1 e 3
---- user output:
1.0606060606060606 1.0634920634920633
-- TEST CASE 2:
---- input:
1.0
2.0
3.0
6.0
8.0
10.0
---- correct output:
1 e 2
---- user output:
0.5 0.5
-- TEST CASE 3:
---- input:
20.0
30.0
5.0
10.0
5.0
10.0
---- correct output:
2 e 3
---- user output:
0.5 0.4999999999999999
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:01:42) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=float(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=float(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=float(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
v=min(f1, f2, f3)
w=max(f1, f2, f3)
x= f1+ f2 + f3 -v -w
print(v, x)
-- OUTPUT:
1.0606060606060606 1.0634920634920633
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:12:52) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=float(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=float(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=float(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
x=f1-f2
y=f2-f3
w=f1-f3
if abs(x)>abs(y) and abs(x)>abs(w) :
	print("1 e 2")
elif abs(y)>abs(x) and abs(y)>abs(w):
	print("2 e 3")	
else:
	print("1 e 3")
-- OUTPUT:
2 e 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-17 09:14:10) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=float(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=float(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=float(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
x=f1-f2
y=f2-f3
w=f1-f3
if abs(x)<abs(y) and abs(x)<abs(w) :
	print("1 e 2")
elif abs(y)<abs(x) and abs(y)<abs(w):
	print("2 e 3")	
else:
	print("1 e 3")
-- OUTPUT:
1 e 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-17 09:14:26) 
-- CODE:
do1=float(input("distancia entre olhos:"))
dn1=float(input("diustancia entre o nariz e queixo: "))
do2=float(input("distancia entre olhos:"))
dn2=float(input("diustancia entre o nariz e queixo: "))
do3=float(input("distancia entre olhos:"))
dn3=float(input("diustancia entre o nariz e queixo: "))
f1=do1/dn1
f2=do2/dn2
f3=do3/dn3
x=f1-f2
y=f2-f3
w=f1-f3
if abs(x)<abs(y) and abs(x)<abs(w) :
	print("1 e 2")
elif abs(y)<abs(x) and abs(y)<abs(w):
	print("2 e 3")	
else:
	print("1 e 3")
-- EXECUTION TIME:
0.127854
-- TEST CASE 1:
---- input:
6.7
6.3
7.0
4.0
7.0
6.6
---- correct output:
1 e 3
---- user output:
1 e 3
-- TEST CASE 2:
---- input:
1.0
2.0
3.0
6.0
8.0
10.0
---- correct output:
1 e 2
---- user output:
1 e 2
-- TEST CASE 3:
---- input:
20.0
30.0
5.0
10.0
5.0
10.0
---- correct output:
2 e 3
---- user output:
2 e 3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
