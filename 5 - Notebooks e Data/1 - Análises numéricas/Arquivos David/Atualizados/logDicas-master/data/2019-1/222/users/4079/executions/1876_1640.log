== TEST (2019-07-03 18:06:56) 
-- CODE:

turma=int(input())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input())
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:07:24) 
-- CODE:

turma=int(input())
n=0

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input())
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 18:07:52) 
-- CODE:

turma=int(input(""))
n=0

-- EXECUTION TIME:
0.649043
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1876/1640/main.py", line 2, in <module>
    turma=int(input(""))
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:08:31) 
-- CODE:

turma=int(input(""))
n=0
zeros(turma, dtype=int)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input(""))
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:09:41) 
-- CODE:

turma=array(eval(input(""))
inpares=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    inpares=zeros(turma, dtype=int)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:09:50) 
-- CODE:

turma=array(eval(input(""))
impares=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    impares=zeros(turma, dtype=int)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:09:59) 
-- CODE:

turma=array(eval(input(""))
impar=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    impar=zeros(turma, dtype=int)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:10:09) 
-- CODE:

turma=array(eval(input(""))
x=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    x=zeros(turma, dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:10:23) 
-- CODE:

turma=array(eval(input(""))
x1=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    x1=zeros(turma, dtype=int)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:10:35) 
-- CODE:

turma=array(eval(input(""))
x_1=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    x_1=zeros(turma, dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:10:42) 
-- CODE:

turma=array(eval(input(""))
1=zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 3
    1=zeros(turma, dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:10:57) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)

-- ERROR:
File "XXXX", line 4
    
                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 18:11:07) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
-- EXECUTION TIME:
0.845986
-- ERROR:
  File "/home/codebench/codes/1876/1640/main.py", line 4
    
                               ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:11:07) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
-- ERROR:
File "XXXX", line 4
    
                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:11:29) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
	print(turma)
-- ERROR:
File "XXXX", line 4
    print(turma)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:11:39) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
	print("turma")
-- ERROR:
File "XXXX", line 4
    print("turma")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-03 18:11:46) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
print("turma")
-- EXECUTION TIME:
0.79825
-- ERROR:
  File "/home/codebench/codes/1876/1640/main.py", line 4
    print("turma")
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:11:46) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
print("turma")
-- ERROR:
File "XXXX", line 4
    print("turma")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:11:53) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)
print(turma)
-- ERROR:
File "XXXX", line 4
    print(turma)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:20) 
-- CODE:

turma=array(eval(input(""))
n=0
for zeros(turma, dtype=int)

if(n)
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:25) 
-- CODE:

turma=array(eval(input(""))
	n=0
for zeros(turma, dtype=int)

if(n)
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:33) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)
n=0
if(n)
-- ERROR:
File "XXXX", line 5
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:39) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)
n=1
if(n)
-- ERROR:
File "XXXX", line 5
    n=1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:46) 
-- CODE:

turma=array(eval(input(""))
n=1
for zeros(turma, dtype=int)

if(n)
-- ERROR:
File "XXXX", line 3
    n=1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:12:51) 
-- CODE:

turma=array(eval(input(""))
n=2
for zeros(turma, dtype=int)

if(n)
-- ERROR:
File "XXXX", line 3
    n=2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:23) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)

if(n != 2%) 
-- ERROR:
File "XXXX", line 6
    if(n != 2%) 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:29) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)

	if(n != 2%) 
-- ERROR:
File "XXXX", line 6
    if(n != 2%) 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:34) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)

		if(n != 2%) 
-- ERROR:
File "XXXX", line 6
    if(n != 2%) 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:44) 
-- CODE:

turma=array(eval(input(""))
n=0
zeros(turma, dtype=int)

		if(n != 2%) 
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:50) 
-- CODE:

turma=array(eval(input(""))
n=1
zeros(turma, dtype=int)

		if(n != 2%) 
-- ERROR:
File "XXXX", line 3
    n=1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 18:13:55) 
-- CODE:

turma=array(eval(input(""))
n=-1
zeros(turma, dtype=int)

		if(n != 2%) 
-- ERROR:
File "XXXX", line 3
    n=-1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:10:24) 
-- CODE:

turma=array(eval(input(""))

zeros(turma, dtype=int)

if(n != 2%) 
-- ERROR:
File "XXXX", line 4
    zeros(turma, dtype=int)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:10:33) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)

if(n != 2%) 
-- ERROR:
File "XXXX", line 6
    if(n != 2%) 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:10:44) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)
n=0
if(n != 2%) 
-- ERROR:
File "XXXX", line 5
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:10:52) 
-- CODE:

turma=array(eval(input(""))
n=0
for zeros(turma, dtype=int)

if(n != 2%) 
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:11:05) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)

if(n != 2%): 
-- ERROR:
File "XXXX", line 5
    if(n != 2%): 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:11:15) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)

if(turma != 2%): 
-- ERROR:
File "XXXX", line 5
    if(turma != 2%): 
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:11:22) 
-- CODE:

turma=array(eval(input(""))
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 5
    if (turma != 2%):
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:11:51) 
-- CODE:

turma=array(eval(input(""))
quantidades=int(input(""))
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    quantidades=int(input(""))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:12:04) 
-- CODE:

turma=array(eval(input(""))
quantidades=eval(int(input(""))
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    quantidades=eval(int(input(""))
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:12:13) 
-- CODE:

turma=array(eval(input(""))
quant=eval(int(input(""))
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    quant=eval(int(input(""))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:12:20) 
-- CODE:

turma=array(eval(input(""))

quant=eval(int(input(""))
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    quant=eval(int(input(""))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:12:49) 
-- CODE:

turma=array(eval(input(""))

for zeros(turma, dtype=int)
quant=(int(input("")))

if (turma != 2%):
-- ERROR:
File "XXXX", line 5
    quant=(int(input("")))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:13:21) 
-- CODE:

turma=array(eval(input(""))
n=0
for zeros(turma, dtype=int)

if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:13:28) 
-- CODE:

turma=array(eval(input(""))
n=0
for zeros(turma, dtype=int)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:13:36) 
-- CODE:

turma=array(eval(input(""))
n=impar
for zeros(turma, dtype=int)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    n=impar
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:14:10) 
-- CODE:

turma=int(input("numeros impares: "))
for zeros(turma, dtype=int)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 3
    for zeros(turma, dtype=int)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:14:17) 
-- CODE:

turma=int(input("numeros impares: "))

for zeros(turma, dtype=int):
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for zeros(turma, dtype=int):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:14:30) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros(turma, dtype=int)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in zeros(turma, dtype=int)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:14:39) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros(turma, dtype=float)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in zeros(turma, dtype=float)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:14:57) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros, dtype=int
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in zeros, dtype=int
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:15:11) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros,impares dtype=int
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in zeros,impares dtype=int
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:15:29) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros turma, dtype=int
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in zeros turma, dtype=int
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:15:36) 
-- CODE:

turma=int(input("numeros impares: "))

for i in zeros(turma, dtype=int
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 5
    n=0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:16:23) 
-- CODE:

turma=int(input("numeros impares: "))

for i in impares
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in impares
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:16:37) 
-- CODE:

turma=int(input("numeros impares: "))

for i in range(impares)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in range(impares)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:16:44) 
-- CODE:

turma=int(input("numeros impares: "))

for i in range(turma)
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 4
    for i in range(turma)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:16:50) 
-- CODE:

turma=int(input("numeros impares: "))

for i in range(turma):
n=0
if (turma != 2%):
-- ERROR:
File "XXXX", line 5
    n=0
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:16:58) 
-- CODE:

turma=int(input("numeros impares: "))

for i in range(turma):
	
if (turma != 2%):
	
-- ERROR:
File "XXXX", line 6
    if (turma != 2%):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:17:23) 
-- CODE:

turma=int(input("numeros impares: "))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input())
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:17:52) 
-- CODE:

turma=int(input("numeros impares: "))
quant=array(eval(int("")))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input())
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:18:01) 
-- CODE:

turma=int(input("numeros impares: "))
quant=array(eval(int("")))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    turma=int(input())
ValueError: invalid literal for int() with base 10: '[10,20,31,1,13,15,20,33,36,63,25,10,2]'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:19:11) 
-- CODE:

turma=array(eval(int(input("")))
quant=int(input(int("numeros impares")))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 3
    quant=int(input(int("numeros impares")))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:19:20) 
-- CODE:

turma=array(eval(int(input("")))
quant=int(input("numeros impares")))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 3
    quant=int(input()))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:19:26) 
-- CODE:

turma=array(eval(int(input("")))
quant=int(input("numeros impares"))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 3
    quant=int(input())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:19:53) 
-- CODE:
from numpy import*
turma=array(eval(int(input("")))
quant=int(input("numeros impares"))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 3
    quant=int(input())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:20:14) 
-- CODE:
from numpy import*

turma=array(eval(input(("")))
quant=int(input("numeros impares"))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 4
    quant=int(input())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-03 19:20:18) 
-- CODE:
from numpy import*

turma=array(eval(input(("")))
quant=int(input("numeros impares"))

for i in range(turma):
	
	zeros(n,dtype=int)
-- ERROR:
File "XXXX", line 4
    quant=int(input())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
