== TEST (2019-05-08 22:44:09) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:44:24) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- EXECUTION TIME:
0.122086
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:44:38) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,6))
-- OUTPUT:
3
3.166667
3.133333
3.145238
3.139683
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:44:51) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,6))
-- EXECUTION TIME:
0.145969
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.166667
3.133333
3.145238
3.139683
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.166667
3.133333
3.145238
3.139683
3.142713
3.140881
3.142072
3.141255
3.14184
3.141407
3.141736
3.14148
3.141683
3.141519
3.141653
3.141542
3.141635
3.141556
3.141624
3.141566
3.141616
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.166667
3.133333
3.145238
3.139683
3.142713
3.140881
3.142072
3.141255
3.14184
3.141407
3.141736
3.14148
3.141683
3.141519
3.141653
3.141542
3.141635
3.141556
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:45:04) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:45:19) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- EXECUTION TIME:
0.196059
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:45:32) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:45:54) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- EXECUTION TIME:
0.160349
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:46:01) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(may,8))
-- OUTPUT:
3
24
120
336
720
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:46:14) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(may,8))
-- EXECUTION TIME:
0.245089
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
24
120
336
720
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
24
120
336
720
1320
2184
3360
4896
6840
9240
12144
15600
19656
24360
29760
35904
42840
50616
59280
68880
79464
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
24
120
336
720
1320
2184
3360
4896
6840
9240
12144
15600
19656
24360
29760
35904
42840
50616
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:46:19) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
	print(round(ms,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:46:45) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
print(round(ms,8))
-- OUTPUT:
3
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:46:58) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ms= 3

print(ms)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ms= ms + (-1)**(cont+1)*4./ may
	
	cont=cont + 1
print(round(ms,8))
-- EXECUTION TIME:
0.125494
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:59:18) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:59:30) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- EXECUTION TIME:
0.133155
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:59:38) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont <= num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 22:59:48) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont <= num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- EXECUTION TIME:
0.126268
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.14271284
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.14157215
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.14162381
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 22:59:55) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont > num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:00:06) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont >= num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:00:19) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont == num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:00:38) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- OUTPUT:
3
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:00:50) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
print(round(ap,8))
-- EXECUTION TIME:
0.153602
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:00:54) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:01:13) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.160404
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:01:51) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:02:02) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:02:13) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.207102
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:02:15) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:02:23) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.137024
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:02:33) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:02:42) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.177705
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:02:58) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- OUTPUT:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:03:07) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3.0

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont=cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.148622
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.0
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:05:45) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:05:57) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:06:05) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:06:23) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.163491
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:06:28) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

print(ap)

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:06:39) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3


while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:06:49) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3


while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.206846
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:06:57) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.181648
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:06:58) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:07:12) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.124529
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:07:15) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:07:26) 
-- CODE:
num=float(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.126755
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:07:32) 
-- CODE:
num=input(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    num=input(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:07:38) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:07:46) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:07:56) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.189916
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:07:58) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:08:04) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- OUTPUT:
3.16666667
3.13333333
3.1452381
3.13968254
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:08:12) 
-- CODE:
num=int(input("numero de aproximidades: "))

cont= 1

ap= 3

while(cont < num):
	may= (cont*2) * (cont*2+1) * (cont*2+2)
	
	ap= ap + (-1)**(cont+1)*4 / may
	
	cont= cont + 1
	print(round(ap,8))
-- EXECUTION TIME:
0.132838
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
