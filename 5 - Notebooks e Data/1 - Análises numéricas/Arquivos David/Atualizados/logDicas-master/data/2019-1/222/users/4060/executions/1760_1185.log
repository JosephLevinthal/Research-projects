== TEST (2019-05-29 01:36:14) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
while(cont<size(glicosse)):
	if(glicose(aux_1)>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:36:52) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
while(cont<size(glicose)):
	if(glicose(aux_1)>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:37:34) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
while(cont<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:39:43) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0

while(cont<size(glicose)):
	if(glicose[aux_1]>99):
		aux_1=aux_1+1
	
print(aux_1)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:41:44) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
q_ocorrencias=0
while(cont<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:42:48) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
q_ocorrencias=0
while(cont<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 01:44:52) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont=0
aux_1=0
aux_2=0
q_ocorrencias=0
while(cont<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont=cont+1
	
	
print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:19:37) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
aux_1=0
aux_2=0
q_ocorrencias=0
v_arange=arange(glicose)



cont_1=cont_1*0	

while(cont_1<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont_1=cont_1+1

print(v_arange)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:22:10) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
aux_1=0
aux_2=0
q_ocorrencias=0
v_arange=arange(glicose)



cont_1=cont_1*0	

while(cont_1<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont_1=cont_1+1

print(v_arange)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:29:22) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
aux_1=0
aux_2=0
q_ocorrencias=0
v_arange=arange(glicose)

cont_1=cont_1*0	

while(cont_1<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:29:50) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
aux_1=0
aux_2=0
q_ocorrencias=0


cont_1=cont_1*0	

while(cont_1<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:30:00) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
aux_1=0
aux_2=0
q_ocorrencias=0


cont_1=cont_1*0	

while(cont_1<size(glicose)):
	if(glicose[aux_1]>99):
		q_ocorrencias=q_ocorrencias+1
	aux_1=aux_1+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:31:53) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
q_ocorrencias=0


cont_1=cont_1*0	
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		q_ocorrencias=q_ocorrencias+1
	cont_2=aux_1+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:32:39) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
q_ocorrencias=0


cont_1=cont_1*0	
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		q_ocorrencias=q_ocorrencias+1
	cont_2=cont_2+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:33:55) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
q_ocorrencias=0

cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		q_ocorrencias=q_ocorrencias+1
	cont_2=cont_2+1
	cont_1=cont_1+1

print(q_ocorrencias)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:45:21) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de 0 para o vetor v_zeros
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		q_ocorrencias=q_ocorrencias+1
	cont_1=cont_1+1
	cont_2=cont_2+1

print(v_zeros)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:47:54) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de 0 para o vetor v_zeros
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		q_ocorrencias=q_ocorrencias+1
	cont_1=cont_1+1
	cont_2=cont_2+1

print(v_zeros)	
print(v_crescente)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:51:08) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)=

		
-- ERROR:
File "XXXX", line 25
    print(v_ocorrencias)=
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:51:13) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 10:52:32) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:04:37) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:07:21) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:10:10) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_3)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:17:18) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:18:35) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_crescente)
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:23:04) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	

print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:30:13) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	

print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:34:45) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:36:50) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
	
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:38:35) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1		
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:41:10) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:53:06) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:53:49) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:54:14) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		v_zeros[cont_3]=v_crescente[cont_2]
		cont_3=cont_3+1
	cont_1=cont_1+1
	cont_2=cont_2+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:56:40) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 11:57:01) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.480448
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
[0 2 4]
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
[1 2 3 4 5 6 9]
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
[]
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:57:06) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_ocorrencias=cont_3
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 11:58:34) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0
cont_3=0
q_ocorrencias=0

while(cont_1<size(glicose)):
	if(glicose[cont_2]>99):
		cont_3=cont_3+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_3,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0
cont_3=cont_3*0		
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 12:04:09) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	cont_2=cont_2+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 12:05:46) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 12:08:39) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 12:08:59) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.347131
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
[0 2 4]
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
[1 2 3 4 5 6 9]
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
[]
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:14:29) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	print(v_ocorrencias)
print(v_zeros)	


		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:15:42) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	print(v_ocorrencias)
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:15:57) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
print(v_zeros)	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:16:53) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
	cont_1=cont_1+1
	print(v_zeros)	
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:18:10) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_zeros)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:18:54) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_zeros)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:20:30) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_zeros)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.393386
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
[0 0 0]
[0 2 0]
[0 2 4]
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
[1 0 0 0 0 0 0]
[1 2 0 0 0 0 0]
[1 2 3 0 0 0 0]
[1 2 3 4 0 0 0]
[1 2 3 4 5 0 0]
[1 2 3 4 5 6 0]
[1 2 3 4 5 6 9]
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:20:37) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_zeros)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:22:54) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_crescente)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.512817
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
[0 1 2 3 4 5]
[0 1 2 3 4 5]
[0 1 2 3 4 5]
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
[0 1 2 3 4 5 6 7 8 9]
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:23:35) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(v_zeros)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:24:18) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(cont_17)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.536041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1185/main.py", line 18, in <module>
    print(cont_17)	
NameError: name 'cont_17' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 13:24:22) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(cont_1)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- EXECUTION TIME:
0.348165
-- TEST CASE 1:
---- input:
[101,89,105,88,104,87]
---- correct output:
0
2
4
3
---- user output:
0
2
4
3
-- TEST CASE 2:
---- input:
[88,100,105,107,100,108,110,99,98,100]
---- correct output:
1
2
3
4
5
6
9
7
---- user output:
1
2
3
4
5
6
9
7
-- TEST CASE 3:
---- input:
[99,98,98,99,98,97]
---- correct output:
0
---- user output:
0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 13:26:59) 
-- CODE:
from numpy import*
glicose=array(eval(input("nivel de glicose: ")))
cont_1=0
cont_2=0

while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para os vetores v_zeros e v_crescente
	cont_1=cont_1+1
	v_zeros=zeros(cont_2,dtype=int)
	v_crescente=arange(cont_1)
cont_1=cont_1*0
cont_2=cont_2*0
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		v_zeros[cont_2]=v_crescente[cont_1]#quarda os indices >99 de v_crescente em v_zeros
		cont_2=cont_2+1
		print(cont_1)	
	cont_1=cont_1+1
cont_1=cont_1*0
cont_2=cont_2*0	
while(cont_1<size(glicose)):
	if(glicose[cont_1]>99):
		cont_2=cont_2+1 #acumula a quant. de elementos para o vetor v_ocorrencias
	cont_1=cont_1+1
	v_ocorrencias=cont_2
	
print(v_ocorrencias)

		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
