== TEST (2019-04-29 13:21:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= B):
	 print(x, "pertence ao intervalo",a ",", b)
-- ERROR:
File "XXXX", line 8
    print(x, "pertence ao intervalo",a ",", b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:21:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x, "pertence ao intervalo",a ",", b)
-- ERROR:
File "XXXX", line 8
    print(x, "pertence ao intervalo",a ",", b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:22:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x, "pertence ao intervalo",a ",", b)
-- ERROR:
File "XXXX", line 8
    print(x, "pertence ao intervalo",a ",", b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x,"pertence ao intervalo",a ",", b)
-- ERROR:
File "XXXX", line 8
    print(x,"pertence ao intervalo",a ",", b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print("pertence ao intervalo",a ",", b)
-- ERROR:
File "XXXX", line 8
    print("pertence ao intervalo",a ",", b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print("pertence ao intervalo")
-- ERROR:
File "XXXX", line 8
    print("pertence ao intervalo",a ",", b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:23:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x"pertence ao intervalo")
-- ERROR:
File "XXXX", line 8
    print(x"pertence ao intervalo")
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:24:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print("" x,"pertence ao intervalo")
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:24:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x)
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:25:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x)
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:25:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))
if (x <= a and x >= b):
	 print(x)
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:26:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x <= a and x >= b):
	 print("a")
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:27:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x)
-- ERROR:
File "XXXX", line 8
    print("" x,"pertence ao intervalo")
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:28:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x)
		
else:
	 print(a)
-- OUTPUT:
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:31:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x, "pertece ao intervalo", a",",b)
		
elif(b <= a):
	 print("Entradas",a "e", b, "invalidas")
		
else:
	 print(x,"nao pertece ao intervalo", a ",", b)
-- ERROR:
File "XXXX", line 9
    print(x, "pertece ao intervalo", a",",b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:31:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(,x, "pertece ao intervalo", a",",b)
		
elif(b <= a):
	 print("Entradas",a "e", b, "invalidas")
		
else:
	 print(,x,"nao pertece ao intervalo", a ",", b)
-- ERROR:
File "XXXX", line 9
    print(,x, "pertece ao intervalo", a",",b)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:32:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(" x pertece ao intervalo", a",",b)
		
elif(b <= a):
	 print("Entradas",a "e", b, "invalidas")
		
else:
	 print("x nao pertece ao intervalo", a ",", b)
-- ERROR:
File "XXXX", line 9
    print(" x pertece ao intervalo", a",",b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:33:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(" x pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print("x nao pertece ao intervalo", a ,",", b)
-- OUTPUT:
x nao pertece ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:33:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(" x pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print("x nao pertece ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.137435
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
x nao pertece ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
x pertece ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:34:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(,x,"pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(,x,"nao pertece ao intervalo", a ,",", b)
-- ERROR:
File "XXXX", line 9
    print(,x,"pertece ao intervalo", a,",",b)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:34:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x,"pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(x,"nao pertece ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertece ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:34:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x,"pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(x,"nao pertece ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.174379
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertece ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertece ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:34:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x,"pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(x,"nao pertece ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertece ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:35:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x,"pertece ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(x,"nao pertece ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertece ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if (x >= a and x <= b ):
    print(x,"pertence ao intervalo", a,",",b)
		
elif(b <= a):
	 print("Entradas",a ,"e", b, "invalidas")
		
else:
	 print(x,"nao pertence ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.143201
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
