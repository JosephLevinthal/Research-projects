== TEST (2019-04-13 11:26:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(float("escreva a abscissa do ponto P: "))
y = int(float("escreva a ordenada do ponto P: "))
if (2x + y == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- ERROR:
File "XXXX", line 6
    if (2x + y == 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:26:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(float("escreva a abscissa do ponto P: "))
y = int(float("escreva a ordenada do ponto P: "))
if (2*x + y == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = int(float("escreva a abscissa do ponto P: "))
ValueError: could not convert string to float: 'escreva a abscissa do ponto P: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:28:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2*x + y == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:29:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y - 3 == 0):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 11:30:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y - 3 == 0):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- EXECUTION TIME:
0.149893
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:36:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y = 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- ERROR:
File "XXXX", line 6
    if (2 * x + y = 3):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:37:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto não pertence a reta"
	
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 11:37:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = " ponto pertence a reta"
else:
	mensagem = " ponto não pertence a reta"
	
print(mensagem)

-- EXECUTION TIME:
0.213388
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:37:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = " ponto pertence a reta"
else:
	mensagem = " ponto não pertence a reta"
	
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:38:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = " ponto pertence a reta"
else (2 * x + y != 3):
	mensagem = " ponto não pertence a reta"
	
print(mensagem)

-- ERROR:
File "XXXX", line 8
    else (2 * x + y != 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 11:42:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print(mensagem)

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 11:42:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("escreva a abscissa do ponto P: "))
y = float(input("escreva a ordenada do ponto P: "))
if (2 * x + y == 3):
	mensagem = " ponto pertence a reta"
else :
	mensagem = " ponto nao pertence a reta"
	
print(mensagem)

-- EXECUTION TIME:
0.186584
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
