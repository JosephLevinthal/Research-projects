== TEST (2019-04-13 12:10:53) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
if (preco > pagamento):
	mensagem = "Falta " preco - pagamento
else:
	mensagem = "Troco de " pagamento - preco

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 4
    mensagem = "Falta " preco - pagamento
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:12:39) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:15:35) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else (preco <= pagamento):
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    else (preco <= pagamento):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:16:29) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else (preco <= pagamento):
	mensagem = "Troco de" + y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    else (preco <= pagamento):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:16:36) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else (preco <= pagamento):
	mensagem = "Troco de" + y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    else (preco <= pagamento):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:16:53) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else:
	mensagem = "Troco de" + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta" + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:18:18) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else:
	mensagem = "Troco de" + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta" + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 12:19:23) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else (preco < = pagamento)
	mensagem = "Troco de" + y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    else (preco < = pagamento)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 10:31:14) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else (preco < = pagamento)
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- EXECUTION TIME:
0.133742
-- ERROR:
  File "/home/codebench/codes/1643/2447/main.py", line 7
    else (preco < = pagamento)
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 10:34:17) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else (preco < = pagamento):
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    else (preco < = pagamento):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:00:21) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:01:18) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta" + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta" + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:02:42) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))

if (preco > pagamento):
	mensagem = "Falta " + preco - pagamento
else:
	mensagem = "Troco de " pagamento - preco

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 7
    mensagem = "Troco de " pagamento - preco
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:03:03) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))

if (preco > pagamento):
	mensagem = "Falta " + preco - pagamento
else:
	mensagem = "Troco de " + pagamento - preco

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Falta " + preco - pagamento
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:03:49) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))

if (preco > pagamento):
	mensagem = "Falta " + (preco - pagamento)
else:
	mensagem = "Troco de " + (pagamento - preco)

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem = "Falta " + (preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:05:40) 
-- CODE:
preco = float(input("escreva o valor do preco: "))
pagamento = float(input("escreva o valor do pagamento: "))
x = preco - pagamento
y = pagamento - preco
if (preco > pagamento):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:42:47) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:46:21) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta "  x
else:
	mensagem = "Troco de " y

print(round(mensagem, 2))
-- ERROR:
File "XXXX", line 6
    mensagem = "Falta "  x
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:46:37) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:48:16) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(mensagem, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:50:29) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta x"
else:
	mensagem = "Troco de y"

print(mensagem)
-- OUTPUT:
Falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:51:17) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " 
else:
	mensagem = "Troco de "

print(mensagem)
-- OUTPUT:
Falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:52:16) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " , round(x, 2)
else:
	mensagem = "Troco de ", round(y, 2)

print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:52:56) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " round(x, 2)
else:
	mensagem = "Troco de " round(y, 2)

print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = "Falta " round(x, 2)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:53:19) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = Falta round(x, 2)
else:
	mensagem = Troco de round(y, 2)

print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = Falta round(x, 2)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:53:49) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta " round(x, 2)
else:
	mensagem = "Troco de " round(y, 2)

print(mensagem)
-- ERROR:
File "XXXX", line 6
    mensagem = "Falta " round(x, 2)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:54:11) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta ", round(x, 2)
else:
	mensagem = "Troco de ", round(y, 2)

print(mensagem)
-- OUTPUT:
('Falta ', 26.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:54:24) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = pc - pg
y = pg - pc
if (pc > pg):
	mensagem = "Falta ", round(x, 2)
else:
	mensagem = "Troco de ", round(y, 2)

print(mensagem)
-- EXECUTION TIME:
0.168542
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
('Falta ', 26.0)
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
('Troco de ', 28.0)
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
('Troco de ', 0.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:55:42) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))
x = round(pc - pg, 2)
y = round(pg - pc, 2)
if (pc > pg):
	mensagem = "Falta " + x
else:
	mensagem = "Troco de " + y

print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = "Falta " + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:40:11) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))

if (pc > pg):
	mensagem = "Falta " 
	valor = pc - pg
else:
	mensagem = "Troco de " 
	valor = pg - pc

print(mensagem, round(valor, 2))
-- EXECUTION TIME:
0.161498
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:41:38) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))

if (pc > pg):
	mensagem = "Falta " 
	valor = pc - pg
else:
	mensagem = "Troco de " 
	valor = pg - pc

print(mensagem, round(valor, 2))
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:41:44) 
-- CODE:
pc = float(input("escreva o valor do preco: "))
pg = float(input("escreva o valor do pagamento: "))

if (pc > pg):
	mensagem = "Falta " 
	valor = pc - pg
else:
	mensagem = "Troco de " 
	valor = pg - pc

print(mensagem, round(valor, 2))
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
