== TEST (2019-04-01 19:16:29) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = int(input("quantas bebidas?: "))
s = int(input("quantas sobremesas?: "))
sel = 26,90
suco = 3,50
sob = 3,0
k = g/1000
print(k*sel+b*suco+s*sob)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(k*sel+b*suco+s*sob)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:17:33) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = int(input("quantas bebidas?: "))
s = int(input("quantas sobremesas?: "))
sel = 26,90
suco = 3,50
sob = 3,0
k = g/1000
h = k*sel+b*suco+s*sob
print(round(h,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    h = k*sel+b*suco+s*sob
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:19:03) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
sel = 26,90
suco = 3,50
sob = 3,0
k = g/1000
h = k*sel+b*suco+s*sob
print(round(h,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    h = k*sel+b*suco+s*sob
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:19:31) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
sel = 26,90
suco = 3,50
sob = 3,0
k = g/1000
h = float(k*sel+b*suco+s*sob)
print(round(h,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    h = float(k*sel+b*suco+s*sob)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:20:46) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = g/1000
h = float(k*26,90+b*3,50+s*3,0)
print(round(h,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    h = float(k*26,90+b*3,50+s*3,0)
TypeError: float() takes at most 1 argument (4 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:23:39) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = g/1000
l = k*26,90
l1 = b*3,5
l2 = s*3
l3 = l+l1+l2
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    l3 = l+l1+l2
TypeError: can only concatenate tuple (not "float") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:25:00) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = float(k*26,90)
l1 = float(b*3,5)
l2 = float(s*3)
l3 = float(l+l1+l2)
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    l = float(k*26,90)
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:25:33) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = float(k*26,90)
l1 = float(b*3,5)
l2 = float(s*3)
l3 = l+l1+l2
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    l = float(k*26,90)
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:25:46) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = float(k*26,90)
l1 = float(b*3,5)
l2 = float(s*3)
l3 = l+l1+l2
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    l = float(k*26,90)
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:26:16) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = k*26,90
l1 = b*3,5
l2 = float(s*3)
l3 = l+l1+l2
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    l3 = l+l1+l2
TypeError: can only concatenate tuple (not "float") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:26:49) 
-- CODE:
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = k*26,90
l1 = b*3,5
l2 = s*3
l3 = (l+l1+l2)
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    l3 = (l+l1+l2)
TypeError: can only concatenate tuple (not "float") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:27:33) 
-- CODE:
from math import*
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = k*26,90
l1 = b*3,5
l2 = s*3
l3 = (l+l1+l2)
print(round(l3,2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    l3 = (l+l1+l2)
TypeError: can only concatenate tuple (not "float") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:35:55) 
-- CODE:
from math import*
g = float(input("quantas gramas tem seu prato?: "))
b = float(input("quantas bebidas?: "))
s = float(input("quantas sobremesas?: "))
k = float(g/1000)
l = k*26.90
l1 = b*3.5
l2 = s*3.0
l3 = (l+l1+l2)
print(round(l3,2))

-- EXECUTION TIME:
0.143535
-- TEST CASE 1:
---- input:
896.12
0
0
---- correct output:
24.11
---- user output:
24.11
-- TEST CASE 2:
---- input:
389.03
1
0
---- correct output:
13.96
---- user output:
13.96
-- TEST CASE 3:
---- input:
225.89
0
1
---- correct output:
9.08
---- user output:
9.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
