== TEST (2019-03-21 23:30:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(a)) 
var2 = int(input(b)) 
var3 = int(input(c)) 
menor = min(var1, var 2, va3)
maior = max(var1, var 2, va3)
meio = (var1 + var2 + var3) - (maior - menor) 
print(maior)
print(meio)
print(menor)
-- ERROR:
File "XXXX", line 7
    menor = min(var1, var 2, va3)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:30:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input(a)) 
var2 = int(input(b)) 
var3 = int(input(c)) 
menor = min(var1, var2, va3)
maior = max(var1, var2, va3)
meio = (var1 + var2 + var3) - (maior - menor) 
print(maior)
print(meio)
print(menor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    var1 = int(input(a)) 
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:31:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("a")) 
var2 = int(input("b")) 
var3 = int(input("c")) 
menor = min(var1, var2, va3)
maior = max(var1, var2, va3)
meio = (var1 + var2 + var3) - (maior - menor) 
print(maior)
print(meio)
print(menor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    menor = min(var1, var2, va3)
NameError: name 'va3' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:32:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("a")) 
var2 = int(input("b")) 
var3 = int(input("c")) 
menor = min(var1,var2,var3)
maior = max(var1,var2,var3)
meio = (var1 + var2 + var3) - (maior - menor) 
print(maior)
print(meio)
print(menor)
-- OUTPUT:
10
-4
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 23:33:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("a")) 
var2 = int(input("b")) 
var3 = int(input("c")) 
menor = min(var1,var2,var3)
maior = max(var1,var2,var3)
meio = (var1 + var2 + var3) - (maior + menor) 
print(maior)
print(meio)
print(menor)
-- EXECUTION TIME:
0.175183
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10
0
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:33:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("a")) 
var2 = int(input("b")) 
var3 = int(input("c")) 
menor = min(var1,var2,var3)
maior = max(var1,var2,var3)
meio = (var1 + var2 + var3) - (maior + menor) 
print(maior)
print(meio)
print(menor)
-- OUTPUT:
10
0
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 23:33:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("a")) 
var2 = int(input("b")) 
var3 = int(input("c")) 
menor = min(var1,var2,var3)
maior = max(var1,var2,var3)
meio = (var1 + var2 + var3) - (maior + menor) 
print(menor)
print(meio)
print(maior)
-- EXECUTION TIME:
0.203831
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
