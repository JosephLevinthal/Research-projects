== TEST (2019-04-25 19:24:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y) 
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)and(y!=R)and(y!=I)and(y!=C)):
	print("Dados invalidos")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if((x<0)and(y!=R)and(y!=I)and(y!=C)):
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:31:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)and(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:33:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)and(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
else:
	print("ok")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
ok
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:35:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
else:
	print("ok")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:35:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
else:
	print("ok")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:37:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
else:
	print("ok")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:37:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
else:
	print("ok")
-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:46:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R"):
	  print("Valor total:", x*0.44)
	  else:
	  print("Valor total:", x*0.65)
-- ERROR:
File "XXXX", line 9
    elif((x<=500)and(y=="R"):
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:47:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	  print("Valor total:", x*0.44)
	  else:
	  print("Valor total:", x*0.65)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:48:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	  print("Valor total:", x*0.44)
	else:
	print("Valor total:", x*0.65)
-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:49:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
	else:
	print("Valor total:", x*0.65)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:50:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
	else:
		print("Valor total:", x*0.65)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:51:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:53:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:54:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:54:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:57:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:57:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- EXECUTION TIME:
0.210294
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entrada: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entrada: 955.5 kwh e tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:58:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entrada:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entrada: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:59:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- EXECUTION TIME:
0.209211
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:59:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- EXECUTION TIME:
0.142506
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:00:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:00:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:00:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kwh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:01:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", x*0.44)
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:01:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", x*0.55)
elif((x>1000)and(y=="C")):
	print("Valor total:", x*0.60)
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:08:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total:", x*0.65)
elif((x<=1000)and(y=="C")):
	print("Valor total:", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total:", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total:", x*0.55)
elif((x>5000)and(y=="I")):
	print("Valor total:", x*0.60)	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:09:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total:", round(x*0.65, 2))
elif((x<=1000)and(y=="C")):
	print("Valor total:", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total:", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total:", round(x*0.55, 2))
elif((x>5000)and(y=="I")):
	print("Valor total:", round(x*0.60, 2))	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:10:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total:", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total:", round(x*0.65, 2))
elif((x<=1000)and(y=="C")):
	print("Valor total:", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total:", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total:", round(x*0.55, 2))
elif((x>5000)and(y=="I")):
	print("Valor total:", round(x*0.60, 2))	

-- EXECUTION TIME:
0.131414
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:12:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total: R$", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total R$:", round(x*0.65, 2))
elif((x<=1000)and(y=="C")):
	print("Valor total R$:", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total R$:", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total: R$", round(x*0.55, 2))
elif((x>5000)and(y=="I")):
	print("Valor total: R$", round(x*0.60, 2))	

-- EXECUTION TIME:
0.206897
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total R$: 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 20:13:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total: R$", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total R$:", round(x*0.65, 2))
elif((x<=1000)and(y=="C")):
	print("Valor total R$:", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total R$:", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total: R$", round(x*0.55, 2))
elif((x>5000)and(y=="I")):
	print("Valor total: R$", round(x*0.60, 2))	

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 20:14:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("Entrada x: "))
y=input("Entrada y: ")
print("Entradas:", x , "kWh e tipo", y)
if((x<0)or(y!="R")and(y!="I")and(y!="C")):
	print("Dados invalidos")
elif((x<=500)and(y=="R")):
	print("Valor total: R$", round(x*0.44, 2))
elif((x>500)and(y=="R")):
	print("Valor total: R$", round(x*0.65, 2))
elif((x<=1000)and(y=="C")):
	print("Valor total: R$", round(x*0.55, 2))
elif((x>1000)and(y=="C")):
	print("Valor total: R$", round(x*0.60, 2))
elif((x<=5000)and(y=="I")):
	print("Valor total: R$", round(x*0.55, 2))
elif((x>5000)and(y=="I")):
	print("Valor total: R$", round(x*0.60, 2))	

-- EXECUTION TIME:
0.117243
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
