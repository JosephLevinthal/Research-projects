== SUBMITION (2019-04-15 19:17:09) 
-- CODE:
pi = int(input())
vo =  int(input())
t = int(input())

 s = pi + vo*t
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- EXECUTION TIME:
0.214776
-- ERROR:
  File "/home/codebench/codes/1668/2972/main.py", line 5
    s = pi + vo*t
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:17:10) 
-- CODE:
pi = int(input())
vo =  int(input())
t = int(input())

 s = pi + vo*t
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 5
    s = pi + vo*t
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:17:34) 
-- CODE:
pi = int(input())
vo = int(input())
t = int(input())

 s = pi + (vo*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 5
    s = pi + (vo*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:17:46) 
-- CODE:
pi = int(input())
vo = int(input())
t = int(input())
 s = pi + (vo*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 4
    s = pi + (vo*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:18:12) 
-- CODE:
pi = int(input())
v = int(input())
t = int(input())
 s = pi + (v*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 4
    s = pi + (v*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:18:41) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
 s = p + (v*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 4
    s = p + (v*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:18:54) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
 s = (v*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 4
    s = (v*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:03) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
 s = (v*t)
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
File "XXXX", line 4
    s = (v*t)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:16) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
	
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if( s >= 1000 - pi ):
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:32) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - pi ):
	print(s)
	print("sim")
if( s < 1000 - pi):
	print(s)
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if( s >= 1000 - pi ):
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:48) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:56) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:20:04) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
if( s < 1000 - p):
	print(s)
	print("nao")
-- EXECUTION TIME:
0.305344
-- TEST CASE 1:
---- input:
2
25
120
---- correct output:
3002
Sim
---- user output:
3002
sim
-- TEST CASE 2:
---- input:
1
39
109
---- correct output:
4252
Sim
---- user output:
4252
sim
-- TEST CASE 3:
---- input:
5
50
15
---- correct output:
755
Nao
---- user output:
755
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:20:09) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- EXECUTION TIME:
0.196024
-- TEST CASE 1:
---- input:
2
25
120
---- correct output:
3002
Sim
---- user output:
3002
sim
-- TEST CASE 2:
---- input:
1
39
109
---- correct output:
4252
Sim
---- user output:
4252
sim
-- TEST CASE 3:
---- input:
5
50
15
---- correct output:
755
Nao
---- user output:
755
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:20:10) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = s + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:20:15) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())
s = p
s = p + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:20:19) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())

s = p + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:20:27) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())

s = p + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- OUTPUT:
3002
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:20:30) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())

s = p + v*t
if( s >= 1000 - p ):
	print(s)
	print("sim")
	
if( s < 1000 - p):
	print(s)
	print("nao")
-- EXECUTION TIME:
0.143839
-- TEST CASE 1:
---- input:
2
25
120
---- correct output:
3002
Sim
---- user output:
3002
sim
-- TEST CASE 2:
---- input:
1
39
109
---- correct output:
4252
Sim
---- user output:
4252
sim
-- TEST CASE 3:
---- input:
5
50
15
---- correct output:
755
Nao
---- user output:
755
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:21:01) 
-- CODE:
p = int(input())
v = int(input())
t = int(input())

s = p + v*t
if( s >= 1000 - p ):
	print(s)
	print("Sim")
	
if( s < 1000 - p):
	print(s)
	print("Nao")
-- EXECUTION TIME:
0.116154
-- TEST CASE 1:
---- input:
2
25
120
---- correct output:
3002
Sim
---- user output:
3002
Sim
-- TEST CASE 2:
---- input:
1
39
109
---- correct output:
4252
Sim
---- user output:
4252
Sim
-- TEST CASE 3:
---- input:
5
50
15
---- correct output:
755
Nao
---- user output:
755
Nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
