== SUBMITION (2019-04-11 11:52:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))

if (2 * x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- EXECUTION TIME:
0.237482
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 11:52:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))

if (2 * x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- EXECUTION TIME:
0.280527
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:52:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))

if (2 * x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:53:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))

if (2 * x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:17:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))
p = 2x+y

if (p == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- ERROR:
File "XXXX", line 6
    p = 2x+y
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:28:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))
p = 2*x+y

if (p == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- ERROR:
File "XXXX", line 6
    p = 2x+y
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:28:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))
p = 2*x+y

if (p == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- EXECUTION TIME:
0.143801
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:29:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))


if (2*x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- ERROR:
File "XXXX", line 6
    p = 2x+y
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:29:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("coordenadas eixo x:"))
y = float(input("coordenadas eixo y:"))


if (2*x + y == 3):
   mensagem = "ponto pertence a reta"
else :
	mensagem = "ponto não pertence a reta"
-- EXECUTION TIME:
0.159183
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
