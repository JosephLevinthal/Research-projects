== TEST (2019-03-19 19:58:29) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(imput("4"))

# Impressao do dobro do numero
print(8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(imput("4"))
NameError: name 'imput' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:26:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(imput(10))

# Impressao do dobro do numero
print(2*valor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(imput(10))
NameError: name 'imput' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:28:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(10)

# Impressao do dobro do numero
print(2*valor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*valor)
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:28:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(10)

# Impressao do dobro do numero
print(2*)
-- ERROR:
File "XXXX", line 7
    print(2*)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:33:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(2*)
-- ERROR:
File "XXXX", line 7
    print(2*)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:33:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(2*dobro)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*dobro)
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 21:33:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(2*dobro)
-- EXECUTION TIME:
0.182268
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1578/2897/main.py", line 7, in <module>
    print(2*dobro)
NameError: name 'dobro' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:33:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print("2*dobro")
-- OUTPUT:
102*dobro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:39:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print("dobro")
-- OUTPUT:
10dobro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:42:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(dobro(input))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(dobro(input))
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:43:12) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(2*(input))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*(input))
TypeError: unsupported operand type(s) for *: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:43:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(2*(input))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*(input))
TypeError: unsupported operand type(s) for *: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:44:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(2*input)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(2*input)
TypeError: unsupported operand type(s) for *: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:44:38) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(*input)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(*input)
TypeError: print() argument after * must be an iterable, not builtin_function_or_method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:51:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print('Dobro é: ', (num * 2))
-- OUTPUT:
Dobro é:  2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 21:51:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print('Dobro é:', (num * 2))
-- EXECUTION TIME:
0.144602
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1578/2897/main.py", line 7, in <module>
    print('Dobro \xe9:', (num * 2))
UnicodeEncodeError: 'ascii' codec can't encode character '\xe9' in position 6: ordinal not in range(128)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:52:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(num * 2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:53:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:53:39) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(input*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(input*2)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 21:58:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(10*2)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 22:01:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(dobro(10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(dobro(10))
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 22:02:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("10: "))

# Impressao do dobro do numero
print(dobro(input))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(dobro(input))
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:21:54) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(
-- ERROR:
File "XXXX", line 8
    
          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:22:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:23:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(num^2)
-- OUTPUT:
1232
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:24:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(num**2)
-- OUTPUT:
1522756
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:24:38) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:24:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero: "))

# Impressao do dobro do numero
print(num*2)
-- EXECUTION TIME:
0.125795
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:26:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Escreva o numero ao lado para ver o dobro: "))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:27:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Escreva o numero ao lado para ver o dobro: "))

# Impressao do dobro do numero
print("Resultado é:" num*2)
-- ERROR:
File "XXXX", line 7
    print("Resultado é:" num*2)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:27:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Escreva o numero ao lado para ver o dobro: "))

# Impressao do dobro do numero
print("Resultado é:"+num*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("Resultado é:"+num*2)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:27:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Escreva o numero ao lado para ver o dobro: "))

# Impressao do dobro do numero
print("Resultado é:")
print(num*2)
-- OUTPUT:
Resultado é:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:28:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
102468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:31:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(10))
input("Eu quero quero q a pessoa digite, em seguida:")
# Impressao do dobro do numero
print(num*num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:31:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Eu quero quero q a pessoa digite, em seguida:"))

# Impressao do dobro do numero
print(num*num)
-- OUTPUT:
1522756
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:33:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = str(input("Eu quero quero q a pessoa digite, em seguida:"))

# Impressao do dobro do numero
print(num*num)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num*num)
TypeError: can't multiply sequence by non-int of type 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:33:17) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = str(input("Eu quero quero q a pessoa digite, em seguida:"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:36:03) 
-- CODE:

texto = str(input("Digite seu nome:"))
print(texto)

numero = int(input("Digite sua idade e veja o dobro correspondente:"))
print(numero)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    numero = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:36:43) 
-- CODE:

texto = str(input("Digite seu nome:"))
print(texto)

numero = int(input("Digite sua idade e veja o dobro correspondente:"))
print(numero*2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    numero = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:44:24) 
-- CODE:
nome = str(input("Digite seu nome:"))
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
#Nome: Bruno Idade em dobro: 68
texto = "Nome: "+nome+" Idade em dobro:"+dobro*2

print(texto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:45:30) 
-- CODE:
nome = str(input("Digite seu nome:"))
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
#Nome: Bruno Idade em dobro: 68
texto = "Nome: "+nome+" Idade em dobro:"+str(dobro*2)

print(texto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:47:44) 
-- CODE:
nome = str(input("Digite seu nome:"))
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
#Nome: Bruno Idade em dobro: 68
texto = "Seu nome é "+nome+" e sua idade em dobro é"+str(dobro*2)

print(texto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:49:29) 
-- CODE:
nome = str(input("Digite seu nome:"))
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
#Nome: Bruno Idade em dobro: 68
texto = "Seu nome é "+nome+" e é"+str(dobro*2)

print(texto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:50:35) 
-- CODE:

dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:51:57) 
-- CODE:
input("Ele faz um texto aparecer na tela e o usuário pode escrever em seguida")
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:52:52) 
-- CODE:
print(input("Ele faz um texto aparecer na tela e o usuário pode escrever em seguida"))

dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:53:12) 
-- CODE:
texto=input("Ele faz um texto aparecer na tela e o usuário pode escrever em seguida")
print(texto)
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:53:24) 
-- CODE:
texto=input("Ele faz um texto aparecer na tela e o usuario pode escrever em seguida")
print(texto)
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:54:54) 
-- CODE:
numeroOculto=input("escreva um número que não vai aparecer depois")
#print(numeroOculto)
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:55:17) 
-- CODE:
numeroOculto=input("escreva um numero que não vai aparecer depois")
#print(numeroOculto)
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:55:28) 
-- CODE:
numeroOculto=input("escreva um numero que nao vai aparecer depois")
#print(numeroOculto)
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:57:53) 
-- CODE:
numeroOculto=input("escreva um numero que nao vai aparecer depois")
#para ajudar quem esta fazendo o codigo, use o # para não aparecer ou ser usado no comando
#variavel dobro nesse código que dizer que o número será multiplicado por 2 
#a variavél texto é uma variavel de string e a variavel numero é uma variavel int
dobro = int(input("Digite sua idade e veja o dobro correspondente:"))
print(dobro*numeroOculto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dobro = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:58:54) 
-- CODE:
oculto=input("escreva um numero que nao vai aparecer depois")
#para ajudar quem esta fazendo o codigo, use o # para não aparecer ou ser usado no comando
#variavel dobro nesse código que dizer que o número será multiplicado por 2 
#a variavél texto é uma variavel de string e a variavel numero é uma variavel int
numero = int(input("Digite sua idade e veja o dobro correspondente:"))
print(numero*oculto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    numero = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:59:10) 
-- CODE:
oculto=input("escreva um numero que nao vai aparecer depois")
#para ajudar quem esta fazendo o codigo, use o # para não aparecer ou ser usado no comando
#variavel dobro nesse código que dizer que o número será multiplicado por 2 
#a variavél texto é uma variavel de string e a variavel numero é uma variavel int
numero = int(input("Digite sua idade e veja o dobro correspondente:"))
print(numero+oculto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    numero = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:59:56) 
-- CODE:
oculto=int(input("escreva um numero que nao vai aparecer depois"))
#para ajudar quem esta fazendo o codigo, use o # para não aparecer ou ser usado no comando
#variavel dobro nesse código que dizer que o número será multiplicado por 2 
#a variavél texto é uma variavel de string e a variavel numero é uma variavel int
numero = int(input("Digite sua idade e veja o dobro correspondente:"))
print(numero+oculto)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    numero = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
