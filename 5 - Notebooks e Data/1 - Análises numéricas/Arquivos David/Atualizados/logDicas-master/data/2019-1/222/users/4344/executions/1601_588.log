== TEST (2019-04-01 14:33:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
# Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

VALOR = input("Qual o valor do saque? ")
# Quantidade de notas de R$ 100
notas_100 = valor // 100
# Valor restante a ser sacado com notas menores que R$ 100
resto_100 = valor%100
# Quantidade de notas de R$ 50
valor // 50 = notas_50
# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = valor % 50
# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10
# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10


print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- ERROR:
File "XXXX", line 14
    valor // 50 = notas_50
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:34:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
# Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

VALOR = input("Qual o valor do saque? ")
# Quantidade de notas de R$ 100
notas_100 = valor // 100
# Valor restante a ser sacado com notas menores que R$ 100
resto_100 = valor%100
# Quantidade de notas de R$ 50
notas_50 = resto_100 // 50
# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50
# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10
# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10


print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    notas_100 = valor // 100
NameError: name 'valor' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:34:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
# Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

valor = input("Qual o valor do saque? ")
# Quantidade de notas de R$ 100
notas_100 = valor // 100
# Valor restante a ser sacado com notas menores que R$ 100
resto_100 = valor%100
# Quantidade de notas de R$ 50
notas_50 = resto_100 // 50
# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50
# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10
# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10


print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    notas_100 = valor // 100
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:34:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
# Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

valor = int(input("Qual o valor do saque? "))
# Quantidade de notas de R$ 100
notas_100 = valor // 100
# Valor restante a ser sacado com notas menores que R$ 100
resto_100 = valor%100
# Quantidade de notas de R$ 50
notas_50 = resto_100 // 50
# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50
# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10
# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10


print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- OUTPUT:
9
1
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 14:35:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Use as mensagens de erro para corrigir seu codigo.
# Instituto de Computacao - UFAM
# Lab 01 - Ex 10
# 20 / 05 / 2016

valor = int(input("Qual o valor do saque? "))
# Quantidade de notas de R$ 100
notas_100 = valor // 100
# Valor restante a ser sacado com notas menores que R$ 100
resto_100 = valor%100
# Quantidade de notas de R$ 50
notas_50 = resto_100 // 50
# Valor restante a ser sacado com notas menores que R$ 50
resto_50 = resto_100 % 50
# Quantidade de notas de R$ 10
notas_10 = resto_50 // 10
# Valor restante a ser sacado com notas menores que R$ 50
resto_10 = resto_50 % 10


print(int(notas_100))
print(int(notas_50))
print(int(notas_10))
-- EXECUTION TIME:
0.147365
-- TEST CASE 1:
---- input:
990
---- correct output:
9
1
4
---- user output:
9
1
4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
