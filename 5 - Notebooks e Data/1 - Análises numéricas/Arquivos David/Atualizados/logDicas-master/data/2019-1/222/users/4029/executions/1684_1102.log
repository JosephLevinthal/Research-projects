== TEST (2019-04-27 14:21:08) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(iput("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (h > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    h = float(iput("Nivel de combustivel do tanque: "))
NameError: name 'iput' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:21:50) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (h > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:22:06) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (h > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- EXECUTION TIME:
0.143382
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:25:17) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:25:34) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- EXECUTION TIME:
0.181694
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:26:47) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")

-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:27:24) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:27:36) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.14638
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:27:48) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:28:38) 
-- CODE:
from math import

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:29:07) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:33:15) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # semiesf. interior
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): #interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.188062
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:33:35) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # sem
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): # interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:33:49) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # sem
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): # interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H -h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.21926
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:35:33) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # sem
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): # interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H - h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:35:46) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # sem
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): # interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H - h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:35:58) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r): # sem
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)): # interior cilindro
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)): # semiesf. superior
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H - h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.222591
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:37:00) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r):
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)):
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)):
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H - h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- OUTPUT:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:37:13) 
-- CODE:
from math import *

H = float(input("Altura total do tanque: "))
h = float(input("Nivel de combustivel do tanque: "))
r = float(input("Raio dos bojos semiesfericos: "))

print("Entradas ", H, ",", h, ",", r)

if (H > 0) and (h > 0) and (r > 0) and (H > h) and (H > (2*r)):
	if (h <= r):
		vol = (pi/3) * (h**2) * (3*r - h)
	if (h > r) and (h <= (H - r)):
		vol = (4/3) * pi * (r**3)
		vol = (vol/2) + (pi * (r**2) * (h - r))
	if (h > r) and (h > (H - r)):
		vol = (4/3) * pi * (r**3)
		vol = vol + (pi * (r**2) * (H - 2*r))
		vol = vol - ((pi/3) * (H - h)**2 * (3*r - (H - h)))
	vol = round(vol*1000, 3)
	print("Volume:", vol, "litros")
else:
	print("Entradas invalidas")
-- EXECUTION TIME:
0.217983
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas  11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas  8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas  8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
