== TEST (2019-06-17 21:34:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:42:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
bacteria= array([2,1,4],[1,2,0],[2,3,2])
alimento= array(eva(input("digite vetor:")))
valor= dot(inv(bacteria),alimento.T)
print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")
-- EXECUTION TIME:
1.10315
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1846/2602/main.py", line 3, in <module>
    bacteria= array([2,1,4],[1,2,0],[2,3,2])
ValueError: only 2 non-keyword arguments accepted

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:42:55) 
-- CODE:
from numpy import*
from numpy.linalg import*
bacteria= array([2,1,4],[1,2,0],[2,3,2])
alimento= array(eval(input("digite vetor:")))
valor= dot(inv(bacteria),alimento.T)
print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")
-- EXECUTION TIME:
0.840399
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1846/2602/main.py", line 3, in <module>
    bacteria= array([2,1,4],[1,2,0],[2,3,2])
ValueError: only 2 non-keyword arguments accepted

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:43:22) 
-- CODE:

from numpy import *
from numpy.linalg import *

bacteria = array([[2, 1, 4 ], [ 1, 2, 0], [ 2, 3, 2]])

alimento = array(eval(input("digite o vetor:")))

valor = dot(inv(bacteria), alimento.T)

print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
0.706534
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:50:44) 
-- CODE:

from numpy import *
from numpy.linalg import *

bacteria = array([[2, 1, 4 ], [ 1, 2, 0], [ 2, 3, 2]])

alimento = array(eval(input("digite o vetor:")))

valor = dot(inv(bacteria), alimento.T)

print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
0.841376
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:50:46) 
-- CODE:

from numpy import *
from numpy.linalg import *

bacteria = array([[2, 1, 4 ], [ 1, 2, 0], [ 2, 3, 2]])

alimento = array(eval(input("digite o vetor:")))

valor = dot(inv(bacteria), alimento.T)

print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
1.23289
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
digite o vetor:estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
digite o vetor:estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
digite o vetor:estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:50:51) 
-- CODE:

from numpy import *
from numpy.linalg import *

bacteria = array([[2, 1, 4 ], [ 1, 2, 0], [ 2, 3, 2]])

alimento = array(eval(input("digite o vetor:")))

valor = dot(inv(bacteria), alimento.T)

print("estafilococo:", round(valor[0],1))
print("salmonela:", round(valor[1],1))
print("coli:", round(valor[2],1))

if valor[0] == min(valor):
    print("estafilococo")
elif valor[1] == min(valor):
    print("salmonela")
else:
    print("coli")

-- EXECUTION TIME:
1.0913
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
