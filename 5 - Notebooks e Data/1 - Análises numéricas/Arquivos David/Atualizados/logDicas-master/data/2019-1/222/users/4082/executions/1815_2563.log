== TEST (2019-06-05 18:44:40) 
-- CODE:
from numpy import*
notas=array(eval(input("informe as notas:")))
soma=0

for i in range(size(notas)):
	soma=soma+notas[1]
	
media= soma/size(notas)

print(round(media,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 18:44:53) 
-- CODE:
from numpy import*
notas=array(eval(input("informe as notas:")))
soma=0

for i in range(size(notas)):
	soma=soma+notas[1]
	
media= soma/size(notas)

print(round(media,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 18:45:12) 
-- CODE:
from numpy import*
notas=array(eval(input("informe as notas:")))
soma=0

for i in range(size(notas)):
	soma=soma+notas[1]
	
media= soma/size(notas)

print(round(media,2))
-- EXECUTION TIME:
1.21021
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
6.4
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
5.2
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
7.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:05:55) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media= array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > media[1]):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento > = 5) and (elemento <7):
         n_tem_condicoes = npar + 1

   # No. de elementos pares
   print(npar)

   # No. defrom numpy import*
   print(size(media))

   # No. de elementos impares
   print(size(media)- n_tem_condicoes

   
-- ERROR:
File "XXXX", line 14
    if (elemento > = 5) and (elemento <7):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:06:17) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media= array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > media[1]):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = npar + 1

   # No. de elementos pares
   print(npar)

   # No. defrom numpy import*
   print(size(media))

   # No. de elementos impares
   print(size(media)- n_tem_condicoes

   
-- ERROR:
File "XXXX", line 27
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:07:51) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media= array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > media[1]):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = npar + 1

   # No. de elementos pares
   print(npar)

   # No. defrom numpy import*
   print(size(media))

   # No. de elementos impares
   print(size(media)- n_tem_condicoes

   
-- ERROR:
File "XXXX", line 27
    
       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 19:13:01) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media= array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = n_tem_condicoes+ 1

   # No. de elementos pares
   print(n_tem_condicoes)
	media= array(eval(input("informe as medias: ")))


	
   
-- EXECUTION TIME:
0.740819
-- ERROR:
  File "/home/codebench/codes/1815/2563/main.py", line 19
    media= array(eval(input()))
                              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:13:02) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media= array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = n_tem_condicoes+ 1

   # No. de elementos pares
   print(n_tem_condicoes)
	media= array(eval(input("informe as medias: ")))


	
   
-- ERROR:
File "XXXX", line 19
    media= array(eval(input()))
                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 19:15:00) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media=array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = n_tem_condicoes+ 1

   # No. de elementos pares
   print(n_tem_condicoes)
	
	media= array(eval(input("informe as medias: ")))


	
   
-- EXECUTION TIME:
0.883898
-- ERROR:
  File "/home/codebench/codes/1815/2563/main.py", line 20
    media= array(eval(input()))
                              ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:15:02) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media=array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = n_tem_condicoes + 1

   # No. de elementos pares
   print(n_tem_condicoes)
	
	media= array(eval(input("informe as medias: ")))


	
   
-- ERROR:
File "XXXX", line 20
    media= array(eval(input()))
                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-05 19:15:46) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media=array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
   n_tem_condicoes = 0

   # Conta quantidade de elementos pares
   for elemento in media:
      if (elemento >= 5) and (elemento <7):
         n_tem_condicoes = n_tem_condicoes + 1

   # No. de elementos pares
	print(n_tem_condicoes)
	
	media= array(eval(input("informe as medias: ")))


	
   
-- ERROR:
File "XXXX", line 18
    print(n_tem_condicoes)
                         ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-05 19:18:58) 
-- CODE:
from numpy import*

# Leitura do primeiro vetor
media=array(eval(input("informe as medias: ")))


# Verifica se o programa vai terminar
while (size(media) > 1 ):
   # Zera contador de elementos pares
	n_tem_condicoes = 0

   # Conta quantidade de elementos pares
	for elemento in media:
		if (elemento >= 5) and (elemento <7):
			n_tem_condicoes = n_tem_condicoes + 1

   # No. de elementos pares
	print(n_tem_condicoes)
	
	media= array(eval(input("informe as medias: ")))


	
   
-- EXECUTION TIME:
1.08683
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
6
0
3
1
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
11
4
1
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
5
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
