== TEST (2019-04-01 15:16:41) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = 0.5*b
print(dano1)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:17:16) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = 0.5*b
print(int(dano1))
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:19:23) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = math.sqrt * b
print(int(dano1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano1 = math.sqrt * b
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:21:17) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int(0.5 * b) + (pi ** c / 3 ))
print(int(dano1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(int(dano1))
NameError: name 'dano1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:21:31) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int(0.5 * b) + (pi ** c / 3 ))
print(int(dano))
-- OUTPUT:
320
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:23:38) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int(0.5 * b) + (pi ** c / 3 ))
print(int(dano))
-- EXECUTION TIME:
0.177323
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
320
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
323
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:24:20) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int(0.5 * ( 5 * b) + (pi ** c / 3 ))
print(int(dano))
-- ERROR:
File "XXXX", line 6
    print(int(dano))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:24:36) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int( 0.5 * ( 5 * b) + (pi ** c / 3 ))
print(dano)
-- ERROR:
File "XXXX", line 6
    print(dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:24:43) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano = (int( 0.5 * ( 5 * b) + (pi ** c / 3 ))
print(dano )
-- ERROR:
File "XXXX", line 6
    print(dano )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:27:27) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = (pi ** c / 3)
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = (pi ** c / 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:27:55) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = math.( pi ** c / 3)
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = math.( pi ** c / 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:28:11) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = from math*( pi ** c / 3)
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = from math*( pi ** c / 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:28:22) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = from math import*( pi ** c / 3)
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = from math import*( pi ** c / 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:29:38) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = int( pi ** c / 3)
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = int( pi ** c / 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:29:50) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) )
dano2 = (int( pi ** c / 3))
print(dano2)
-- ERROR:
File "XXXX", line 6
    dano2 = (int( pi ** c / 3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:30:48) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) + pi ** c / 3)
print(dano1)
-- ERROR:
File "XXXX", line 6
    print(dano1)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:30:56) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * ( 5 * b) + pi ** c / 3)
print(dano1 )
-- ERROR:
File "XXXX", line 6
    print(dano1 )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:31:56) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * b) + pi ** c / 3)
print(dano1 )
-- OUTPUT:
320.4630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:32:08) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * b * 5) + pi ** c / 3)
print(dano1 )
-- OUTPUT:
322.4630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:32:32) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (int ( 0.5 * b * 5) + pi ** c / 3)
print(int(dano1 )
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:32:42) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( int ( 0.5 * b * 5) + pi ** c / 3)
print(int(dano1 )
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:32:50) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( int ( 0.5 * b * 5) + pi ** c // 3)
print(int(dano1 )
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:34:08) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (( 0.5 * b * 5) + pi ** c // 3)
print(int(dano1 )
-- ERROR:
File "XXXX", line 7
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:03) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (( 0.5 * b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- OUTPUT:
322.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:30) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (( 0.5 * b * 5) + pi ** c / 3)
int(dano1 )
print(dano1)
-- OUTPUT:
322.9630645251014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:52) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (( 0.5 * b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- OUTPUT:
322.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:36:16) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (( sqrt * b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano1 = (( sqrt * b * 5) + pi ** c // 3)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:36:35) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt * ( b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano1 = (sqrt * ( b * 5) + pi ** c // 3)
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:36:58) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 ( b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano1 = ( 0.5 ( b * 5) + pi ** c // 3)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:39:27) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + pi ** c // 3)
int(dano1 )
print(dano1)
-- ERROR:
File "XXXX", line 5
    dano1 = ( 0.5 * b * 5) + pi ** c // 3)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:39:41) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c // 3)
int(dano1 )
print(dano1)
-- OUTPUT:
322.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:40:00) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c // 3)
int(dano1 )
print(int(dano1)
-- ERROR:
File "XXXX", line 8
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:40:12) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c // 3)
int(dano1 )
print(float(dano1)
-- ERROR:
File "XXXX", line 8
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:40:24) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c // 3)
int(dano1 )
print(dano1)
-- OUTPUT:
322.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:43:49) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c // 3)
print(int(dano1))
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:45:54) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1))
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:56:27) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1))
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:56:53) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1))
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:57:08) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1))
-- OUTPUT:
322
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:57:33) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1 + 38))
-- OUTPUT:
360
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:57:47) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = ( 0.5 * b * 5) + (pi ** c / 3)
print(int(dano1 + 38))
-- EXECUTION TIME:
0.146589
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
360
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
373
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
41
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 19:25:41) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = sqrt( 5 * b * 5) + (pi ** c / 3)
print(int(dano1 + 38))
-- EXECUTION TIME:
0.152385
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
363
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
370
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
44
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 19:25:42) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = sqrt( 5 * b * 5) + (pi ** c / 3)
print(int(dano1 + 38))
-- OUTPUT:
363
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 19:26:42) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt( 5 * b * 5)) + (pi ** (c / 3))
print(int(dano1 + 38))
-- EXECUTION TIME:
0.143521
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
52
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
60
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
44
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:39:40) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt( 5 * b * 5)) + (pi ** (c / 3))
print(int(dano1 + 38))
-- OUTPUT:
52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:40:19) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt( 5 * b) * (5)) + (pi ** (c / 3))
print(int(dano1 + 38))
-- OUTPUT:
59
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:40:36) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt*( 5 * b) * (5)) + (pi ** (c / 3))
print(int(dano1 + 38))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano1 = (sqrt*( 5 * b) * (5)) + (pi ** (c / 3))
TypeError: unsupported operand type(s) for *: 'builtin_function_or_method' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:41:31) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = (sqrt( 5 * b) * (5)) + (pi ** (c / 3))
print(dano1)
-- OUTPUT:
21.049944288588307
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:24:16) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = int(math.sqrt( 5 * b) * (5)) + (pi ** (c / 3))
print(dano1)
-- EXECUTION TIME:
0.781392
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano1 = int(math.sqrt( 5 * b) * (5)) + (pi ** (c / 3))
NameError: name 'math' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:25:12) 
-- CODE:
from math import*
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = int(math.sqrt( 5 * b) * (5) + math.pi ** (c / 3))
print(dano1)
-- EXECUTION TIME:
0.832655
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano1 = int(math.sqrt( 5 * b) * (5) + math.pi ** (c / 3))
NameError: name 'math' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:25:37) 
-- CODE:
import math

HP=float(input())
D1=int(input())
D2=int(input())
dano=int(math.sqrt(5*D1)+math.pi**(D2/3))
HP=HP-dano
print(HP)
-- EXECUTION TIME:
0.912398
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188.0
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285.0
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:26:51) 
-- CODE:
import math
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = int(math.sqrt( 5 * b) * (5) + math.pi ** (c / 3))
hp = a-dano1
print(hp)
-- EXECUTION TIME:
0.649659
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
179
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
263
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
488
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:27:46) 
-- CODE:
import math
a = int(input("pontos de vida do boss: "))
b = int(input("valor do primeiro d20: "))
c = int(input("valor do segundo d20: "))
dano1 = int(math.sqrt( 5 * b) * + math.pi ** (c / 3))
hp = a-dano1
print(hp)
-- EXECUTION TIME:
0.6489
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
178
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
246
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 14:28:02) 
-- CODE:
import math

HP=float(input())
D1=int(input())
D2=int(input())
dano=int(math.sqrt(5*D1)+math.pi**(D2/3))
HP=HP-dano
print(HP)
-- EXECUTION TIME:
0.56052
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188.0
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285.0
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
