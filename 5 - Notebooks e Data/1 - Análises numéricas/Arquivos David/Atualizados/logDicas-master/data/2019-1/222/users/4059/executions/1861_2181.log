== TEST (2019-06-26 18:30:22) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:30:33) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:31:47) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 18:32:08) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- EXECUTION TIME:
1.20092
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
4.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.34
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
15.9
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 18:32:24) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- EXECUTION TIME:
1.03935
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
4.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.34
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
15.9
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:32:32) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:34:42) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:34:58) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n+1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 18:35:08) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n+1):
			z[i]=m[i,j]
print(min(z))
			
-- EXECUTION TIME:
0.838842
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
2.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.34
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
15.9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:35:11) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros(n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n+1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:37:04) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros((n**2)-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:37:28) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros((n**2)-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:38:15) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
qtd=(n**2)-n
z=zeros(qtd, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:38:40) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)
qtd=(n**2)-n
z=zeros(qtd, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:41:49) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=((n**2)-n)-1
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:42:37) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n-1)**2)-n-1)-1
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:42:56) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n-1)**2)-n-1)
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:43:23) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n)**2)-n)
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:43:32) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n)**2)-n)
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:43:53) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n)**2)-n)
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:45:01) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n)**2)-n)-1
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:45:15) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
t=(((n)**2)-n)-1
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:49:49) 
-- CODE:
from numpy import *
from numpy.linalg import *

m=array(eval(input()))
n=shape(m)[0]
z=zeros((((shape(m)[0])**2)-shape(m[0])), dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:50:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
z=zeros((n**2)-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(min(z))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:52:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
z=zeros((n**2)-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(n)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:53:20) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
z=zeros(n*n-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(n)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:53:26) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
z=zeros(n*n-n, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(n)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:53:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(t)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:54:20) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t-1, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(t)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:54:34) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t-1, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:55:11) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if (i+j!=n-1):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:55:34) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j!)=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
File "XXXX", line 10
    if ((i+j!)=(n-1)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:55:36) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j!)=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
File "XXXX", line 10
    if ((i+j!)=(n-1)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:55:45) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:56:32) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:58:19) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:58:48) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:59:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(n)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 18:59:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()))
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:01:04) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()), dtype=float)
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:01:45) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()), dtype=float)
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i-1]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:02:18) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
m=array(eval(input()), dtype=float)
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=m[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:03:17) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:03:55) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(m)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:04:08) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:04:28) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i-1 in range(n):
	for j-1 in range (n):
		if ((i+j)!=(n-1)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
File "XXXX", line 8
    for i-1 in range(n):
       ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:04:46) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n-1):
	for j in range (n-1):
		if ((i+j)!=(n-1)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:05:25) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n-1):
	for j in range (n):
		if ((i+j)!=(n)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:05:48) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:07:02) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:07:11) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n)):
			z[i]=matriz[i,j]
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:08:26) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
k=0
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n)):
			z[k]=matriz[i,j]
			k=k+1
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:09:26) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
k=0
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n)):
			z[k]=matriz[i,j]
			k=k+1
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:09:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
k=0
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[k]=matriz[i,j]
			k=k+1
print(z)
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 19:09:55) 
-- CODE:
from numpy import *
from numpy.linalg import *
from math import *
matriz=array(eval(input()), dtype=float)
n=shape(matriz)[0]
t=n*n-n
k=0
z=zeros(t, dtype=float)
for i in range(n):
	for j in range (n):
		if ((i+j)!=(n-1)):
			z[k]=matriz[i,j]
			k=k+1
print(min(z))
			
-- EXECUTION TIME:
0.945504
-- TEST CASE 1:
---- input:
[[10,8,2],[20,16,4],[40,32,8]]
---- correct output:
4.0
---- user output:
4.0
-- TEST CASE 2:
---- input:
[[0.32,0.48,0.56],[0.12,0.54,0.34],[0.67,0.89,0.76]]
---- correct output:
0.12
---- user output:
0.12
-- TEST CASE 3:
---- input:
[[34.5,66.7,89.7,65.8,34.6],[77.8,65.7,89.7,23.4,45.9],[12.3,98.9,23.4,67.7,55.5],[33.3,44.4,56.8,91.3,51.9],[11.1,22.2,34.5,66.5,15.9]]
---- correct output:
12.3
---- user output:
12.3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
