== SUBMITION (2019-06-26 12:00:41) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
-- EXECUTION TIME:
0.9489
-- TEST CASE 1:
---- input:
333
555
666
111
-1

---- correct output:
24
---- user output:

-- TEST CASE 2:
---- input:
222
777
555
333
666
111
-1

---- correct output:
50
---- user output:

-- TEST CASE 3:
---- input:
111
222
111
333
111
555
111
777
-1

---- correct output:
57
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:07:44) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 12:07:52) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
-- EXECUTION TIME:
0.960697
-- TEST CASE 1:
---- input:
333
555
666
111
-1

---- correct output:
24
---- user output:

-- TEST CASE 2:
---- input:
222
777
555
333
666
111
-1

---- correct output:
50
---- user output:

-- TEST CASE 3:
---- input:
111
222
111
333
111
555
111
777
-1

---- correct output:
57
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:08:13) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 16:28:29) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
-- EXECUTION TIME:
1.05467
-- TEST CASE 1:
---- input:
333
555
666
111
-1

---- correct output:
24
---- user output:

-- TEST CASE 2:
---- input:
222
777
555
333
666
111
-1

---- correct output:
50
---- user output:

-- TEST CASE 3:
---- input:
111
222
111
333
111
555
111
777
-1

---- correct output:
57
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:29:03) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
saida = destino
destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:29:57) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:30:52) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1

# Atualizando a soma do tempo
soma_do_tempo = soma_do_tempo + matriz[i, j]

# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
saida = destino
destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:31:19) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]

# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
saida = destino
destino = int(input("Cidade de destino: "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:54:06) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
	
print(soma_do_tempo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 16:54:37) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
	saida = destino
	destino = int(input("Cidade de destino: "))
	
print(soma_do_tempo)
-- EXECUTION TIME:
4.46377
-- TEST CASE 1:
---- input:
333
555
666
111
-1

---- correct output:
24
---- user output:
24
-- TEST CASE 2:
---- input:
222
777
555
333
666
111
-1

---- correct output:
50
---- user output:
50
-- TEST CASE 3:
---- input:
111
222
111
333
111
555
111
777
-1

---- correct output:
57
---- user output:
57
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 16:57:04) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]

# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
saida = destino
destino = int(input("Cidade de destino: "))
-- EXECUTION TIME:
758.077
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 17:02:01) 
-- CODE:
from numpy import*
saida = int(input("Cidade de saida: "))
destino = int(input("Cidade de destino: "))

soma_do_tempo = 0

matriz = array([[0, 2, 11, 6, 15, 11, 1],
			 [2, 0, 7, 12, 4, 2, 15],
			 [11, 7, 0, 11, 8, 3, 13],
			 [6, 12, 11, 0, 10, 2, 1],
			 [15, 4, 8, 10, 0, 5, 13],
			 [11, 2, 3, 2, 5, 0, 14],
			 [1, 15, 13, 1, 13, 14, 0]])

while (saida != -1 and destino != -1):
	# Indexando os as entradas tirando somente o último número
	# Por exemplo, se a saida for 555, então o i será 5, mas como na matriz 555
	# indica o índice 4, subtraimos 1 do resultado
	
	i = (saida%10) - 1
	j = (destino%10) - 1
	
	# Atualizando a soma do tempo
	soma_do_tempo = soma_do_tempo + matriz[i, j]
	
	# Como nosso destino tornou-se nossa nova saida, atualizaremos a saida (nova) para ser igual ao destino(antigo)
saida = destino
destino = int(input("Cidade de destino: "))
-- EXECUTION TIME:
651.76
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
