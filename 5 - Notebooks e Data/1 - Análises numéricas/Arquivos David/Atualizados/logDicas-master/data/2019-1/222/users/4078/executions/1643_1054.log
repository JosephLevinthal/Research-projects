== TEST (2019-04-11 12:55:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 12:55:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 12:55:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.14441
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:23:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 15:24:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.22309
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:26:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:27:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 15:28:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.143597
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:29:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(2*x + y - 3 == 0):
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 15:30:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.169087
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:32:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 15:32:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.20014
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:22:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:23:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.183286
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:23:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(2*x + y - 3 == 0):
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:24:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:24:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
   print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.154156
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:25:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:25:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print("ponto pertence a reta")
else:
	print("ponto nao pertece a reta")
-- EXECUTION TIME:
0.179054
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:26:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print(" ponto pertence a reta ")
else:
	print(" ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:26:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print(" ponto pertence a reta ")
else:
	print(" ponto nao pertece a reta ")
-- EXECUTION TIME:
0.197491
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:26:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:26:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.149263
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:27:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.139423
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:27:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(2*x + y - 3 == 0):
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:28:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(2*x + y - 3 == 0):
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:28:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:29:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.199448
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:29:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:29:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.218648
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:29:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 = 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- ERROR:
File "XXXX", line 7
    if(2*X + Y - 3 = 0):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:30:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:30:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:30:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X + Y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.206852
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:31:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X+Y-3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:31:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X+Y-3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.165229
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:34:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X+Y-3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:34:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X+Y-3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:34:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
X =float(input("coordenada x: "))
Y =float(input("coordenada y: "))

if(2*X+Y-3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.176951
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:38:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:38:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertece a reta ")
-- EXECUTION TIME:
0.164551
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:39:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertence a reta ")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:39:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códig
x =float(input("coordenada x: "))
y =float(input("coordenada y: "))

if(2*x + y - 3 == 0):
	print("ponto pertence a reta ")
else:
	print("ponto nao pertence a reta ")
-- EXECUTION TIME:
0.131763
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
