== TEST (2019-04-08 19:06:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("cervo")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:06:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = (patrono == cervo)
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = (patrono == cervo)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:07:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono == cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("patrono == cervo")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:07:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono == cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("patrono == cervo")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:07:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono == cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- EXECUTION TIME:
0.109772
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    if = ("patrono == cervo")
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:07:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono == cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("patrono == cervo")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:07:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono == cervo")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("patrono == cervo")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:08:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("cervo==patrono")
print("cervo eh patrono do Harry Potter: ")
else:
print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("cervo==patrono")
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:08:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("cervo==patrono"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("cervo==patrono"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:08:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("cervo == patrono"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("cervo == patrono"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:10:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("nome==cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("nome==cervo"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:10:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = ("patrono==cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = ("patrono==cervo"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:24:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if = (nome=="cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
File "XXXX", line 5
    if = (nome=="cervo"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:24:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = int("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    nome = int("nome do patrono: ")
ValueError: invalid literal for int() with base 10: 'nome do patrono: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:25:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- OUTPUT:
cervo eh patrono do Harry Potter:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:26:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter: ")
else:
	print("nao eh patrono do Harry Potter: ")
-- EXECUTION TIME:
0.150082
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter:
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:26:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter ")
else:
	print("nao eh patrono do Harry Potter ")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:26:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter ")
else:
	print("nao eh patrono do Harry Potter ")
-- EXECUTION TIME:
0.140551
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:27:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter ")
else:
	print(nome ,"nao eh patrono do Harry Potter ")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:27:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("nome do patrono: ")
if (nome=="cervo"):
	print("cervo eh patrono do Harry Potter ")
else:
	print(nome ,"nao eh patrono do Harry Potter ")
-- EXECUTION TIME:
0.136876
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
