== SUBMITION (2019-04-29 19:10:25) 
-- CODE:
x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- EXECUTION TIME:
0.157729
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4106735979665885
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.2620174282199965
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:10:37) 
-- CODE:
x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- EXECUTION TIME:
0.149929
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4106735979665885
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
8.120600999999997
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:10:53) 
-- CODE:
import math 
x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:11:14) 
-- CODE:
import math 

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- EXECUTION TIME:
0.132929
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4106735979665885
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
8.120600999999997
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:16) 
-- CODE:
import math 

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:11:30) 
-- CODE:
from import math*

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- EXECUTION TIME:
0.224074
-- ERROR:
  File "/home/codebench/codes/1706/3032/main.py", line 1
    from import math*
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:31) 
-- CODE:
from import math*

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- ERROR:
File "XXXX", line 1
    from import math*
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:41) 
-- CODE:
from import* math

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- ERROR:
File "XXXX", line 1
    from import* math
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:11:58) 
-- CODE:
import from math*

x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- ERROR:
File "XXXX", line 1
    import from math*
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:12:09) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:12:16) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(9/3))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:13:42) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:13:47) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <=2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- EXECUTION TIME:
0.144863
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4106735979665885
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.2620174282199965
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:17) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <= 2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:28) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <= 2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:38) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <= 2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:14:50) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <= 2 ):
	print(x**(0.5))
if(x > 2):
	print(x**(3/9))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:15:27) 
-- CODE:


x = float(input())

if( x <= 0):
	print(0)
if( 0 < x <= 1 ):
	print(1)
if(1 < x <= 2 ):
	print(round(x**(0.5),4))
if(x > 2):
	print(round( x**(3/9), 4 ))
-- EXECUTION TIME:
0.207407
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4107
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.262
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
