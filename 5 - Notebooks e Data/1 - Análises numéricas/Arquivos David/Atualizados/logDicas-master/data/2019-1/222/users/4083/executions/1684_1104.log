== TEST (2019-04-29 13:55:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
elif(b >= d):
	     
-- ERROR:
File "XXXX", line 10
    elif(b >= d):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:55:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
elif(b >= d):
	 print("a")
	     
-- ERROR:
File "XXXX", line 10
    elif(b >= d):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:56:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
    elif(b >= d):
	      print("a")
	     
-- ERROR:
File "XXXX", line 10
    elif(b >= d):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:57:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	  print("Intervalo 1",a, ",", b)    
-- ERROR:
File "XXXX", line 10
    elif(b >= d):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:59:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	  print("Intervalo 1",a, ",", b)
		print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
                                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:59:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	    print("Intervalo 1",a, ",", b)
		print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
                                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:00:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	 print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
                                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:00:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	 print("Intervalo 1",a, ",", b)
	   print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:00:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:01:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
-- ERROR:
File "XXXX", line 11
    print("Intervalo 2",c, ",", d)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:12:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a >= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(b >= c):
	 print("Ha intersecao")
		
elif(d <= b):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:15:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d <= b):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d or a >= d or b <= c or d <= b or d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:16:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d or a >= d or b <= c or d <= b or d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:18:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d or a >= d or b <= c or d <= b or d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:19:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 14:19:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- EXECUTION TIME:
0.171006
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1 -1.0 , -3.0
Intervalo 2 1.0 , 3.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:21:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:22:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a > b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 14:23:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))

if (a < b and d > c):
	print("Intervalo 1",a, ",", b)
	print("Intervalo 2",c, ",", d)
		
elif(a <= d):
	 print("Ha intersecao")
		
elif(a <= c):
	 print("Ha intersecao")
		
elif(b <= c):
	 print("Ha intersecao")
		
elif(d >= b):
	 print("Ha intersecao")
		
elif(not(a >= d and a >= d and b <= c and d <= b and d >= b)):
	      print("Nao ha intersecao")
		
else:
	 print("Entradas invalidas")
-- OUTPUT:
Intervalo 1 1.0 , 2.0
Intervalo 2 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
