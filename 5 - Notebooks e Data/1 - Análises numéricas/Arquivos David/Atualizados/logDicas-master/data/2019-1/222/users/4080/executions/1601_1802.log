== TEST (2019-03-27 18:07:49) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = sqrt(5*D1+pi*D2/3)
print(dano)

-- OUTPUT:
3.359045296982401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:08:31) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = sqrt((5*D1)+(pi*D2/3))
print(dano)

-- OUTPUT:
3.359045296982401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:09:07) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = sqrt((5*D1)+pi*(D2/3))
print(dano)

-- OUTPUT:
3.359045296982401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:11) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = sqrt((5*D1)+pi*(D2/3))
hp2 = dano-hp1
print(hp2)

-- OUTPUT:
-196.6409547030176
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:07) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = dano-hp1
print(hp2)

-- OUTPUT:
-197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:14) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = dano-hp1
print(hp2)

-- OUTPUT:
-197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:41) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- OUTPUT:
197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:17:42) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- EXECUTION TIME:
0.162265
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
197
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
197
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
294
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:17:42) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- EXECUTION TIME:
0.127606
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
197
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
294
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
498
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:54) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+3,14*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    dano = int(sqrt((5*D1)+3,14*(D2/3)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:25) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- OUTPUT:
197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:36) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- OUTPUT:
197
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:54:07) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1)+pi*(D2/3)))
hp2 = hp1-dano
print(hp2)

-- EXECUTION TIME:
0.132802
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
197
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
294
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
498
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:58:21) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt((5*D1))+pi*D2/3
hp2 = hp1-dano
print(hp2)

-- EXECUTION TIME:
0.126704
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 9
    hp2 = hp1-dano
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:58:34) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3
hp2 = hp1-dano
print(hp2)

-- EXECUTION TIME:
0.194044
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 9
    hp2 = hp1-dano
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:58:36) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3
hp2 = hp1-dano
print(hp2)

-- ERROR:
File "XXXX", line 9
    hp2 = hp1-dano
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:59:21) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3
print(dano)

-- ERROR:
File "XXXX", line 9
    print(dano)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:00:08) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2)


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:00:16) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2)


-- EXECUTION TIME:
0.204381
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:00:37) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(int(hp2))


-- EXECUTION TIME:
0.134423
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:14:55) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = sqrt(5*D1)+pi*D2/3
hp2 = hp1-dano
print(int(hp2))


-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:16:10) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2)


-- OUTPUT:
192
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 13:16:35) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#olocar a formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2)


-- EXECUTION TIME:
0.148372
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 13:45:19) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2+1)


-- OUTPUT:
193
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:46:01) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2+1)


-- EXECUTION TIME:
0.158902
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
193
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
290
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
498
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 13:49:06) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input())
D2 = int(input())
#formula de importação
from math import*
dano = int(sqrt(5*D1)+pi*D2/3)
hp2 = hp1-dano
print(hp2)


-- EXECUTION TIME:
0.118815
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
192
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
289
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:02:56) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**D2/3
hp2 = hp1-dano
print(hp2)


-- OUTPUT:
-122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 14:04:06) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**(D2/3)
hp2 = int(hp1-dano)
print(hp2+1)


-- EXECUTION TIME:
0.196203
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:04:14) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**(D2/3)
hp2 = int(hp1-dano)
print(hp2+1)


-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 14:05:08) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**(D2/3)
hp2 = int(hp1-dano)
print(hp2)


-- OUTPUT:
187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 14:05:25) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**(D2/3)
hp2 = int(hp1-dano)
print(hp2+1)


-- EXECUTION TIME:
0.165899
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 18:11:35) 
-- CODE:
#ponto de vida inicial
hp1 = int(input("hp "))
#valores dos dados lançados 
D1 = int(input("primeiro dado: "))
D2 = int(input("segundo dado: "))
#formula de importação
from math import*
dano = sqrt(5*D1)+pi**(D2/3)
hp2 = int(hp1-dano)
print(hp2+1)


-- EXECUTION TIME:
0.205614
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
