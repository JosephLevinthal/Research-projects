== SUBMITION (2019-03-23 23:37:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s(s - var1)*(s - var2)*(s -var3))
print(area)

-- EXECUTION TIME:
0.268965
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 9, in <module>
    area = sqrt(s(s - var1)*(s - var2)*(s -var3))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 23:38:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s(s - var1)*(s - var2)*(s -var3))
print(area)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    area = sqrt(s(s - var1)*(s - var2)*(s -var3))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 23:38:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s(s - var1)*(s - var2)*(s -var3))
print(area, 5)

-- EXECUTION TIME:
0.166065
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 9, in <module>
    area = sqrt(s(s - var1)*(s - var2)*(s -var3))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 23:38:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s(s - var1)*(s - var2)*(s -var3))
print(round(area, 5))

-- EXECUTION TIME:
0.149016
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 9, in <module>
    area = sqrt(s(s - var1)*(s - var2)*(s -var3))
TypeError: 'float' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 23:38:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s(s - var1)*(s - var2)*(s -var3))
print(round(area, 5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    area = sqrt(s(s - var1)*(s - var2)*(s -var3))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 23:39:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s*((s - var1)*(s - var2)*(s -var3))
print(round(area, 5))

-- EXECUTION TIME:
0.161736
-- ERROR:
  File "/home/codebench/codes/1602/1016/main.py", line 10
    print(round(area, 5))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 23:40:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
s = (var1 + var2 + var3) / 2
from math import*
area = sqrt(s*((s - var1)*(s - var2)*(s -var3))
print(round(area, 5))

-- ERROR:
File "XXXX", line 10
    print(round(area, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 23:41:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
from math import*
s = (var1 + var2 + var3) / 2
area = sqrt(s*((s - var1)*(s - var2)*(s -var3)))
print(round(area, 5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 23:42:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = float(input("digite o valor de a"))
var2 = float(input("digite o valor de b"))
var3 = float(input("digite o valor de c"))
from math import*
s = (var1 + var2 + var3) / 2
area = sqrt(s*((s - var1)*(s - var2)*(s -var3)))
print(round(area, 5))

-- EXECUTION TIME:
0.163943
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
