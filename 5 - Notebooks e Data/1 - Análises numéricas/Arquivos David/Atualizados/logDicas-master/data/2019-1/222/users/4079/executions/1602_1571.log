== TEST (2019-03-25 15:54:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print(texto.upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:55:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print(texto.upper())
-- EXECUTION TIME:
0.286096
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:57:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("selina kyle".upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:58:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("selina kyle".upper())
-- EXECUTION TIME:
0.185701
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:59:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("texto".upper())
-- OUTPUT:
TEXTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:00:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("texto".upper())
-- EXECUTION TIME:
0.155716
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
TEXTO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:00:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("SELINA KYLE".upper())
-- EXECUTION TIME:
0.197925
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:00:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("SELINA KYLE".upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:01:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("SELINA KYLE".upper())
-- EXECUTION TIME:
0.134209
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:01:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("SELINA KYLE.".upper())
-- OUTPUT:
SELINA KYLE.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:02:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "selina kyle"
print("SELINA KYLE.".upper())
-- EXECUTION TIME:
0.122575
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 16:03:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLe"
print("selina kyle".upper())
-- EXECUTION TIME:
0.150806
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:03:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLe"
print("selina kyle".upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 16:04:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE"
print("selina kyle".upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:09:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE"
print("selina kyle".upper())
-- OUTPUT:
SELINA KYLE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:09:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE"
print("selina kyle".upper())
-- EXECUTION TIME:
0.170035
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:10:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE."
print("selina kyle.".upper())
-- OUTPUT:
SELINA KYLE.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:10:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE."
print("selina kyle.".upper())
-- EXECUTION TIME:
0.139348
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:11:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE."
print(texto.upper())
-- OUTPUT:
SELINA KYLE.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:11:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE."
print(texto.upper())
-- EXECUTION TIME:
0.158275
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:11:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "SELINA KYLE"
print(texto.upper())
-- EXECUTION TIME:
0.215383
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
SELINA KYLE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:12:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "maykeo santos"
print(texto.upper())
-- OUTPUT:
MAYKEO SANTOS
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:12:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto= "maykeo santos"
print(texto.upper())
-- EXECUTION TIME:
0.121249
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:12:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print(texto.upper())
-- OUTPUT:
MAYKEO SANTOS
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:12:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print(texto.upper())
-- EXECUTION TIME:
0.172858
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:14:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print("texto".upper())
-- OUTPUT:
TEXTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:14:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print("texto".upper())
-- EXECUTION TIME:
0.129727
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
TEXTO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:14:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print("MAYKEO SANTOS".upper())
-- OUTPUT:
MAYKEO SANTOS
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:14:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "maykeo santos"
print("MAYKEO SANTOS".upper())
-- EXECUTION TIME:
0.156508
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:15:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS"
print("maykeo santos".upper())
-- OUTPUT:
MAYKEO SANTOS
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:15:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS"
print("maykeo santos".upper())
-- EXECUTION TIME:
0.137182
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:15:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- OUTPUT:
MAYKEO SANTOS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:16:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- EXECUTION TIME:
0.225097
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:16:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- OUTPUT:
MAYKEO SANTOS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:17:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- EXECUTION TIME:
0.178727
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:17:39) 
-- CODE:
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- OUTPUT:
MAYKEO SANTOS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:17:41) 
-- CODE:
texto = "MAYKEO SANTOS."
print("maykeo santos.".upper())
-- EXECUTION TIME:
0.125121
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:21:23) 
-- CODE:
texto = "MAYKEO SANTOS"
print("maykeo santos".upper())
-- OUTPUT:
MAYKEO SANTOS
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:21:33) 
-- CODE:
texto = "MAYKEO SANTOS"
print("maykeo santos".upper())
-- EXECUTION TIME:
0.151989
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:22:12) 
-- CODE:
texto = "MAYKEO SANTOS"
print("maykeo santos.".upper())
-- OUTPUT:
MAYKEO SANTOS.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:22:24) 
-- CODE:
texto = "MAYKEO SANTOS"
print("maykeo santos.".upper())
-- EXECUTION TIME:
0.19521
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MAYKEO SANTOS.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:23:58) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o Python.".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:24:01) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o Python.".upper())
-- EXECUTION TIME:
0.133163
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:24:23) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python.".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:24:30) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python.".upper())
-- EXECUTION TIME:
0.192382
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:25:08) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python.".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:25:11) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python.".upper())
-- EXECUTION TIME:
0.15641
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:25:33) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python.".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:25:51) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python.".upper())
-- EXECUTION TIME:
0.27541
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:26:22) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:26:26) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.206711
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:03) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print("texto".upper())
-- OUTPUT:
TEXTO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:11) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print(texto.upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:27:15) 
-- CODE:
texto = ("GUIDO VAN ROSSUM CRIOU O PYTHON")
print(texto.upper())
-- EXECUTION TIME:
0.191326
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:28) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:27:31) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- EXECUTION TIME:
0.137571
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:34) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:27:41) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- EXECUTION TIME:
0.174024
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:35:52) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:36:05) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.193003
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:37:14) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:37:18) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.158078
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:37:35) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("Guido van Rossum criou o Python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:37:38) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("Guido van Rossum criou o Python".upper())
-- EXECUTION TIME:
0.165175
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:38:03) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:38:06) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.214522
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:39:07) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python").upper()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print("guido van rossum criou o python").upper()
AttributeError: 'NoneType' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:39:23) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print(guido van rossum criou o python.upper())
-- ERROR:
File "XXXX", line 2
    print(guido van rossum criou o python.upper())
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:39:38) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print(g"uido van rossum criou o python".upper())
-- ERROR:
File "XXXX", line 2
    print(g"uido van rossum criou o python".upper())
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:39:49) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:40:10) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.145898
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:40:52) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:40:55) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.149264
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:41:02) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:41:06) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("guido van rossum criou o python".upper())
-- EXECUTION TIME:
0.177154
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:41:32) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:41:35) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o python".upper())
-- EXECUTION TIME:
0.122506
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:41:40) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o Python".upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:41:43) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("Guido van Rossum criou o Python".upper())
-- EXECUTION TIME:
0.134584
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:45:29) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper ())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:45:33) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper ())
-- EXECUTION TIME:
0.158202
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:45:40) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:45:44) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())
-- EXECUTION TIME:
0.170838
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:46:09) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print(texto.upper())


-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:46:12) 
-- CODE:
texto = "Guido van Rossum criou o Python"
print(texto.upper())


-- EXECUTION TIME:
0.134123
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:47:16) 
-- CODE:
texto = "Guido van Rossum criou o Python."
print(texto.upper())


-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:47:19) 
-- CODE:
texto = "Guido van Rossum criou o Python."
print(texto.upper())


-- EXECUTION TIME:
0.225009
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:48:07) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON."
print(texto.upper())


-- EXECUTION TIME:
0.127161
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:48:09) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON."
print(texto.upper())


-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:48:17) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON."
print(texto.upper())


-- EXECUTION TIME:
0.156979
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:58:01) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON."
print(texto.upper())


-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:58:51) 
-- CODE:
texto = input("GUIDO VAN ROSSUM CRIOU O PYTHON.")
print(texto.upper())


-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:59:03) 
-- CODE:
texto = input("GUIDO VAN ROSSUM CRIOU O PYTHON.")
print(texto.upper())


-- EXECUTION TIME:
0.169159
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
PRIMEIRO_CASO_DE_TESTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
