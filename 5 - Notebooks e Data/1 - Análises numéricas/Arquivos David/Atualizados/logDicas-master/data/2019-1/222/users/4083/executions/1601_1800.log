== TEST (2019-03-20 18:20:51) 
-- CODE:
int = input()
-- OUTPUT:
25.666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:24:20) 
-- CODE:
float = input("digite o valor de A")
-- OUTPUT:
25.666667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:24:35) 
-- CODE:
float = input(digite o valor de A)
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:24:45) 
-- CODE:
float = input(digite o valor de A)
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:26:35) 
-- CODE:
var = input (" digite o valot de A")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:26:46) 
-- CODE:
var = input (" digite o valor de A")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:27:21) 
-- CODE:
var = input (" digite o valor de A:")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:27:35) 
-- CODE:
var = input(" digite o valor de A:")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:28:04) 
-- CODE:
float = input(" digite o valor de A:")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:29:27) 
-- CODE:
float = input(" digite o valor de A:")
float = input(" digite o valor de B:")
float = input(" digite o valor de c:")
-- ERROR:
File "XXXX", line 1
    float = input(digite o valor de A)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:32:44) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

 expressao = (a**2 + b**2 + c **2)
	print(expresao)


-- ERROR:
File "XXXX", line 6
    expressao = (a**2 + b**2 + c **2)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:32:54) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

 expressao = int(a**2 + b**2 + c **2)
	print(expresao)


-- ERROR:
File "XXXX", line 6
    expressao = int(a**2 + b**2 + c **2)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:33:12) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

 expressao = ("a**2 + b**2 + c **2")
	print(expresao)


-- ERROR:
File "XXXX", line 6
    expressao = ("a**2 + b**2 + c **2")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:33:38) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = ("a**2 + b**2 + c **2")
print(expresao)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(expresao)
NameError: name 'expresao' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:34:09) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = ("a**2 + b**2 + c **2")
print("expresao")


-- OUTPUT:
expresao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:35:03) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = int(a**2 + b**2 + c **2)
print(expresao)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    expressao = int(a**2 + b**2 + c **2)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:35:24) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = a**2 + b**2 + c **2
print(expresao)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    expressao = a**2 + b**2 + c **2
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:35:39) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = a**2 + b**2 + c**2
print(expresao)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    expressao = a**2 + b**2 + c**2
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:36:34) 
-- CODE:

float = input(  a:)
float = input(  b:)
float = input(  c:)

expressao = a**2 + b**2 + c**2
print(expresao)


-- ERROR:
File "XXXX", line 2
    float = input(  a:)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:37:47) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = a + b +c
print(expressao)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    expressao = a + b +c
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:38:25) 
-- CODE:

float = input("  a:")
float = input("  b:")
float = input("  c:")

expressao = (a + b + c)
print(expressao)



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    expressao = (a + b + c)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:39:38) 
-- CODE:

var = input int("  a:")
var = input int("  b:")
var= input int("  c:")

expressao = (a + b + c)
print(expressao)



-- ERROR:
File "XXXX", line 2
    var = input int("  a:")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 23:24:42) 
-- CODE:
a = int(input("digite a: "))
b = int(input("digite b: "))
c = int(input("digite c: "))

p1 = (a**2 + b**2 + c**2)
p2 = (a+b+c)
t = p1/p2
print(round(t,  5))

-- OUTPUT:
25.66667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 23:24:55) 
-- CODE:
a = int(input("digite a: "))
b = int(input("digite b: "))
c = int(input("digite c: "))

p1 = (a**2 + b**2 + c**2)
p2 = (a+b+c)
t = p1/p2
print(round(t,  5))

-- EXECUTION TIME:
0.131722
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.66667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.86802
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.15094
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 23:26:03) 
-- CODE:
a = int(input("digite a: "))
b = int(input("digite b: "))
c = int(input("digite c: "))

p1 = (a**2 + b**2 + c**2)
p2 = (a+b+c)
t = p1/p2
print(round(t, 5))

-- OUTPUT:
25.66667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 23:26:13) 
-- CODE:
a = int(input("digite a: "))
b = int(input("digite b: "))
c = int(input("digite c: "))

p1 = (a**2 + b**2 + c**2)
p2 = (a+b+c)
t = p1/p2
print(round(t, 5))

-- OUTPUT:
25.66667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 23:26:41) 
-- CODE:
a = int(input("digite a: "))
b = int(input("digite b: "))
c = int(input("digite c: "))

p1 = (a**2 + b**2 + c**2)
p2 = (a+b+c)
t = p1/p2
print(round(t, 7))

-- EXECUTION TIME:
0.154765
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
25.6666667
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
342.8680203
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
106.1509434
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
