== SUBMITION (2019-06-17 21:52:49) 
-- CODE:
from numpy import *
N = int(input(""))

mat = zeros((N,N), dtype=int)
for i in range(0,N):
for j in range(0,N):
mat[i,j] = min(i,j)+1
print(mat)

-- EXECUTION TIME:
0.692135
-- ERROR:
  File "/home/codebench/codes/1846/1274/main.py", line 6
    for j in range(0,N):
      ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-17 21:52:55) 
-- CODE:
from numpy import *
N = int(input(""))

mat = zeros((N,N), dtype=int)
for i in range(0,N):
for j in range(0,N):
mat[i,j] = min(i,j)+1
print(mat)

-- EXECUTION TIME:
0.813003
-- ERROR:
  File "/home/codebench/codes/1846/1274/main.py", line 6
    for j in range(0,N):
      ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-17 21:53:31) 
-- CODE:
from numpy import *
N = int(input(""))

mat = zeros((N,N), dtype=int)
for i in range(0,N):
for j in range(0,N):
mat[i,j] = min(i,j)+1
print(mat)


-- ERROR:
File "XXXX", line 6
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 22:01:20) 
-- CODE:
from numpy import *
n = int(input(""))

mat = zeros((N,N), dtype=int)
for i in range(0,N):
for j in range(0,N):
mat[i,j] = min(i,j)+1
print(mat)


-- ERROR:
File "XXXX", line 6
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 10:41:33) 
-- CODE:
from numpy import *

n = int(input("Numero: "))
m = zeros((n, n), dtype=int)

for i in range(n):
	for j in range(n):
		if i > j:
			m[i, j] = j+1
		elif i <= j:
			m[i, j] = i+1
	
print(m)

-- EXECUTION TIME:
1.12864
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
Numero: [[1]]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 10:41:39) 
-- CODE:
from numpy import *

n = int(input("Numero: "))
m = zeros((n, n), dtype=int)

for i in range(n):
	for j in range(n):
		if i > j:
			m[i, j] = j+1
		elif i <= j:
			m[i, j] = i+1
	
print(m)

-- EXECUTION TIME:
0.862249
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
