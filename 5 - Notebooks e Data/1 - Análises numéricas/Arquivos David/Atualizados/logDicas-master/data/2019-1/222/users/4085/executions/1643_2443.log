== TEST (2019-04-13 12:59:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
V = 4 * pi * r **3 / 3
from math import *
if (opcao == "1")
	mensagem = pi * x **2 * (3 * r - x) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- ERROR:
File "XXXX", line 9
    if (opcao == "1")
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:00:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
V = 4 * pi * r **3 / 3
from math import *
if (opcao == "1"):
	mensagem = pi * x **2 * (3 * r - x) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    V = 4 * pi * r **3 / 3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:00:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")

from math import *
V = 4 * pi * r **3 / 3
if (opcao == "1"):
	mensagem = pi * x **2 * (3 * r - x) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 13:01:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")

from math import *
V = 4 * pi * r **3 / 3
if (opcao == "1"):
	mensagem = pi * x **2 * (3 * r - x) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- EXECUTION TIME:
0.131908
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
309.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:03:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
from math import *
V = 4 * pi * r **3 / 3
if (opcao == "1"):
	mensagem = (pi * x **2 * (3 * r - x)) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 13:03:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
from math import *
V = 4 * pi * r **3 / 3
if (opcao == "1"):
	mensagem = (pi * x **2 * (3 * r - x)) / 3
else:
	mensagem = V - 1

print(round(mensagem, 4))

-- EXECUTION TIME:
0.214502
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
309.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:28:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = pi * x * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = vt - vc

print(round(mensagem, 4))

-- OUTPUT:
9.5007
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:28:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = pi * x * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = vt - vc

print(round(mensagem, 4))

-- EXECUTION TIME:
0.182964
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.5007
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
294.9558
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:29:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = pi * x * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = (vt - vc)

print(round(mensagem, 4))

-- OUTPUT:
9.5007
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:29:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = pi * x * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = (vt - vc)

print(round(mensagem, 4))

-- EXECUTION TIME:
0.209866
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.5007
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
294.9558
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:30:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = (pi * x) * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = (vt - vc)

print(round(mensagem, 4))

-- OUTPUT:
9.5007
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:30:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
vc = (pi * x) * (3 * r - x)/3
vt = 4 * pi * r ** 3/3
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = (vt - vc)

print(round(mensagem, 4))

-- EXECUTION TIME:
0.216534
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.5007
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
294.9558
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 11:35:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
a = pi * x**2
b = 3 * r - x
vc = a * b/3
c = 4 * pi
d = r ** 3
vt = c * d/3
e = vt - vc
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = e

print(round(mensagem, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 11:36:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
r = float(input("escreva o valor do raio do tanque: "))
x = float(input("escreva o valor da altura da coluna de ar: "))
opcao = input("Escreva a opcao desejada? (1/2): ")
a = pi * x**2
b = 3 * r - x
vc = a * b/3
c = 4 * pi
d = r ** 3
vt = c * d/3
e = vt - vc
if (opcao == "1"):
	mensagem = vc
else:
	mensagem = e

print(round(mensagem, 4))

-- EXECUTION TIME:
0.114657
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
