== TEST (2019-03-22 18:26:49) 
-- CODE:
texto= "meu barquinho"
print(texto.upper())

-- OUTPUT:
MEU BARQUINHO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:26:53) 
-- CODE:
texto= "meu barquinho"
print(texto.upper())

-- EXECUTION TIME:
0.201679
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MEU BARQUINHO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:27:19) 
-- CODE:
texto = "meu barquinho"
print(texto.upper())

-- OUTPUT:
MEU BARQUINHO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:27:45) 
-- CODE:
texto = "MEU BARQUINHO"
print(texto.upper())

-- OUTPUT:
MEU BARQUINHO
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:28:02) 
-- CODE:
texto = "MEU BARQUINHO"
print(texto.upper())

-- EXECUTION TIME:
0.1301
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
MEU BARQUINHO
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:22) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:27) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:27) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:27) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:27) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:27) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:28) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:28) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:28) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:28:28) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:29:13) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("GUIDO VAN ROSSUM CRIOU O PYTHON".upper())

-- OUTPUT:
GUIDO VAN ROSSUM CRIOU O PYTHON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:29:20) 
-- CODE:
texto = "GUIDO VAN ROSSUM CRIOU O PYTHON"
print("GUIDO VAN ROSSUM CRIOU O PYTHON".upper())

-- EXECUTION TIME:
0.122491
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
GUIDO VAN ROSSUM CRIOU O PYTHON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:33:50) 
-- CODE:
texto =input(("GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.upper())

-- ERROR:
File "XXXX", line 2
    print(texto.upper())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:34:13) 
-- CODE:
texto =input(("GUIDO VAN ROSSUM CRIOU O PYTHON"
print(texto.lower())

-- ERROR:
File "XXXX", line 2
    print(texto.lower())
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:35:11) 
-- CODE:
texto =(input("Meu barquinho"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:35:14) 
-- CODE:
texto =(input("Meu barquinho"))
print(texto.lower())

-- EXECUTION TIME:
0.203399
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
primeiro_caso_de_teste
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:35:30) 
-- CODE:
texto=(input("Meu barquinho"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:35:57) 
-- CODE:
texto=(input("Estou aprendendo phyton"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:36:06) 
-- CODE:
texto=(input("Estou aprendendo phyton"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:36:06) 
-- CODE:
texto=(input("Estou aprendendo phyton"))
print(texto.lower())

-- EXECUTION TIME:
0.130151
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
primeiro_caso_de_teste
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:36:28) 
-- CODE:
texto=(input("Estou aprendendo phyton"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 18:37:05) 
-- CODE:
texto=(input("Estou aprendendo python"))
print(texto.lower())

-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 18:37:15) 
-- CODE:
texto=(input("Estou aprendendo python"))
print(texto.lower())

-- EXECUTION TIME:
0.163582
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
primeiro_caso_de_teste
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 16:53:59) 
-- CODE:
texto = (input("Estou aprendendo python"))
print(texto.upper())

-- OUTPUT:
PRIMEIRO_CASO_DE_TESTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 16:54:04) 
-- CODE:
texto = (input("Estou aprendendo python"))
print(texto.upper())

-- EXECUTION TIME:
0.131873
-- TEST CASE 1:
---- input:
Primeiro_caso_de_teste
---- correct output:
PRIMEIRO_CASO_DE_TESTE
---- user output:
PRIMEIRO_CASO_DE_TESTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
