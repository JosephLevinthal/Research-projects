== SUBMITION (2019-04-30 16:14:56) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas sao validas:
if(H<0) or (h<0) or (r<0) or (H<h) or (H<2*r):
	print('Entradas invalidas')
else:
	if (h<r): #caso1
		V=(1/3)*pi(h**2)*(3*r-h)
	elif(h<H-r): #caso2
		V=(2/3)*pi*r**3+pi*r**2(r-h)
	elif(h<=H): #caso3
		V=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.306493
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:17:37) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h<=H): #caso3
		V=(4/3)*pi*(r**3)+pi*(r**2)*(H-2*r)-(1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.183405
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:19:38) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.147257
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.208828
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.132397
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.183093
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.300626
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:10) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.354439
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.19746
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.138712
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.215998
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.180199
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.209915
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.396931
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:13) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.46969
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.11433
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1684/1102/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.203338
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.398878
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 16:20:14) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import
H=float(input('altura total do tanque:'))
h=float(input('nivel de combustivel do tanque:'))
r=float(input('raio:'))

print('Entradas: {}, {} , {}'.format(H,h,r))

#Verificar se as entradas são válidas:
if (H < 0) or (h < 0) or (r < 0) or (H < h) or (H < 2*r):
	print('Entradas invalidas')
else:
	if (h < r): #Caso1
		V=(1/3)*pi(h**2)*(3*r - h)
	elif(h < H - r): #Caso2
		V=(2/3)*pi*r**3+pi*r**2(h - r)
	elif(h <= H): #Caso3
		V=(4/3)*pi*(r**3) + pi*(r**2)*(H-2*r) - (1/3)*pi*((H-h)**2)*(3*r-(H-h))
	print('Volume:' round(V*1000,3), 'litros')
	#V*1000 porque 1 metro cubico equivale a 1000 litros
-- EXECUTION TIME:
0.317206
-- ERROR:
  File "/home/codebench/codes/1684/1102/main.py", line 6
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
