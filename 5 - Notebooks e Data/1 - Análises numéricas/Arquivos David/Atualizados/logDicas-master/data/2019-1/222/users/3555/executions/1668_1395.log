== TEST (2019-04-15 19:01:47) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
-- OUTPUT:
1045.3590000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:03:06) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
else
	print(0.05*vv + 0.10*(vv-1000) + vv )
-- ERROR:
File "XXXX", line 5
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:03:12) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
else:
	print(0.05*vv + 0.10*(vv-1000) + vv )
-- OUTPUT:
1045.3590000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:03:51) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
else:
	print(0.05*vv + 0.10*(vv-1000) + vv )
-- EXECUTION TIME:
0.115848
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
1045.3590000000002
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
5075.989
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
105.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:04:16) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
else:
	print(0.05*vv + 0.10*(vv-1000) + vv )
-- EXECUTION TIME:
0.140913
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
1045.3590000000002
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
5075.989
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
105.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:04:17) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv + vv)
else:
	print(0.05*vv + 0.10*(vv-1000) + vv )
-- OUTPUT:
1045.3590000000002
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:04:34) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv )
else:
	print(0.05*vv + 0.10*(vv-1000))
-- EXECUTION TIME:
0.202785
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
575.129
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:04:41) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	print(0.05*vv + 0.10*(vv-1000))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:05:14) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(0.05*vv + 0.10*(vv-1000))
-- EXECUTION TIME:
0.20692
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
575.129
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:05:16) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(0.05*vv + 0.10*(vv-1000))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:06:07) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(round((0.05*vv + 0.10*(vv-1000)),2)
-- ERROR:
File "XXXX", line 7
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:06:27) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(round(0.05*vv + 0.10*(vv-1000) ,2)
-- ERROR:
File "XXXX", line 7
    
                                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:06:36) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(round(0.05*vv + 0.10*(vv-1000),2)
-- ERROR:
File "XXXX", line 7
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:07:41) 
-- CODE:
vv = float(input())
print(round(vv,2))
#if(vv <= 1000):
#	print(0.05*vv)
#if(vv > 1000):
	#print(round(0.05*vv + 0.10*(vv-1000),2)
-- OUTPUT:
995.58
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:07:48) 
-- CODE:
vv = float(input())
print(round(vv,2))
#if(vv <= 1000):
#	print(0.05*vv)
#if(vv > 1000):
	#print(round(0.05*vv + 0.10*(vv-1000),2)
-- OUTPUT:
995.58
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:08:24) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	print(round(0.05*vv + 0.10*(vv-1000),2)
-- ERROR:
File "XXXX", line 7
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:09:20) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- EXECUTION TIME:
0.148517
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.09
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:09:22) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:10:11) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,1))
-- EXECUTION TIME:
0.141041
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.1
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:10:18) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- EXECUTION TIME:
0.149114
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.09
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:10:26) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:10:32) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
if(vv > 1000):
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:11:02) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- EXECUTION TIME:
0.122118
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.09
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:11:04) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:21:07) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:21:49) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,3))
-- EXECUTION TIME:
0.144206
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.086
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:22:27) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:22:59) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:23:02) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- EXECUTION TIME:
0.145173
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.779
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.09
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:23:43) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(0.05*vv)
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- OUTPUT:
49.779
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:24:15) 
-- CODE:
vv = float(input())

if(vv <= 1000):
	print(round(0.05*vv,2))
else:
	a = 0.05*1000 + 0.1*(vv-1000) 
	print(round(a,2))
-- EXECUTION TIME:
0.148344
-- TEST CASE 1:
---- input:
995.58
---- correct output:
49.78
---- user output:
49.78
-- TEST CASE 2:
---- input:
4500.86
---- correct output:
400.09
---- user output:
400.09
-- TEST CASE 3:
---- input:
100
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
