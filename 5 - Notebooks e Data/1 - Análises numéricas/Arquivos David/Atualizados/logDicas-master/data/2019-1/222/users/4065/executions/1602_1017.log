== TEST (2019-03-29 02:24:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))


-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:31:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: "))
g2 = radians(float(input("longitude de p2: ")))
				 
R 

print(R)
-- ERROR:
File "XXXX", line 8
    g2 = radians(float(input()))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:32:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R 

print(R)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R 
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:32:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R 

print(R)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R 
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:32:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R 

print(R)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    R 
NameError: name 'R' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:35:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 

print(t1)
-- ERROR:
File "XXXX", line 10
    R = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:35:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
 

print(t1)
-- OUTPUT:
-0.05299048247186796
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:37:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
D = 6371,01 

print(t1)
-- ERROR:
File "XXXX", line 10
    D = 6371,01 
              ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:18:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371,01 

DISTANCIA = R*arccos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print(DISTANCIA)
-- ERROR:
File "XXXX", line 10
    R = 6371,01 
              ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:21:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*arccos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print(DISTANCIA)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    DISTANCIA = R*arccos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))
NameError: name 'arccos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:21:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print(DISTANCIA)
-- OUTPUT:
50.43792028752357
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:23:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: " round(DISTANCIA,2))
-- ERROR:
File "XXXX", line 15
    print("a distancia D e: " round(DISTANCIA,2))
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:24:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: "(round(DISTANCIA,2))
-- ERROR:
File "XXXX", line 16
    
                                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:25:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2, "km"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print("a distancia D e: ",round(DISTANCIA,2, "km"))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:25:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- OUTPUT:
a distancia D e:  50.44 km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:26:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- EXECUTION TIME:
0.131475
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia D e:  50.44 km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:26:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- OUTPUT:
a distancia D e:  50.44 km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:27:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- EXECUTION TIME:
0.130028
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia D e:  50.44 km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:27:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- OUTPUT:
a distancia D e:  50.44 km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:28:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))
t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- EXECUTION TIME:
0.17204
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia D e:  50.44 km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:30:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))

t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- OUTPUT:
a distancia D e:  50.44 km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:30:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))

t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print("a distancia D e: ",round(DISTANCIA,2), "km")
-- EXECUTION TIME:
0.130679
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia D e:  50.44 km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:31:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))

t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print(round(DISTANCIA,2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:31:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("longitude de p1: ")))

t2 = radians(float(input("latitude de p2: ")))
g2 = radians(float(input("longitude de p2: ")))
				 
R = 6371.01 

DISTANCIA = R*acos(sin(t1)*sin(t2) + cos(t1)*cos(t2)*cos(g1-g2))


print(round(DISTANCIA,2))
-- EXECUTION TIME:
0.190667
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
