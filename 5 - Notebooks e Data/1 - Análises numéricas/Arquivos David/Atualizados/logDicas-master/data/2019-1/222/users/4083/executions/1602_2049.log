== TEST (2019-03-20 19:09:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1/var2
resto = var1//var2
print(dividendo)
print(divisor)
print(round(quociente, 3))
print(resto)
-- OUTPUT:
8
5
1.6
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:10:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1/var2
resto = var1//var2
print(dividendo)
print(divisor)
print(round(quociente, 3))
print(resto)
-- EXECUTION TIME:
0.192096
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1.6
1
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7.0
7
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173.5
173
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:10:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1/var2
resto = var1//var2
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.16589
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1.6
1
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
xy14
2
7.0
7
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
xy347
2
173.5
173
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:10:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1/var2
resto = var1//var2
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1.6
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:11:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1/var2
resto = var1//var2
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1.6
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:12:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1//var2
resto = var1%var2
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:12:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var1 = int(input("x"))
var2 = int(input("y"))
dividendo = var1
divisor = var2
quociente = var1//var2
resto = var1%var2
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.138
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
