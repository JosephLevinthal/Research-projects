== TEST (2019-04-07 02:27:52) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta (preco - pagamento)")
-- OUTPUT:
falta (preco - pagamento)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:28:27) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" "(preco - pagamento)")
-- OUTPUT:
falta(preco - pagamento)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:29:10) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print( (preco - pagamento))
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:29:37) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print( (flta (preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:29:48) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print( (falta (preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:30:03) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print( ("falta"(preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:30:30) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print( ("falta" +(preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:30:56) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" preco - pagamento)
-- ERROR:
File "XXXX", line 5
    print("falta" preco - pagamento)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:31:17) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(("falta") preco - pagamento)
-- ERROR:
File "XXXX", line 5
    print(("falta") preco - pagamento)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:31:42) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(preco - pagamento)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:38:07) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" + preco - pagamento)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + preco - pagamento)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:38:29) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" + (preco - pagamento))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + (preco - pagamento))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:39:42) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta"  (preco - pagamento))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta"  (preco - pagamento))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:40:28) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str("falta"  (preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:40:39) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str("falta" + (preco - pagamento))
-- ERROR:
File "XXXX", line 6
    
                                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:41:47) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(preco - pagamento)
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:46:38) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" x)
-- ERROR:
File "XXXX", line 5
    print("falta" x)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:46:57) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" "x")
-- OUTPUT:
faltax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:47:15) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" x)
-- ERROR:
File "XXXX", line 5
    print("falta" x)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:47:33) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta x")
-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:48:02) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print(falta "x")
-- ERROR:
File "XXXX", line 5
    print(falta "x")
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:48:19) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" "x")
-- OUTPUT:
faltax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:49:36) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" "x")
	print(x)
-- OUTPUT:
faltax
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:50:09) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + "x")
	
-- OUTPUT:
faltax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:50:26) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + x)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:50:36) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + x)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:50:52) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + x)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:51:23) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + "x")
	
-- OUTPUT:
faltax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:51:46) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta + x")
	
-- OUTPUT:
falta + x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:52:06) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" + x)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("falta" + x)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:52:36) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" print(x))
	
-- ERROR:
File "XXXX", line 5
    print("falta" print(x))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:52:50) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" ,print(x)
	
-- ERROR:
File "XXXX", line 7
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:57:20) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))
x = preco - pagamento
if(preco > pagamento):
	print("falta" ,x,)
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:59:10) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 02:59:48) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:00:17) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:00:28) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:00:57) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:00:58) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:00:59) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:01:38) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:01:55) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 03:02:11) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print("troco de" ,pagamento - preco, )
	
-- EXECUTION TIME:
0.157481
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:03:10) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,preco - pagamento, 2))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,preco - pagamento, 2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:03:55) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,preco - pagamento, (2)))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,preco - pagamento, (2)))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:04:31) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,preco - pagamento,))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,preco - pagamento,))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:04:49) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
File "XXXX", line 5
    print("falta" ,preco - pagamento,))
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:05:04) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento,)
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:05:36) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,(preco - pagamento),)
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:06:12) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento),2))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,(preco - pagamento),2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:08:08) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,(preco - pagamento))
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:09:04) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,(preco - pagamento) , 2)
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- OUTPUT:
falta 26.0 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:09:24) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2)
else:
	print(round("troco de" ,pagamento - preco, 2))
	
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:10:00) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2)
else:
	print(round("troco de" , (pagamento - preco) , 2))
	
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:11:00) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2)
else:
	print(round("troco de" , (pagamento - preco) , 2))
	
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:11:22) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2)

-- ERROR:
File "XXXX", line 6
    
                                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:11:35) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2)
-- ERROR:
File "XXXX", line 6
    
                                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:11:57) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,(preco - pagamento) , 2))
			
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,(preco - pagamento) , 2))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:13:22) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,(preco - pagamento))
else:
	print("troco de" , (pagamento - preco))
	
			
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:28:01) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round)"falta" + (preco - pagamento , 3))
else:
	print("troco de" , (pagamento - preco))
	
		
-- ERROR:
File "XXXX", line 5
    print(str(round)"falta" + (preco - pagamento , 3))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:28:07) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento , 3))
else:
	print("troco de" , (pagamento - preco))
	
		
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:28:32) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento , 3))
		
-- ERROR:
File "XXXX", line 7
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:29:50) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento , 3))
		
-- ERROR:
File "XXXX", line 7
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:30:15) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento , 3))
else:
	print("troco de" , (pagamento - preco))
	
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:31:14) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento , 3))))
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(str(round("falta" + (preco - pagamento , 3))))
TypeError: must be str, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:33:13) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento) , 3)))
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(str(round("falta" + (preco - pagamento) , 3)))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:33:34) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(str(round("falta" + (preco - pagamento) , 2)))
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(str(round("falta" + (preco - pagamento) , 2)))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:34:42) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 03:35:43) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:34:36) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(str(round("troco de" , (pagamento - preco))))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:35:34) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(str(round,2("troco de" , (pagamento - preco))))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:37:41) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round,2("troco de" , (pagamento - preco))))
	
-- ERROR:
File "XXXX", line 7
    print(round,2("troco de" , (pagamento - preco))))
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:37:52) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round,2("troco de" , (pagamento - preco)))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:39:08) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round,2("troco de" , (pagamento - preco)))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:39:28) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round,2("troco de" , (pagamento - preco)))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:39:41) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round,2("troco de" , (pagamento - preco)))
	
-- EXECUTION TIME:
0.174344
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:

-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:39:53) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round("troco de" , (pagamento - preco)))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:40:03) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round("troco de" , (pagamento - preco)))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:40:15) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print(round("troco de" , (pagamento - preco)))
	
-- EXECUTION TIME:
0.20042
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:

-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:41:07) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,preco - pagamento))
else:
	print(round("troco de" , (pagamento - preco)))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta" ,preco - pagamento))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:41:26) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print(round("falta" ,preco - pagamento))
else:
	print(round("troco de" , (pagamento - preco))
	
-- ERROR:
File "XXXX", line 9
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:41:59) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print("troco de" , (pagamento - preco))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:42:14) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print("troco de" , (pagamento - preco))
	
-- EXECUTION TIME:
0.271938
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:58:28) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,preco - pagamento)
else:
	print("troco de" , (pagamento - preco))
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:31:59) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento))
else:
	print("troco de" , round(pagamento - preco))
	
-- OUTPUT:
falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:32:06) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento))
else:
	print("troco de" , round(pagamento - preco))
	
-- EXECUTION TIME:
0.161499
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:32:15) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento))
else:
	print("troco de" ,round(pagamento - preco))
	
-- OUTPUT:
falta 26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:32:23) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento))
else:
	print("troco de" ,round(pagamento - preco))
	
-- EXECUTION TIME:
0.123483
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:32:53) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento) , 2)
else:
	print("troco de" ,round(pagamento - preco) , 2)
	
-- OUTPUT:
falta 26 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:33:25) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:33:33) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- EXECUTION TIME:
0.272032
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:33:39) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:33:48) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:33:55) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- EXECUTION TIME:
0.152927
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:34:20) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:34:33) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- EXECUTION TIME:
0.213356
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:34:51) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:35:03) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 2) )
else:
	print("troco de" ,round(pagamento - preco , 2) )
	
-- EXECUTION TIME:
0.156979
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:37:31) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 1) )
else:
	print("troco de" ,round(pagamento - preco , 1) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:37:53) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 1) )
else:
	print("troco de" ,round(pagamento - preco , 1) )
	
-- EXECUTION TIME:
0.162335
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:38:05) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 1) )
else:
	print("troco de" ,round(pagamento - preco , 1) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:38:14) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 1) )
else:
	print("troco de" ,round(pagamento - preco , 1) )
	
-- EXECUTION TIME:
0.19707
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:38:33) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta" ,round(preco - pagamento , 1) )
else:
	print("troco de" ,round(pagamento - preco , 1) )
	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:39:03) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta " ,round(preco - pagamento , 1) )
else:
	print("Troco de " ,round(pagamento - preco , 1) )
	
-- EXECUTION TIME:
0.192574
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 16:33:23) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta " ,round(preco - pagamento , 1) )
else:
	print("Troco de " ,round(pagamento - preco , 1) )
	
-- OUTPUT:
Falta  26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 16:33:53) 
-- CODE:
preco = float(input("preco: "))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta " ,round(preco - pagamento , 1) )
else:
	print("Troco de " ,round(pagamento - preco , 1) )
	
-- EXECUTION TIME:
0.159466
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta  26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de  28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de  0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
