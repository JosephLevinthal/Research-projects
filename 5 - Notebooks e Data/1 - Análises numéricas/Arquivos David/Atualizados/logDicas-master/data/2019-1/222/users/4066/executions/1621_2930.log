== TEST (2019-04-01 18:04:50) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = G * (T/2math.pi)**2

print(L)
-- ERROR:
File "XXXX", line 6
    L = G * (T/2math.pi)**2
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:04:57) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = G * (T/2*math.pi)**2

print(L)
-- OUTPUT:
9682.08191746866
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:05:51) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = G * (T/2)**2

print(L)
-- OUTPUT:
981.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:06:38) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = G * (T/2*math.pi)**2

print(L)
-- OUTPUT:
9682.08191746866
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:08:16) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = G * (T/2*math.pi)**2

print(L)
-- EXECUTION TIME:
0.262641
-- TEST CASE 1:
---- input:
20.0
---- correct output:
99.39608115313338
---- user output:
9682.08191746866
-- TEST CASE 2:
---- input:
168.5
---- correct output:
7055.195962800127
---- user output:
687240.2258031239
-- TEST CASE 3:
---- input:
324.2
---- correct output:
26117.72180773005
---- user output:
2544103.5411699265
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:09:19) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * (T/2*math.pi)**2

print(L)
-- OUTPUT:
9682.08191746866
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:09:31) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * (5/2*math.pi)**2

print(L)
-- OUTPUT:
605.1301198417913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:09:38) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * (5/2*math.pi)**2

print(L)
-- OUTPUT:
605.1301198417913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:09:52) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((5/60)/2*math.pi)**2

print(L)
-- OUTPUT:
0.1680916999560531
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:10:03) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((5/10)/2*math.pi)**2

print(L)
-- OUTPUT:
6.051301198417913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:10:51) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((5)/2*(math.pi))**2

print(L)
-- OUTPUT:
605.1301198417913
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:11:08) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((5)/(2*math.pi))**2

print(L)
-- OUTPUT:
6.212255072070836
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:11:15) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((T)/(2*math.pi))**2

print(L)
-- OUTPUT:
99.39608115313338
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:11:18) 
-- CODE:
import math

T = float(input("Periodo de oscilao: "))

G = 9.81
L = 9.81 * ((T)/(2*math.pi))**2

print(L)
-- EXECUTION TIME:
0.151019
-- TEST CASE 1:
---- input:
20.0
---- correct output:
99.39608115313338
---- user output:
99.39608115313338
-- TEST CASE 2:
---- input:
168.5
---- correct output:
7055.195962800127
---- user output:
7055.195962800127
-- TEST CASE 3:
---- input:
324.2
---- correct output:
26117.72180773005
---- user output:
26117.72180773005
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
