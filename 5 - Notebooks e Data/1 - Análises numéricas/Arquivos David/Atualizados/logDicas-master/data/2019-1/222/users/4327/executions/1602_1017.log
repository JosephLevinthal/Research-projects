== TEST (2019-04-01 16:57:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))


print(t1)
-- OUTPUT:
-0.05299048247186796
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:07:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d= 6371,01*arccos((sen(p1)*sen(p2)+cos(p1))

print(d))
-- ERROR:
File "XXXX", line 13
    d= 6371,01*arccos((sen(p1)*sen(p2)+cos(p1))
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:07:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d=acos((sin(p1)*sin(p2)+cos(p1))

print(d))
-- ERROR:
File "XXXX", line 15
    print(d))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:07:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d=acos((sin(p1)*sin(p2)+cos(p1))

print(d)
-- ERROR:
File "XXXX", line 15
    print(d)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:07:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d=acos((sin(p1)*sin(p2)+cos(p1))

print(d )
-- ERROR:
File "XXXX", line 15
    print(d )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:08:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d=acos((sin(p1)*sin(p2)+cos(p1))


-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:08:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1.g1)
p2=(t2.g2)

d=acos((sin(p1)*sin(p2)+cos(p1))


-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:08:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1,g1)
p2=(t2,g2)

d=acos((sin(p1)*sin(p2)+cos(p1))


-- ERROR:
File "XXXX", line 15
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:08:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))

p1=(t1,g1)
p2=(t2,g2)

d=acos((sin(p1)*sin(p2)+cos(p1))
-- ERROR:
File "XXXX", line 14
    
                                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:09:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1,g1)
p2=(t2,g2)
d=acos((sin(p1)*sin(p2)+cos(p1))
-- ERROR:
File "XXXX", line 12
    
                                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:09:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1,g1)
p2=(t2,g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d=acos((sin(p1)*sin(p2)+cos(p1)))
TypeError: must be real number, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:09:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1,g1)
p2=(t2,g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d=acos((sin(p1)*sin(p2)+cos(p1)))
TypeError: must be real number, not tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:12:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1*g1)
p2=(t2*g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    d=acos((sin(p1)*sin(p2)+cos(p1)))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:15:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(d)
-- OUTPUT:
0.003902553271435624
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:15:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(d)
-- OUTPUT:
0.003902553271435624
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:17:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(round(d,2)
-- ERROR:
File "XXXX", line 13
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:17:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(round(d,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:18:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(round(d,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:19:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t2-t1)
p2=(g2-g1)
d=acos((sin(p1)*sin(p2)+cos(p1)))
print(round(d,2))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:22:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t2-t1)
p2=(g2-g1)
d=(6371,01)*acos((sin(p1)*sin(p2)+cos(p1)))
print(round(d,2))
-- ERROR:
File "XXXX", line 11
    d=(6371,01)*acos((sin(p1)*sin(p2)+cos(p1)))
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:24:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t2-t1)
p2=(g2-g1)
ang=acos((sin(p1)*sin(p2)+cos(p1)))
d=ang*6371.01
print(round(d,2))
-- OUTPUT:
24.86
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:25:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
ang=acos((sin(p1)*sin(p2)+cos(p1)))
d=ang*6371.01
print(round(d,2))
-- OUTPUT:
24.86
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:26:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
ang=acos((sin(p1)*sin(p2)+cos(p1)))
d=ang*6371.01
print(round(d,2))
-- EXECUTION TIME:
0.197019
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
24.86
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:54:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)))
print(round(ang,2))
-- OUTPUT:
24.86
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:54:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)))
print(round(ang,2))
-- EXECUTION TIME:
0.145792
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
24.86
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:57:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
print(round(ang,2))
-- OUTPUT:
75.18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:57:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
print(round(ang,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
NameError: name 'p1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:57:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
print(round(ang,2))
-- EXECUTION TIME:
0.218131
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 10, in <module>
    ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
NameError: name 'p1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:58:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
print(round(ang,2))
-- OUTPUT:
75.18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:58:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
p1=(t1-t2)
p2=(g1-g2)
r=6371.01
ang=r*acos((sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2)))
print(round(ang,2))
-- EXECUTION TIME:
0.25372
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
75.18
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 17:59:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
r=6371.01
d=r*acos(sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2))
print(round(d,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d=r*acos(sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2))
NameError: name 'p1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 17:59:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
t1 = radians(float(input("Latitude de P1: ")))
g1 = radians(float(input("logitude de P1: ")))
t2 = radians(float(input("Latitude de P2: ")))
g2 = radians(float(input("logitude de P2: ")))
r=6371.01
d=r*acos(sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2))
print(round(d,2))
-- EXECUTION TIME:
0.168786
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 10, in <module>
    d=r*acos(sin(p1)*sin(p2)+cos(p1)*cos(p2)*cos(g1-g2))
NameError: name 'p1' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
