== TEST (2019-04-25 12:41:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" or tipo != "C" or tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.65
		valor = consumo*preco
		print(valor)
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.60
		valor = consumo*preco
		print(valor)
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.60
		valor = consumo*preco
		print(valor)
	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.65
		valor = consumo*preco
		print(valor)
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.60
		valor = consumo*preco
		print(valor)
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55
		valor = consumo*preco
		print(valor)
	else:
		preco = 0.60
		valor = consumo*preco
		print(valor)
	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
-30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:45:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
valor = consumo*preco

print(valor)

	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
-30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:46:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
valor = consumo*preco

print(round(valor2))

	 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print(round(valor2))
NameError: name 'valor2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:46:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
	valor = consumo*preco

	print(round(valor2))

	 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print(round(valor2))
NameError: name 'valor2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:46:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
	valor = consumo*preco

	print(round(valor2))

	 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print(round(valor2))
NameError: name 'valor2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:47:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
	valor = consumo*preco

print(round(valor2))

	 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 35, in <module>
    print(round(valor2))
NameError: name 'valor2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:49:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		
	else:
		preco = 0.65
		
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		
	else:
		preco = 0.60
		
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55

	else:
		preco = 0.60
		
valor = consumo*preco

	print(round(valor2))

	 

-- ERROR:
File "XXXX", line 35
    print(round(valor2))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:50:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
	elif (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60


valor = consumo*preco

print(round(valor2))

	 

-- ERROR:
File "XXXX", line 12
    elif (tipo == "R"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:52:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		valor = consumo*preco
		print(round(valor2))
	else:
		preco = 0.65
		valor = consumo*preco
		print(round(valor2))
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		valor = consumo*preco
		print(round(valor2))
	else:
		preco = 0.60
		valor = consumo*preco
		print(round(valor2))
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55
		valor = consumo*preco
		print(round(valor2))
	else:
		preco = 0.60
		valor = consumo*preco
		print(round(valor2))

	 

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 34, in <module>
    print(round(valor2))
NameError: name 'valor2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:52:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
elif (tipo == "R"):
	if (consumo <= 500):
		preco = 0.44
		valor = consumo*preco
		print(round(valor,2))
	else:
		preco = 0.65
		valor = consumo*preco
		print(round(valor,2))
elif (tipo == "C"):
	if (consumo <= 1000):
		preco = 0.55
		valor = consumo*preco
		print(round(valor,2))
	else:
		preco = 0.60
		valor = consumo*preco
		print(round(valor,2))
elif (tipo == "I"):
	if (consumo <= 5000):
		preco = 0.55
		valor = consumo*preco
		print(round(valor,2))
	else:
		preco = 0.60
		valor = consumo*preco
		print(round(valor,2))

	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:54:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print(round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:54:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print(round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kwh e tipo I
-30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:54:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kwh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print(round(valor,2))


	 

-- EXECUTION TIME:
0.134503
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kwh e tipo I
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kwh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:55:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print(round(valor,2))


	 

-- EXECUTION TIME:
0.134151
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
-30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:55:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total:",round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:55:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total:",round(valor,2))


	 

-- EXECUTION TIME:
0.199653
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:55:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:55:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- EXECUTION TIME:
0.165961
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:55:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:56:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (consumo < 0 and tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- EXECUTION TIME:
0.160545
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:57:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (consumo < 0 and tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 12:58:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (consumo < 0 or tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 12:58:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

consumo = float(input("Consumo: "))
tipo = input("Tipo de instalacao: ").upper()

print("Entradas:", consumo, "kWh e tipo", tipo)
if (consumo < 0 or tipo != "R" and tipo != "C" and tipo != "I"):
	print("Dados invalidos")
	
else:
	if (tipo == "R"):
		if (consumo <= 500):
			preco = 0.44

		else:
			preco = 0.65

	elif (tipo == "C"):
		if (consumo <= 1000):
			preco = 0.55

		else:
			preco = 0.60

	elif (tipo == "I"):
		if (consumo <= 5000):
			preco = 0.55

		else:
			preco = 0.60
	valor = consumo*preco
	print("Valor total: R$",round(valor,2))


	 

-- EXECUTION TIME:
0.14139
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
