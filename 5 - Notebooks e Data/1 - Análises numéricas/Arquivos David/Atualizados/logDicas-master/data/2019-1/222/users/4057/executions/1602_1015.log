== TEST (2019-03-20 19:09:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
a = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    min (a,b,c)
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:09:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
a = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    min (a,b,c)
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:11:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
a = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)
d = (a + b + c) - min - max
print(min)
print(d)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    min (a,b,c)
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:11:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)
d = (a + b + c) - min - max
print(min)
print(d)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = (a + b + c) - min - max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:12:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)
d = (a + b + c) - min + max
print(min)
print(d)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = (a + b + c) - min + max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:12:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)
d = (a + b + c) - min + max
print(min)
print(d)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = (a + b + c) - min + max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:13:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)
d = (a + b + c) - min + max
print(min)
print(d)
print(max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    d = (a + b + c) - min + max
TypeError: unsupported operand type(s) for -: 'int' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:13:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
min (a,b,c)
max (a,b,c)

print(min)

print(max)
-- OUTPUT:
<built-in function min>
<built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:13:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
d = min (a,b,c)
e = max (a,b,c)

print(d)

print(e)
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:14:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
d = min (a,b,c)
e = max (a,b,c)
f = (a+b+c)- d+e
print(d)

print(e)
-- OUTPUT:
-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:14:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
d = min (a,b,c)
e = max (a,b,c)
f = (a+b+c)- d+e
print(d)
print(f)
print(e)
-- OUTPUT:
-2
20
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:15:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
d = min (a,b,c)
e = max (a,b,c)
f = (a+b+c)-(d+e)
print(d)
print(f)
print(e)
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:15:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("digite um numero inteiro: "))
b = int(input("digite um numero inteiro: "))
c = int(input("digite um numero inteiro: "))
d = min (a,b,c)
e = max (a,b,c)
f = (a+b+c)-(d+e)
print(d)
print(f)
print(e)
-- EXECUTION TIME:
0.215059
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
