== TEST (2019-03-31 13:03:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:04:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print("Esse é o dividendo: "+dividendo)
print(divisor)
print(quociente)
print(resto)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print("Esse é o dividendo: "+dividendo)
TypeError: must be str, not int
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:05:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print("Esse é o dividendo: "dividendo)
print(divisor)
print(quociente)
print(resto)
-- ERROR:
File "XXXX", line 18
    print("Esse é o dividendo: "dividendo)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:05:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print("Esse é o dividendo: ")print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- ERROR:
File "XXXX", line 18
    print("Esse é o dividendo: ")print(dividendo)
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 13:06:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 13:06:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

#var int dividendo
#var int divisor
#var int quociente
#var int resto
#var = int(input("texto para o usuario: "))
#gerar input de dividendo e divisor
#calcular quociente e resto
#mostrar todas as variaveis
dividendo = int(input("Digite o valor do dividendo: ")) #dividendo = int("10") -> dividendo = 10 -> 10 é um número agora
divisor = int(input("Digite o valor do divisor: ")) #divisor = int("2") -> divisor = 2 -> 2 é um número agora
quociente = dividendo // divisor #quociente = 10/2 -> quociente = 5 -> 5 ainda é um número
resto = dividendo % divisor #resto = 10%2 -> resto = 0 -> não há resto, e 0 ainda é número
#para imprimir, transformar todos os números em texto, se for preciso -> str(dividendo) ou só o print(dividendo)
print(dividendo)
print(divisor)
print(quociente)
print(resto)
-- EXECUTION TIME:
0.194464
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
