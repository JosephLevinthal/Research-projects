== TEST (2019-06-20 14:14:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:15:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
0.661791
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
intervalo 1: 1.5 , 5.0
intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
intervalo 1: -1.0 , -3.0
intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:15:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:15:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
0.794829
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
intervalo 1: 1.5 , 5.0
intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
intervalo 1: -1.0 , -3.0
intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:15:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:16:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
1.00073
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
intervalo 1: 1.5 , 5.0
intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
intervalo 1: -1.0 , -3.0
intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:16:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:17:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:17:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("intervalo 1:",a,",",b)
		print("intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
0.826287
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
intervalo 1: 1.0 , 2.0
intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
intervalo 1: 1.5 , 5.0
intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
intervalo 1: -1.0 , -3.0
intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:18:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:19:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
0.825084
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 14:21:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 14:22:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a=float(input("a:"))
b=float(input("b:"))
c=float(input("c:"))
d=float(input("d:"))

if(b>a and d>c):
	if((b>=c and d>=a) or (d>=a and b>=c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Nao ha intersecao")
else:
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Entradas invalidas")
		
-- EXECUTION TIME:
0.599709
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
