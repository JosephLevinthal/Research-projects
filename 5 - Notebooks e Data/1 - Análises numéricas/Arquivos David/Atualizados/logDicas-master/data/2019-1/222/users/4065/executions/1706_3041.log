== TEST (2019-04-29 19:17:28) 
-- CODE:
x = float(input("valor de x: "))

if(x >= -1000) and (x < 2):
	valor = -(1 / (x + 2))
	print(round(valor,4))
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:17:49) 
-- CODE:
x = float(input("valor de x: "))

if(x >= -1000) and (x < 2):
	valor = -1 / (x + 2)
	print(round(valor,4))
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:20:40) 
-- CODE:
x = int(input("valor de x: "))

if(x >= -1000) and (x < 2):
	valor = -(1 / (x + 2)
	print(round(valor,4))
-- ERROR:
File "XXXX", line 5
    print(round(valor,4))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:21:04) 
-- CODE:
x = int(input("valor de x: "))

if(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:21:10) 
-- CODE:
x = int(input("valor de x: "))

if(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:22:57) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:23:11) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:25:34) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:25:48) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.201291
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1706/3041/main.py", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:26:01) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:26:13) 
-- CODE:
x = int(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.211342
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1706/3041/main.py", line 1, in <module>
    x = int(input())
ValueError: invalid literal for int() with base 10: '-999.99'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:26:24) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:26:32) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.211923
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:27:11) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
else:
	elif(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))
	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- ERROR:
File "XXXX", line 5
    elif(x >= -1000) and (x < 2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:28:27) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
else:
	
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))
	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:28:38) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
else:
	
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))
	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- EXECUTION TIME:
0.197395
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:29:19) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:29:26) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.153017
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:30:40) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:30:48) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.153081
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:31:22) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))
elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:35:58) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:36:06) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.165966
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:36:50) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x < -1000) or (x > 1000):
	print("entrada invalida")
else:
	elif(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
File "XXXX", line 7
    elif(x >= -1000) and (x < 2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:38:06) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:38:15) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
elif(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.185613
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:39:11) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
	
if(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:39:19) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
	
if(x < -1000) or (x > 1000):
	print("entrada invalida")
	
elif(x >= -1000) and (x < 2):
	valor = -(1 ) / (x + 2)
	print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- EXECUTION TIME:
0.225571
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:39:45) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2) or (x == 2):
	print("entrada invalida")
	
if(x < -1000) or (x > 1000):
	print("entrada invalida")
else:
	elif(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
File "XXXX", line 8
    elif(x >= -1000) and (x < 2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:34) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	elif(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
File "XXXX", line 6
    elif(x >= -1000) and (x < 2):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:42) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

elif(x > 2) and (x <= 1000):
	valor = (1) / (x - 2)
	print(round(valor,4))
	
-- ERROR:
File "XXXX", line 10
    elif(x > 2) and (x <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:42:57) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:43:05) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- EXECUTION TIME:
0.177878
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:43:13) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -(1 ) / (x + 2)
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1) / (x - 2)
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:43:59) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:44:06) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2) or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.182649
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:46) 
-- CODE:
x = float(input("valor de x: "))
if((x == 0) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- ERROR:
File "XXXX", line 2
    if((x == 0) or ((x < -1000) or (x > 2)):
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:44:56) 
-- CODE:
x = float(input("valor de x: "))
if((x == 0)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:02) 
-- CODE:
x = float(input("valor de x: "))
if((x == 0)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:45:52) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x = 2)) and ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- ERROR:
File "XXXX", line 2
    if((x == -2)  or (x = 2)) and ((x < -1000) or (x > 2)):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:46:13) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x = 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- ERROR:
File "XXXX", line 2
    if((x == -2)  or (x = 2)) or ((x < -1000) or (x > 2)):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:46:36) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) and ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:46:53) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:47:02) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")

else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.20328
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:48:06) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 2)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:48:52) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:48:58) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.180582
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:49:14) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:49:23) 
-- CODE:
x = float(input("valor de x: "))
if((x == -2)  or (x == 2)) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.173729
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
-0.2857
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:50:42) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:50:52) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or (x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- ERROR:
File "XXXX", line 2
    if(x == -2)  or (x == 2) or (x < -1000) or (x > 1000)):
                                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:22) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < 2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:52:32) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:52:39) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) or (x > 1000)):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.145683
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:54:18) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:54:26) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- EXECUTION TIME:
0.168216
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:14:41) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:15:08) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:15:50) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:28:59) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:29:06) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:31:07) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:31:18) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-19 16:31:32) 
-- CODE:
x = float(input("valor de x: "))
if(x == -2)  or (x == 2) or ((x < -1000) and (x > -2)) or (x < 2) and (x > 1000):
	print("entrada invalida")
else:
	if(x >= -1000) and (x < -2):
		valor = -((1 ) / (x + 2))
		print(round(valor,4))

	elif(x > 2) and (x <= 1000):
		valor = (1 / (x - 2))
		print(round(valor,4))
	
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
