== TEST (2019-04-29 19:51:14) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < 2):
		valor=-((1) / (x+2))
		print(round(valor,4))
		
elif(j > 2) and (j <= 1000):
	valor=((1) / (x-2))
	print(round(valor,4))
	

-- ERROR:
File "XXXX", line 10
    elif(j > 2) and (j <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:51:57) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < 2):
		valor=-((1) / (x+2))
		print(round(valor,4))
		
elif(j < 2) and (j <= 1000):
	valor=((1) / (x-2))
	print(round(valor,4))
	

-- ERROR:
File "XXXX", line 10
    elif(j < 2) and (j <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:53:30) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
elif(j < 2) and (j <= 1000):
	valor=((1) / (j-2))
	print(round(valor,4))
	

-- ERROR:
File "XXXX", line 10
    elif(j < 2) and (j <= 1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:53:39) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
	elif(j < 2) and (j <= 1000):
	valor=((1) / (j-2))
	print(round(valor,4))
	

-- ERROR:
File "XXXX", line 11
    valor=((1) / (j-2))
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:54:09) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
	elif(j < 2) and (j <= 1000):
	   valor=((1) / (j-2))
	   print(round(valor,4))
	

-- OUTPUT:
entrada invalida:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:54:30) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
	elif(j < 2) and (j <= 1000):
	   valor=((1) / (j-2))
	   print(round(valor,4))
	

-- OUTPUT:
entrada invalida:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 19:54:44) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
	elif(j < 2) and (j <= 1000):
	   valor=((1) / (j-2))
	   print(round(valor,4))
	

-- OUTPUT:
entrada invalida:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 19:54:55) 
-- CODE:
j=float(input("valor de x:"))
if(j==-2) or (j==2) or (j< -1000) or (j < 1000):
	print("entrada invalida:")
	
else:
	if(j >= -1000) and (j < -2):
		valor=-((1) / (j+2))
		print(round(valor,4))
		
	elif(j < 2) and (j <= 1000):
	   valor=((1) / (j-2))
	   print(round(valor,4))
	

-- EXECUTION TIME:
0.197297
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
entrada invalida:
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida:
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
entrada invalida:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
