== TEST (2019-03-21 11:34:51) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area=sqrt((s*(s-a))*(s-b)*(s-c))

print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=sqrt((s*(s-a))*(s-b)*(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:36:02) 
-- CODE:
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area=sqrt((s*(s-a))*(s-b)*(s-c))

print(area)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=sqrt((s*(s-a))*(s-b)*(s-c))
NameError: name 'sqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:37:19) 
-- CODE:
import math
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area= math.sqrt((s*(s-a))*(s-b)*(s-c))

print(area)
-- EXECUTION TIME:
0.124942
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967475975385
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.1665442616423
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:37:21) 
-- CODE:
import math
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area= math.sqrt((s*(s-a))*(s-b)*(s-c))

print(area)
-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 11:37:41) 
-- CODE:
import math
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area= math.sqrt((s*(s-a))*(s-b)*(s-c))

print(area)
-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 11:38:23) 
-- CODE:
import math
a = float(input())
b = float(input())
c = float(input())

s=(a+b+c)/2
area= math.sqrt((s*(s-a))*(s-b)*(s-c))

print(round(area,5))
-- EXECUTION TIME:
0.223415
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
