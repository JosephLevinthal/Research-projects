== TEST (2019-04-01 19:14:08) 
-- CODE:
L=input()
print(T=(2*3,14)*(L/G)**0.5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:14:22) 
-- CODE:
L=input()
print(T=(2*3,14)*(L/G)**0.5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:14:28) 
-- CODE:
L=input()
print(T=(2*3,14)*(L/G)**0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:14:34) 
-- CODE:
L=input()
print(T=(2*3,14)*(L/G)**0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
NameError: name 'G' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:15:15) 
-- CODE:
L=input()
G=9.8
print(T=(2*3,14)*(L/G)**0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
TypeError: unsupported operand type(s) for /: 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:15:49) 
-- CODE:
L=float(input())
G=9.8
print(T=(2*3,14)*(L/G)**0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(T=(2*3,14)*(L/G)**0.5)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:16:49) 
-- CODE:
L=float(input())
G=9.8
print(float((T = (2*3,14) * (L/G) ** 0.5))

-- ERROR:
File "XXXX", line 3
    print(float((T = (2*3,14) * (L/G) ** 0.5))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:19:01) 
-- CODE:
L=float(input())

G=9.8

print(float((T = (2*3,14) * (L/G) ** 0.5))

-- ERROR:
File "XXXX", line 5
    print(float((T = (2*3,14) * (L/G) ** 0.5))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:19:34) 
-- CODE:
L=float(input())

G=9.8

print((T = (2*3,14) * (L/G) ** 0.5))

-- ERROR:
File "XXXX", line 5
    print((T = (2*3,14) * (L/G) ** 0.5))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:20:41) 
-- CODE:
L=float(input())

G=9.8

print((T = (2*3,14) * ((L/G) ** 0.5)))

-- ERROR:
File "XXXX", line 5
    print((T = (2*3,14) * ((L/G) ** 0.5)))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:21:24) 
-- CODE:
L=float(input())

G=9.8


print((T = (2*3.14) * ((L/G) ** 0.5)))

-- ERROR:
File "XXXX", line 6
    print((T = (2*3.14) * ((L/G) ** 0.5)))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:21:45) 
-- CODE:
L=float(input())

G=9.8


print(T = (2*3.14) * (L/G) ** 0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(T = (2*3.14) * (L/G) ** 0.5)
TypeError: 'T' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:48:56) 
-- CODE:
L=float(input())

G=9.8

print(T = (2*3.14) * (L/G) ** 0.5)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(T = (2*3.14) * (L/G) ** 0.5)
TypeError: 'T' is an invalid keyword argument for this function
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:49:16) 
-- CODE:
L=float(input())

G=9.8

print((2*3.14) * (L/G) ** 0.5)

-- OUTPUT:
8.971428571428572
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:49:22) 
-- CODE:
L=float(input())

G=9.8

print((2*3.14) * (L/G) ** 0.5)

-- EXECUTION TIME:
0.155129
-- TEST CASE 1:
---- input:
20.0
---- correct output:
8.975979010256552
---- user output:
8.971428571428572
-- TEST CASE 2:
---- input:
168.5
---- correct output:
26.05354252683059
---- user output:
26.04033449109599
-- TEST CASE 3:
---- input:
324.2
---- correct output:
36.13876739612874
---- user output:
36.12044658118847
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:49:36) 
-- CODE:
L=float(input())

G=9.8

print((2*3.14) * (L/G) ** 0.5)

-- OUTPUT:
8.971428571428572
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:49:56) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1) * (L/G) ** 0.5)

-- OUTPUT:
8.857142857142858
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:50:06) 
-- CODE:
L=float(input())

G=9.8

print((2*3.14) * (L/G) ** 0.5)

-- OUTPUT:
8.971428571428572
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:50:08) 
-- CODE:
L=float(input())

G=9.8

print((2*3.14) * (L/G) ** 0.5)


-- OUTPUT:
8.971428571428572
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:50:46) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1415) * (L/G) ** 0.5)


-- OUTPUT:
8.975714285714286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:50:59) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1415) * (L/G) ** 0.5)


-- EXECUTION TIME:
0.178334
-- TEST CASE 1:
---- input:
20.0
---- correct output:
8.975979010256552
---- user output:
8.975714285714286
-- TEST CASE 2:
---- input:
168.5
---- correct output:
26.05354252683059
---- user output:
26.052774141330588
-- TEST CASE 3:
---- input:
324.2
---- correct output:
36.13876739612874
---- user output:
36.137701571593496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:51:08) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1415) * (L/G) ** 0.5)


-- OUTPUT:
8.975714285714286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:51:18) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1415) * (L/G) ** 0.5)


-- EXECUTION TIME:
0.168828
-- TEST CASE 1:
---- input:
20.0
---- correct output:
8.975979010256552
---- user output:
8.975714285714286
-- TEST CASE 2:
---- input:
168.5
---- correct output:
26.05354252683059
---- user output:
26.052774141330588
-- TEST CASE 3:
---- input:
324.2
---- correct output:
36.13876739612874
---- user output:
36.137701571593496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:51:21) 
-- CODE:
L=float(input())

G=9.8

print((2*3.1415) * (L/G) ** 0.5)


-- OUTPUT:
8.975714285714286
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:52:49) 
-- CODE:
L=float(input())

import(math)

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 3
    import(math)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:53:12) 
-- CODE:
L=float(input())

import(modulo)

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 3
    import(modulo)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:53:34) 
-- CODE:
L=float(input())

import math

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 7
    print((2*3.pi) * (L/G) ** 0.5)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:53:46) 
-- CODE:
L=float(input())

*import math

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 3
    *import math
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:54:05) 
-- CODE:
L=float(input())

*import modulo math

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 3
    *import modulo math
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:54:45) 
-- CODE:
L=float(input())

*import(modul math)

G=9.8

print((2*3.pi) * (L/G) ** 0.5)


-- ERROR:
File "XXXX", line 3
    *import(modul math)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
