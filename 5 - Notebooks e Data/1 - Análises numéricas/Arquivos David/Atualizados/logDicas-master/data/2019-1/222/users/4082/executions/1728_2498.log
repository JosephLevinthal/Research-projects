== TEST (2019-05-13 18:27:24) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=int(input("numero de habitante c:"))
pc1=int(inpt("percentual de crescimento a:"))
pc2=int(input("percentual de crescimento b:"))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:28:02) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=int(input("numero de habitante c:"))
pc1=float(inpt("percentual de crescimento a:"))
pc2=float(input("percentual de crescimento b:"))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:28:17) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=int(input("numero de habitante c:"))
pc1=float(input("percentual de crescimento a:"))
pc2=float(input("percentual de crescimento b:"))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:30:21) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=int(input("numero de habitante c:"))
pc1=int(input("percentual de crescimento a:"))
pc2=int(input("percentual de crescimento b:"))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:31:53) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=int(input("numero de habitante c:"))
pc1=int(input("percentual de crescimento a:"))
pc2=int(input("percentual de crescimento b:"))
d=int(input("numero de anos:"))






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 18:49:07) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0
while(a>b):
	p=pA<pB
	t=t+1
	print("n numero de habitante")






-- EXECUTION TIME:
0.183113
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:

-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:

-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:49:48) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA < pB
	t= t + 1
	print("n numero de habitantes")






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 18:49:56) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA < pB
	t= t + 1
	print("n numero de habitantes")






-- EXECUTION TIME:
0.14209
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:

-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:

-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 18:50:06) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA < pB
	t= t + 1
	print("numero de habitantes")






-- EXECUTION TIME:
0.135784
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:

-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:

-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:50:17) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA < pB
	t= t + 1
	print("a numero de habitantes")






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:50:32) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA < pB
	t= t + 1
	print("a numero de habitantes")






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 18:51:14) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA <= pB
	t= t + 1
	print("a numero de habitantes")






-- EXECUTION TIME:
0.117188
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:

-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:

-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 18:51:17) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a > b):
	p= pA <= pB
	t= t + 1
	print("a numero de habitantes")






-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    c=int(input())
ValueError: invalid literal for int() with base 10: '35.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:05:02) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a*c/100 )
	b = b + (b*d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b*d/100 )
                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:07:46) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (c * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- EXECUTION TIME:
0.18357
-- ERROR:
  File "/home/codebench/codes/1728/2498/main.py", line 10
    b = b + (c * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:07:49) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (c * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- EXECUTION TIME:
0.201455
-- ERROR:
  File "/home/codebench/codes/1728/2498/main.py", line 10
    b = b + (c * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:07:49) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (c * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (c * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:08:00) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- EXECUTION TIME:
0.193364
-- ERROR:
  File "/home/codebench/codes/1728/2498/main.py", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:08:01) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:08:12) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (c * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (c * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:08:20) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c / 100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:08:41) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:08:44) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- EXECUTION TIME:
0.191008
-- ERROR:
  File "/home/codebench/codes/1728/2498/main.py", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:09:25) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:10:13) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-13 19:10:14) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- EXECUTION TIME:
0.187473
-- ERROR:
  File "/home/codebench/codes/1728/2498/main.py", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-13 19:10:16) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:45:18) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a + (a * c/100 )
	b = b + (b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- ERROR:
File "XXXX", line 10
    b = b + (b * d/100 )
                       ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:46:19) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a * c/100 )
	b = b * d/100 )

	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- ERROR:
File "XXXX", line 9
    a = a * c/100 )
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:47:23) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a < b):
   a = a +  (a * c/100 )
	b = b +  (b * d/100 )

	t= t + 0
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- ERROR:
File "XXXX", line 10
    b = b +  (b * d/100 )
                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:47:53) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
   a = a +  (a * c/100 )
	b = b +  (b * d/100 )

	t= t + 0
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- ERROR:
File "XXXX", line 10
    b = b +  (b * d/100 )
                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:50:52) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 0
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:52:18) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 0
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 11:53:18) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- EXECUTION TIME:
0.209377
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:53:22) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 11:57:35) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 12:21:37) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a=d*c/100
	d=d+a
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 12:28:18) 
-- CODE:
a=int(input("numero de habitante a:"))
b=int(input("numero de habitante b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a= a+ (a*c/100)
	b=b + (b*d/100)
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 12:34:21) 
-- CODE:
a=int(input(""))
b=int(input(""))
c=float(input(""))
d=float(input(""))

t=0

while(a <= b):
	a= a + (a*c/100)
	b= b + (b*d/100)
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 12:35:40) 
-- CODE:
a=int(input("nuemro de habitantes a"))
b=int(input("numero de habitantes b:"))
c=float(input("percentual de crescimento a:"))
d=float(input("percentual de crescimento b:"))

t=0

while(a <= b):
	a= a + (a*c/100)
	b= b + (b*d/100)
	
	t= t + 1
	
	print("a numero de habitantes")
	
	if(b==0):
		print("a numero de habitantes")
	
	





-- OUTPUT:
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
a numero de habitantes
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:06:58) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pb >= pa:
    pa = (pa +( (pa * g1) / 100))
    pb = (pb +( (pb * g2) / 100))
    if pa == pb
        print (cont)
    else:
       cont = cont +1





-- ERROR:
File "XXXX", line 11
    if pa == pb
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:07:31) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pb >= pa:
    pa = (pa +( (pa * g1) / 100))
    pb = (pb +( (pb * g2) / 100))
	
if pa == pb
      print (cont)
else:
     cont = cont +1





-- ERROR:
File "XXXX", line 12
    if pa == pb
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:11:26) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while (pb>= pa):
   pa = (pa +( (pa * g1) / 100))
   pb = (pb +( (pb * g2) / 100))
	print()
	
if (pa == pb):
	 print (cont)
else:
     cont = cont +1





-- ERROR:
File "XXXX", line 11
    print()
          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:14:23) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while (pb>= pa):
   pa = (pa +( (pa * g1) / 100))
   pb = (pb +( (pb * g2) / 100))
	print(cont)
	
if (pa == pb):
	 print (cont)
else:
     cont = cont +1





-- ERROR:
File "XXXX", line 11
    print(cont)
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:49:28) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while (pb>= pa):
   pa = (pa +( (pa * g1) / 100))
   pb = (pb +( (pb * g2) / 100))
	if pa == pb:
		cont
else:
     cont = cont +1
print(cont)



-- ERROR:
File "XXXX", line 11
    if pa == pb:
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:50:10) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while (pb>= pa):
   pa = (pa +( (pa * g1) / 100))
   pb = (pb +( (pb * g2) / 100))
	if pa ==pb:
		cont
else:
     cont = cont +1
print(cont)



-- ERROR:
File "XXXX", line 11
    if pa ==pb:
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:50:38) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while (pb>= pa):
   pa = (pa +( (pa * g1) / 100))
   pb = (pb +( (pb * g2) / 100))
	if pa ==pb:
		cont
else:
     cont = cont +1
print(cont)



-- ERROR:
File "XXXX", line 11
    if pa ==pb:
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:53:41) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
    pa = (pa +((pa * g1) / 100))
    pb = (pb +((pb * g2) / 100))
    if pa == pb:
        cont
    else:
       cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if pa ==pb:
              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:57:57) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
    if pa == pb:
      cont
   else:
       cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if pa == pb:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:58:18) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
    
if pa == pb:
      cont
   else:
       cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 14
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:58:36) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
    
if pa == pb:
      cont
		else:
       cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 14
    else:
        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 13:58:46) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
    
if pa == pb:
      cont
else:
       cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 14
    else:
        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:22:13) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
   
	if pa == pb:
		cont
	else:
		cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 12
    if pa == pb:
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:22:52) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))  
	if pa==pb:
		cont
	else:
		cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if pa==pb:
             ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:23:16) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))  
	cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    cont = cont +1
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:24:08) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    cont = cont +1
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:24:43) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
	cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    cont = cont +1
                 ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:25:30) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
	if pa==pb:
		cont
		else:
			cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if pa==pb:
             ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:26:37) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
	if (pa==pb):
		cont
		else:
			cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if (pa==pb):
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:27:09) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pa:
   pa = (pa +((pa * g1) / 100))
   pb = (pb +((pb * g2) / 100))
	if (pa==pb):
		cont
		else:
			cont = cont +1

print (cont)


-- ERROR:
File "XXXX", line 11
    if (pa==pb):
               ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 14:35:17) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pb:
    pa = (pa +((pa * g1) / 100))
    pb = (pb +((pb * g2) / 100))
    cont = cont +1

print (cont)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:36:39) 
-- CODE:
pa = int(input())
pb = int(input())
g1 = float(input())
g2 = float(input())

cont = 0

while pa <= pb:
    pa = (pa +((pa * g1) / 100))
    pb = (pb +((pb * g2) / 100))
    cont = cont +1

print (cont)
-- EXECUTION TIME:
0.215138
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
