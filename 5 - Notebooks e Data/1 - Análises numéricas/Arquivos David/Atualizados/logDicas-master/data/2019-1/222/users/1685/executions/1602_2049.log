== TEST (2019-03-28 13:33:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x % y
print(x,y,z,a)
-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:33:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x %y
print(x,y,z,a)
-- EXECUTION TIME:
0.246583
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:33:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x %y
print(x,y,z,a)
-- EXECUTION TIME:
0.282779
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(nput("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.176444
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(nput("dividor:"))
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(nput("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.200944
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(nput("dividor:"))
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(nput("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.147689
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(nput("dividor:"))
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(nput("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.161194
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(nput("dividor:"))
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.140166
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(input())
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:39:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.223707
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(input())
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:40:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=inti(input())
NameError: name 'inti' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:40:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.179307
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2049/main.py", line 5, in <module>
    y=inti(input())
NameError: name 'inti' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:40:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=inti(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=inti(input())
NameError: name 'inti' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:40:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:40:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- OUTPUT:
8 5 1 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:41:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.x=int(imput("dividendo:"))
x=int(input("divisor:"))
y=int(input("dividor:"))
z=x//y
a=x%y
print(x,y,z,a)
-- EXECUTION TIME:
0.17713
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8 5 1 3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14 2 7 0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347 2 173 1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
