== TEST (2019-04-03 19:21:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input())
y=float(input())

if (2x+y==3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 7
    if (2x+y==3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:21:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input())
y=float(input())

if (2x+y == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 7
    if (2x+y == 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:21:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input())
y=float(input())

if (2x+y = 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 7
    if (2x+y = 3):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:23:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input())
y=float(input())

if (2*x+y == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:24:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input())
y=float(input())

if (2*x+y == 3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.147943
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
