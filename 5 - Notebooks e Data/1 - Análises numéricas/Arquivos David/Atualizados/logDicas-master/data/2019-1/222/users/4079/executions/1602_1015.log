== TEST (2019-03-25 14:16:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input())
b=int(input())
c=int(imput())
min(a,b,c)
max(a,b,c)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    c=int(imput())
NameError: name 'imput' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:17:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input())
b=int(input())
c=int(imput())
min(a,b,c)
max(a,b,c)
print(min+max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    c=int(imput())
NameError: name 'imput' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:17:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input())
b=int(input())
c=int(input())
min(a,b,c)
max(a,b,c)
print(min+max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:18:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input())
b=int(input())
c=int(input())
min(a,b,c)
max(a,b,c)
print(min+max)
-- EXECUTION TIME:
0.194462
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 9, in <module>
    print(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:19:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input(a:))
b=int(input(b:))
c=int(input(c:))
min(a,b,c)
max(a,b,c)
print(min+max)
-- ERROR:
File "XXXX", line 4
    a=int(input(a:))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:20:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input('b: "))
c=int(input("c: "))
min(a,b,c)
max(a,b,c)
print(min+max)
-- ERROR:
File "XXXX", line 5
    b=int(input('b: "))
                      ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:20:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min(a,b,c)
max(a,b,c)
print(min+max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:21:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- OUTPUT:
(10, -2, 0, 10, -2, 0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:22:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- EXECUTION TIME:
0.164253
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
(10, -2, 0, 10, -2, 0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:23:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- OUTPUT:
(10, -2, 0, 10, -2, 0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:24:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- EXECUTION TIME:
0.200712
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
(10, -2, 0, 10, -2, 0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:25:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(min-max)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:26:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:26:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
min=(a,b,c)
max=(a,b,c)
print(max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:29:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'tuple' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:30:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'tuple' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:33:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(max-min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max-min)
TypeError: unsupported operand type(s) for -: 'tuple' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:33:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(max+min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max+min)
TypeError: can only concatenate tuple (not "builtin_function_or_method") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:34:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(max+min)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(max+min)
TypeError: can only concatenate tuple (not "builtin_function_or_method") to tuple
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:35:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min(a,b,c)
max=(a,b,c)
print(min+max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:37:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min-max)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:38:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- OUTPUT:
(6, 2, 4, 6, 2, 4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:38:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- OUTPUT:
(6, 2, 4, 6, 2, 4)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 14:39:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min+max)
-- EXECUTION TIME:
0.20584
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
(6, 2, 4, 6, 2, 4)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:39:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min-max)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 14:40:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
min=(a,b,c)
max=(a,b,c)
print(min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min-max)
TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:29:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(4,2,6))
print(min-max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min-max)
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:30:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(4,2,6))
print(min+max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min+max)
TypeError: unsupported operand type(s) for +: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:31:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(4,2,6))
-- OUTPUT:
2
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:32:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(4,2,6))
-- EXECUTION TIME:
0.205339
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
a: b: c: 2
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:33:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
-- OUTPUT:
2
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:33:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
-- OUTPUT:
2
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:34:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
-- EXECUTION TIME:
0.208522
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
2
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:34:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min(2)-max(6))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min(2)-max(6))
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:35:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min2-max6)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min2-max6)
NameError: name 'min2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:36:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min2-max6)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min2-max6)
NameError: name 'min2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:36:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min 2-max 6)
-- ERROR:
File "XXXX", line 12
    print(min 2-max 6)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:36:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min 2 - max 6)
-- ERROR:
File "XXXX", line 12
    print(min 2 - max 6)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:37:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min_2 - max_6)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min_2 - max_6)
NameError: name 'min_2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:37:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
a=6
b=2
c=4
print(min(6,2,4))
print(max(6,2,4))
print(min (a) - max(b))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(min (a) - max(b))
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:42:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
menor=min(a,b,c)
maior=max(a,b,c)
print(min(6,2,4))
print(max(6,2,4))
print(min (a) - max(b))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(min (a) - max(b))
TypeError: 'int' object is not iterable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 15:44:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
menor=min(a,b,c)
maior=max(a,b,c)
intermediario=(a+b+c)-maior-menor
print(menor,intermediario,maior)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:45:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
menor=min(a,b,c)
maior=max(a,b,c)
intermediario=(a+b+c)-maior-menor
print(menor,intermediario,maior)
-- EXECUTION TIME:
0.152199
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 15:52:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input("a: "))
b=int(input("b: "))
c=int(input("c: "))
menor=min(a,b,c)
maior=max(a,b,c)
intermediario=(a+b+c)-maior-menor
print(menor,intermediario,maior)
-- EXECUTION TIME:
0.144655
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
