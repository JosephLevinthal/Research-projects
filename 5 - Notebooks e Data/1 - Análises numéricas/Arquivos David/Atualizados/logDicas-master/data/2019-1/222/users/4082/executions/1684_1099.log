== SUBMITION (2019-04-26 19:09:39) 
-- CODE:
a=float(input("triangulo 1:"))
b=float(input("triangulo 2:"))
c=float(input("triangulo 3:"))

print("Entradas", a ,"," , b ,"," , c)

if(a==b and b==c) :
    print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
    print("Tipo de triangulo: isosceles")
elif (a!=b and b!=c and c!=a):
    print("Tipo de triangulo: escaleno")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.121819
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas 1.0 , 2.0 , 7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:11:04) 
-- CODE:
a=float(input()
b=float(input())
c=float(input())

print("Entradas:", a ,"," , b ,"," , c)

if(a==b and b==c) :
    print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
    print("Tipo de triangulo: isosceles")
elif (a!=b and b!=c and c!=a):
    print("Tipo de triangulo: escaleno")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.205534
-- ERROR:
  File "/home/codebench/codes/1684/1099/main.py", line 2
    b=float(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:17:17) 
-- CODE:
a=float(input()
b=float(input())
c=float(input())

print("Entradas:", a ,"," , b ,"," , c)

if(a==b and b==c) :
		  print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
		  print("Tipo de triangulo: isosceles")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
		  print("Tipo de triangulo: invalido")
else:
		  print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.208165
-- ERROR:
  File "/home/codebench/codes/1684/1099/main.py", line 2
    b=float(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:17:39) 
-- CODE:
a=float(input()
b=float(input())
c=float(input())

print("Entradas:", a ,"," , b ,"," , c)

if(a==b and b==c) :
		  print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
		  print("Tipo de triangulo: isosceles")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
		  print("Tipo de triangulo: invalido")
else:
		  print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 2
    b=float(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:18:17) 
-- CODE:
a=float(input())
b=float(input())
c=float(input())

print("Entradas:", a ,"," , b ,"," , c)

if(a==b and b==c) :
		  print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
		  print("Tipo de triangulo: isosceles")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
		  print("Tipo de triangulo: invalido")
else:
		  print("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:18:37) 
-- CODE:
a=float(input())
b=float(input())
c=float(input())

print("Entradas:", a ,"," , b ,"," , c)

if(a==b and b==c) :
		  print("Tipo de triangulo: equilatero")
elif (a==b or b==c or c==a ) :
		  print("Tipo de triangulo: isosceles")
elif((a>=b+c or b>=c+a or c>=a+b) or (a<=0 or b<=0 or c<=0)):
		  print("Tipo de triangulo: invalido")
else:
		  print("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.144269
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
