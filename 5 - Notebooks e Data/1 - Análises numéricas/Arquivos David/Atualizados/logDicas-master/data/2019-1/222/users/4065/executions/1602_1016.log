== TEST (2019-03-28 13:47:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s(s-a)(s-b)(s-c))

print(round(area,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = sqrt(s(s-a)(s-b)(s-c))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:48:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)(s-b)(s-c)))

print(round(area,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = float(sqrt(s(s-a)(s-b)(s-c)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:49:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)(s-b)(s-c)))

print(round(area,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:50:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area =(sqrt(s(s-a)(s-b)(s-c)))

print(round(area,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:54:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area =sqrt(s(s-a)(s-b)(s-c))

print(round(area,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:55:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2



print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:01:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s(s-a))

print(area)
print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:05:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)))

print(area)
print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:11:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)))

print(area)
print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:12:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)))

print(area)
print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = float(sqrt(s(s-a)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:13:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s(s-a)))

print(area)
print(round(s,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = float(sqrt(s(s-a)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:14:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s)

print(area)
print(round(s,5))
-- OUTPUT:
6.0909769331364245
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:14:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a))

print(area)
print(round(s,5))
-- OUTPUT:
31.117679862097688
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:15:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a))

print(area)
print(round(s,5))
-- OUTPUT:
31.117679862097688
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:15:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a))

print(area)
print(round(s,5))
-- OUTPUT:
31.117679862097688
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:20:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(area)
print(round(s,5))
-- OUTPUT:
638.2083659746244
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:20:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(area)
print(round(s,5))
-- OUTPUT:
638.2083659746244
37.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:21:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(area,5)

-- OUTPUT:
638.2083659746244 5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:22:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 14:22:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- EXECUTION TIME:
0.212653
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
638.20837
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
3909.36376
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
4627.14693
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:23:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:24:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:25:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 14:28:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:50:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:51:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:51:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:52:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = int(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:52:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = int(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:52:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:55:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:55:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:56:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:57:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:58:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:58:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:59:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:59:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:02:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:02:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:02:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a)*(s-b)*(s-c)))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:03:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)

print(round(area,5))

-- ERROR:
File "XXXX", line 15
    print(round(area,5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:03:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)))

print(round(area,5))

-- OUTPUT:
31.11768
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:04:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)*(s-b)))

print(round(area,5))

-- OUTPUT:
130.54599
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:04:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = (sqrt(s*(s-a)(s-b)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = (sqrt(s*(s-a)(s-b)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:05:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a)*(s-b))

print(round(area,5))

-- OUTPUT:
130.54599
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:05:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*s-a*(s-b))

print(round(area,5))

-- OUTPUT:
34.392
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:06:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:06:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- EXECUTION TIME:
0.240755
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
15.22038
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
48.21825
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
52.83228
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:07:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*s-a*s-b*s-c))

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:08:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = float(sqrt(s*(s-a*s-b*s-c)))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = float(sqrt(s*(s-a*s-b*s-c)))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:08:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a*s-b*s-c)))

print(round(area,5))

-- ERROR:
File "XXXX", line 13
    area = sqrt(s*(s-a*s-b*s-c)))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:08:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*(s-a*s-b*s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = sqrt(s*(s-a*s-b*s-c))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:09:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:09:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = float(a + b + c / 2)

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:10:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = float(a + b + c / 2)

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:10:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = float(a + b + c / 2)

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:11:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = float(a + b + c)  / 2

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = sqrt(s*s-a*s-b*s-c)
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:11:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = float( a + b + c / 2 )

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:12:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = ( a + b + c / 2 )

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:12:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = ( a + b + c) / 2 

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    area = sqrt(s*s-a*s-b*s-c)
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:13:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2 

area = sqrt(s*s-a*s-b*s-c)

print(round(area,5))

-- OUTPUT:
15.22038
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:14:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c)

print(round(area,5))

-- ERROR:
File "XXXX", line 15
    print(round(area,5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:14:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:15:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2 

area = sqrt(s)

print(round(area,5))

-- OUTPUT:
6.09098
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:16:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = a + b + c / 2 
print(s)
area = sqrt(s)

print(round(area,5))

-- OUTPUT:
37.1
6.09098
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:17:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = a + b + c / 2 
print(s)
area = sqrt(s)

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:18:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = (a + b + c) / 2 
print(s)
area = sqrt(s)

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:18:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = (a + b + c) / 2 
print(s)
area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:19:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- EXECUTION TIME:
0.198536
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:19:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:19:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = int(input("primeiro lado: "))
b = int(input("segundo lado: "))
c = int(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- EXECUTION TIME:
0.144846
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 7, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:20:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 02:20:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- EXECUTION TIME:
0.124495
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:23:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:24:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

from math import *

a = float(input("primeiro lado: "))
b = float(input("segundo lado: "))
c = float(input("terceiro lado: "))

s = (a + b + c) / 2 

area = sqrt(s*(s-a)*(s-b)*(s-c))

print(round(area,5))

-- EXECUTION TIME:
0.167726
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
