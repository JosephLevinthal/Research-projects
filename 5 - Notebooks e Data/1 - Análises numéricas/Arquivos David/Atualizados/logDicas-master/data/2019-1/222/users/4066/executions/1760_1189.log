== TEST (2019-06-19 19:41:44) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ")

print(w)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    w = v.replace(" ")
TypeError: replace() takes at least 2 arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:41:57) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

print(w)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:43:28) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

if i <= len(w):
	s[i] = w[-i]
	i = i + 1

print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    s[i] = w[-i]
TypeError: 'str' object does not support item assignment
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:44:21) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

if i <= len(w):
	s = s + w[-i]
	i = i + 1

print(s)
-- OUTPUT:
A
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:44:41) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

if i <= len(w):
	s = s + w[-i]
	i = i + 1

print(s)
-- OUTPUT:
A
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:45:16) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

if i <= len(w):
	s = s + w[i]
	i = i + 1

print(s)
-- OUTPUT:
A
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:45:35) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

while i <= len(w):
	s = s + w[-i]
	i = i + 1

print(s)
-- OUTPUT:
AACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:45:46) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")

s = ""

i = 0

while i <= len(w):
	s = s + w[-i]
	i = i + 1

print(s)
-- OUTPUT:
AACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:45:54) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")
print(w)
s = ""

i = 0

while i <= len(w):
	s = s + w[-i]
	i = i + 1

print(s)
-- OUTPUT:
ACARARAJADADAJARARACA
AACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:46:40) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0
		s = s + w[-i]
	i = i + 1
	
print(s)
-- ERROR:
File "XXXX", line 10
    if i > 0
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:46:46) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
print(s)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:47:03) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","")
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
print(s)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:47:14) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
print(s)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:47:56) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
if s == w:
	print(1)
else:
	print(o)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:48:04) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
if s == w:
	print(1)
else:
	print(o)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 19:48:08) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
	
if s == w:
	print(1)
else:
	print(o)
-- EXECUTION TIME:
0.856758
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:48:31) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1

print(s)
if s == w:
	print(1)
else:
	print(o)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 19:48:43) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1

print(s)
if s == w:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 19:48:50) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0

while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1

print(s)
if s == w:
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.821808
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
ORROHCAC
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
AMALANADANALAMA
1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:18:43) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0
p = 0
while i <= len(w)//2:
	if w[i] == w[-i]
		p = p + 1
if p == len(w)//2:
	print(1)
else:
	print(o)

-- ERROR:
File "XXXX", line 10
    if w[i] == w[-i]
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:18:54) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0
p = 0
while i <= len(w)//2:
	if w[i] == w[-i]
		p = p + 1
if p == len(w)//2:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 10
    if w[i] == w[-i]
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:18:59) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0
p = 0
while i <= len(w)//2:
	if w[i] == w[-i]:
		p = p + 1
if p == len(w)//2:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 10
    if w[i] == w[-i]
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:19:06) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0
p = 0
while i <= len(w)//2:
	if w[i] == w[-i]:
		p = p + 1
if p == len(w)//2:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 10
    if w[i] == w[-i]
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:21:19) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
print(w)
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:21:49) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 21:22:05) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.845775
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
ORROHCAC
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:22:31) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-19 21:22:43) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 21:23:00) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(s)
if s == w:
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.692108
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
ORROHCAC
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-19 21:23:29) 
-- CODE:
v = input("Digite: ")

w = v.replace(" ","").upper()
s = ""

i = 0
p = 0
while i <= len(w):
	if i > 0:
		s = s + w[-i]
	i = i + 1
print(w)
if s == w:
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.679892
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
