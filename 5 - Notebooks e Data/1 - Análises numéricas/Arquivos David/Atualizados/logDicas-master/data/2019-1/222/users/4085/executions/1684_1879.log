== TEST (2019-04-23 23:36:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	print ("R$", round(500, 2))
else:
	print ("R$", round(100, 2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 23:37:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	print ("R$", round(100, 2))
else:
	print ("R$", round(500, 2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 23:37:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	print ("R$", round(100, 2))
else:
	print ("R$", round(500, 2))
-- EXECUTION TIME:
0.183635
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 23:37:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	print ("R$", round(100, 2))
else:
	print ("R$", round(500, 2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 23:39:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	mensagem = 100
	print ("R$", round(mensagem, 2))
else:
	mensagem = 500
	print ("R$", round(mensagem, 2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 23:40:01) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	mensagem = 100.00
	print ("R$", round(mensagem, 2))
else:
	mensagem = 500.00
	print ("R$", round(mensagem, 2))
-- OUTPUT:
420.0 extras e 20.0 de falta
R$ 500.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 23:40:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
e = float(input("escreva o numero de horas extras: "))
f = float(input("escreva o numero de horas que faltou: "))
h = (e - (1/4 * f))
print (e, "extras e", f, "de falta")
if (h <= 400):
	mensagem = 100.00
	print ("R$", round(mensagem, 2))
else:
	mensagem = 500.00
	print ("R$", round(mensagem, 2))
-- EXECUTION TIME:
0.143366
-- TEST CASE 1:
---- input:
420
20
---- correct output:
420.0 extras e 20.0 de falta
R$ 500.0
---- user output:
420.0 extras e 20.0 de falta
R$ 500.0
-- TEST CASE 2:
---- input:
400.5
100
---- correct output:
400.5 extras e 100.0 de falta
R$ 100.0
---- user output:
400.5 extras e 100.0 de falta
R$ 100.0
-- TEST CASE 3:
---- input:
300
44
---- correct output:
300.0 extras e 44.0 de falta
R$ 100.0
---- user output:
300.0 extras e 44.0 de falta
R$ 100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
