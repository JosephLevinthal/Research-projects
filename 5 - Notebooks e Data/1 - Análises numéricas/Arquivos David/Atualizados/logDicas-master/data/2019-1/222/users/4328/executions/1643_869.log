== TEST (2019-04-15 12:31:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preço >= 200):
	print(preco - (5%)*preco )
else:
	print(preco)
-- ERROR:
File "XXXX", line 7
    print(preco - (5%)*preco )
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:33:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preço >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (preço >= 200):
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:34:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preço >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (preço >= 200):
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:35:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preço >= 200):
	print(preco - (0.05 * preco) )
else:
	print("preco")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (preço >= 200):
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:35:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print("preco")
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:35:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:36:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- EXECUTION TIME:
0.267466
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:36:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:36:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:36:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:36:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:39:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:41:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:46:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:08:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	print(preco - (0.05 * preco) )
else:
	print(round(preco,2)
-- ERROR:
File "XXXX", line 10
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:10:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	mensagem = (preco - (0.05 * preco) )
else:
	mensagem = (preco)
	
print(round(mensagem,2))
	
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:10:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input())

if (preco >= 200):
	mensagem = (preco - (0.05 * preco) )
else:
	mensagem = (preco)
	
print(round(mensagem,2))
	
-- EXECUTION TIME:
0.173542
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
