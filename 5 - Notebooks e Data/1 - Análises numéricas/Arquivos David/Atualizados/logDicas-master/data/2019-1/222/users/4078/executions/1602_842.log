== TEST (2019-03-26 14:03:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int("numero inteiro: ")
y =x%3138+x3141+3137
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X =int("numero inteiro: ")
ValueError: invalid literal for int() with base 10: 'numero inteiro: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:03:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int("numero inteiro: ")
y =x%3138+x3141+3137
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    X =int("numero inteiro: ")
ValueError: invalid literal for int() with base 10: 'numero inteiro: '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:03:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y =x%3138+x3141+3137
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y =x%3138+x3141+3137
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:04:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = float(x%3138+x3141+3137)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y = float(x%3138+x3141+3137)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:04:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = float(x%3138)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y = float(x%3138)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:05:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = float(x//3138)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y = float(x//3138)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:05:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = float( "x"//3138)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y = float( "x"//3138)
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:12:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = 3141
z = x//y
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z = x//y
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:13:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
X =int(input("numero inteiro: "))
y = 3141
z = x//y
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    z = x//y
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:13:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
z = x//y
print(y)
-- OUTPUT:
3141
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:13:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
z = x//y
print(z)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:17:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
z = x//y + 
a = 3138
b = x%a
print(z)
-- ERROR:
File "XXXX", line 6
    z = x//y + 
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:18:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
z = x//y 
a = 3138
b = x%a
print(z)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:18:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
z = x//y 
a = 3138
b = x%a
print(z,b)
-- OUTPUT:
2 2897
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:19:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
b = x%a
z = x//y 
a = 3138

print(z,b)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    b = x%a
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:20:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
a = 3138
b = x%a
z = x//y 


print(z,b)
-- OUTPUT:
2 2897
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:20:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))
y = 3141
a = 3138
b = x%a
z = x//y 


print(b,z)
-- OUTPUT:
2897 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:22:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//y 



print(ra,rb)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    rb = x//y 
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:23:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b



print(ra,rb)
-- OUTPUT:
2897 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:26:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c



print(ra,rb)
-- OUTPUT:
2897 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:26:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c



print(ra,rb,rc)
-- OUTPUT:
2897 2 2899
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:29:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d


print(ra,rb,rc,rd)
-- OUTPUT:
2897 2 2899 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:30:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 14:30:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- EXECUTION TIME:
0.187703
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:30:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 14:31:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- EXECUTION TIME:
0.121917
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:31:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = int(ra+rb+rc+rd)


print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 14:31:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = int(ra+rb+rc+rd)


print(soma)
-- EXECUTION TIME:
0.170452
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:33:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = int(ra+rb+rc+rd)


print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 14:33:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = int(ra+rb+rc+rd)


print(soma)
-- EXECUTION TIME:
0.148773
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 14:34:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 14:34:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = 3138
ra = x%a

b = 3141
rb = x//b

c =3137
rc=x%c

d =3141
rd=x//d

soma = ra+rb+rc+rd


print(soma)
-- EXECUTION TIME:
0.163047
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:49:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("numero inteiro: "))

a = x/1000
b = int(x/100)%10

-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:56:53) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000

print(a)
-- OUTPUT:
9.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:58:24) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = n // 100

print(a)
-- OUTPUT:
9.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:59:02) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = n // 100

print(a)
print(b)
-- OUTPUT:
9.0
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:59:50) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10

print(a)
print(b)
-- OUTPUT:
9.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:00:38) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10)

print(a)
print(b)
print(c)
-- OUTPUT:
9.0
1.0
917.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:01:11) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n % 10)

print(a)
print(b)
print(c)
-- OUTPUT:
9.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:02:12) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10

print(a)
print(b)
print(c)
-- OUTPUT:
9.0
1.0
7.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:05:32) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n // 1000

soma = a + b + c + d

print(soma)

-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:05:57) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n // 100

soma = a + b + c + d

print(soma)

-- OUTPUT:
108.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:06:34) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 100

soma = a + b + c + d

print(soma)

-- OUTPUT:
90.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 13:07:46) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d

print(soma)

-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 13:08:00) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d

print(soma)

-- EXECUTION TIME:
0.198796
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:55:25) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d

print(soma)

-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 17:55:41) 
-- CODE:
n = float(input("digite um numero inteiro de 4 digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d

print(soma)

-- EXECUTION TIME:
0.206876
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:42:28) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = n // 1000
b = (n //100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d

print(soma)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = n // 1000
NameError: name 'n' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:43:53) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x //100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)


-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:44:20) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x //100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)


-- EXECUTION TIME:
0.214537
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:57:25) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:57:32) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.180963
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:03:49) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:03:58) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 22:04:07) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.202827
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:08:05) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x //100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 22:08:14) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x //100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.131746
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:16:48) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10 
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:17:06) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10 
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 22:17:24) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10 
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.147055
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 08:55:37) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 08:55:49) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.131531
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:30:22) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))
a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 10:30:38) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))
a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.140459
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 10:37:32) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 10:37:39) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: "))

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.100764
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:04:23) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")
a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma =  a + b+ c + d
print(soma)
-- ERROR:
File "XXXX", line 2
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:05:43) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")
a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma =  a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 2
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:06:11) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")
a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 2
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:07:15) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 3
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:09:13) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 3
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:10:03) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 3
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:10:25) 
-- CODE:
x =float(input("numero inteiro de quatro digitos: ")

a = x // 1000
b = (x // 100) % 10
c = (x // 10) % 10
d = x % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 3
    a = x // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:11:12) 
-- CODE:
n =float(input("numero inteiro de quatro digitos: ")

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d
print(soma)
-- ERROR:
File "XXXX", line 3
    a = n // 1000
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 11:12:38) 
-- CODE:
n =float(input("numero inteiro de quatro digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d
print(soma)
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 11:12:47) 
-- CODE:
n =float(input("numero inteiro de quatro digitos: "))

a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10

soma = a + b + c + d
print(soma)
-- EXECUTION TIME:
0.159865
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20.0
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
