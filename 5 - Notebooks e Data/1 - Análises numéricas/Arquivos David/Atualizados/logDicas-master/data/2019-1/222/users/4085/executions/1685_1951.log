== TEST (2019-04-24 19:42:48) 
-- CODE:
x0 = float(input("escreva a abscissa de p0: "))
y0 = float(input("escreva a ordenada de p0: "))
x1 = float(input("escreva a abscissa de p1: "))
y1 = float(input("escreva a ordenada de p1: "))
x2 = float(input("escreva a abscissa de p2: "))
y2 = float(input("escreva a ordenada de p2: "))
c = (x1 - x0) * (y2 - y0) - (x2 - x0) * (y1 - y0)
if (c == 0):
	print ("Sobre a reta")
elif (c < 0):
	print ("A esquerda da reta")
else:
	print ("A direita da reta")
-- OUTPUT:
A direita da reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:43:11) 
-- CODE:
x0 = float(input("escreva a abscissa de p0: "))
y0 = float(input("escreva a ordenada de p0: "))
x1 = float(input("escreva a abscissa de p1: "))
y1 = float(input("escreva a ordenada de p1: "))
x2 = float(input("escreva a abscissa de p2: "))
y2 = float(input("escreva a ordenada de p2: "))
c = (x1 - x0) * (y2 - y0) - (x2 - x0) * (y1 - y0)
if (c == 0):
	print ("Sobre a reta")
elif (c < 0):
	print ("A esquerda da reta")
else:
	print ("A direita da reta")
-- EXECUTION TIME:
0.171621
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A direita da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A esquerda da reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:46:23) 
-- CODE:
x0 = float(input("escreva a abscissa de p0: "))
y0 = float(input("escreva a ordenada de p0: "))
x1 = float(input("escreva a abscissa de p1: "))
y1 = float(input("escreva a ordenada de p1: "))
x2 = float(input("escreva a abscissa de p2: "))
y2 = float(input("escreva a ordenada de p2: "))
c = (x1 - x0) * (y2 - y0) - (x2 - x0) * (y1 - y0)
if (c > 0):
	print ("A esquerda da reta")
elif (c < 0):
	print ("A direita da reta")
else:
	print ("Sobre a reta")
-- EXECUTION TIME:
0.15206
-- TEST CASE 1:
---- input:
1
4
3
5
9
9
---- correct output:
A esquerda da reta
---- user output:
A esquerda da reta
-- TEST CASE 2:
---- input:
9
8
6
5
2
1
---- correct output:
Sobre a reta
---- user output:
Sobre a reta
-- TEST CASE 3:
---- input:
0
0
0
1
1
1
---- correct output:
A direita da reta
---- user output:
A direita da reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
