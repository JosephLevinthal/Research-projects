== TEST (2019-04-13 02:05:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2x + y = 3):
	print="ponto pertence a reta"
else:
	print="ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 6
    if(2x + y = 3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:05:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y = 3):
	print="ponto pertence a reta"
else:
	print="ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 6
    if(2*x + y = 3):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:06:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y == 3):
	print="ponto pertence a reta"
else:
	print="ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 6
    if(2*x + y = 3):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:06:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y == 3):
	print="ponto pertence a reta"
else:
	print="ponto nao pertence a reta"
-- EXECUTION TIME:
0.288103
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:06:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y == 3):
	print="ponto pertence a reta"
else:
	print="ponto nao pertence a reta"
print(print)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(print)
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:07:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:07:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("coordernada x:")
y=input("coordernada y:")
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- EXECUTION TIME:
0.130602
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:07:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=int(input("coordernada x:"))
y=int(input("coordernada y:"))
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:08:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("coordernada x:"))
y=float(input("coordernada y:"))
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:08:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("coordernada x:"))
y=float(input("coordernada y:"))
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:08:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("coordernada x:"))
y=float(input("coordernada y:"))
if(2*x + y == 3):
	mensagem="ponto pertence a reta"
else:
	mensagem="ponto nao pertence a reta"
print(mensagem)
-- EXECUTION TIME:
0.17446
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
