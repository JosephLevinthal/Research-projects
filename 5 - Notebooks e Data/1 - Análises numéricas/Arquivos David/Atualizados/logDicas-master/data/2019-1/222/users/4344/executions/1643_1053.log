== TEST (2019-04-10 18:34:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrno, mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(patrno, mensagem)
NameError: name 'patrno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:34:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrno, mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(patrno, mensagem)
NameError: name 'patrno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:34:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrono, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrono, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:35:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrono, mensagem)
-- EXECUTION TIME:
0.204192
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrono, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:36:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(patrono, mensagem)
-- EXECUTION TIME:
0.134155
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:36:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("leia o nome: ")
if (patrono == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (patrono == "cervo"):
NameError: name 'patrono' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:37:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("leia o nome: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:37:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("leia o nome: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:37:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("leia o nome: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- EXECUTION TIME:
0.164206
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:37:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:38:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(harry, mensagem)
-- EXECUTION TIME:
0.162935
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:40:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = "cervo eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(harry, mensagem)
-- OUTPUT:
cervo cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:40:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(harry, mensagem)
-- OUTPUT:
cervo  eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:40:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(harry, mensagem)
-- EXECUTION TIME:
0.19381
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:41:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:41:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = harry + " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:41:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = harry + " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:42:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = harry + " eh patrono do harry potter"
else:
	mensagem = harry + " nao eh patrono do harry potter"
print(mensagem)
-- EXECUTION TIME:
0.131562
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do harry potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:43:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("entre com o patrono: ")
if (harry == "cervo"):
   mensagem = harry + " eh patrono do Harry Potter"
else:
	mensagem = harry + " nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.188458
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
