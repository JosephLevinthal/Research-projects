2019-6-12 11:59:55.706#viewportChange#0
2019-6-12 11:59:59.613#mousedown#{"isTrusted":true}
2019-6-12 11:59:59.705#focus#
2019-6-12 12:00:05.872#change#{"from":{"line":0,"ch":0,"sticky":"after","xRel":-0.03125},"to":{"line":13,"ch":24,"sticky":"before","xRel":28.765625},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))"],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > ???):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == ???):","         npar = npar + 1"],"origin":"paste"}
2019-6-12 12:00:06.023#viewportChange#1
2019-6-12 12:00:17.749#blur#
2019-6-12 12:00:26.041#focus#
2019-6-12 12:00:28.848#viewportChange#0
2019-6-12 12:00:30.684#mousedown#{"isTrusted":true}
2019-6-12 12:00:36.981#change#{"from":{"line":0,"ch":0,"sticky":"after","xRel":-2.03125},"to":{"line":38,"ch":0,"sticky":"after","xRel":195.96875},"text":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))"],"removed":["from numpy import*","","# Leitura do primeiro vetor","vet = array(eval(input(\"Primeiro vetor: \")))","","# Verifica se o programa vai terminar","while (size(vet) > 1):","   # Zera contador de elementos pares","   npar = 0","","   # Conta quantidade de elementos pares","   for elemento in vet:","      if (elemento % 2 == 0):","         npar = npar + 1","","   # No. de elementos pares","   print(npar)","","   # No. de elementos impares","   print(size(vet) - npar)","","   # No. total de elementos","   print(size(vet))","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))","","   # No. de elementos pares","   print(???)","","   # No. de elementos impares","   print(???)","","   # No. total de elementos","   print(???)","","   # Leitura do proximo vetor","   vet = array(eval(input(\"Proximo vetor: \")))",""],"origin":"paste"}
2019-6-12 12:00:37.029#viewportChange#0
2019-6-12 12:00:37.029#viewportChange#0
2019-6-12 12:00:43.109#blur#
