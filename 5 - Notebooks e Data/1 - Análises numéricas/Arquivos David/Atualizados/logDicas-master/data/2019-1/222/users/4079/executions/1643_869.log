== TEST (2019-04-13 02:14:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	mensagem("falta",x)
else:
	print("troco de", pagamento-preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	mensagem("falta",x)
else:
	print("troco de", pagamento-preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:16:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:16:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
-- EXECUTION TIME:
0.207412
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:17:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:17:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco>pagamento):
	x=preco-pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
-- EXECUTION TIME:
0.131796
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:18:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:18:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
print(x)
-- EXECUTION TIME:
0.131253
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:18:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor a ser pago:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:18:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
pagamento=float(input())
if(preco > pagamento):
	x = preco - pagamento
	print("falta",x)
else:
	print("troco de", pagamento-preco)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:19:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
pagamento=float(input())
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:22:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:22:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:22:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- EXECUTION TIME:
0.138776
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:22:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:23:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
	
-- EXECUTION TIME:
0.131301
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:24:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:24:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x)
-- EXECUTION TIME:
0.165385
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:24:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x,2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:24:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x,2)
-- EXECUTION TIME:
0.13423
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:25:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x.2)
-- ERROR:
File "XXXX", line 11
    print(x.2)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:25:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:25:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(2)
-- EXECUTION TIME:
0.138923
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:25:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,(2))
-- ERROR:
File "XXXX", line 12
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:26:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:26:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,2))
-- EXECUTION TIME:
0.205184
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:27:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:27:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,1))
-- EXECUTION TIME:
0.166242
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:27:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:28:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,1))
-- EXECUTION TIME:
0.267225
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:28:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:29:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:29:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:30:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:32:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:32:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("falta ",x)
else:
	print("troco de ", pagamento-preco)

-- EXECUTION TIME:
0.175509
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:33:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:33:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)

-- EXECUTION TIME:
0.155506
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:33:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x,2)
else:
	print("troco de ", pagamento-preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:34:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x,2)
else:
	print("troco de ", pagamento-preco)

-- EXECUTION TIME:
0.127789
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:34:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",2)
else:
	print("troco de ", pagamento-preco)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:34:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",2)
else:
	print("troco de ", pagamento-preco)

-- EXECUTION TIME:
0.182079
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:34:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x,2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:35:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x,2)

-- EXECUTION TIME:
0.174915
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:35:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(x, 2)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:35:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(rpund(x, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:35:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:35:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 2))

-- EXECUTION TIME:
0.156963
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:36:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 1))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:36:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 1))

-- EXECUTION TIME:
0.208116
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:36:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:36:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- EXECUTION TIME:
0.120286
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:36:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:36:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if(preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- EXECUTION TIME:
0.162818
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:37:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if (preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:37:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
pagamento=float(input("valor:"))
if (preco > pagamento):
	x = preco - pagamento
	print("Falta ",x)
else:
	print("troco de ", pagamento-preco)
print(round(x, 3))

-- EXECUTION TIME:
0.128683
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/869/main.py", line 5, in <module>
    pagamento=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:44:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if (preco >=200.0):
	valor_p=preco-(preco*o.o5)
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor_p=preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:44:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if (preco >=200.0):
	valor=preco-(preco*o.o5)
print(round(valor, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor=preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:45:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if (preco >=200.0):
	valor =preco-(preco*o.o5)
print(round(valor, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor =preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:45:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if (preco >=200.0):
	valor = preco-(preco*o.o5)
print(round(valor, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor = preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:46:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if (preco >=200.0):
	valor_p = preco-(preco*o.o5)
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor_p = preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:46:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if preco >=200.0:
	valor_p = preco-(preco*o.o5)
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor_p = preco-(preco*o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:46:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if preco >=200.0:
	valor_p = preco -(preco *o.o5)
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor_p = preco -(preco *o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:47:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input("sem desconto:"))
if preco >= 200.0:
	valor_p = "preco -(preco *o.o5)"
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(valor_p, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:48:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
if preco >= 200.0:
	valor_p = "preco -(preco *o.o5)"
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(valor_p, 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:48:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
if preco >= 200.0:
	valor_p = preco -(preco *o.o5)
print(round(valor_p, 2))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    valor_p = preco -(preco *o.o5)
NameError: name 'o' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 02:49:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
if preco >= 200.0:
	valor_p = preco -(preco * 0.05)
print(round(valor_p, 2))

-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 02:49:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco=float(input())
if preco >= 200.0:
	valor_p = preco -(preco * 0.05)
print(round(valor_p, 2))

-- EXECUTION TIME:
0.214546
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
