== TEST (2019-03-25 19:20:43) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ",  )

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto: 
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:22:31) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 64%8)

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.142169
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  0
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:22:34) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 64%8)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  0
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:22:59) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:23:04) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.133495
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:23:08) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:23:15) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.176637
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:23:16) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16//2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:23:28) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16/2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:23:29) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 11 - 3)

print("Multiplicacao: ", 2 * 4 )

print("Divisao: ", 16/2)

print("Resto: ", 39%31)

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.191257
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
