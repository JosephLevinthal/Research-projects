== TEST (2019-04-13 21:29:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = int(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o pássaro e o porco? "))
g = 9.8
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '45.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:29:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o pássaro e o porco? "))
g = 9.8
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:30:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o pássaro e o porco? "))
g = 9.8
R = ((v ** 2) * sin(2*a))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:30:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o pássaro e o porco? "))
g = 9.8
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:31:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o pássaro e o porco? "))
g = 9.8
from math import *
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:31:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:31:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("nao")
else : 
	print("sim")
-- EXECUTION TIME:
0.163514
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:32:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D == R)) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.149126
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:36:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v = float(input("Qual a velocidade inicial em (m/s)? "))
a = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(a)
R = ((v ** 2) * sin(2*r))/ g
if (abs(D - R)) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.197398
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:38:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(α)
R = abs(((v0 ** 2) * sin(2*r))/ g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:39:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
g = 9.8
from math import *
r = radians(α)
R = abs(((v0 ** 2) * sin(2*r))/ g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.176977
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:40:47) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = float(input("Qual o angulo em graus? "))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
r = radians(α)
R = abs(((v0 ** 2) * sin(2*r))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.221608
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:43:17) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
R = abs(((v0 ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.202776
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1055/main.py", line 2, in <module>
    \u03b1 = radians(float(input()))
NameError: name 'radians' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:42:46) 
-- CODE:
from math import *
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R = abs(((v0 ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:43:10) 
-- CODE:
from math import *
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R = abs(((v0 ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:43:33) 
-- CODE:
from math import *
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R = abs(((v0 ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.223915
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:46:09) 
-- CODE:
from math import *
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R =(((v0 ** 2) * sin(2*α))/ 9.8)
if abs(D - R) = 0 :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.220328
-- ERROR:
  File "/home/codebench/codes/1643/1055/main.py", line 6
    if abs(D - R) = 0 :
                  ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:47:46) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
b = radians(α)
R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.203177
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1055/main.py", line 2, in <module>
    \u03b1 = radians(float(input()))
NameError: name 'radians' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:47:49) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α = radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
b = radians(α)
R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    α = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 22:48:05) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α =(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
b = radians(α)
R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
TypeError: unsupported operand type(s) for *: 'float' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 22:48:12) 
-- CODE:
v0 = float(input("Qual a velocidade inicial em (m/s)? "))
α =(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
b = radians(α)
R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.136237
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1055/main.py", line 6, in <module>
    R = abs(((v0 ** 2) * sin*(2*b))/ 9.8)
TypeError: unsupported operand type(s) for *: 'float' and 'builtin_function_or_method'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:04:49) 
-- CODE:
v = float(input("Qual a velocidade inicial em (m/s)? "))
α =(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
from math import *
b = radians(α)
R = abs(((v ** 2) * sin(2*b))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.222718
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:06:35) 
-- CODE:
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
α =radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R = abs(((v ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:12:50) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =radians(float(input("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (sin(2*α))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:13:31) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =radians(float(input("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (sin(2*α))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:14:45) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =radians(float(input("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (sin(2*α))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:16:34) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =(float(input("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (radians(sin(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:16:56) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =(float(input radians("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (sin(2*α))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
File "XXXX", line 3
    α =(float(input radians("angulo α (em graus). ")))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:17:11) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =(float(input radians("angulo α (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (sin(2*α))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
File "XXXX", line 3
    α =(float(input radians("angulo α (em graus). ")))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:17:41) 
-- CODE:
from math import *
v = float(input("velocidade inicial v0 (em m/s). "))
α =(float(input("angulo (em graus). ")))
D = float(input("distancia horizontal D (em metros) entre o passaro e o porco, considerando que eles estao na mesma altura em relaçao ao solo. "))
numerador = (v ** 2) * (radians(sin(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:17:46) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (radians(sin(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:17:53) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (radians(sin(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:18:20) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (radians(sin(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.170117
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:22:53) 
-- CODE:
from math import *
v = float(input("Qual a velocidade inicial em (m/s)? "))
α =radians(float(input("Qual o angulo em graus? ")))
D = float(input("Qual a distancia horizontal em metros entre o passaro e o porco? "))
R = abs(((v ** 2) * sin(2*α))/ 9.8)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.206844
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:41:11) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (sin(radians(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:41:24) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (sin(radians(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.185778
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:41:29) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
numerador = (v ** 2) * (sin(radians(2*α)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.158254
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:41:55) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α)
numerador = (v ** 2) * (sin(r*2)))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
File "XXXX", line 6
    numerador = (v ** 2) * (sin(r*2)))
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:42:12) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α)
numerador = (v ** 2) * (sin(r*2))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
File "XXXX", line 6
    numerador = (v ** 2) * (sin(r*2))
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:42:34) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α)
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- ERROR:
File "XXXX", line 6
    numerador = (v ** 2) * (sin(r * 2))
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:43:12) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:43:19) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.189888
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:43:21) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D == R) :
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:44:42) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D - R)== 0:
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:45:02) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D - R)== 0:
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.191735
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:46:39) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = abs(numerador /g)
if (D - R)== 0:
	print("sim")
else : 
	print("nao")
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:48:28) 
-- CODE:
from math import *
v = float(input( "velocidade inicial v0 (em m/s). "))
α =(float(input(" angulo(em graus). ")))
D = float(input("distancia horizontal D(em metros) entre o passaro e o porco. "))
r = (radians(α))
numerador = (v ** 2) * (sin(r * 2))
g = 9.8
R = (numerador /g)
if abs(D - R) < 0.1:
	print("sim")
else : 
	print("nao")
-- EXECUTION TIME:
0.242073
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
