== TEST (2019-04-10 19:36:14) 
-- CODE:
senha = int(input("senha: "))

dig6 = senha % 10

print (dig6)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:36:19) 
-- CODE:
senha = int(input("senha: "))

dig6 = senha % 10

print (dig6)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:39:19) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

print (senha, dig6)
-- OUTPUT:
8761 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:39:24) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

print (senha, dig6)
-- OUTPUT:
8761 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 14:49:28) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10


print (senha, dig6)
-- OUTPUT:
8761 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:17:59) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10
dig5 = senha % 10



print (senha, dig6, dig5)
-- OUTPUT:
8761 2 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:18:11) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10
dig5 = senha % 10



print (senha, dig6, dig5)
-- OUTPUT:
8761 2 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:18:51) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10
dig5 = senha % 10
resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10


print (senha, dig6, dig5, dig4, dig3, dig2, dig1)
-- OUTPUT:
0 2 1 1 6 7 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:19:31) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10
dig5 = senha % 10
resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10
resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10


print (dig6, dig5, dig4, dig3, dig2, dig1)
-- OUTPUT:
2 1 1 6 7 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:21:58) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10


print (dig6, dig5, dig4, dig3, dig2, dig1)
-- OUTPUT:
2 1 6 7 8 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:22:06) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10


print (dig6, dig5, dig4, dig3, dig2, dig1)
-- OUTPUT:
2 1 6 7 8 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:26:22) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig + dig3 + dig5
rm = soma1 // soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 27, in <module>
    soma2 = dig + dig3 + dig5
NameError: name 'dig' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:26:37) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 // soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:26:44) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 // soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- OUTPUT:
senha invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:27:25) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 // soma2

print(rm)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:27:30) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 // soma2

print(rm)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:27:59) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 // soma2

print(soma1, soma2, rm)
-- OUTPUT:
16 8 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:28:19) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 % soma2

print(soma1, soma2, rm)
-- OUTPUT:
16 8 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 15:28:31) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 % soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 15:28:33) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 % soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- EXECUTION TIME:
0.161381
-- TEST CASE 1:
---- input:
087612
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- TEST CASE 2:
---- input:
760834
---- correct output:
senha invalida
---- user output:
senha invalida
-- TEST CASE 3:
---- input:
122967
---- correct output:
acesso liberado
---- user output:
acesso liberado
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 15:01:52) 
-- CODE:
senha = int(input("senha: "))
resto = senha % 10
dig6 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig5 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig4 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig3 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig2 = resto
senha = (senha - resto) // 10

resto = senha % 10
dig1 = resto
senha = (senha - resto) // 10

soma1 = dig2 + dig4 + dig6
soma2 = dig1 + dig3 + dig5
rm = soma1 % soma2

if (rm == 0):
	print('acesso liberado')
	
else:
	print('senha invalida')
-- OUTPUT:
acesso liberado
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
