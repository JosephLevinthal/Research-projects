== TEST (2019-04-27 12:39:20) 
-- CODE:
cons = float(input("Consumo de energia: "))
tipo = input("(R) para resisd. / (I) para indus. / (C) para comerc. / Tipo: ")
print("Entradas: ", cons, "KWh e tipo ", tipo)

if (cons > 0):
	if (tipo == "R"):
		if (cons <= 500):
			var = round(0.44*cons, 2)
		if (cons > 500):
			var = round(0.65*cons, 2)
		print("Valor total: R$", var)
	elif (tipo == "C"):
		if (cons <= 1000):
			var = round(0.55*cons, 2)
		if (cons > 1000):
			var = round(0.60*cons, 2)
		print("Valor total: R$", var)
	else:
		print("Dados invalidos")
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 KWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:39:38) 
-- CODE:
cons = float(input("Consumo de energia: "))
tipo = input("(R) para resisd. / (I) para indus. / (C) para comerc. / Tipo: ")
print("Entradas: ", cons, "KWh e tipo ", tipo)

if (cons > 0):
	if (tipo == "R"):
		if (cons <= 500):
			var = round(0.44*cons, 2)
		if (cons > 500):
			var = round(0.65*cons, 2)
		print("Valor total: R$", var)
	elif (tipo == "C"):
		if (cons <= 1000):
			var = round(0.55*cons, 2)
		if (cons > 1000):
			var = round(0.60*cons, 2)
		print("Valor total: R$", var)
	else:
		print("Dados invalidos")
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 KWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:40:09) 
-- CODE:
cons = float(input("Consumo de energia: "))
tipo = input("(R) para resisd. / (I) para indus. / (C) para comerc. / Tipo: ")
print("Entradas: ", cons, "KWh e tipo ", tipo)

if (cons > 0):
	if (tipo == "R"):
		if (cons <= 500):
			var = round(0.44*cons, 2)
		if (cons > 500):
			var = round(0.65*cons, 2)
		print("Valor total: R$", var)
	elif (tipo == "C"):
		if (cons <= 1000):
			var = round(0.55*cons, 2)
		if (cons > 1000):
			var = round(0.60*cons, 2)
		print("Valor total: R$", var)
	else:
		print("Dados invalidos")
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.21539
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 KWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 KWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 12:40:49) 
-- CODE:
cons = float(input("Consumo de energia: "))
tipo = input("(R) para resisd. / (I) para indus. / (C) para comerc. / Tipo: ")
print("Entradas: ", cons, "kWh e tipo ", tipo)

if (cons > 0):
	if (tipo == "R"):
		if (cons <= 500):
			var = round(0.44*cons, 2)
		if (cons > 500):
			var = round(0.65*cons, 2)
		print("Valor total: R$", var)
	elif (tipo == "C"):
		if (cons <= 1000):
			var = round(0.55*cons, 2)
		if (cons > 1000):
			var = round(0.60*cons, 2)
		print("Valor total: R$", var)
	else:
		print("Dados invalidos")
else:
	print("Dados invalidos")

-- OUTPUT:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 12:41:10) 
-- CODE:
cons = float(input("Consumo de energia: "))
tipo = input("(R) para resisd. / (I) para indus. / (C) para comerc. / Tipo: ")
print("Entradas: ", cons, "kWh e tipo ", tipo)

if (cons > 0):
	if (tipo == "R"):
		if (cons <= 500):
			var = round(0.44*cons, 2)
		if (cons > 500):
			var = round(0.65*cons, 2)
		print("Valor total: R$", var)
	elif (tipo == "C"):
		if (cons <= 1000):
			var = round(0.55*cons, 2)
		if (cons > 1000):
			var = round(0.60*cons, 2)
		print("Valor total: R$", var)
	else:
		print("Dados invalidos")
else:
	print("Dados invalidos")

-- EXECUTION TIME:
0.252908
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas:  -56.0 kWh e tipo  I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas:  955.5 kWh e tipo  R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
