== TEST (2019-04-19 00:53:21) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = Superiores
else:
	mensagem = Inferiores
	
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    mensagem = Inferiores
NameError: name 'Inferiores' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 00:54:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 00:55:27) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("50 ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 00:55:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("50 * 2= ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 00:57:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("50 * 2= ")) 
y = float(input("digite y: "))
r = 50*2
if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
print(r)
-- OUTPUT:
Inferiores
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 01:02:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("50 * 2= ")) 
y = float(input("digite y: "))
r = "100"
if(y > 0):
	mensagem = r
else:
	mensagem = "Inferiores"
	
print(mensagem)
print(r)
-- OUTPUT:
Inferiores
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 01:03:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("50 * 2= ")) 
y = float(input("digite y: "))
r = cem
if(y > 0):
	mensagem = r
else:
	mensagem = "Inferiores"
	
print(mensagem)
print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    r = cem
NameError: name 'cem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 01:03:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 01:03:54) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-19 01:04:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-19 01:04:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x: ")) 
y = float(input("digite y: "))

if(y > 0):
	mensagem = "Superiores"
else:
	mensagem = "Inferiores"
	
print(mensagem)
-- EXECUTION TIME:
0.187593
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
