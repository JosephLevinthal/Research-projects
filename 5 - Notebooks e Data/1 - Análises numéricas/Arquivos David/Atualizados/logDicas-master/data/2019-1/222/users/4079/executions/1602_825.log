== TEST (2019-03-27 18:19:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=input("valor de um raio:")
raio=int(input("raio:"))
volume=int(input("volume de uma esfera com raio r:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("valor de um raio:"))
raio=float(input("raio:"))
volume=int(input("volume de uma esfera com raio r:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("valor de um raio:"))
raio=float(input("raio:"))
volume=int(input("volume de uma esfera com raio r:"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:22:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("valor de um raio:"))
raio=float(input("raio:"))
volume=float(input("volume de uma esfera com raio r:"))
print(area, volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:23:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("valor de um raio:"))
raio=float(input("raio:"))
volume=float(input("volume de uma esfera com raio r:"))
print(raio, volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:23:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r=float(input("valor de um raio:"))
raio=float(input("raio:"))
volume=float(input("volume de uma esfera com raio r:"))
print(raio, volume)
-- EXECUTION TIME:
0.192519
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 5, in <module>
    raio=float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:42:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(volume,area)
-- OUTPUT:
214.7082229187774 63.61725123519331
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:42:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(volume,area)
-- EXECUTION TIME:
0.167825
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
214.7082229187774 63.61725123519331
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
4427.48007263045 478.3879062809779
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:42:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 214.7082229187774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:42:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.176795
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 214.7082229187774
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 4427.48007263045
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:42:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 214.7082229187774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:43:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(3/4)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.162843
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 214.7082229187774
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 4427.48007263045
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:44:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:44:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.138674
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:44:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.162334
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:45:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:45:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.132563
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:46:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.122311
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:46:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:46:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.124189
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:46:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:46:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.124177
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 02:47:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 02:47:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.169171
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:47:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:47:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.149072
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:48:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(volume,area)
-- OUTPUT:
381.7035074111598 63.61725123519331
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:48:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(volume,area)
-- EXECUTION TIME:
0.25396
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.7035074111598 63.61725123519331
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.075684676355 478.3879062809779
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:48:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(volume,area)
-- OUTPUT:
381.7035074111598 63.61725123519331
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:48:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(round(volume,area)
-- ERROR:
File "XXXX", line 9
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:48:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(round(volume,area))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(volume,area))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:49:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:49:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(round(4/3)*(pi*(raio**3)))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:49:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(round(4/3)*(pi*(raio**3)))
print(area,volume)
-- OUTPUT:
63.61725123519331 286.2776305583699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:50:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(round(4/3)*(pi*(raio**3)))
print(area,volume)
-- EXECUTION TIME:
0.160816
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 286.2776305583699
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 5903.306763507267
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:50:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:51:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(round(x,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(x,3))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:52:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(x,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(x,3))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:52:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:53:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:53:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
64.0 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:53:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.196969
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
64.0 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.0 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:53:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
64.0 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:53:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.124773
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
64.0 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.0 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:53:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
64.0 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 00:53:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.14288
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
64.0 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.0 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:54:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:56:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=int(input("digite o raio:"))
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:57:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area=float(round(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=float(round(pi*(raio**2.0)))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:57:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area=float(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=float(pi*(raio**2.0))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:58:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area=float(input(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=float(input(pi*(raio**2.0)))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:58:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area=float(input(pi*(raio**2.0)))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area=float(input(pi*(raio**2.0)))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:59:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area= (pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area= (pi*(raio**2.0))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 00:59:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=input("digite o raio:")
area= int(pi*(raio**2.0))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area= int(pi*(raio**2.0))
TypeError: unsupported operand type(s) for ** or pow(): 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:01:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:01:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.170266
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:01:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:02:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.153997
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:02:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
File "XXXX", line 5
    raio=float("digite o raio:"))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:02:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float("digite o raio:")
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=float("digite o raio:")
ValueError: could not convert string to float: 'digite o raio:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:02:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=int(input("digite o raio:")
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
File "XXXX", line 6
    area= float(pi*(raio**2))
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:02:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=int(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:02:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=int(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.166249
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 5, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:02:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=int(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:05:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=int(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:06:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- OUTPUT:
63.617
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:07:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- EXECUTION TIME:
0.133058
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:08:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(x,3(area,volume))
-- ERROR:
File "XXXX", line 9
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:08:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(x,3(area,volume)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(x,3(area,volume)))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:08:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(x,3(area,volume)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(x,3(area,volume)))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:08:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,3(area,volume)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(raio,3(area,volume)))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:08:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(raio,area,volume))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:09:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(raio,area,volume)
-- OUTPUT:
4.5 63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:09:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(raio,area,volume)
-- EXECUTION TIME:
0.130872
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5 63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34 478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:09:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area.volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(area.volume)
AttributeError: 'float' object has no attribute 'volume'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:09:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:10:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:10:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.161154
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:10:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(round(4/3)*(pi*(raio**3)))
print(area,volume)
-- OUTPUT:
63.61725123519331 286.2776305583699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:10:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(round(4/3)*(pi*(raio**3)))
print(area,volume)
-- EXECUTION TIME:
0.108578
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 286.2776305583699
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 5903.306763507267
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:10:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(round(4/3)*(pi*(raio**3)))
print(area,volume)
-- OUTPUT:
63.61725123519331 286.2776305583699
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:10:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:10:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 01:11:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio: "))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- EXECUTION TIME:
0.263798
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:11:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= float(pi*(raio**2))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:11:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= float(pi*(raio**2))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:11:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= float(input(pi*(raio**2)))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= float(input(pi*(raio**2)))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:12:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= input(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= input(pi*(raio**2))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:12:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= int(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= int(pi*(raio**2))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 01:12:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= float(pi*(raio**2))
NameError: name 'raio' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:16:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:16:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume)
-- EXECUTION TIME:
0.190557
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:16:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:17:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.161072
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:17:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- OUTPUT:
63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:17:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume)
-- EXECUTION TIME:
0.181357
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:17:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area.volume)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(area.volume)
AttributeError: 'float' object has no attribute 'volume'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:18:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(raio,area,volume)
-- OUTPUT:
4.5 63.61725123519331 381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:18:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(raio,area,volume)
-- EXECUTION TIME:
0.146567
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5 63.61725123519331 381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34 478.3879062809779 7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:34:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- OUTPUT:
63.617
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:34:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- EXECUTION TIME:
0.133583
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:34:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:34:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(x,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(x,3))
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:37:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- OUTPUT:
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:37:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- EXECUTION TIME:
0.155226
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:43:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- OUTPUT:
63.617
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:43:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- EXECUTION TIME:
0.123081
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:44:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(pi,3))
-- OUTPUT:
3.142
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:44:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(pi,3))
-- EXECUTION TIME:
0.197137
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
3.142
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
3.142
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:44:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,3))
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:44:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,3))
-- EXECUTION TIME:
0.171464
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:44:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,3))
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:44:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(raio,3))
-- EXECUTION TIME:
0.205507
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:45:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(round(raio,3))
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:45:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(round(pi,3))
-- OUTPUT:
3.142
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:45:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(round(pi,3))
-- EXECUTION TIME:
0.164293
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
3.142
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
3.142
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:46:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(are,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(are,volume))
NameError: name 'are' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:46:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:46:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume))
-- OUTPUT:
382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:46:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume))
-- EXECUTION TIME:
0.132954
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
382
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:47:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- OUTPUT:
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:47:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- EXECUTION TIME:
0.136502
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:47:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- OUTPUT:
63.617
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:47:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
-- EXECUTION TIME:
0.151135
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:47:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:47:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 22:48:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- OUTPUT:
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 22:48:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- EXECUTION TIME:
0.130222
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:07:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- OUTPUT:
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:07:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,3))
-- EXECUTION TIME:
0.164236
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.076
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:09:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,pi*3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(volume,pi*3))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:09:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(pi*3))
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:09:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(pi*3))
-- EXECUTION TIME:
0.131297
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
9
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
9
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:09:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,2))
-- OUTPUT:
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:09:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(volume,2))
-- EXECUTION TIME:
0.189788
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:12:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=input((4/3)*(pi*(raio**3)))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume=input((4/3)*(pi*(raio**3)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:12:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=input((4/3)*(pi*(raio**3)))
print(round(volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    volume=input((4/3)*(pi*(raio**3)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:13:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=int((4/3)*(pi*(raio**3)))
print(round(volume,3))
-- OUTPUT:
381
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:13:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=int((4/3)*(pi*(raio**3)))
print(round(volume,3))
-- EXECUTION TIME:
0.172974
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
381
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
7871
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:13:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float(input((4/3)*(pi*(raio**3)))
print(round(volume,3))
-- ERROR:
File "XXXX", line 8
    print(round(volume,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:14:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float(input((4/3)*(pi*(raio**3)))
print(volume,3))
-- ERROR:
File "XXXX", line 8
    print(volume,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:14:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float(input((4/3)*(pi*(raio**3)))
print(area,volume,3))
-- ERROR:
File "XXXX", line 8
    print(area,volume,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:14:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume,3))
-- ERROR:
File "XXXX", line 8
    print(area,volume,3))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:14:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume,3)
-- OUTPUT:
63.61725123519331 381.7035074111598 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:14:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=float((4/3)*(pi*(raio**3)))
print(area,volume,3)
-- EXECUTION TIME:
0.126741
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598 3
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:14:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=((4/3)*(pi*(raio**3)))
print(area,volume,3)
-- OUTPUT:
63.61725123519331 381.7035074111598 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:14:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=((4/3)*(pi*(raio**3)))
print(area,volume,3)
-- EXECUTION TIME:
0.143444
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598 3
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:15:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume,3)
-- OUTPUT:
63.61725123519331 381.7035074111598 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:15:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(area,volume,3)
-- EXECUTION TIME:
0.199428
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331 381.7035074111598 3
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779 7871.075684676355 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:15:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:15:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3)
-- ERROR:
File "XXXX", line 9
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:15:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:16:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area.volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area.volume,3))
AttributeError: 'float' object has no attribute 'volume'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:16:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume.3))
-- ERROR:
File "XXXX", line 8
    print(round(area,volume.3))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:16:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume)3
-- ERROR:
File "XXXX", line 8
    print(round(area,volume)3
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:16:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume)3)
-- ERROR:
File "XXXX", line 8
    print(round(area,volume)3)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:16:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume),3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume),3)
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:17:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume):3)
-- ERROR:
File "XXXX", line 8
    print(round(area,volume):3)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:17:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume)(3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume)(3))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:17:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume)(3)
-- ERROR:
File "XXXX", line 9
    
                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:17:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,volume))(3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(area,volume))(3)
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 23:18:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
print(round(volume,3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 23:18:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
raio=float(input("digite o raio:"))
area= float(pi*(raio**2))
volume=(4/3)*(pi*(raio**3))
print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.133331
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
