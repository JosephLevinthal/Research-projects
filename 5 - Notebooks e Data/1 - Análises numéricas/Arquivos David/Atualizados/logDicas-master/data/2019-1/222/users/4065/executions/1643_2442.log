== TEST (2019-04-08 19:10:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))
par = 2* num

if(par):
	print("par")
else:
	print(impar)

-- OUTPUT:
par
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))
par =

if(num % 2 = 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 6
    par =
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))


if(num % 2 = 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 8
    if(num % 2 = 0):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))
x = 2

if(num % x= 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 8
    if(num % x= 0):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:14:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))
x = 2

if(num % x = 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 8
    if(num % x = 0):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:15:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num // x = 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 7
    if(num // x = 0):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:15:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))
x = 2
if(num // x = 0):
	print("par")
else:
	print(impar)

-- ERROR:
File "XXXX", line 7
    if(num // x = 0):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:16:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num % 2 == 0):
	print("par")
else:
	print(impar.lower())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(impar.lower())
NameError: name 'impar' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:17:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num % 2 == 0):
	print("par")
else:
	print(impar)
print(num.lower)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(impar)
NameError: name 'impar' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:18:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num % 2 == 0):
	mensagem = par
else:
	mensagem = impar
print(mensagem.lower())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    mensagem = impar
NameError: name 'impar' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:19:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num % 2 == 0):
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem.lower())

-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 19:19:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = int(input("numero inteiro: "))

if(num % 2 == 0):
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem.lower())

-- EXECUTION TIME:
0.172448
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
