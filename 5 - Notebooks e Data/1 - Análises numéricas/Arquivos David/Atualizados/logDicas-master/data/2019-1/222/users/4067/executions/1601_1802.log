== SUBMITION (2019-03-27 18:24:34) 
-- CODE:
from math import
devil = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int(abs((5**2/1)*(d1+pi**d2/3)))

-- EXECUTION TIME:
0.214824
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 1
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:24:46) 
-- CODE:
from math import
devil = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int(abs((5**2/1)*(d1+pi**d2/3)))

-- EXECUTION TIME:
0.156315
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 1
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:24:52) 
-- CODE:
from math import
devil = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int(abs((5**2/1)*(d1+pi**d2/3)))

-- EXECUTION TIME:
0.174757
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 1
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:26:01) 
-- CODE:
from math import
h = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int((5**2/1)*(d1+pi**d2/3))

-- EXECUTION TIME:
0.284006
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 1
    from math import
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:26:01) 
-- CODE:
from math import
h = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int((5**2/1)*(d1+pi**d2/3))

-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:26:11) 
-- CODE:
math import
h = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int((5**2/1)*(d1+pi**d2/3))

-- ERROR:
File "XXXX", line 1
    math import
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:26:20) 
-- CODE:
 math import
h = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int((5**2/1)*(d1+pi**d2/3))

-- EXECUTION TIME:
0.124624
-- ERROR:
  File "/home/codebench/codes/1601/1802/main.py", line 1
    math import
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:26:30) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = 20/1
d2 =20/1
d = int((5**2/1)*(d1+pi**d2/3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    d = int((5**2/1)*(d1+pi**d2/3))
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:33:14) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano = int((5**0.5)+pi**d2/3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano = int((5**0.5)+pi**d2/3)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:34:42) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =((5**0.5)+pi**d2/3)
print("o dano recebido é {}".format(dano))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =((5**0.5)+pi**d2/3)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:34:42) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =((5**0.5)+pi**d2/3)
print("o dano recebido é {}".format(dano))

-- EXECUTION TIME:
0.143964
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =((5**0.5)+pi**d2/3)
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:35:01) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =((5**0.5)+pi**d2/3)
print("o dano recebido é {}".format(dano))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =((5**0.5)+pi**d2/3)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:35:34) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =(5**0.5)+pi**d2/3
print("o dano recebido é {}".format(dano))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =(5**0.5)+pi**d2/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:35:37) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =(5**0.5)+pi**d2/3
print("o dano recebido é {}".format(dano))

-- EXECUTION TIME:
0.198696
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =(5**0.5)+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:35:38) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =(5**0.5)+pi**d2/3
print("o dano recebido é {}".format(dano))

-- EXECUTION TIME:
0.133041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =(5**0.5)+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:35:38) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =(5**0.5)+pi**d2/3
print("o dano recebido é {}".format(dano))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =(5**0.5)+pi**d2/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:39:32) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =(5**0.5)+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =(5**0.5)+pi**d2/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:39:54) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:56) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.183356
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:57) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.200871
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:58) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.13077
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:58) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.189234
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:58) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.180507
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:59) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.292339
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:39:59) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.285859
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:40:06) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- EXECUTION TIME:
0.104809
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1802/main.py", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:40:06) 
-- CODE:
import math
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada")) 
d2 = int(input("valor da jogada"))
dano =5**0.5+pi**d2/3
total = dano-h
print("o dano recebido é {}".format(total))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    dano =5**0.5+pi**d2/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-17 18:44:06) 
-- CODE:
from math import*
h = int(input("pontos de vida: "))
d1 = int(input("valor da jogada: ")) 
d2 = int(input("valor da jogada: "))
dano = (5**(1/2)*d1)+(pi**d2/3)
total = dano-h
print(total)


-- OUTPUT:
122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:11:22) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**(1/2)*d1)+(pi**(d2/3))
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:11:40) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**(1/2)*d1)+(pi**(d2/3))
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:14:10) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**0.5*d1)+(pi**(d2/3))
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:15:44) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1)+(pi**(d2/3))
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:16:13) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1)+(pi**(d2/3)))
print(dano)
-- OUTPUT:
3.8561126022315997
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:17:11) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(dano)
-- OUTPUT:
8.519253284679376
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:18:14) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(dano)
-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:18:16) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(dano)
-- EXECUTION TIME:
0.190891
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
322.6991325026012
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
325.94029010015305
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3.283265528696387
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:18:17) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(dano)
-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:19:06) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(pontos - dano)
-- OUTPUT:
-122.69913250260117
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:20:07) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print( int(pontos - dano))
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:21:53) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = 5**0.5 + pi**d2/3
print(int(pontos - dano))
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:22:13) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = 5**0.5*d1 + pi**d2/3
print(int(pontos - dano))
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:22:41) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**0.5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:23:00) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**0.5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:23:51) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = aqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    dano = aqrt(5*d1) + (pi*d2/3)
NameError: name 'aqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:24:22) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = aqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    dano = aqrt(5*d1) + (pi*d2/3)
NameError: name 'aqrt' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:24:40) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = int(input("valor 1: "))
#lançamento do segundo dado
d2 = int(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:27:11) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:23) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.138409
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:24) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.137503
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:24) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.117404
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:24) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.283252
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1601/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:25) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.185825
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
496
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:25) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.153701
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
496
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:27:25) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.313873
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
496
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:28:57) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- OUTPUT:
-122
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:04) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.275913
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:05) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.157915
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:05) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.228531
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-122
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:05) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.346049
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-25
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:05) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.306758
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-25
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-25
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:05) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**d2/3)
print(int(pontos - dano))
-- EXECUTION TIME:
0.548612
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-25
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
496
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:29:20) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- OUTPUT:
187
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.13001
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.208159
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.221935
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
187
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.14898
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
284
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
187
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
284
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:29:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi**(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.326262
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
496
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:32:25) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi**(d2/3)))
print(int(pontos - dano))
-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:32:27) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi**(d2/3)))
print(int(pontos - dano))
-- EXECUTION TIME:
0.141143
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
196
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
293
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:32:27) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi**(d2/3)))
print(int(pontos - dano))
-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:32:45) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:32:54) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:33:00) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- OUTPUT:
196
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:00) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- EXECUTION TIME:
0.124093
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
196
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
293
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:01) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- EXECUTION TIME:
0.122391
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
196
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
293
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:01) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- EXECUTION TIME:
0.164935
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
497
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
196
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
293
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:01) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt((5*d1) + (pi*(d2/3)))
print(int(pontos - dano))
-- EXECUTION TIME:
0.161667
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1601/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:33:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:39) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.293148
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:41) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.135288
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:33:42) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:42) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.177985
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:42) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.34325
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:42) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.285041
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:43) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.506094
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:43) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.604263
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:43) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.619361
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:54) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.175088
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:55) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.178378
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:33:55) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:56) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.242834
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:33:56) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:56) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.167347
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
497
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:33:56) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.154543
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
pontos de vida iniciais: valor 1: valor 2: 191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
pontos de vida iniciais: valor 1: valor 2: 288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
pontos de vida iniciais: valor 1: valor 2: 497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:30) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.218556
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.218358
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.2285
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.343561
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.394938
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.636549
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.779934
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.888884
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
1.04426
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:32) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.727236
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:33) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.56917
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.565005
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.548273
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.513664
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.399155
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:34) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.374135
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.234442
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.235219
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1601/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.373873
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.470724
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.657769
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:35) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.759462
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
288
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
497
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:36) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.29925
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1601/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:36) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.121294
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1601/1802/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:34:38) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:47) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.142957
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:34:48) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.111636
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:34:54) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2/3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:35:02) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.139958
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:35:02) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2/3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.199171
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:35:17) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(pontos - dano)
-- OUTPUT:
191.48074671532063
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:35:36) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:35:44) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.215997
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:35:45) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.0983331
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
191
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
288
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:35:45) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = sqrt(5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.158923
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
288
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 19:36:06) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**0.5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- EXECUTION TIME:
0.128341
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
191
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
280
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 19:36:07) 
-- CODE:
from math import*
#primeira entrada é os pontos de vida do boss
pontos = float(input("pontos de vida iniciais: "))
#lançamento do primeiro dado
d1 = float(input("valor 1: "))
#lançamento do segundo dado
d2 = float(input("valor 2: "))
#como resultado devo determinar os pontos de vida RESTANTES do boss
#o dano causado é dado por:
dano = (5**0.5*d1) + (pi*(d2//3))
print(int(pontos - dano))
-- OUTPUT:
191
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
