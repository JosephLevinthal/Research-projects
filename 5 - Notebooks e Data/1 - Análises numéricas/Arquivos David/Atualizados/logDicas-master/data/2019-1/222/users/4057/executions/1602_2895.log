== TEST (2019-03-20 18:17:03) 
-- CODE:
q = int(input("Quantos jogos foram emcomendados? "))
var = float(input("Qual o valor unitario do jogo? "))
f = int(input("Qual o valor do frete? "))
total = (q*var)+f
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    f = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:17:19) 
-- CODE:
q = int(input("Quantos jogos foram emcomendados? "))
var = float(input("Qual o valor unitario do jogo? "))
f = int(input("Qual o valor do frete? "))
total = (q*var)+f
print(total)
-- EXECUTION TIME:
0.158636
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/2895/main.py", line 3, in <module>
    f = int(input())
ValueError: invalid literal for int() with base 10: '78.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:18:32) 
-- CODE:
var = int(input("Quantos jogos foram emcomendados? "))
var1 = float(input("Qual o valor unitario do jogo? "))
var2 = int(input("Qual o valor do frete? "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var2 = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:20:30) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
var1 = float(input("O valor unitário de cada jogo "))
var2 = int(input("O valor do frete. "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var2 = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:20:38) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
var1 = float(input("O valor unitário de cada jogo "))
var2 = int(input("O valor do frete. "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var2 = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:21:08) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
var = float(input("O valor unitário de cada jogo "))
var = int(input("O valor do frete. "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:21:14) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
var = float(input("O valor unitário de cada jogo "))
var = int(input("O valor do frete. "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:21:14) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
var = float(input("O valor unitário de cada jogo "))
var = int(input("O valor do frete. "))
total = (var1*var)+var2
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    var = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:22:11) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados "))
v = float(input("O valor unitário de cada jogo "))
vl = int(input("O valor do frete. "))
total = (var*v)+vl
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    vl = int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:23:10) 
-- CODE:
var= int(input("A quantidade de jogos a serem encomendados "))
v= float(input("O valor unitário de cada jogo "))
vl= int(input("O valor do frete. "))
total= (var*v)+vl
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    vl= int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:23:24) 
-- CODE:
var= int(input("A quantidade de jogos a serem encomendados: "))
v= float(input("O valor unitário de cada jogo: "))
vl= int(input("O valor do frete: "))
total= (var*v)+vl
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    vl= int(input())
ValueError: invalid literal for int() with base 10: '78.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:33:02) 
-- CODE:
var = int(input("A quantidade de jogos a serem encomendados: "))
valor = float(input("O valor unitário de cada jogo: "))
frete = float(input("O valor do frete: "))
total = var*valor + frete
print(total)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:33:55) 
-- CODE:
var = (int(input("A quantidade de jogos a serem encomendados: ")))
valor = (float(input("O valor unitário de cada jogo: ")))
frete = (float(input("O valor do frete: ")))
total = (var*valor) + frete
print(total)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:34:56) 
-- CODE:
var = (int(input("A quantidade de jogos a serem encomendados: ")))
valor = (float(input("O valor unitário de cada jogo: ")))
frete = (float(input("O valor do frete: ")))
total = (var*valor) + frete
print(total)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:35:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = 45 + (var*8)

# Impressao do valor total:
print(total)
-- OUTPUT:
141.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:37:46) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.
quantidade = int(input("A quantidade de jogos a serem encomendados? "))
# Leitura das entradas e conversao para float:
var = float(input("O valor unitário de cada jogo? "))
frete = float(input("O valor do frete? "))
# Calculo do valor a ser pago, incluindo o frete:
total = frete + (var*quantidade)

# Impressao do valor total:
print(total)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:38:00) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.
quantidade = int(input("A quantidade de jogos a serem encomendados? "))
# Leitura das entradas e conversao para float:
var = float(input("O valor unitario de cada jogo? "))
frete = float(input("O valor do frete? "))
# Calculo do valor a ser pago, incluindo o frete:
total = frete + (var*quantidade)

# Impressao do valor total:
print(total)
-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 18:38:19) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.
quantidade = int(input("A quantidade de jogos a serem encomendados? "))
# Leitura das entradas e conversao para float:
var = float(input("O valor unitario de cada jogo? "))
frete = float(input("O valor do frete? "))
# Calculo do valor a ser pago, incluindo o frete:
total = frete + (var*quantidade)

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.198092
-- TEST CASE 1:
---- input:
12
45.0
78.0
---- correct output:
618.0
---- user output:
618.0
-- TEST CASE 2:
---- input:
10
67.0
95.0
---- correct output:
765.0
---- user output:
765.0
-- TEST CASE 3:
---- input:
246
975.0
321.0
---- correct output:
240171.0
---- user output:
240171.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
