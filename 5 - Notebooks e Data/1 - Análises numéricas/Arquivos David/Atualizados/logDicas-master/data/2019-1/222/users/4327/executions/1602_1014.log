== TEST (2019-04-01 15:32:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
y=(x/100)*30
print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:33:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
y=(x/100)*30
print(round(y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:33:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
y=(x/100)*30
print(round(y,2))
-- EXECUTION TIME:
0.236083
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:34:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:34:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:34:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30,2))
-- EXECUTION TIME:
0.239624
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:34:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round((x/100)*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round(x/100*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:35:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round(x/100*30, 2))
-- EXECUTION TIME:
0.133157
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:35:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:" ))
print(round(x/100*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:37:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("valor da venda:"))
print(round(x/100*30, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 15:38:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor da venda:"))

print(round(x/100*30, 2))
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 15:38:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input("valor da venda:"))

print(round(x/100*30, 2))
-- EXECUTION TIME:
0.25053
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
