== TEST (2019-04-14 21:39:24) 
-- CODE:
x= float(input("Digite o perco: "))
y= float(input("Digite o pagamento: "))
if (x > y):
	a= (x-y)
	print("Falta {}".format(round(a, 2))
else:
	a=
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:40:08) 
-- CODE:
x= float(input("Digite o perco: "))
y= float(input("Digite o pagamento: "))
if (x > y):
	a= (x-y)
	print("Falta {}".format(round(a, 2))
else:
	a= (y-x)
	print("Troco de {}".format(round(a, 2)))
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:24) 
-- CODE:
pc= float(input("Digite o perco: "))
pg= float(input("Digite o pagamento: "))
if (pc > pg):
	a= (pc-pg)
	print(round("Falta "+a))
else:
	a= (pg-pc)
	print(round("Troco de "+a))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("Falta "+a))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:35) 
-- CODE:
pc= float(input("Digite o perco: "))
pg= float(input("Digite o pagamento: "))
if (pc > pg):
	a= (pc-pg)
	print(round("Falta "+a, 2))
else:
	a= (pg-pc)
	print(round("Troco de "+a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("Falta "+a, 2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:46:04) 
-- CODE:
pc= float(input("Digite o perco: "))
pg= float(input("Digite o pagamento: "))
if (pc > pg):
	a= (pc-pg)
	print("Falta {}".format(round(a, 2)))
else:
	a= (pg-pc)
	print("Troco de {}".format(round(a, 2)))
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:46:28) 
-- CODE:
pc= float(input("Digite o perco: "))
pg= float(input("Digite o pagamento: "))
if (pc > pg):
	a= (pc-pg)
	print("Falta {}".format(round(a, 2)))
else:
	a= (pg-pc)
	print("Troco de {}".format(round(a, 2)))
-- EXECUTION TIME:
0.176114
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
