== TEST (2019-03-20 19:12:40) 
-- CODE:
acai=15
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:14:18) 
-- CODE:
acai=15
print(2/3*15, 3)


-- OUTPUT:
10.0 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:14:27) 
-- CODE:
acai=15
print(2/3*15, 4)


-- OUTPUT:
10.0 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:15:24) 
-- CODE:
acai=15
print(round(2/3*15, 4))


-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:15:34) 
-- CODE:
acai=15
print(round(2/3*15, 3))


-- EXECUTION TIME:
0.168802
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
10.0
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
10.0
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:16:18) 
-- CODE:
acai=15
print(round(2/3*15, 3))


-- OUTPUT:
10.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:21:27) 
-- CODE:
acai=6
print(round(1/3*6, 3))


-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:22:02) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 3))


-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 17:22:10) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 8))


-- EXECUTION TIME:
0.1995
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.0
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
2.0
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
2.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:22:12) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 8))


-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:22:31) 
-- CODE:
acai=6.0
print(round(1/3*6.0), 8)


-- OUTPUT:
2 8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:22:46) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 8)


-- ERROR:
File "XXXX", line 4
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:22:54) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 8)
-- ERROR:
File "XXXX", line 3
    
                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:23:06) 
-- CODE:
acai=6.0
print(round(1/3*acai, 8)
-- ERROR:
File "XXXX", line 3
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 17:24:11) 
-- CODE:
acai=6.0
print(round(1/3*6.0, 3)
tota= print(round(1/3*6.0, 3))		
-- ERROR:
File "XXXX", line 3
    tota= print(round(1/3*6.0, 3))		
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:24) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(round(total, 3))
-- OUTPUT:
6.04.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:51) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(round(total, 3))
-- OUTPUT:
6.04.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:52) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(round(total, 3))
-- OUTPUT:
6.04.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:52) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(round(total, 3))
-- OUTPUT:
6.04.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:49) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:50) 
-- CODE:
acai = int(input(6.0))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
6.04.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:34) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float("quantidade a ser dividida ? ")
total = acai*var1
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    var1 = float("quantidade a ser dividida ? ")
ValueError: could not convert string to float: 'quantidade a ser dividida ? '
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:18:11) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
4.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:18:52) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float("dividido por")
total = acai*var1
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    var1 = float("dividido por")
ValueError: could not convert string to float: 'dividido por'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:15) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
4.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:19:16) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = acai*var1
print(total)
-- EXECUTION TIME:
0.217537
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
4.666666666666666
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:17) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = acai*var1
print(total)
-- OUTPUT:
4.666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:03) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = (round(acai*var1))
print(total)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:20:15) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = (round(acai*var1))
print(total)
-- EXECUTION TIME:
0.169106
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
5
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:20) 
-- CODE:
acai = int(input("quantidade de acai ? "))
var1 = float(2/3)
total = (round(acai*var1))
print(total)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:23:22) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai*2/3
print(round(var1, 3))
-- OUTPUT:
4.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:23:32) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai*2/3
print(round(var1, 3))
-- EXECUTION TIME:
0.135433
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
4.667
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
13.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
10.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:23:44) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai*2/3
print(round(var1, 3))
-- OUTPUT:
4.667
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:25:05) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai/3
print(round(var1, 3))
-- EXECUTION TIME:
0.135427
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:25:05) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai/3
print(round(var1, 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:25:07) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai/3
print(round(var1, 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:25:25) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai/3
print(round(var1, 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:25:38) 
-- CODE:
acai = float(input("quantidade de acai ? "))
var1 = acai/3
print(round(var1, 3))
-- EXECUTION TIME:
0.171439
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
