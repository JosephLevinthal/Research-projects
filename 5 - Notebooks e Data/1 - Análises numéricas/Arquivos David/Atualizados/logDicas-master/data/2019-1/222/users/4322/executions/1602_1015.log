== TEST (2019-03-25 18:16:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero"))
b = int(input("segundo numero"))
c = int(input("terceiro numero"))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c) - max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c) - max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:17:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero"))
b = int(input("segundo numero"))
c = int(input("terceiro numero"))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c) - max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c) - max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c) - max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c) - max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c) - max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c) - max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c) - max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c) - max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:11:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))
print(a+b+c-max(a,b,c)-min(a,b,c)
print(max(a,b,c))
-- EXECUTION TIME:
0.160217
-- ERROR:
  File "/home/codebench/codes/1602/1015/main.py", line 9
    print(max(a,b,c))
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:11:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))
print(a+b+c-max(a,b,c)-min(a,b,c)
print(max(a,b,c))
-- ERROR:
File "XXXX", line 9
    print(max(a,b,c))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:15:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
d = min(a,b,c)
e = max(a,b,c)
f = (a+b+c) - (d + e)
print(d)
print(f)
print(e)
-- EXECUTION TIME:
0.218772
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:22:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
d = min(a,b,c)
e = max(a,b,c)
f = (a+b+c) - (d + e)
print(d)
print(f)
print(e)
-- EXECUTION TIME:
0.146499
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:29:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
d = min(a,b,c)
e = max(a,b,c)
f = (a+b+c) - (d + e)
print(d)
print(f)
print(e)
-- EXECUTION TIME:
0.17992
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
