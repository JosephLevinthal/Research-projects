== TEST (2019-03-26 13:05:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    quantidade = print(round(doar,3))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:06:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z)
print(minimo)

-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:07:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z)
print(minimo)

-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:08:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
maximo = max(x, y, z)
print(minimo)

-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:09:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
maximo = max(x, y, z)
print(minimo,maximo)

-- OUTPUT:
-2 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:13:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
maximo = max(x, y, z)
intermediario = 
print(minimo,maximo)

-- ERROR:
File "XXXX", line 10
    intermediario = 
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:14:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
maximo = max(x, y, z)
 
print(minimo,maximo)

-- OUTPUT:
-2 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:16:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
maximo = max(x, y, z)
intermediario = x+y+z-y-x
print(minimo, intermediario, maximo)

-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:17:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x = int(input("primeiro numero: "))
y = int(input("segundo numero: "))
z = int(input("terceiro numero: "))

minimo = min(x, y, z) 
intermediario = x+y+z-y-x
maximo = max(x, y, z)

print(minimo, intermediario, maximo)

-- EXECUTION TIME:
0.123159
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:28:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:28:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.139188
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 13:29:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:29:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.17733
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 13:29:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.128605
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:23:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens d
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,maximo,intermediario)
-- OUTPUT:
-2 10 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:24:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens d
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,maximo,intermediario)
-- EXECUTION TIME:
0.145776
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 10 0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:25:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens d
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:25:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens d
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:26:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens d
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
maximo =max(x, y, z)
intermediario =(x+y+z-y-x)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.204226
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:34:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:35:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.120582
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:36:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:36:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.161992
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 14:51:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 14:52:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com a
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.17166
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 15:57:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identific
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 15:57:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identific
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.125383
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:47:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    intermediario(x+y+z-y-x)
NameError: name 'intermediario' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 17:47:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.143532
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 7, in <module>
    intermediario(x+y+z-y-x)
NameError: name 'intermediario' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 17:48:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 17:48:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))
minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.124885
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 18:14:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+Y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    intermediario=(x+Y+z-y-x)
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 18:15:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario(x+Y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    intermediario(x+Y+z-y-x)
NameError: name 'intermediario' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 18:16:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 18:16:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario=(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.236862
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 19:05:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+Y+Z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    intermediario =(x+Y+Z-y-x)
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 19:05:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+Y+Z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    intermediario =(x+Y+Z-y-x)
NameError: name 'Y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 19:06:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 19:06:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.149571
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:21:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:21:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:21:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.140349
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:13:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 09:14:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 09:14:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identifi
x =int(input("primeiro numero: "))
y =int(input("segundo numero: "))
z =int(input("terceiro numero: "))

minimo =min(x, y, z)
intermediario =(x+y+z-y-x)
maximo =max(x, y, z)
print(minimo,intermediario,maximo)
-- EXECUTION TIME:
0.145536
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
