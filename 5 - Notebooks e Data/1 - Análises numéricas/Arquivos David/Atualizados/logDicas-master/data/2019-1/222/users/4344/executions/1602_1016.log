== TEST (2019-03-22 15:54:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero"))
# segundo lado do triangulo
b = float(input("digite um numero"))
# terceiro lado do triangulo
c = float(input("digite um numero"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a) * (a-b) * (a-c))
print(round(area, 5))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 15:54:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero"))
# segundo lado do triangulo
b = float(input("digite um numero"))
# terceiro lado do triangulo
c = float(input("digite um numero"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a) * (a-b) * (a-c))
print(round(area, 5))
-- EXECUTION TIME:
0.144881
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
0.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
0.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 15:55:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero"))
# segundo lado do triangulo
b = float(input("digite um numero"))
# terceiro lado do triangulo
c = float(input("digite um numero"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 15:55:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero"))
# segundo lado do triangulo
b = float(input("digite um numero"))
# terceiro lado do triangulo
c = float(input("digite um numero"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- EXECUTION TIME:
0.202919
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
0.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
0.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 15:56:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 15:56:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 15:57:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- OUTPUT:
0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 15:58:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(a*(a-a)*(a-b)*(a-c))
print(round(area, 5))
-- EXECUTION TIME:
0.229542
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
0.0
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
0.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:07:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = sqrt(s*(s-a)*(s-b)*(s-c))
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:09:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(s* (s-a) * (s-b) * (s-c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = sqrt(s* (s-a) * (s-b) * (s-c))
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:10:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(area, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    area = sqrt(s*(s-a)*(s-b)*(s-c))
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 16:13:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(u*(u-a)*(u-b)*(u-c))
print(round(area, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 16:13:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# primeiro lado do triangulo
a = float(input("digite um numero:"))
# segundo lado do triangulo
b = float(input("digite um numero:"))
# terceiro lado do triangulo
c = float(input("digite um numero:"))
u = (a+b+c)/2
from math import *
area = sqrt(u*(u-a)*(u-b)*(u-c))
print(round(area, 5))
-- EXECUTION TIME:
0.170713
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
