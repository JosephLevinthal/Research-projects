== TEST (2019-04-13 23:51:23) 
-- CODE:
valor=float(input("valor disponivel: "))
quantidade=float(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=float(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=quantidade*v_tickets
total=
if(valor>)

-- ERROR:
File "XXXX", line 7
    total=
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 23:51:53) 
-- CODE:
valor=float(input("valor disponivel: "))
quantidade=float(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=float(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=quantidade*v_tickets


-- ERROR:
File "XXXX", line 7
    total=
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 23:59:01) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men=suficiente
else:
	men=insuficiente
print(men.upper())	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    men=suficiente
NameError: name 'suficiente' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:00:45) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men=suficiente
else:
	men=insuficiente
print(men)	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    men=suficiente
NameError: name 'suficiente' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:01:42) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men)	
	


-- OUTPUT:
suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:02:11) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men.upeer())	
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    print(men.upeer())	
AttributeError: 'str' object has no attribute 'upeer'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:02:52) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men.upper())	
	


-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:03:31) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men.upper())	
	


-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 00:03:58) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men.upper())	
	


-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 00:04:19) 
-- CODE:
valor=float(input("valor disponivel: "))
q_tickets=int(input("quantidade de tickets: "))
v_tickets=float(input("valor dos tickets: "))
q_passes=int(input("passes de onibus: "))
v_passes=float(input("valor dos passes: "))
totaltickets=q_tickets*v_tickets
totalpasses=q_passes*v_passes
total=totaltickets+totalpasses
if(valor>=total):
	men="suficiente"
else:
	men="insuficiente"
print(men.upper())	
	


-- EXECUTION TIME:
0.137412
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
