== SUBMITION (2019-04-15 17:01:19) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if(b.upper()=='S')
	a=n*(10/100)
	print(n+a)
else:
	print(n)
-- EXECUTION TIME:
0.198761
-- ERROR:
  File "/home/codebench/codes/1643/2704/main.py", line 3
    if(b.upper()=='S')
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:01:43) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if(b.upper() == 'S')
	a= n*(10/100)
	print(n+a)
else:
	print(n)
-- EXECUTION TIME:
0.175668
-- ERROR:
  File "/home/codebench/codes/1643/2704/main.py", line 3
    if(b.upper() == 'S')
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:01:44) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if(b.upper() == 'S')
	a= n*(10/100)
	print(n+a)
else:
	print(n)
-- ERROR:
File "XXXX", line 3
    if(b.upper() == 'S')
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:02:12) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if (b.upper() == 'S')
	a= n* (10/100)
	print(n+a)
else:
	print(n)
-- EXECUTION TIME:
0.190176
-- ERROR:
  File "/home/codebench/codes/1643/2704/main.py", line 3
    if (b.upper() == 'S')
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:02:19) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if (b.upper() == 'S'):
	a= n* (10/100)
	print(n+a)
else:
	print(n)
-- EXECUTION TIME:
0.203926
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
