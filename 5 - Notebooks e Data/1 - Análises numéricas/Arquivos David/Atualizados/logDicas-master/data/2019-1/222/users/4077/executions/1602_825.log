== TEST (2019-03-24 19:35:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))

-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:36:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 19:36:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(volume)
-- EXECUTION TIME:
0.295933
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:37:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 19:37:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(volume)
-- EXECUTION TIME:
0.137183
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:32:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(round (volume))
-- OUTPUT:
63.61725123519331
382
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:32:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print(area)
print(round (volume))
-- EXECUTION TIME:
0.284971
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
382
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:48:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:48:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.133837
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:49:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 2
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:49:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 2
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:49:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 2
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.239372
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:49:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:49:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio= float(input("Raio: "))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.16785
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:49:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio= float(input("Raio:"))
area= pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.163767
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 8, in <module>
    print("area: {.2f}".format(area))
AttributeError: 'float' object has no attribute '2f'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:51:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("Raio:"))
area = pi * raio ** 2
volume= 4/3 * pi * raio ** 3
print("area: {:.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.19073
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area: 63.62
volume:381.70
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area: 478.39
volume:7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:08:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:08:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- EXECUTION TIME:
0.140172
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:08:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- EXECUTION TIME:
0.188329
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:08:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:12:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("6: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:12:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("6: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- EXECUTION TIME:
0.126342
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.61725123519331
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.3879062809779
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:14:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area)
print(round(volume)
-- ERROR:
File "XXXX", line 9
    print(round(volume)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:14:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round("area"))
print(round("volume"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round("area"))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:15:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round("area"))
print(round("volume"))
-- EXECUTION TIME:
0.197875
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/825/main.py", line 8, in <module>
    print(round("area"))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:15:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round("area"))
print(round("volume"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round("area"))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:15:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area")
print("volume")
-- OUTPUT:
area
volume
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:16:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area")
print("volume")
-- EXECUTION TIME:
0.181271
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area
volume
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area
volume
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:16:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area")
print("volume")
-- OUTPUT:
area
volume
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:18:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area: ")
print("volume: ")
-- OUTPUT:
area: 
volume:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:18:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area: ")
print("volume: ")
-- EXECUTION TIME:
0.15699
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area: 
volume:
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area: 
volume:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:20:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:21:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("Raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(area)
print(volume)
-- OUTPUT:
63.61725123519331
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 01:10:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,2))
print("volume" ,round(raio,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = pi * raio ** 2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 01:11:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,2))
print("volume" ,round(raio,5))
-- OUTPUT:
area 4.5
volume 4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 01:11:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,2))
print("volume" ,round(raio,5))
-- EXECUTION TIME:
0.167382
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area 4.5
volume 4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area 12.34
volume 12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 01:11:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,2))
print("volume" ,round(raio,5))
-- OUTPUT:
area 4.5
volume 4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 01:11:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,3))
print("volume" ,round(raio,2))
-- OUTPUT:
area 4.5
volume 4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 01:11:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area" ,round(raio,3))
print("volume" ,round(raio,2))
-- EXECUTION TIME:
0.155555
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area 4.5
volume 4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area 12.34
volume 12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:02:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(raio,2))
-- OUTPUT:
4.5
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:02:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(raio,2))
-- EXECUTION TIME:
0.114388
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5
4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34
12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:02:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(raio,3))
-- OUTPUT:
4.5
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:02:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(raio,3))
-- EXECUTION TIME:
0.191421
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5
4.5
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34
12.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:19:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(volume)
-- OUTPUT:
4.5
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:19:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(volume)
-- EXECUTION TIME:
0.151177
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
4.5
381.7035074111598
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
12.34
7871.075684676355
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:19:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(volume)
-- OUTPUT:
4.5
381.7035074111598
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:20:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(raio,2))
-- OUTPUT:
4.5
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:20:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(raio,3))
print(round(volume,2))
-- OUTPUT:
4.5
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:21:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:21:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- EXECUTION TIME:
0.134558
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:21:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:22:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:23:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:23:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- EXECUTION TIME:
0.132923
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:23:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:23:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
-- EXECUTION TIME:
0.125159
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:25:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print("volume:{:.2f}".format(volume))
-- OUTPUT:
63.617
volume:381.70
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:26:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- OUTPUT:
area:63.617
volume:381.70
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:26:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.205518
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area:63.617
volume:381.70
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area:478.388
volume:7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:27:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.2f}".format(area))
print("volume:{:.2f}".format(volume))
-- OUTPUT:
area:63.62
volume:381.70
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:27:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- OUTPUT:
area:63.617
volume:381.70
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:27:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.132735
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area:63.617
volume:381.70
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area:478.388
volume:7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:28:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- OUTPUT:
area:63.617
volume:381.70
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:28:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio:"))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print("area:{:.3f}".format(area))
print("volume:{:.2f}".format(volume))
-- EXECUTION TIME:
0.191277
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
area:63.617
volume:381.70
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
area:478.388
volume:7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:29:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:29:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:29:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import pi
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.165878
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:06:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.1424
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:06:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- OUTPUT:
63.617
381.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.203623
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.193412
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.115642
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
63.617
381.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.195923
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.7
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
63.617
381.7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.101317
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1602/825/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,2))
		
-- EXECUTION TIME:
0.239531
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1602/825/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import * 
raio = float(input("raio: "))
area = pi * raio ** 2
volume = 4/3 * pi * raio ** 3
print(round(area,3))
print(round(volume,3))
		
-- EXECUTION TIME:
0.134737
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
