== TEST (2019-03-30 16:52:01) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
resultado = fn
print(float(resuldado, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(float(resuldado, 2))
NameError: name 'resuldado' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:52:44) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
print(float(fn, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(float(fn, 2))
TypeError: float() takes at most 1 argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:53:32) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
print(float(round(fn, 2)))
-- OUTPUT:
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 16:54:10) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
print(float(round(fn, 2)))
-- EXECUTION TIME:
0.197933
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
91.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
79.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
88.36
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:56:49) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
print(round(fn, 2))
-- OUTPUT:
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:57:04) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = mp/p1+p2+p3+p4
print(round(fn, 2))
-- OUTPUT:
91.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:57:50) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
print(fn)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 16:58:31) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
print(mp/fn)
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:00:15) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
print(mp/fn)
-- EXECUTION TIME:
0.213315
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.936000000000002
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:01:02) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
total = (mp/fn)
print(float(round(total, 2)))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 17:01:17) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
total = (mp/fn)
print(float(round(total, 2)))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 17:01:33) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
total = (mp/fn)
print(float(round(total, 2)))
-- EXECUTION TIME:
0.182505
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:56:15) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
total = (mp/fn)
print(round(total, 2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:56:36) 
-- CODE:
a = float(input("nota 1: "))
b = float(input("nota 2: "))
c = float(input("nota 3: "))
d = float(input("nota 4: "))
p1 = 1
p2 = 2
p3 = 3
p4 = 4
mp = (a*p1) + (b*p2) + (c*p3) + (d*p4)
fn = p1+p2+p3+p4
total = (mp/fn)
print(round(total, 2))
-- EXECUTION TIME:
0.19226
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
