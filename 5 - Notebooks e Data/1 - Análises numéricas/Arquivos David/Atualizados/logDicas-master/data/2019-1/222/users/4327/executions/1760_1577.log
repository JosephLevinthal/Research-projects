== TEST (2019-05-29 16:27:27) 
-- CODE:
from numpy import*

a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=o

while(i<n):
	dt=(a8t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:27:45) 
-- CODE:
from numpy import*

a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=o

while(i<n):
	dt=(a8t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
7.34825
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1577/main.py", line 9, in <module>
    i=o
NameError: name 'o' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 16:27:51) 
-- CODE:
from numpy import*

a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=o

while(i<n):
	dt=(a8t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:29:43) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a8t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
6.20253
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1577/main.py", line 11, in <module>
    dt=(a8t[i]**2/2)+vi[i]
NameError: name 'a8t' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-29 16:29:53) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:30:07) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
7.94115
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1577/main.py", line 11, in <module>
    dt=(a*t[i]**2/2)+vi[i]
TypeError: 'float' object is not subscriptable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:30:08) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
4.97986
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1577/main.py", line 11, in <module>
    dt=(a*t[i]**2/2)+vi[i]
TypeError: 'float' object is not subscriptable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:30:28) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
4.94245
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1577/main.py", line 11, in <module>
    dt=(a*t[i]**2/2)+vi[i]
TypeError: 'float' object is not subscriptable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:30:59) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi*t[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
4.74591
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-29 16:31:29) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi*t[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
3.74724
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-28 02:30:35) 
-- CODE:
from numpy import*
a=float(input("ace; "))
vi=float(input("vi; "))
n=array(eval(input("ni; ")))
t=arange(n)
d=zeros(n)
s=((a*t**2/2)+vi*t)
i=0

while(i<n):
	dt=(a*t[i]**2/2)+vi*t[i]
	d[i]=dt
	i=i+1
	print(d)
-- EXECUTION TIME:
1.02945
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0. 4. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[0.  4.  9.2 0.  0.  0.  0.  0.  0.  0.  0.  0. ]
[ 0.   4.   9.2 15.6  0.   0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2  0.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.   0.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.   0.   0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2  0.   0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6  0.   0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2  0.   0. ]
[ 0.   4.   9.2 15.6 23.2 32.  42.  53.2 65.6 79.2 94.   0. ]
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[ 0.  81.4  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.   0.
  0. ]
[  0.   81.4 172.6   0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6   0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0. ]
[  0.   81.4 172.6 273.6 384.4   0.    0.    0.    0.    0.    0.    0.
   0.    0.    0.    0.    0.    0.    0.    0.    0.    0.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-28 02:30:48) 
-- CODE:
from numpy import *

a = float(input("Aceleracao: "))
v0 = float(input("Velocidade incial: "))
N = int(input("N: "))

t = arange(N)

d = zeros(N)

i = 0

while (i < N):
	ti = t[i]
	dti = (a*(ti**2)/2) + v0*ti
	d[i] = d[i] + dti
	i = i + 1
print(d)

-- EXECUTION TIME:
1.27734
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[    0.     81.4   172.6   273.6   384.4   505.    635.4   775.6   925.6
  1085.4  1255.   1434.4  1623.6  1822.6  2031.4  2250.   2478.4  2716.6
  2964.6  3222.4  3490.   3767.4  4054.6  4351.6  4658.4  4975.   5301.4
  5637.6  5983.6  6339.4  6705.   7080.4  7465.6  7860.6  8265.4  8680.
  9104.4  9538.6  9982.6 10436.4 10900.  11373.4 11856.6]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
