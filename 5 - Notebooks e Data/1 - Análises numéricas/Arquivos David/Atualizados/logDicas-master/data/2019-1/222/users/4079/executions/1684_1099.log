== TEST (2019-04-26 00:19:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				print("equilatero")
			elif(a==b or b==c or a==c):
				print("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
print("invalido")

-- ERROR:
File "XXXX", line 12
    print("equilatero")
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:20:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			elif(a==b or b==c or a==c):
				print("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
print("invalido")

-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:20:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				print("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
print("invalido")

-- ERROR:
File "XXXX", line 14
    print("isosceles")
                     ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:21:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			else:
				print("escaleno")
		else:
			print("invalido")
print("invalido")

-- ERROR:
File "XXXX", line 15
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:21:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				print("escaleno")
		else:
			print("invalido")
print("invalido")

-- ERROR:
File "XXXX", line 16
    print("escaleno")
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:21:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 00:21:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
print("invalido")

-- EXECUTION TIME:
0.18951
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:22:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:23:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo")
print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 00:23:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo")
print("invalido")

-- EXECUTION TIME:
0.179547
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de triangulo
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:23:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 00:23:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")

-- EXECUTION TIME:
0.172239
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de triangulo:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:24:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:"):
print("invalido")

-- ERROR:
File "XXXX", line 18
    print("tipo de triangulo:"):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:24:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo"):
print("invalido")

-- ERROR:
File "XXXX", line 18
    print("tipo de triangulo"):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:24:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 00:25:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")
-- EXECUTION TIME:
0.200096
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de triangulo:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:25:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 00:25:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:26:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
else:
print("invalido")
-- ERROR:
File "XXXX", line 20
    print("invalido")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:26:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
else:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:26:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
else:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:26:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("tipo de triangulo:")
else:
   print("invalido")
-- EXECUTION TIME:
0.118614
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
tipo de triangulo:
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:27:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
   print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:27:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
   print("invalido")
-- EXECUTION TIME:
0.157795
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:27:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:27:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("invalido")
-- EXECUTION TIME:
0.18141
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:28:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:28:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.221075
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:28:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:28:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("invalido")
else:
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.13091
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:29:31) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:29:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.153109
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:29:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:30:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.187196
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:30:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:30:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				 print("equilatero")
			 elif(a==b or b==c or a==c):
				 print("isosceles")
			 else:
				 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.217928
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:35:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
			   elif(a==b or b==c or a==c):
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:35:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
      elif(a==b or b==c or a==c):
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:36:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
         elif(a==b or b==c or a==c):
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:36:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
          elif(a==b or b==c or a==c):
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:36:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
       elif(a==b or b==c or a==c):
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:36:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
       elif(a==b or b==c or a==c)
				   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c)
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:36:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
       elif(a==b or b==c or a==c):
			   print("isosceles")
			   else:
				   print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:37:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
		if (a+b>c and a+c>b and c+b>a):
			 if(a==b and b==c):
				   print("equilatero")
       elif(a==b or b==c or a==c):
		   print("isosceles")
		 else:
			 print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:39:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
       elif(a==b or b==c or a==c):
		     print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:39:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
      elif(a==b or b==c or a==c):
		     print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:40:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
    		 elif(a==b or b==c or a==c):
		      print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:40:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
    		elif(a==b or b==c or a==c):
		      print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:40:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
    elif(a==b or b==c or a==c):
		      print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		 else:
			  print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			 print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 12
    print("equilatero")
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
				print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 12
    print("equilatero")
                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:42:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			   print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:31:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			   print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 12
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:31:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
			   print("equilatero")
   elif(a==b or b==c or a==c):
		      print("isosceles")
		   else:
			   print("escaleno")
	else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:34:25) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
      elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
     else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:34:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
      elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
    else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:34:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
      elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:34:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
         elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:34:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
       elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:35:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
       elif(a==b or b==c or a==c)
		     print("isosceles")
		else:
			  print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
    print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c)
                             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:39:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
       elif(a==b or b==c or a==c):
		     print("isosceles")
		else:
			  print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 01:19:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
	else:
		print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 01:19:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
		print("escaleno")
   else:
		  print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 15
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 01:25:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
else:
	print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 01:25:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 01:26:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
		 if(a==b and b==c):
		   print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 21:12:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
elif(a==b and b==c):
	print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    elif(a==b and b==c):
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 21:13:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
	elif(a==b and b==c):
		print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    elif(a==b and b==c):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 21:13:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
	elif(a==b and b==c):
		print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    elif(a==b and b==c):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:33:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
	elif(a==b and b==c):
		print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    elif(a==b and b==c):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:33:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a>0 and b>0 and c>0):
	if (a+b>c and a+c>b and c+b>a):
elif(a==b and b==c):
		print("equilatero")
elif(a==b or b==c or a==c):
	print("isosceles")
else:
	print("escaleno")
	else:
		print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    elif(a==b and b==c):
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:39:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
			elif(a==b or b==c or a==c):
				print("isosceles")
			else:
				print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    elif(a==b or b==c or a==c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:39:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
			else:
				print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:39:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
		else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 15
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:39:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:40:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.210091
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:40:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:40:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.162484
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:40:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:41:01) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.159428
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:41:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:41:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:41:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b and b==c):
			print("equilatero")
		elif(a==b or b==c or a==c):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.155386
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-08 23:44:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b or b==c or a==c):
			print("equilatero")
		elif(a==b and b==c ):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-08 23:44:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a > 0 and b > 0 and c > 0):
	if (a+b>c and a+c>b and c+b>a):
		if(a==b or b==c or a==c):
			print("equilatero")
		elif(a==b and b==c ):
				print("isosceles")
		else:
				print("escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.106938
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:17:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or a==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:17:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or a==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.784627
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:17:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or a==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:18:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or a==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.688579
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:19:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:19:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.827234
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:19:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.907125
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:19:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:19:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.770371
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:19:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:19:46) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if (a+b > c and b+c > a and a+c > b):
	if(a==b or b==c or c==a):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.666555
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:23:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c> a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:23:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c> a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.630922
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-03 18:25:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c> a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a !=b or b !=c or c !=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-03 18:26:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c> a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a !=b or b !=c or c !=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.719132
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-20 13:48:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-20 13:48:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a!=b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.858838
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-29 03:28:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a != b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: , invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-29 03:28:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a != b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo: , invalido")

-- EXECUTION TIME:
0.810971
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: , invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-29 03:28:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a != b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo:  invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-29 03:28:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import *
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)

if(a+b>c and b+c>a and a+c>b):
	if(a==b and b==c):
		print("equilatero")
	else:
		if(a==b or b==c or c==a):
			print("isosceles")
		else:
			if(a != b or b!=c or c!=a):
				print("escaleno")
else:
	print("Tipo de triangulo:  invalido")

-- EXECUTION TIME:
0.719036
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:  invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
