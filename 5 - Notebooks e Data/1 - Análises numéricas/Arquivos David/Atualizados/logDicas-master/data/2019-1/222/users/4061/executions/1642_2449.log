== TEST (2019-04-14 01:32:47) 
-- CODE:
a = float(input("digite a"))
b = float(input("digite b"))
c = float(input("digite c"))
d = float(input("digite d"))
e = float(input("digite e"))
f = float(input("digite f"))
x = ((c*e)-(b*f))/((a*e)-(b*d))
y = ((a*f)-(c*d))/((a*e)-(b*d))

#if(x):
	mensagem = ("tem solucao")
#else:
	mensagem = ("Nao tem solucao")
print(x)
print(y)
-- ERROR:
File "XXXX", line 11
    mensagem = ("tem solucao")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 01:33:17) 
-- CODE:
a = float(input("digite a"))
b = float(input("digite b"))
c = float(input("digite c"))
d = float(input("digite d"))
e = float(input("digite e"))
f = float(input("digite f"))
x = ((c*e)-(b*f))/((a*e)-(b*d))
y = ((a*f)-(c*d))/((a*e)-(b*d))

#if(x):
	#mensagem = ("tem solucao")
#else:
	#mensagem = ("Nao tem solucao")
print(x)
print(y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = ((c*e)-(b*f))/((a*e)-(b*d))
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:38:18) 
-- CODE:
a = float(input("digite a"))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
x = (cebf)/(aebd)
y = (afcd)/(aebd)

if(cebf!=0 or aebd!=0 or afcd!=0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x = (cebf)/(aebd)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:39:01) 
-- CODE:
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
x = (cebf)/(aebd)
y = (afcd)/(aebd)

if(cebf!=0 or aebd!=0 or afcd!=0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x = (cebf)/(aebd)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:39:23) 
-- CODE:
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
x = (cebf)/(aebd)
y = (afcd)/(aebd)

if(cebf!=0 or aebd!=0 or afcd!=0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- EXECUTION TIME:
0.139267
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1642/2449/main.py", line 10, in <module>
    x = (cebf)/(aebd)
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:39:34) 
-- CODE:
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
x = (cebf)/(aebd)
y = (afcd)/(aebd)

if(cebf!=0 or aebd!=0 or afcd!=0):
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    x = (cebf)/(aebd)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:42:16) 
-- CODE:
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
if(aebd!=0):
	x = (cebf)/(aebd)
	y = (afcd)/(aebd)
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 13:42:41) 
-- CODE:
a = float(input("digite a: "))
b = float(input("digite b: "))
c = float(input("digite c: "))
d = float(input("digite d: "))
e = float(input("digite e: "))
f = float(input("digite f: "))
cebf = (c*e)-(b*f)
aebd = (a*e)-(b*d)
afcd = (a*f)-(c*d)
if(aebd!=0):
	x = (cebf)/(aebd)
	y = (afcd)/(aebd)
	print(x)
	print(y)
else:
	print("Nao tem solucao")

-- EXECUTION TIME:
0.169593
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
