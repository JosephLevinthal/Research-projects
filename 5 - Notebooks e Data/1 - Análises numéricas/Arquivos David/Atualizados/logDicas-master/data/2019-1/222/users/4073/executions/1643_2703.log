== TEST (2019-04-10 18:22:14) 
-- CODE:
print=("tais tem 17 anos")
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:22:23) 
-- CODE:
print=("tais tem 17 anos")
-- EXECUTION TIME:
0.160123
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:

-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:

-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:22:23) 
-- CODE:
print=("tais tem 17 anos")
-- EXECUTION TIME:
0.27459
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:

-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:

-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:22:37) 
-- CODE:
print=("tais tem 17 anos:")
-- EXECUTION TIME:
0.166982
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:

-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:

-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:22:38) 
-- CODE:
print=("tais tem 17 anos:")
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:22:41) 
-- CODE:
print=("tais tem 17 anos:")
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:25:59) 
-- CODE:
print=int('tais:')
print=('17')
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print=int('tais:')
ValueError: invalid literal for int() with base 10: 'tais:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:26:12) 
-- CODE:
print=int('tais:')
print=()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    print=int('tais:')
ValueError: invalid literal for int() with base 10: 'tais:'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:32:12) 
-- CODE:
num = int(input( ))

	if  (num %  2 == 0):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  (num %  2 == 0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:32:38) 
-- CODE:
num = int(input( ))

	if  (17):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  (17):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:32:49) 
-- CODE:
num = int(input( ))

	if  ('17'):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  ('17'):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:33:38) 
-- CODE:
num = int(input( ))

	if  (num=17):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  (num=17):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:33:57) 
-- CODE:
num = int(input( ))

	if  (num=0):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  (num=0):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:34:06) 
-- CODE:
num = int(input( ))

	if  ():
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  ():
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:34:28) 
-- CODE:
num = int(input( ))

	if  (num17):
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 3
    if  (num17):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:34:47) 
-- CODE:
num = int(input( ))

	
mensagem = "par"
	else:
mensagem = "impar"

print(mensagem)
-- ERROR:
File "XXXX", line 5
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:01) 
-- CODE:
num = int(input( ))

	
mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:35:05) 
-- CODE:
num = int(input( ))

	
mensagem = "par"

mensagem = "impar"

print(mensagem)
-- EXECUTION TIME:
0.138859
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
impar
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
impar
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
impar
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:30) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:33) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:34) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:45) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:45) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:35:46) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:35:46) 
-- CODE:
num = int(input( ))


mensagem = "par"

mensagem = "impar"

print(mensagem)
-- EXECUTION TIME:
0.160262
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
impar
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
impar
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
impar
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:39:24) 
-- CODE:
num = int(input( ))


mensagem = "18"

mensagem = "17"

print(mensagem)
-- OUTPUT:
17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:46:15) 
-- CODE:
idade = float(input('digite sua idade a:'))
print(idade)
-- OUTPUT:
15.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:50:28) 
-- CODE:
idade = float(input('digite sua idade a:'))
if(idade>=18):
	print('eleitor')
else:
	print('nao_eleitor')
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 18:50:34) 
-- CODE:
idade = float(input('digite sua idade a:'))
if(idade>=18):
	print('eleitor')
else:
	print('nao_eleitor')
-- EXECUTION TIME:
0.137208
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
nao_eleitor
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
eleitor
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
eleitor
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:50:51) 
-- CODE:
idade = float(input('digite sua idade a:'))
if(idade>=18):
	print('eleitor')
else:
	print('nao_eleitor')
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:51:21) 
-- CODE:
idade = float(input('digite sua idade a:'))
if(idade>=18):
	print('eleitor')
else:
	print('nao_eleitor')
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:51:27) 
-- CODE:
idade = float(input('digite sua idade a:'))
if(idade>=18):
	print('eleitor')
else:
	print('nao_eleitor')
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
