== TEST (2019-04-15 12:48:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

coordx = float( input("Informe a coordenada X: "))
coordy = float( input("Informe a coordenada y: "))

if((2*coordx + coordy)-3 == 0):
	mensagem = "ponto pertence a reta"
else:	
	mensagem = "ponto nao pertence a reta"

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:52:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

coordx = float( input("Informe a coordenada X: "))
coordy = float( input("Informe a coordenada y: "))

if((2*coordx + coordy)-3 == 0):
	mensagem = "ponto pertence a reta"
else:	
	mensagem = "ponto nao pertence a reta"
print(mensagem)	

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:52:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

coordx = float( input("Informe a coordenada X: "))
coordy = float( input("Informe a coordenada y: "))

if((2*coordx + coordy)-3 == 0):
	mensagem = "ponto pertence a reta"
else:	
	mensagem = "ponto nao pertence a reta"
print(mensagem)	

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:53:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

coordx = float( input("Informe a coordenada X: "))
coordy = float( input("Informe a coordenada y: "))

if((2*coordx + coordy)-3 == 0):
	mensagem = "ponto pertence a reta"
else:	
	mensagem = "ponto nao pertence a reta"
print(mensagem)	

-- EXECUTION TIME:
0.179031
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
