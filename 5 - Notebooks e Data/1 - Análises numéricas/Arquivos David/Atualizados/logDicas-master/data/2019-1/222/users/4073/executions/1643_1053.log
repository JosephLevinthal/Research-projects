== TEST (2019-04-10 18:57:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo')
print(a)
-- OUTPUT:
cervo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:58:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo')
print(a)
-- OUTPUT:
cervo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:58:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo'):
print(a)
-- ERROR:
File "XXXX", line 4
    a = input():
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:58:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo:')
print(a)
-- OUTPUT:
cervo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:07:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo:')
if(a>=Harry):
	print('cervo eh patrono do Harry Potter)
else:
	print('nao eh patrono do Harry Potter')
-- ERROR:
File "XXXX", line 6
    print('cervo eh patrono do Harry Potter)
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:07:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a = input('cervo:')
if(a>=Harry):
	print('cervo eh patrono do Harry Potter)
else:
	print('nao eh patrono do Harry Potter')
-- EXECUTION TIME:
0.110965
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 6
    print('cervo eh patrono do Harry Potter)
                                           ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:08:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if:
	print('cervo eh patrono do Harry Potter)
else:
	print('nao eh patrono do Harry Potter')
-- ERROR:
File "XXXX", line 4
    if:
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:08:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if:
	print('cervo eh patrono do Harry Potter)
else:
	print('nao eh patrono do Harry Potter')
-- EXECUTION TIME:
0.143849
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 4
    if:
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:09:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if:
	print(cervo eh patrono do Harry Potter)
else:
	print(nao eh patrono do Harry Potter')
-- ERROR:
File "XXXX", line 4
    if:
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:09:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if:
	print(cervo eh patrono do Harry Potter)
else:
	print(nao eh patrono do Harry Potter')
-- EXECUTION TIME:
0.269517
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 4
    if:
      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:10:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo):
	print(cervo eh patrono do Harry Potter)
else:
	print(nao eh patrono do Harry Potter')
-- ERROR:
File "XXXX", line 5
    print(cervo eh patrono do Harry Potter)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:10:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo):
	print(cervo eh patrono do Harry Potter)
else:
	print(nao eh patrono do Harry Potter')
-- EXECUTION TIME:
0.147364
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    print(cervo eh patrono do Harry Potter)
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:13:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo>=Harry):
	print(cervo eh patrono do Harry Potter)
else:
	print(nao eh patrono do Harry Potter')
-- ERROR:
File "XXXX", line 5
    print(cervo eh patrono do Harry Potter)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:14:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo>=Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(cervo>=Harry):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:14:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo>=Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.124853
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 4, in <module>
    if(cervo>=Harry):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:14:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo=Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 4
    if(cervo=Harry):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:14:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo=Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 4
    if(cervo=Harry):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:14:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(cervo):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:19:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(Harry):
NameError: name 'Harry' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:21:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("cervo:")
if(Harry):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(Harry):
NameError: name 'Harry' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:23:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("cervo:")
if(harry!=cervo):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:23:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("cervo:")
if(harry!=cervo):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.139142
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    if(harry!=cervo):
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:25:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.165762
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:25:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.150861
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:26:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 5
    if(harry=asno):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:26:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.140422
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    if(harry=asno):
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:33:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!=asno):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(harry!=asno):
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:33:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!="asno"):
	print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:33:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!="asno"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry, "nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:33:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!="asno"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry, "nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.164755
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:34:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!="asno"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry,"  nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:34:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("asno:")
if(harry!="asno"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry,"  nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:35:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("digite um nome:")
if(harry=="cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry,"  nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:35:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
harry = input("digite um nome:")
if(harry=="cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(harry,"  nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.205133
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode   nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
