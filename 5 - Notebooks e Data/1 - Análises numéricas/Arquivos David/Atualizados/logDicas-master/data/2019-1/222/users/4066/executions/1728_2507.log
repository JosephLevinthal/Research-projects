== TEST (2019-05-15 02:28:42) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q = int(input("Quantidade retirada: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:32:42) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
		if (meses == 0)
		qua = qua + qua*pi/100 - q1
		elif (meses == 1)
		qua = qua + qua*pi/100 - q1 - q2
		elif (meses == 2)
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 11
    if (meses == 0)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:32:56) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
		if (meses == 0):
		qua = qua + qua*pi/100 - q1
		elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
		elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 12
    qua = qua + qua*pi/100 - q1
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:33:07) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
		if (meses == 0):
			qua = qua + qua*pi/100 - q1
		elif (meses == 1):
			qua = qua + qua*pi/100 - q1 - q2
		elif (meses == 2):
			qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 17
    meses = meses + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:33:34) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 17
    meses = meses + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:36:35) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 17
    meses = meses + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:37:00) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 17
    meses = meses + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:37:24) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
File "XXXX", line 17
    meses = meses + 1
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:39:35) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    q = int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:39:52) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 02:40:06) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
0.625529
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:

-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:41:44) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 02:41:58) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- OUTPUT:
MAXIMO
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 02:43:08) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 8000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 8000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
0.639402
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 02:47:02) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
790.034
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 02:52:01) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
905.558
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 02:53:01) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))
q1 = int(input("Quantidade retirada m1: "))
q2 = int(input("Quantidade retirada m2: "))
q3 = int(input("Quantidade retirada m3: "))

qua = i
meses = 0

while (qua > 0) and (qua < 10000):
	if (meses == 0):
		qua = qua + qua*pi/100 - q1
	elif (meses == 1):
		qua = qua + qua*pi/100 - q1 - q2
	elif (meses == 2):
		qua = qua + qua*pi/100 - q1 - q2 - q3
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 10000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
934.807
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 14:29:27) 
-- CODE:
i = int(input("Quantidade inicial: "))
pi = float(input("Percentual de crescimento: "))

qua = i
meses = 0

while (qua > 0) and (qua < 8000):
	q = int(input("Quantidade retirada: "))
	qua = qua + qua*pi/100 - q
	meses = meses + 1

if (qua < 0):
	print("ZERO")
elif (qua >= 8000):
	print("MAXIMO")
	
print(meses)
-- EXECUTION TIME:
0.169547
-- TEST CASE 1:
---- input:
1234
56
7
8
9
10
11
---- correct output:
MAXIMO
5
---- user output:
MAXIMO
5
-- TEST CASE 2:
---- input:
5432
1
987
654
4321
---- correct output:
ZERO
3
---- user output:
ZERO
3
-- TEST CASE 3:
---- input:
2468
35
1234
900
1
2
3
4
5
---- correct output:
MAXIMO
7
---- user output:
MAXIMO
7
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
