== SUBMITION (2019-03-20 18:54:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

min(a,b,c)
max(a,b,c)
print(min)
print(max)
-- EXECUTION TIME:
0.146968
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
<built-in function min>
<built-in function max>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:57:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

min(a,b,c)
max(a,b,c)
vm=max-min

print(min,vm,max)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vm=max-min
TypeError: unsupported operand type(s) for -: 'builtin_function_or_method' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:58:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

vm=max(a,b,c)-min(a,b,c)

print(min(a,b,c),vm,max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2 12 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 18:59:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c),max(a,b,c)-min(a,b,c),max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2 12 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:01:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c),max(a,b,c)-min(a,b,c),max(a,b,c))
-- EXECUTION TIME:
0.134227
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2 12 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:02:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c),max(a,b,c)-min(a,b,c),max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2 12 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:03:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c),max(a,b,c)-min(a,b,c),max(a,b,c))
-- EXECUTION TIME:
0.22645
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2 12 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:03:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c))
print(max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- EXECUTION TIME:
0.181982
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2
12
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:03:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c))
print(max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:04:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c))
print(max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
12
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:06:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c))
print((a+b+c)-(min(a,b,c)+max(a,b,c)))
print(max(a,b,c))
-- EXECUTION TIME:
0.207407
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2
0
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

print(min(a,b,c))
print((a+b+c)-(min(a,b,c)+max(a,b,c)))
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:07:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

aux = min(a,b,c)+max(a,b,c)

print(min(a,b,c))
print((a+b+c)-aux)
print(max(a,b,c))
-- EXECUTION TIME:
0.111668
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2
0
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:07:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

aux = min(a,b,c)+max(a,b,c)

print(min(a,b,c))
print((a+b+c)-aux)
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:07:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

aux = min(a,b,c)+max(a,b,c)

print(min(a,b,c))
print((a+b+c)-aux)
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:10:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

total = a+b+c

aux =  min(a,b,c)+max(a,b,c)
Inter = total - aux

print(min(a,b,c))
print(Inter)
print(max(a,b,c))
-- OUTPUT:
Digite 3 numeros
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:10:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
print("Digite 3 numeros")
a=int(input())
b=int(input())
c=int(input())

total = a+b+c

aux =  min(a,b,c)+max(a,b,c)
Inter = total - aux

print(min(a,b,c))
print(Inter)
print(max(a,b,c))
-- EXECUTION TIME:
0.110129
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
Digite 3 numeros
-2
0
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:10:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a=int(input())
b=int(input())
c=int(input())

total = a+b+c

aux =  min(a,b,c)+max(a,b,c)
Inter = total - aux

print(min(a,b,c))
print(Inter)
print(max(a,b,c))
-- EXECUTION TIME:
0.202026
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
