== SUBMITION (2019-04-15 18:12:13) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = "seu pagamento e", horas * 50
else:
	mensagem = "seu pagamento e", (horas * 50)+ 70
print(round(mensagem,2))
-- EXECUTION TIME:
0.174114
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1668/1394/main.py", line 6, in <module>
    print(round(mensagem,2))
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:12:17) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = "seu pagamento e", horas * 50
else:
	mensagem = "seu pagamento e", (horas * 50)+ 70
print(round(mensagem,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(mensagem,2))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:13:11) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = "seu pagamento e", horas * 50
else:
	mensagem = "seu pagamento e", round((horas * 50)+ 70)
print(mensagem)
-- OUTPUT:
('seu pagamento e', 750.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:13:47) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round((horas * 50)+ 70)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:14:25) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round(horas * 50+ 70)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:14:42) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round(horas * 50+ 70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:14:58) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round(horas * (50 + 70),2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:15:56) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round(horas * 50 + 70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:16:48) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round(horas * 50 + 70,2)
print (mensagem)
-- OUTPUT:
750
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:19:44) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = horas * 50 + 70
print (round(mensagem,2)
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:20:00) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = (horas * 50) + 70
print (round(mensagem,2)
-- ERROR:
File "XXXX", line 7
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:20:21) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round((horas * 50) + 70,)
print (mensagem)
-- OUTPUT:
750
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:21:10) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round((horas * 50) + (horas - 20 )*70,)
print (mensagem)
-- OUTPUT:
750
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:21:17) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round((horas * 50) + (horas - 20 )*70,)
print (mensagem)
-- EXECUTION TIME:
0.155614
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
4000
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4360
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:23:16) 
-- CODE:
horas = int(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = horas * 50
else:
	mensagem = round((horas * 50) + (horas - 20 )*70,)
print (mensagem)
-- OUTPUT:
750
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:29:01) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + 70)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:32:18) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + (horas - 20)*70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:32:25) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + (horas - 20)*70,2)
print (mensagem)
-- EXECUTION TIME:
0.139398
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
4000.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4360.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:32:37) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 +(horas - 20) * 70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:32:43) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 +(horas - 20) * 70,2)
print (mensagem)
-- EXECUTION TIME:
0.11011
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
4000.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4360.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:33:29) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(((horas - 20) * 70) + (horas * 50),2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:33:35) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(((horas - 20) * 70) + (horas * 50),2)
print (mensagem)
-- EXECUTION TIME:
0.186142
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
4000.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4360.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:34:11) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 120,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:34:57) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + (horas - 20 * 70,2)
print (mensagem)
-- ERROR:
File "XXXX", line 6
    print (mensagem)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:35:02) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + (horas - 20 * 70),2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:35:22) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(horas * 50 + (horas - 20) * 70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:36:33) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round((horas * 50) + ((horas - 20) * 70),2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:38:10) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round(((horas - 20) * 70) + (20*50) =,2)
print (mensagem)
-- ERROR:
File "XXXX", line 5
    mensagem = round(((horas - 20) * 70) + (20*50) =,2)
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:39:03) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round((20*50) + (horas - 20)*70,2)
print (mensagem)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:39:08) 
-- CODE:
horas = float(input("horas trabalhadas: "))
if horas <= 20:
	mensagem = round(horas * 50,2) 
else:
	mensagem = round((20*50) + (horas - 20)*70,2)
print (mensagem)
-- EXECUTION TIME:
0.200869
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2960.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
