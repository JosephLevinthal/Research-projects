== SUBMITION (2019-03-27 11:31:03) 
-- CODE:
a int(input("digite um numero de quatro digitos: "))
b= a//1000
b1 = a % 1000
c = b1 //100
c1 = b1 %100
d = c1 // 10
d1 = c1%10
e = d1//1
total = (b+c+d+e)
print(total)
-- EXECUTION TIME:
0.149635
-- ERROR:
  File "/home/codebench/codes/1602/842/main.py", line 1
    a int(input())
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 11:31:27) 
-- CODE:
a int(input("digite um numero de quatro digitos: "))
b= a//1000
b1 = a % 1000
c = b1 // 100
c1 = b1 % 100
d = c1 // 10
d1 = c1 % 10
e = d1 // 1
total = (b+c+d+e)
print(total)
-- EXECUTION TIME:
0.186829
-- ERROR:
  File "/home/codebench/codes/1602/842/main.py", line 1
    a int(input())
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 11:31:42) 
-- CODE:
a int(input("digite um numero de quatro digitos: "))
b= a// 1000
b1 = a % 1000
c = b1 // 100
c1 = b1 % 100
d = c1 // 10
d1 = c1 % 10
e = d1 // 1
total = (b+c+d+e)
print(total)
-- EXECUTION TIME:
0.146299
-- ERROR:
  File "/home/codebench/codes/1602/842/main.py", line 1
    a int(input())
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 11:32:44) 
-- CODE:
a int(input("digite um numero com quatro digitos: "))
b= a // 1000
b1 = a % 1000
c = b1 // 100
c1 = b1 % 100
d = c1 // 10
d1 = c1 % 10
e = d1 // 1
total = (b+c+d+e)
print(total)
-- EXECUTION TIME:
0.182638
-- ERROR:
  File "/home/codebench/codes/1602/842/main.py", line 1
    a int(input())
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 11:35:25) 
-- CODE:
a = int(input("digite um numero com quatro digitos: "))
b= a // 1000
b1 = a % 1000
c = b1 // 100
c1 = b1 % 100
d = c1 // 10
d1 = c1 % 10
e = d1 // 1
total = (b+c+d+e)
print(total)
-- EXECUTION TIME:
0.145282
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
