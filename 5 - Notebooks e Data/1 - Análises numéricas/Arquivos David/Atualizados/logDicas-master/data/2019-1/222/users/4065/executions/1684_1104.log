== TEST (2019-04-28 13:09:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a,b
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:12:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = ("Intervalo 1:"a,b)
y = ("Intervalo 2:"b,d)

print(x,y)

if()
-- ERROR:
File "XXXX", line 9
    x = ("Intervalo 1:"a,b)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:13:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = ("Intervalo 1:",a,",",b)
y = ("Intervalo 2:",b,",",d)

print(x,y)

if()
-- ERROR:
File "XXXX", line 14
    if()
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:14:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = ("Intervalo 1:",a,",",b)
y = ("Intervalo 2:",b,",",d)

print(x,y)


-- OUTPUT:
('Intervalo 1:', 1.0, ',', 2.0) ('Intervalo 2:', 2.0, ',', 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:14:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = "Intervalo 1:",a,",",b
y = "Intervalo 2:",b,",",d

print(x,y)


-- OUTPUT:
('Intervalo 1:', 1.0, ',', 2.0) ('Intervalo 2:', 2.0, ',', 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:15:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = "Intervalo 1:",a,",",b
y = "Intervalo 2:",b,",",d

print(x)
print(y)

-- OUTPUT:
('Intervalo 1:', 1.0, ',', 2.0)
('Intervalo 2:', 2.0, ',', 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:16:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = "Intervalo 1:",a,b
y = "Intervalo 2:",b,d

print(x)
print(y)

-- OUTPUT:
('Intervalo 1:', 1.0, 2.0)
('Intervalo 2:', 2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:16:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = "Intervalo 1 :",a,b
y = "Intervalo 2 :",b,d

print(x)
print(y)

-- OUTPUT:
('Intervalo 1 :', 1.0, 2.0)
('Intervalo 2 :', 2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:17:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = Intervalo 1: ,a,b
y = Intervalo 2:,b,d

print(x)
print(y)

-- ERROR:
File "XXXX", line 9
    x = Intervalo 1: ,a,b
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:18:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x ="Intervalo 1:",a,b
y = "Intervalo 2:",b,d

print(x)
print(y)

-- OUTPUT:
('Intervalo 1:', 1.0, 2.0)
('Intervalo 2:', 2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:19:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x ="Intervalo 1:",a,b
y = "Intervalo 2:",b,d

print(x)
print(y)

-- OUTPUT:
('Intervalo 1:', 1.0, 2.0)
('Intervalo 2:', 2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:21:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = "Intervalo 1:"a,b
y = "Intervalo 2:"b,d

print(x)
print(y)

-- ERROR:
File "XXXX", line 9
    x = "Intervalo 1:"a,b
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:27:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = (a,b)
y = (b,d)

print("Intervalo 1:",x)
print(y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
(2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:28:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a,b
y = b,d

print("Intervalo 1:",x)
print("Intervalo 1:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 1: (2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:29:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a,b
y = b,d

print("Intervalo 1:",x)
print("Intervalo 2:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:30:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


x = a,b
y = b,d

print("Intervalo 1:",x)
print("Intervalo 2:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:31:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


x = a,b
y = b,d

print("Intervalo 1:",x)
print("Intervalo 2:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:32:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


x = a,b
y = b,d

print("Intervalo 1:" ,x)
print("Intervalo 2:" ,y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 5.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:33:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




x = a,b
y = b,c



print("Intervalo 1:" ,x)
print("Intervalo 2:" ,y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:33:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




x = a,b
y = b,c



print("Intervalo 1:" ,x)
print("Intervalo 2:" ,y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:35:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




x = a, b
y = b, c



print("Intervalo 1:",x)
print("Intervalo 2:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:36:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




x = a, b
y = b, c



print(("Intervalo 1:"),x)
print("Intervalo 2:",y)

-- OUTPUT:
Intervalo 1: (1.0, 2.0)
Intervalo 2: (2.0, 4.0)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:42:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,b)

-- OUTPUT:
Intervalo 1: 1.0 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:47:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,","b)
elif(c < d) and (d > c):
	print("Intervalo 1:",c,",",b)

-- ERROR:
File "XXXX", line 13
    print("Intervalo 1:",a,","b)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:47:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a","b)
elif(c < d) and (d > c):
	print("Intervalo 1:",c","b)

-- ERROR:
File "XXXX", line 13
    print("Intervalo 1:",a","b)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:47:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a",",b)
elif(c < d) and (d > c):
	print("Intervalo 1:",c",",b)

-- ERROR:
File "XXXX", line 13
    print("Intervalo 1:",a",",b)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:48:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,",",b)
elif(c < d) and (d > c):
	print("Intervalo 1:",c",",b)

-- ERROR:
File "XXXX", line 15
    print("Intervalo 1:",c",",b)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:48:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,",",b)
elif(c < d) and (d > c):
	print("Intervalo 1:",c,",",b)

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:50:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,",",b)
elif(c < d) and (d > c):
	print("Intervalo 2:",c,",",b)

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:50:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(a < b) and (b > a):
	print("Intervalo 1:",a,",",b)
elif(c < d) and (d > c):
	print("Intervalo 2:",c,",",b)

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:53:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:59:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)
	elif(a < d) and (d > a):
		print("Ha intersecao")
	elif((a < d) and (d > a)) != (c < d) and (d > c)

-- ERROR:
File "XXXX", line 15
    elif(a < d) and (d > a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 13:59:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c)

-- ERROR:
File "XXXX", line 17
    elif((a < d) and (d > a)) != (c < d) and (d > c)
                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:00:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:02:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:03:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",b)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:03:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:04:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a < d) or (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:06:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == (b < c) 
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- ERROR:
File "XXXX", line 16
    print("Ha intersecao")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:07:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == (b < c):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif(a == (b < c):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:08:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:08:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a < d) and (d > a):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:11:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b)):
	print("Ha intersecao")
elif((a < d) and (d > a)) != (c < d) and (d > c):
	print("Nao ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:12:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b)):
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:12:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) or ((b < c) and (c > b)):
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:13:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
   	elif((a < d) and (d > a)) or ((b < c) and (c > b)):
			print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif((a < d) and (d > a)) or ((b < c) and (c > b)):
                                                      ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:13:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
   elif((a < d) and (d > a)) or ((b < c) and (c > b)):
		print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif((a < d) and (d > a)) or ((b < c) and (c > b)):
                                                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:19:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) or ((b < c) and (c > b)) and ((a < b) and (b > a) and ((c < d) and (d > c)):
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif((a < d) and (d > a)) or ((b < c) and (c > b)) and ((a < b) and (b > a) and ((c < d) and (d > c)):
                                                                                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:19:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b)) and ((a < b) and (b > a) and ((c < d) and (d > c)):
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif((a < d) and (d > a)) and ((b < c) and (c > b)) and ((a < b) and (b > a) and ((c < d) and (d > c)):
                                                                                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:20:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(((a < d) and (d > a)) and ((b < c) and (c > b))) and (((a < b) and (b > a) and ((c < d) and (d > c))):
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif(((a < d) and (d > a)) and ((b < c) and (c > b))) and (((a < b) and (b > a) and ((c < d) and (d > c))):
                                                                                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:22:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b):
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif((a < d) and (d > a)) and ((b < c) and (c > b):
                                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:22:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b)):
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:29:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif((a < d) and (d > a)) and ((b < c) and (c > b)) and ((a < c) and (c > a)) and ((b < d) and (d > b)):
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:32:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == (c < d):
	print("Ha intersecao")

-- ERROR:
File "XXXX", line 15
    elif(a == (c < d):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:37:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif ((a < d) and (d > a)) or ((b > a) and (b < d)):
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:40:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a , b
y = c , d



if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == y) and (b == y):
-- ERROR:
File "XXXX", line 18
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:41:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a , b
y = c , d



if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == y) and (b == y):
	print("rkrkr")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:43:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = a , b
y = c , d



if((a < b) and (b > a)) and ((c < d) and (d > c)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
elif(a == y) and (b == y) or ((c == x) and (d == x)):
	print("rkrkr")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:51:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:52:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 14:53:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:00:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b > a) and (d > c):
	elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
el
-- ERROR:
File "XXXX", line 11
    elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:03:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) and (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
el
-- ERROR:
File "XXXX", line 17
    print("Intervalo 2:",c,",",d)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:03:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) and (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
el
-- ERROR:
File "XXXX", line 18
    print("Ha intersecao")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:03:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) and (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
elif((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:06:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:06:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) and ((c < d) and (d > c)) and ((a < d) and (d > a)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:12:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) - ((c < d) and (d > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:52:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) == ((c < d) and (d > c)) :
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:53:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) == ((c < d) and (d > c)) :
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:54:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
else:
	if((a < b) and (b > a)) == ((c < d) and (d > c)) :
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)		
	elif((a < b) and (b > a)) == ((c < d) and (d > c)):
		print("Ha intersecao")

-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:03:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
x = 5
else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- ERROR:
File "XXXX", line 17
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:03:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))




if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	
x = 5

else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- ERROR:
File "XXXX", line 19
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:03:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = 5


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")

-- ERROR:
File "XXXX", line 19
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:05:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = 5


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
else:
	print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 24
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:05:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = 5


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- OUTPUT:
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:05:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = 5


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- OUTPUT:
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 16:06:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = 5


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- EXECUTION TIME:
0.133125
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:06:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = (a < d) and (a > b)


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- OUTPUT:
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:11:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = ((a < b) and (b < c) and (c < d)


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 12
    if(b < a) or (d < c):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:13:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))

x = ((a < b) and (b < c) and (c < d)


if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 12
    if(b < a) or (d < c):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:13:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 19, in <module>
    if((x > a) and (x < b)) and ((x < d) and (x > c)):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:13:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))
x = ((a < b) and (b < c) and (c < d)



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((x > a) and (x < b)) and ((x < d) and (x > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 12
    if(b < a) or (d < c):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:14:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((a < b) and (b < c)) and ((c - d):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 19
    if((a < b) and (b < c)) and ((c - d):
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:15:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((a < b) and (b < c) and ((c - d):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 19
    if((a < b) and (b < c) and ((c - d):
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:15:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((a < b) and (b < c) and ((c - d)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- ERROR:
File "XXXX", line 19
    if((a < b) and (b < c) and ((c - d)):
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 17:26:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo.
a = float(input("numero: "))
b = float(input("numero: "))
c = float(input("numero: "))
d = float(input("numero: "))



if(b < a) or (d < c):
	print("Intervalo 1:",a,",",b)
	print("Intervalo 2:",c,",",d)
	print("Entradas invalidas")
	


else:
	if((a < b) and (b > a)) == ((b < c) and (c > b)) and ((c < d) and (d > c)):
		print("Intervalo 1:",a,",",b)
		print("Intervalo 2:",c,",",d)
		print("Ha intersecao")
	else:
		print("Nao ha intersecao")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
