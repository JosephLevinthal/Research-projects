== TEST (2019-04-01 18:06:10) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
via=0
vmb=float(input("vmb:"))
vf=((((2*ma)+mb))/(ma+mb))*via
-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:11:07) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vmb=float(input("vmb:"))
v0=50
vf=((((2*ma)+mb))/(ma+mb))*v0
print(vf)
-- OUTPUT:
60.63609722461645
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:11:30) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vmb=float(input("vmb:"))
v0=50
vf=((((2*ma)+mb))/(ma+mb))*v0
print(vf)
-- EXECUTION TIME:
0.128082
-- TEST CASE 1:
---- input:
123.4
456.7
8.9
---- correct output:
10.793225305981728
---- user output:
60.63609722461645
-- TEST CASE 2:
---- input:
1000.0
5000.0
100.0
---- correct output:
116.66666666666667
---- user output:
58.333333333333336
-- TEST CASE 3:
---- input:
4000.0
6000.0
100.0
---- correct output:
140.0
---- user output:
70.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:15:10) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
va=50.0
vb=float(input("vb:"*(2*va)))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vb=float(input("vb:"*(2*va)))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:16:37) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
va=50.0
vb=float(input("vb:"*(2*va)))
vf=(((2*(ma+mb))/(ma+mb))*va)
print(vf)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vb=float(input("vb:"*(2*va)))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:17:16) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
va=50.0
vb=float(input("vb:"*(2*va)))
vf=((2*(ma+mb))/(ma+mb))*va
print(vf)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vb=float(input("vb:"*(2*va)))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:20:22) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:")
v0=(vb/2)
vf=(2*(ma+mb)/(ma+mb))*v0
print(vf)


-- ERROR:
File "XXXX", line 4
    v0=(vb/2)
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:21:22) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:")
v0=(1/2)*vb
vf=(2*(ma+mb)/(ma+mb))*v0
print(vf)


-- ERROR:
File "XXXX", line 4
    v0=(1/2)*vb
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:21:59) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(vb/2)
vf=(2*(ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
8.9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:22:51) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(vb/2)
vf=(2*(ma+mb)/(ma+mb))*v0
print(vf)


-- EXECUTION TIME:
0.13888
-- TEST CASE 1:
---- input:
123.4
456.7
8.9
---- correct output:
10.793225305981728
---- user output:
8.9
-- TEST CASE 2:
---- input:
1000.0
5000.0
100.0
---- correct output:
116.66666666666667
---- user output:
100.0
-- TEST CASE 3:
---- input:
4000.0
6000.0
100.0
---- correct output:
140.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:31:38) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=((2(ma+mb))/(ma+mb))*v0
print(vf)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    vf=((2(ma+mb))/(ma+mb))*v0
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:32:35) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- OUTPUT:
35.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:32:52) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- EXECUTION TIME:
0.208321
-- TEST CASE 1:
---- input:
123.4
456.7
8.9
---- correct output:
10.793225305981728
---- user output:
35.6
-- TEST CASE 2:
---- input:
1000.0
5000.0
100.0
---- correct output:
116.66666666666667
---- user output:
400.0
-- TEST CASE 3:
---- input:
4000.0
6000.0
100.0
---- correct output:
140.0
---- user output:
400.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:32:56) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- OUTPUT:
35.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:33:05) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- OUTPUT:
35.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:33:13) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
vb=float(input("vb:"))
v0=(2*vb)
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- OUTPUT:
35.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:36:04) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:37:22) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=(((2*(ma+mb))/(ma+mb))*v0)
print(vf)


-- EXECUTION TIME:
0.208047
-- TEST CASE 1:
---- input:
123.4
456.7
8.9
---- correct output:
10.793225305981728
---- user output:
17.8
-- TEST CASE 2:
---- input:
1000.0
5000.0
100.0
---- correct output:
116.66666666666667
---- user output:
200.0
-- TEST CASE 3:
---- input:
4000.0
6000.0
100.0
---- correct output:
140.0
---- user output:
200.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:38:46) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*(ma+mb/(ma+mb))*v0
print(vf)


-- OUTPUT:
2210.5335493880366
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:38:57) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*(ma+mb/(ma+mb))*v0
print(vf)


-- OUTPUT:
2210.5335493880366
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:39:41) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*(ma+mb)/(ma+mb)*v0
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:40:04) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*((ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:40:26) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*((ma+mb)//(ma+mb))*v0
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:40:32) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=2*((ma+mb)//(ma+mb))*v0
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:41:27) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=((2*ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
10.793225305981728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:41:35) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=((2*ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
10.793225305981728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:41:42) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=((2*ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
10.793225305981728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:43:52) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("vb:"))
vf=(2*(ma+mb)/(ma+mb))*v0
print(vf)


-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:47:11) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("v0:"))
vf=(2*(ma+mb)/ma+mb)*v0
print(vf)
-- OUTPUT:
4148.307309562399
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:48:24) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("v0:"))
vf=(2*(ma+mb))/(ma+mb)*(v0)
print(vf)
-- OUTPUT:
17.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:50:36) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("v0:"))
vf=(2*ma+mb)/(ma+mb)*v0
print(vf)
-- OUTPUT:
10.793225305981728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 18:51:47) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("v0:"))
vf=(((2*ma)+mb)/(ma+mb))*v0
print(vf)
-- OUTPUT:
10.793225305981728
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 18:52:03) 
-- CODE:
ma=float(input("ma:"))
mb=float(input("mb:"))
v0=float(input("v0:"))
vf=(((2*ma)+mb)/(ma+mb))*v0
print(vf)
-- EXECUTION TIME:
0.18942
-- TEST CASE 1:
---- input:
123.4
456.7
8.9
---- correct output:
10.793225305981728
---- user output:
10.793225305981728
-- TEST CASE 2:
---- input:
1000.0
5000.0
100.0
---- correct output:
116.66666666666667
---- user output:
116.66666666666667
-- TEST CASE 3:
---- input:
4000.0
6000.0
100.0
---- correct output:
140.0
---- user output:
140.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
