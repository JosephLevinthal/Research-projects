== TEST (2019-04-22 15:54:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("invalido")
elif ((a == b) and (b == c)):
	print ("equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("isosceles")
else:
	print ("escaleno")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:55:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("invalido")
elif ((a == b) and (b == c)):
	print ("equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("isosceles")
else:
	print ("escaleno")
-- EXECUTION TIME:
0.188875
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:56:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("invalido")
elif ((a == b) and (b == c)):
	print ("equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("isosceles")
else:
	print ("escaleno")
-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:56:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("invalido")
elif ((a == b) and (b == c)):
	print ("equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("isosceles")
else:
	print ("escaleno")
-- EXECUTION TIME:
0.123265
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 15:58:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Tipo de triangulo: isosceles")
else:
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 15:58:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Tipo de triangulo: isosceles")
else:
	print ("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.178451
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:02:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a, b, c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 16:02:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a, b, c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a, b, c)
	print ("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.251812
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:03:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a, b, c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:04:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a "," b ",", c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a "," b "," c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a "," b "," c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a "," b "," c)
	print ("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    print (a "," b ",", c)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:05:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 16:06:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print (a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print(a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print (a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print (a, b, c)
	print ("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.161428
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:34:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 16:35:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.142232
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:35:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas: ", a, b ,c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas:  2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:37:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a, b ,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:38:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    print ("Entradas:", a,, b ,,c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:38:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a,, b ,,c)
	print ("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    print ("Entradas:", a,, b ,,c)
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:39:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 16:39:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 18:17:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	print ("Entradas:", a, b ,c)
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	print("Entradas:", a, b, c)
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: isosceles")
else:
	print ("Entradas:", a, b, c)
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-22 18:19:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
print ("Entradas:", a, "," ,b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	
	print ("Tipo de triangulo: isosceles")
else:
	
	print ("Tipo de triangulo: escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-22 18:20:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("escreva o valor do lado1: "))
b = float(input("escreva o valor do lado2: "))
c = float(input("escreva o valor do lado3: "))
print ("Entradas:", a, "," ,b, ",", c)
if ((a >= b + c) or (b >= a + c) or (c >= a + b)):
	
	print ("Tipo de triangulo: invalido")
elif ((a == b) and (b == c)):
	
	print ("Tipo de triangulo: equilatero")
elif ((a == b) or (a == c) or (b == c)):
	
	print ("Tipo de triangulo: isosceles")
else:
	
	print ("Tipo de triangulo: escaleno")
-- EXECUTION TIME:
0.154588
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
