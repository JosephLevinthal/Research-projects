== TEST (2019-03-25 18:07:33) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print("Abra", nome*rep)

-- OUTPUT:
Abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:45) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print("Abra", nome*rep)
-- EXECUTION TIME:
0.134722
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livrolivrolivrolivrolivrolivrolivrolivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carrocarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:07:58) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print("Abra", nome)*rep
-- EXECUTION TIME:
0.205746
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1601/1801/main.py", line 4, in <module>
    print("Abra", nome)*rep
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:08:19) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print(("Abra", nome)*rep)
-- EXECUTION TIME:
0.12894
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
('Abra', 'carro', 'Abra', 'carro')
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
('Abra', 'caixa')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:08:25) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print(("Abra", nome)*rep)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:08:52) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print(("Abra" + nome)*rep)
-- EXECUTION TIME:
0.224523
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
AbracarroAbracarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abracaixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:08:53) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print(("Abra" + nome)*rep)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:09:06) 
-- CODE:
nome = input("Nome do objeto: ")
rep = int(input("Numero de repeticoes: "))

print((" Abra " + nome)*rep)
-- EXECUTION TIME:
0.19925
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
