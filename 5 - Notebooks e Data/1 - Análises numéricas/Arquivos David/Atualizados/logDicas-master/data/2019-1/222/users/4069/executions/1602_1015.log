== TEST (2019-03-27 18:07:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(6))
b = int(input(2))
c = int(input(4))
print(min(a, b, c))
print(max(a, b, c))

-- OUTPUT:
624-2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:07:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(6))
b = int(input(2))
c = int(input(4))
print(min(a, b, c))
print(max(a, b, c))

-- EXECUTION TIME:
0.200846
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
624-2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:08:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(6))
b = int(input(2))
c = int(input(4))
print(min(a, b, c))

-- OUTPUT:
624-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:08:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(6))
b = int(input(2))
c = int(input(4))
print(min(a, b, c))

-- EXECUTION TIME:
0.131217
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
624-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:09:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(6))
b = int(input(2))
c = int(input(4))
print(min(a, b, c))

-- OUTPUT:
624-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
min(a, b, c)
max(a, b, c)
intermediario = (a + b + c )


-- OUTPUT:
624-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
min(a, b, c)
max(a, b, c)
intermediario = (a + b + c )


-- OUTPUT:
624-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:15:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
min(a, b, c)
max(a, b, c)
intermediario = (a + b + c - b - a)
print(min, intermediario, max)


-- EXECUTION TIME:
0.134141
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
<built-in function min> 0 <built-in function max>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
min(a, b, c)
max(a, b, c)
intermediario = (a + b + c - b - a)
print(min, intermediario, max)


-- OUTPUT:
<built-in function min> 0 <built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
minimo = min(a, b, c)
maximo = max(a, b, c)
intermediario = (a + b + c - b - a)
print(min, intermediario, max)


-- OUTPUT:
<built-in function min> 0 <built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:17:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
minimo = min(a, b, c)
maximo = max(a, b, c)
intermediario = (a + b + c - b - a)
print(min, intermediario, max)


-- EXECUTION TIME:
0.125446
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
<built-in function min> 0 <built-in function max>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
minimo = min(a, b, c)
maximo = max(a, b, c)
intermediario = (a + b + c - b - a)
print(min, intermediario, max)


-- OUTPUT:
<built-in function min> 0 <built-in function max>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
minimo = min(a, b, c)
maximo = max(a, b, c)
intermediario = (a + b + c - b - a)
print(minimo, intermediario, maximo)


-- OUTPUT:
-2 0 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:18:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero: "))
b = int(input("segundo numero: "))
c = int(input("terceiro numero: "))
minimo = min(a, b, c)
maximo = max(a, b, c)
intermediario = (a + b + c - b - a)
print(minimo, intermediario, maximo)


-- EXECUTION TIME:
0.215214
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 0 10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
