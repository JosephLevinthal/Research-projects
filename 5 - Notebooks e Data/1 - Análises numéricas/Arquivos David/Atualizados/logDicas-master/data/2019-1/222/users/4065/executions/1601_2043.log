== TEST (2019-03-25 18:49:16) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = n1*1 + n2*2 + n3*3 + n4*4 / n1 + n2 + n3 + n4

print(round(nota_aplicada,2))
-- OUTPUT:
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:49:31) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = n1*1 + n2*2 + n3*3 + n4*4 / n1 + n2 + n3 + n4

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.146133
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
75.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
67.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
73.49
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:50:13) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = n1*1+n2*2+n3*3+n4*4/n1+n2+n3+n4

print(round(nota_aplicada,2))
-- OUTPUT:
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:50:20) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = n1*1+n2*2+n3*3+n4*4/n1+n2+n3+n4

print(round(nota_aplicada,2))
-- OUTPUT:
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:50:39) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = n1*1+n2*2+n3*3+n4*4/n1+n2+n3+n4

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.172411
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
75.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
67.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
73.49
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:50:53) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4/n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- OUTPUT:
75.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:51:30) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- OUTPUT:
2.52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:51:54) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.132858
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
2.52
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
2.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
2.68
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:52:18) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)//(n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- OUTPUT:
2.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:52:44) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- OUTPUT:
2.52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:53:03) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(n1+n2+n3+n4)

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.212329
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
2.52
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
2.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
2.68
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:53:55) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(1+2+3+4)

print(round(nota_aplicada,2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:54:10) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(1+2+3+4)

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.229903
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:11:03) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(1+2+3+4)

print(round(nota_aplicada,2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:11:25) 
-- CODE:
n1 = float(input("nota 1 : "))
n2 = float(input("nota 2 : "))
n3 = float(input("nota 3 : "))
n4 = float(input("nota 4 : "))

nota_aplicada = (n1*1+n2*2+n3*3+n4*4)/(1+2+3+4)

print(round(nota_aplicada,2))
-- EXECUTION TIME:
0.182063
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
