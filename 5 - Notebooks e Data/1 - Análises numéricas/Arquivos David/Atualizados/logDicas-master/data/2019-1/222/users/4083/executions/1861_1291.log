== TEST (2019-06-26 19:03:14) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print(round(valor,0))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:03:45) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print(round(valor, 1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:04:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print(valor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:04:57) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print(round(valor, 1))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:06:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", valor)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:08:05) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", valor[0,1])
print("ortopedico:",valor[1,1])
print("infantil:", valor[2,1])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:08:37) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", valor[0,0])
print("ortopedico:",valor[1,0])
print("infantil:", valor[2,0])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:09:32) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", valor[0,0])
print("ortopedico:",valor[0,1])
print("infantil:", valor[0,2])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:13:30) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", valor[0],0)
print("ortopedico:",valor[0],1)
print("infantil:", valor[0],2)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:15:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",valor[1],1)
print("infantil:", valor[2],1)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:18:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",round(valor[1],1))
print("infantil:", round(valor[2],1))

if (min(valor[0],1)):
	print("regular")
elif (min(valor[1],1)):
		print("ortopedica")
elif	(min(valor[2],1))
		print("infantil")


-- ERROR:
File "XXXX", line 16
    elif	(min(valor[2],1))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:21:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",round(valor[1],1))
print("infantil:", round(valor[2],1))
a = min(valor)
if (valor[0]==min(valor)):
	print("regular")
elif (valor[1]== min(valor)):
		print("ortopedica")
elif	(valor[2] == min(valor))
		print("infantil")


-- ERROR:
File "XXXX", line 16
    elif	(valor[2] == min(valor))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 19:21:29) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",round(valor[1],1))
print("infantil:", round(valor[2],1))
a = min(valor)
if (valor[0]==min(valor)):
	print("regular")
elif (valor[1]== min(valor)):
		print("ortopedica")
elif	(valor[2] == min(valor)):
		print("infantil")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 19:21:35) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",round(valor[1],1))
print("infantil:", round(valor[2],1))
a = min(valor)
if (valor[0]==min(valor)):
	print("regular")
elif (valor[1]== min(valor)):
		print("ortopedica")
elif	(valor[2] == min(valor)):
		print("infantil")


-- EXECUTION TIME:
1.03442
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedica
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 19:21:56) 
-- CODE:
from numpy import*
from numpy.linalg import*
v = array(eval(input("digite: ")))

quan = array([[50,60,40],[30,40,20],[10,15,8]])
valor = dot(inv(quan), v.T)

print("regular:", round(valor[0],1))
print("ortopedico:",round(valor[1],1))
print("infantil:", round(valor[2],1))
a = min(valor)
if (valor[0]==min(valor)):
	print("regular")
elif (valor[1]== min(valor)):
		print("ortopedico")
elif	(valor[2] == min(valor)):
		print("infantil")


-- EXECUTION TIME:
1.311
-- TEST CASE 1:
---- input:
[623980,350700,134591]
---- correct output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
---- user output:
regular: 1212.0
ortopedico: 3265.0
infantil: 9187.0
regular
-- TEST CASE 2:
---- input:
[375920,219120,80734]
---- correct output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
---- user output:
regular: 2532.0
ortopedico: 1850.0
infantil: 3458.0
ortopedico
-- TEST CASE 3:
---- input:
[994800,620500,221415]
---- correct output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
---- user output:
regular: 9650.0
ortopedico: 7485.0
infantil: 1580.0
infantil
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
