== SUBMITION (2019-06-26 12:19:21) 
-- CODE:
from numpy import *
notas = array(eval(input("Notas: ")))
nomes = array(eval(input("Nomes: ")))

f = 0
ap = 0
rp = 0
nt = 0
i = 0
j = 0

while(i < size(notas)):
	if(notas[i] == -1):
		f = f + 1
		
	if(notas[i] >= 6):
		ap = ap + 1
		
	if(notas[i] < 6 and notas[i] >= 0):
		rp = rp + 1

	if(notas[i] >= 0):
		nt = nt + notas[i]
	i = i + 1

	if(notas[j] != max(notas)):
		j = j + 1
	
print(f)
print(ap)
print(rp)
print(round(nt/(ap+rp),2))
print(nomes[j])
-- EXECUTION TIME:
1.13041
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1760/1183/main.py", line 3, in <module>
    nomes = array(eval(input()))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 12:19:54) 
-- CODE:
from numpy import *
v = array(eval(input("v: ")), dtype=int)

i = 0
j = 0
k = 0
p = 0

while(i < size(v)):
	if (v[i] > 0):
		p = p + 1
	i = i + 1
		

d = array(zeros (p), dtype=int)

while (j < size(v) and k < size(d)):
	if (v[j] >= 0):
		d[k] = d[k] + v[j]
		j = j + 1
		k = k + 1
	elif(v[j] < 0):
		j = j + 1

		
print(d)
-- EXECUTION TIME:
1.26127
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
v: [18 32 14 25]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-26 12:20:19) 
-- CODE:
from numpy import *
v = array(eval(input("v: ")), dtype=int)

i = 0
j = 0
k = 0
p = 0

while(i < size(v)):
	if (v[i] > 0):
		p = p + 1
	i = i + 1
		

d = array(zeros(p), dtype=int)

while (j < size(v) and k < size(d)):
	if (v[j] >= 0):
		d[k] = d[k] + v[j]
		j = j + 1
		k = k + 1
	elif(v[j] < 0):
		j = j + 1		
print(d)
-- EXECUTION TIME:
0.945742
-- TEST CASE 1:
---- input:
[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,1]
---- correct output:
[1]
---- user output:
[1]
-- TEST CASE 2:
---- input:
[2,-1,3,-4,5]
---- correct output:
[2 3 5]
---- user output:
[2 3 5]
-- TEST CASE 3:
---- input:
[-1,18,32,14,25,-6]
---- correct output:
[18 32 14 25]
---- user output:
[18 32 14 25]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
