== TEST (2019-03-27 17:18:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(2/3)

-- OUTPUT:
0.6666666666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:19:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(1/3)
print(input(round(2/3, 3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(input(round(2/3, 3)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:19:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(1/3)
print(input(round(2/3, 3)))
-- EXECUTION TIME:
0.214173
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 5, in <module>
    print(input(round(2/3, 3)))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:19:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(1/3)
print(input(round(1/3, 3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(input(round(1/3, 3)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:19:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(1/3)
print(input(round(1/3, 3)))
-- EXECUTION TIME:
0.166789
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 5, in <module>
    print(input(round(1/3, 3)))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:20:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(2/3 - 1/3)
print(round(input, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(input, 3))
TypeError: type builtin_function_or_method doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:21:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(2/3 - 1/3)
print(round(input, 3))
-- EXECUTION TIME:
0.179266
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 5, in <module>
    print(round(input, 3))
TypeError: type builtin_function_or_method doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:21:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(2/3-1/3)
print(round(input, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(input, 3))
TypeError: type builtin_function_or_method doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:21:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
input(2/3-1/3)
print(round(input, 3))
-- EXECUTION TIME:
0.197778
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 5, in <module>
    print(round(input, 3))
TypeError: type builtin_function_or_method doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:35:51) 
-- CODE:
quantidaemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y, 3)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x= quantidadeemlitros*2/3
NameError: name 'quantidadeemlitros' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:36:35) 
-- CODE:
quantidade_em_litros= float(input("qual a quantidade em litros? "))

x= quantidade_em_litros*2/3

y= quantidade_em_litros-x

print(y, 3)

-- OUTPUT:
2.333333333333333 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:36:49) 
-- CODE:
quantidade_em_litros= float(input("qual a quantidade em litros? "))

x= quantidade_em_litros*2/3

y= quantidade_em_litros-x

print(y, 3)

-- EXECUTION TIME:
0.117119
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:37:08) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y, 3)

-- OUTPUT:
2.333333333333333 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:37:17) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y, 3)

-- EXECUTION TIME:
0.162488
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:37:30) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y,3)

-- EXECUTION TIME:
0.142202
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:37:55) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y,3)

-- OUTPUT:
2.333333333333333 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:38:08) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y,3)

-- EXECUTION TIME:
0.231525
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:38:15) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y, 3)

-- EXECUTION TIME:
0.162895
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333333333333333 3
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.666666666666666 3
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:38:16) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(y, 3)

-- OUTPUT:
2.333333333333333 3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 17:38:34) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(round(y, 3))

-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:38:41) 
-- CODE:
quantidadeemlitros= float(input("qual a quantidade em litros? "))

x= quantidadeemlitros*2/3

y= quantidadeemlitros-x

print(round(y, 3))

-- EXECUTION TIME:
0.291601
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
