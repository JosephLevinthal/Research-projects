== TEST (2019-03-29 00:51:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.aqtr(S*(S-A)*(S-B)*(S-C))
print(a, 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.aqtr(S*(S-A)*(S-B)*(S-C))
AttributeError: module 'math' has no attribute 'aqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:52:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqtr(S*(S-A)*(S-B)*(S-C))
print(a, 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqtr(S*(S-A)*(S-B)*(S-C))
AttributeError: module 'math' has no attribute 'sqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 00:52:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(a, 5)
-- EXECUTION TIME:
0.147102
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 9, in <module>
    a = math.sqtr(S(S-A)(S-B)(S-C))
AttributeError: 'module' object has no attribute 'sqtr'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:52:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(a, 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqtr(S(S-A)(S-B)(S-C))
AttributeError: module 'math' has no attribute 'sqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:59:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(a, 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqtr(S(S-A)(S-B)(S-C))
AttributeError: module 'math' has no attribute 'sqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 00:59:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(a, 5)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqtr(S(S-A)(S-B)(S-C))
AttributeError: module 'math' has no attribute 'sqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(round(a, 5)
-- ERROR:
File "XXXX", line 11
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqtr(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqtr(S(S-A)(S-B)(S-C))
AttributeError: module 'math' has no attribute 'sqtr'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:00:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math,sqtr(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math,sqtr(S(S-A)(S-B)(S-C))
NameError: name 'sqtr' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 01:00:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math,sqtr(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- EXECUTION TIME:
0.218417
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1016/main.py", line 9, in <module>
    a = math,sqtr(S(S-A)(S-B)(S-C))
NameError: name 'sqtr' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:01:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = 1.2*(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = 1.2*(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:02:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = (1.2*(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
File "XXXX", line 10
    print(round(a, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = (1.2*(S(S-A)(S-B)(S-C))
print(a)round(a, 5))
-- ERROR:
File "XXXX", line 10
    print(a)round(a, 5))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:03:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(a)round(a, 5)
-- ERROR:
File "XXXX", line 10
    print(a)round(a, 5)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:04:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5)
-- ERROR:
File "XXXX", line 11
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:04:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqrt(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:09:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
File "XXXX", line 4
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:09:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from "math" import
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
File "XXXX", line 4
    from "math" import
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:09:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from ("math") import
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
File "XXXX", line 4
    from ("math") import
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:12:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqrt(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:13:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = print(math.sqrt(S(S-A)(S-B)(S-C)))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = print(math.sqrt(S(S-A)(S-B)(S-C)))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:15:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input("3.0"))
B = float(input("8.0"))
C = float(input("6.0"))
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqrt(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:16:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqrt(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:16:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
A = float(input())
B = float(input())
C = float(input())
S = A+B+C/2
a = math.sqrt(S(S-A)(S-B)(S-C))
print(round(a, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    a = math.sqrt(S(S-A)(S-B)(S-C))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:20:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("3.0"))
b = float(input("8.0"))
c = float(input("6.0"))
s = A+B+C/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    s = A+B+C/2
NameError: name 'A' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:21:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("3.0"))
b = float(input("8.0"))
c = float(input("6.0"))
s = a+b+c/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:22:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("3,0"))
b = float(input("8,0"))
c = float(input("6,0"))
s = a+b+c/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
638.20837
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:22:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("3,0"))
b = float(input("8,0"))
c = float(input("6,0"))
s = a+b+c/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5416))
-- OUTPUT:
638.2083659746244
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:22:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input("3,0"))
b = float(input("8,0"))
c = float(input("6,0"))
s = (a+b+c)/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5416))
-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:23:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 01:23:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
import math
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:28:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:29:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import sqrt
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- EXECUTION TIME:
0.150011
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 16:52:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 16:53:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import*
a = float(input())
b = float(input())
c = float(input())
s = (a+b+c)/2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- EXECUTION TIME:
0.228805
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
