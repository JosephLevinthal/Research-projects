== TEST (2019-04-28 03:21:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(a,"pertence ao intervalo",a,b)
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:22:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(a,"pertence ao intervalo",a , ,b)
-- ERROR:
File "XXXX", line 9
    print(a,"pertence ao intervalo",a , ,b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:22:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(a,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    print(a,"pertence ao intervalo",a , ,b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:22:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(a,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    print(a,"pertence ao intervalo",a , ,b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:23:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
-- ERROR:
File "XXXX", line 9
    print(a,"pertence ao intervalo",a , ,b)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:25:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif:
	print("x,"nao pertence ao intervalo",a,",",b")
-- ERROR:
File "XXXX", line 10
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:25:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print("x,"nao pertence ao intervalo",a,",",b")
-- ERROR:
File "XXXX", line 11
    print("x,"nao pertence ao intervalo",a,",",b")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:26:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b")
-- ERROR:
File "XXXX", line 11
    print(x,"nao pertence ao intervalo",a,",",b")
                                                ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:26:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:29:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
elif(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 12
    elif(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:29:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
if(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 13
    print("Entradas",a,","b,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:29:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
if(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 13
    print("Entradas",a,","b,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:29:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 12
    else(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:30:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas",a,","b,"invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 9
    print("Entradas",a,","b,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:31:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas",a,b,"invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 15
    else(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:32:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas",a,","b,"invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 9
    print("Entradas",a,","b,"invalidas")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:32:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else(b <= a):
	print("Entradas",a,","b,"invalidas")
-- ERROR:
File "XXXX", line 15
    else(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:33:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:34:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas",a,",",b, "invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:34:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b <= a):
	print("Entradas",a,",",b, "invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:35:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
	
if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:37:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif:
	print(x,"nao pertence ao intervalo",a,",",b)
	
else:
	if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 10
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:38:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
		elif:
			print(x,"nao pertence ao intervalo",a,",",b)
	
else:
	if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 10
    elif:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:38:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
	
else:
	if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:39:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	if(b < a) or (b == a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 03:39:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	if(b < a) or (b == a):
		print("Entradas",a,",",b, "invalidas")

-- EXECUTION TIME:
0.114072
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:43:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

else(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    else(b < a) or (b == a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:43:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

elif(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    else(b < a) or (b == a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:44:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

elif(b <= a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    else(b < a) or (b == a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:45:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

elif(b <= a):
	print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    else(b < a) or (b == a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:45:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	elif(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    elif(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:45:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    elif(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:46:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) and (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    elif(b <= a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:46:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:47:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 03:47:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- EXECUTION TIME:
0.221825
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:47:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:48:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:48:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:49:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:50:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:50:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b <= a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:51:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b < a) or (b = a):
		print("Entradas",a,",",b, "invalidas")

-- ERROR:
File "XXXX", line 13
    if(b < a) or (b = a):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:52:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)
else:
	if(b < a) or (b == a):
		print("Entradas",a,",",b, "invalidas")

-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:52:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 03:54:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")

if(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- EXECUTION TIME:
0.148896
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:54:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 03:55:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
elif(x <= a) or (x >= b):
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- EXECUTION TIME:
0.164817
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:55:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:55:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:55:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 03:56:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- EXECUTION TIME:
0.254357
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 , 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 03:56:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 04:01:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,",",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 04:03:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,"e",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 04:03:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,"e",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 04:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("valor de x: "))
a = float(input("valor de a: "))
b = float(input("valor de b: "))

if(b < a) or (b == a):
	print("Entradas",a,"e",b, "invalidas")
elif(x >= a) and (x <= b):
	print(x,"pertence ao intervalo",a,",",b)
else:
	print(x,"nao pertence ao intervalo",a,",",b)

	
-- EXECUTION TIME:
0.118627
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
