== TEST (2019-03-21 13:55:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = pi*r**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = pi*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:56:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (pi)*r**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = (pi)*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:57:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (math.pi)*r**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = (math.pi)*r**2
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:17:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (math.pi)*r**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = (math.pi)*r**2
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (pi)*r**2
volume = 
-- ERROR:
File "XXXX", line 6
    volume = 
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (pi)*r**2
volume = 
-- ERROR:
File "XXXX", line 6
    volume = 
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = pi*r**2
volume = 
-- ERROR:
File "XXXX", line 6
    volume = 
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:12:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = pi*r**2
volume = 4/3*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = pi*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:12:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (pi)*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = (pi)*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area = (pi)*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area = (pi)*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:21:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
pi = 3,14
area = pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = pi*r**2
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:22:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
pi = 3,14
area = (pi)*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = (pi)*r**2
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:22:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
pi = 3,14
area = float(pi)*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area = float(pi)*r**2
TypeError: float() argument must be a string or a number, not 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:23:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area =pi*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:25:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area =pi*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:58:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
r = float(input("valor do raio: "))
area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area =pi*r**2
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:54:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import *
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume))
-- ERROR:
File "XXXX", line 4
    from math import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:55:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import*
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
File "XXXX", line 4
    from math import*
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:56:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import pi
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
File "XXXX", line 4
    from math import pi
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 12:57:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
File "XXXX", line 4
    from math import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:20:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
File "XXXX", line 4
    from math import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:21:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
 from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
File "XXXX", line 4
    from math import *
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:22:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3
print(round(area,volume,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(area,volume,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 13:25:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3

print(round(area,3))
print(round(volume,3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:25:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3

print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.297029
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 13:25:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3

print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.163807
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:23:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3

print(round(area,3))
print(round(volume,3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:23:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
	
r = float(input("valor do raio: "))

area =pi*r**2
volume = (4/3)*pi*r**3

print(round(area,3))
print(round(volume,3))
-- EXECUTION TIME:
0.197984
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
