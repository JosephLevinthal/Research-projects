== TEST (2019-06-21 02:02:55) 
-- CODE:
from numpy import*
n= int(input(""))

mat=zeros((n,n), dtype=int)

for i in range(0,n):
for j in range(0,n):
	
mat[i,j]=min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,n):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:03:09) 
-- CODE:
from numpy import*
n= int(input(""))

mat=zeros((n,n), dtype=int)

for i in range(o,n):
for j in range(o,n):
	
mat[i,j]=min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(o,n):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:03:54) 
-- CODE:
from numpy import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

for i in range(o,N):
for j in range(o,N):
	
mat[i,j]=min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(o,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:05:11) 
-- CODE:
from numpy import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:06:06) 
-- CODE:
from numpy import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

	for  i in range(0,N):
	for  j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 6
    for  i in range(0,N):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:06:38) 
-- CODE:
from numpy import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for  i in range(0,N):
for  j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for  j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:07:33) 
-- CODE:
from numpy import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:07:54) 
-- CODE:
from numpy import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:08:02) 
-- CODE:
from numpy import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 02:08:19) 
-- CODE:
from numpy import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 7
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 14:31:08) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 8
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 14:31:45) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for I in range(0,N):
for J in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 8
    for J in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 14:32:57) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(","))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-21 14:33:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:04:47) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:04:58) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:05:07) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
if j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    if j in range(0,N):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:05:19) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
elif j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    elif j in range(0,N):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:05:31) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
else:
	j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:05:47) 
-- CODE:
from numpy import*
from numpy.linalg import*
N= int(input(""))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
for j in range(0,N):
	
mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
File "XXXX", line 9
    for j in range(0,N):
      ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:54:35) 
-- CODE:
from numpy import*
 
N= int(input("matriz quadrada:"))

mat=zeros((N,N), dtype=int)

if i in range(0,N):
	
	for j in range(0,N):
		mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 23:55:27) 
-- CODE:
from numpy import*
 
N= int(input("matriz quadrada:"))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
	for j in range(0,N):
		mat[i,j]= min(i,j)+1

print(mat)

-- EXECUTION TIME:
1.10438
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-23 23:55:33) 
-- CODE:
from numpy import*
 
N= int(input("matriz quadrada:"))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
	for j in range(0,N):
		mat[i,j]= min(i,j)+1

print(mat)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-23 23:55:47) 
-- CODE:
from numpy import*
 
N= int(input("matriz quadrada:"))

mat=zeros((N,N), dtype=int)

for i in range(0,N):
	
	for j in range(0,N):
		mat[i,j]= min(i,j)+1

print(mat)

-- EXECUTION TIME:
1.11904
-- TEST CASE 1:
---- input:
3
---- correct output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
---- user output:
[[1 1 1]
 [1 2 2]
 [1 2 3]]
-- TEST CASE 2:
---- input:
8
---- correct output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
---- user output:
[[1 1 1 1 1 1 1 1]
 [1 2 2 2 2 2 2 2]
 [1 2 3 3 3 3 3 3]
 [1 2 3 4 4 4 4 4]
 [1 2 3 4 5 5 5 5]
 [1 2 3 4 5 6 6 6]
 [1 2 3 4 5 6 7 7]
 [1 2 3 4 5 6 7 8]]
-- TEST CASE 3:
---- input:
1
---- correct output:
[[1]]
---- user output:
[[1]]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
