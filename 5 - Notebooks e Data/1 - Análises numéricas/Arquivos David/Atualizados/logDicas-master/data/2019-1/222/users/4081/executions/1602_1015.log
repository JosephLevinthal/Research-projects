== TEST (2019-03-24 18:52:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
min=int(input(2))
max=int(input(6))
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:13:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("primeiro numero"))
b = int(input("segundo numero"))
c = int(input("terceiro numero"))
soma = a+b+c
print(soma-max())
print(max(a,b,c))
print(min(a,b,c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(soma-max())
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:14:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("p"))
b = int(input(""))
c = int(input(""))
print(a+b+c-max())
print(max(a,b,c))
print(min(a,b,c))
-- EXECUTION TIME:
0.178454
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 7, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:15:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(""))
b = int(input(""))
c = int(input(""))
print(a+b+c-max())
print(max(a,b,c))
print(min(a,b,c))
-- EXECUTION TIME:
0.226241
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 7, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:15:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(""))
b = int(input(""))
c = int(input(""))
print(a+b+c-max())
print(max(a,b,c))
print(min(a,b,c))
-- EXECUTION TIME:
0.138911
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 7, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:15:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(""))
b = int(input(""))
c = int(input(""))
print(a+b+c-max())
print(max(a,b,c))
print(min(a,b,c))
-- EXECUTION TIME:
0.141259
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 7, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:15:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input(""))
b = int(input(""))
c = int(input(""))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c-max())
-- EXECUTION TIME:
0.188648
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1015/main.py", line 9, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:16:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a"))
b = int(input("valor de b"))
c = int(input("valor de c"))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c-max())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:17:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a"))
b = int(input("valor de b"))
c = int(input("valor de c"))
print(a+b+c-max())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:17:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c-max())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c-max())
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:18:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c)-max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c)-max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:19:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a+b+c)-max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a+b+c)-max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:20:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a + b + c)-max()
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(a + b + c)-max()
TypeError: max expected 1 arguments, got 0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(-max(a + b + c)
-- ERROR:
File "XXXX", line 10
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:27:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a + b + c)-max)
-- ERROR:
File "XXXX", line 9
    print(a + b + c)-max)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:28:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("valor de a: "))
b = int(input("valor de b: "))
c = int(input("valor de c: "))
print(max(a,b,c))
print(min(a,b,c))
print(a + b + c-max()
-- ERROR:
File "XXXX", line 10
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:58:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))
print(a+b+c-max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- EXECUTION TIME:
0.179584
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:12:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))
print(a+b+c-max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- EXECUTION TIME:
0.130382
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 19:18:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))
print(a+b+c-max(a,b,c)-min(a,b,c))
print(max(a,b,c))
-- EXECUTION TIME:
0.156874
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
