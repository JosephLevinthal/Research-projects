== TEST (2019-03-27 19:23:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int(((x/10)%10)%10)
d = int(x/10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
934
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:25:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int(((x/10)%10)%10)
d = int((x/1000)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/1000)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:30:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:31:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- EXECUTION TIME:
0.203569
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:31:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:31:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- EXECUTION TIME:
0.178174
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:32:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:32:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:33:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input("qual o numero: "))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:34:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:34:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- EXECUTION TIME:
0.209354
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:34:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:35:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(a)
                                                                                                 

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:36:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(b)
                                                                                                 

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:36:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(c)
                                                                                                 

-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:37:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(d)
                                                                                                 

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:37:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(a)
                                                                                                 

-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:38:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(b)
                                                                                                 

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:38:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(c)
                                                                                                 

-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:39:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(d)
                                                                                                 

-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:40:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo
x = int(input(""))
a = x//1000
b = int((x/100)%10) 
c = int((x/10)%10)
d = int((x/100)%10)
soma = (a+b+c+d)
print(soma)
                                                                                                 

-- EXECUTION TIME:
0.149242
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
