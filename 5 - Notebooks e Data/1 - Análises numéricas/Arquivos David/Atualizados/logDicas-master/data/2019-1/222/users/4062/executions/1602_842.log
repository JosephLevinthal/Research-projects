== TEST (2019-03-30 13:45:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
print("analisando o numero" (num))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("analisando o numero" (num))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:45:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
print("analisando o numero" (num))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print("analisando o numero" (num))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:46:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
print(num)
-- OUTPUT:
9173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:46:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
print(num)
print(num2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(num2)
NameError: name 'num2' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:49:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
n  = str(num)
print(n(1))
print(n(2))
print(n(3))
print(n(4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(n(1))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:52:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(n(1))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:52:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
print(a)
-- OUTPUT:
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:53:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//1%100
c = num//1%1000
print(a)
print(b)
print(c)
-- OUTPUT:
3
73
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:54:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//1%100
c = num//1%1000
print(a)
print(b)
print(c)
-- OUTPUT:
3
73
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:54:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//1%100
c = num//1%1000
print(a)
print(b)
print(c)
-- OUTPUT:
3
73
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:54:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//1%100
c = num//1%1000
print(a)
print(b)
print(c)
-- OUTPUT:
3
73
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:55:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
print(a)
print(b)
print(c)
-- OUTPUT:
3
7
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:56:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a)
print(b)
print(c)
-- OUTPUT:
3
7
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:56:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a)
print(b)
print(c)
print(d)
-- OUTPUT:
3
7
1
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:57:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a)
print(b)
print(c)
print(d)
print(a+b+c+d)
-- OUTPUT:
3
7
1
9
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 13:57:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a)
print(b)
print(c)
print(d)
print(a+b+c+d)
-- EXECUTION TIME:
0.145702
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
3
7
1
9
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
0
1
0
1
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 13:57:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a+b+c+d)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 13:58:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a+b+c+d)
-- EXECUTION TIME:
0.131526
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 14:00:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
num = int(input("qualquer inteiro de quatro digitos: "))
a = num//1%10
b = num//10%10
c = num//100%10
d = num//1000%10
print(a+b+c+d)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
