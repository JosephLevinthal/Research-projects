== TEST (2019-05-15 01:38:43) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (sqrt(12)*(-1)**(t + 1))/((2t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- ERROR:
File "XXXX", line 9
    tg = (sqrt(12)*(-1)**(t + 1))/((2t - 1)*(3**(t-1)))
                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:38:56) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (sqrt(12)*(-1)**(t + 1))/((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
13.53389536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:40:21) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg =(-1)**(t + 1)/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 01:40:59) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (-1)**(t - 1)/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- EXECUTION TIME:
0.161863
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
-2613.81704575
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
-150467.0306428
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
142.93646912
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:41:00) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (-1)**(t - 1)/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:45:45) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (-1)**(t - 1)/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:46:06) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (-1)**(t - 1)/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:49:00) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1))/(2*t - 1)*(3**(t-1))
	soma = soma + sqrt(12)*tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:49:13) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/(2*t - 1)*(3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2613.81704575
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:49:46) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/((2*t - 1)*(3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    soma = soma + tg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:50:07) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
13.53389536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:50:11) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
13.53389536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:50:49) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/((2*t - 1)*(3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    soma = soma + tg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:51:01) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = sqrt(12)*((-1)**(t + 1))/((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
13.53389536
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:51:06) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1))/((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
3.90689906
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:51:32) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = (-1)**(t + 1))/(2*t - 1)*(3**(t-1)
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- ERROR:
File "XXXX", line 9
    tg = (-1)**(t + 1))/(2*t - 1)*(3**(t-1)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:51:39) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1))/(2*t - 1)*(3**(t-1)
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    soma = soma + tg
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:51:58) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
3.90689906
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:52:34) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / 1
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:53:08) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / (2*t -1)*(3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-754.54398749
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:53:43) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
3.90689906
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:54:14) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 0

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / (3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
-2.2500127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:54:44) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / (3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
0.7499873
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:55:24) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / (3**(t-1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))
-- OUTPUT:
0.7499873
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:56:14) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t < n):
	tg = ((-1)**(t + 1)) / 3**(t-1)
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
0.7499873
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:56:28) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t < n):
	tg = ((-1)**(t + 1))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
0.7499873
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:57:28) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = ((-1)**(t + 1)) / 3**(t-1)
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
0.75000423
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:57:54) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = ((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
0.90689987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:57:57) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = ((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
0.90689987
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:58:14) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = sqrt(12)*((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 01:58:18) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = sqrt(12)*((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 01:58:21) 
-- CODE:
from math import *
n = int(input("Numero de termos: "))

t = 1

soma = 0

while (t <= n):
	tg = sqrt(12)*((-1)**(t + 1)) / ((2*t - 1)*(3**(t-1)))
	soma = soma + tg
	t = t + 1

print(round(soma,8))

-- EXECUTION TIME:
0.174626
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
