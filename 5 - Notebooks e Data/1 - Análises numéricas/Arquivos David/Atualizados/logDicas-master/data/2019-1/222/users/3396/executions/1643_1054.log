== TEST (2019-04-03 19:50:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=flopat(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto perte a reta")
else:
	print("ponto nao pertence a reta")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=flopat(input())
NameError: name 'flopat' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:50:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto perte a reta")
else:
	print("ponto nao pertence a reta")
-- OUTPUT:
ponto perte a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:50:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto perte a reta")
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.188159
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto perte a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:51:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto perte a reta")
else:
	print("ponto nao pertence a reta")
-- OUTPUT:
ponto perte a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:51:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto perte a reta")
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.181485
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto perte a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:51:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-03 19:51:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("x:"))
y=float(input("y:"))
reta=((2*x)+y)
if(reta==3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")
-- EXECUTION TIME:
0.264997
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
