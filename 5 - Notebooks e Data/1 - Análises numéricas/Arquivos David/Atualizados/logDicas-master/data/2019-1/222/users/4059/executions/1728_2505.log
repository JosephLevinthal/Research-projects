== TEST (2019-06-10 17:11:56) 
-- CODE:
import math *

x=eval(input())
k=int(input)
soma=0
t=0

while (t<k):
	x=((-1)**t)/factorial(2*t+1)*x**(2t+1)
	soma=soma+x
	t=t+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 1
    import math *
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:12:28) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t<k):
	x=((-1)**t)/factorial(2*t+1)*x**(2t+1)
	soma=soma+x
	t=t+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 9
    x=((-1)**t)/factorial(2*t+1)*x**(2t+1)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:13:03) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t<k):
	x=((-1)**t)/math.factorial(2*t+1)*x**(2t+1)
	soma=soma+x
	t=t+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 9
    x=((-1)**t)/math.factorial(2*t+1)*x**(2t+1)
                                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:14:26) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t<k):
	tg=((-1)**t)/factorial(2*t+1)*x**(2t+1)
	soma=soma+tg
	t=t+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 9
    tg=((-1)**t)/factorial(2*t+1)*x**(2t+1)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:14:27) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t<k):
	tg=((-1)**t)/factorial(2*t+1)*x**(2t+1)
	soma=soma+tg
	t=t+1
print(round(soma,10))
-- ERROR:
File "XXXX", line 9
    tg=((-1)**t)/factorial(2*t+1)*x**(2t+1)
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:14:47) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t < k):
	tg = (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + tg
	t = t + 1

print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    k=int(input)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 17:16:04) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t < k):
	ta= (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + ta
	t = t + 1

print(round(soma, 10))
-- EXECUTION TIME:
0.894898
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1728/2505/main.py", line 4, in <module>
    k=int(input)
TypeError: int() argument must be a string or a number, not 'builtin_function_or_method'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:16:10) 
-- CODE:
from math import *

x=eval(input())
k=int(input)
soma=0
t=0

while (t < k):
	ta= (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + ta
	t = t + 1

print(round(soma, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    k=int(input)
TypeError: int() argument must be a string, a bytes-like object or a number, not 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-10 17:16:29) 
-- CODE:
from math import *

x=eval(input())
k=int(input())
soma=0
t=0

while (t < k):
	ta= (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + ta
	t = t + 1

print(round(soma, 10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 17:16:31) 
-- CODE:
from math import *

x=eval(input())
k=int(input())
soma=0
t=0

while (t < k):
	ta= (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + ta
	t = t + 1

print(round(soma, 10))
-- EXECUTION TIME:
0.558357
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-10 17:16:33) 
-- CODE:
from math import *

x=eval(input())
k=int(input())
soma=0
t=0

while (t < k):
	ta= (((-1)**t)/factorial(2*t +1))*x**(2*t +1)
	soma = soma + ta
	t = t + 1

print(round(soma, 10))
-- EXECUTION TIME:
0.845055
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
