== TEST (2019-04-10 03:44:57) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:45:49) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
	

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:46:54) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else(preco < pagamento):
	print("troco de y")

-- ERROR:
File "XXXX", line 6
    else(preco < pagamento):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:47:42) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print("troco de y")

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 03:47:58) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print("troco de y")

-- EXECUTION TIME:
0.128225
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta x
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:49:04) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round(troco de y, 2))

-- ERROR:
File "XXXX", line 8
    print(round(troco de y, 2))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:49:29) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:49:54) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:50:11) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:50:15) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:50:41) 
-- CODE:
preco = int(input("preco:"))
pagamento = int(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco = int(input())
ValueError: invalid literal for int() with base 10: '38.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:51:08) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("falta x")
else:
	(preco < pagamento)
	print(round("troco de y, 2"))

-- OUTPUT:
falta x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:55:53) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round(Troco de Y, 2))

-- ERROR:
File "XXXX", line 8
    print(round(Troco de Y, 2))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:57:00) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round(Y, 2))

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:57:05) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round(Y, 2))

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:57:51) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 03:58:15) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco y")

-- EXECUTION TIME:
0.162066
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:58:25) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:58:54) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 03:59:36) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round("troco y, 2"))

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 04:00:07) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round(troco y, 2))

-- ERROR:
File "XXXX", line 8
    print(round(troco y, 2))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 04:00:50) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print(round(troco_y, 2))

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 04:01:26) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 04:01:42) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- EXECUTION TIME:
0.160144
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco_y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco_y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:16:56) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:17:40) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))

if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- EXECUTION TIME:
0.129524
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco_y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco_y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:29:07) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:29:28) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:29:44) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:29:48) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- EXECUTION TIME:
0.192478
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco_y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco_y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:30:30) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
a = preco
b =  pagamento
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
Falta X
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:30:38) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
a = preco
b =  pagamento
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta X")
else:
	(preco < pagamento)
	print("troco_y")

-- EXECUTION TIME:
0.21592
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta X
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco_y
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco_y
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:32:54) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("troco", x)
else:
	(preco < pagamento)
	print("troco_y")

-- OUTPUT:
troco -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:34:05) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("troco", x)
else:
	(preco < pagamento)
	print("troco de", y)

-- OUTPUT:
troco -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:34:10) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("troco", x)
else:
	(preco < pagamento)
	print("troco de", y)

-- EXECUTION TIME:
0.1106
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
troco -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:36:42) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("troco", x)
else:
	print("troco de", y)

-- OUTPUT:
troco -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:36:47) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("troco", x)
else:
	print("troco de", y)

-- EXECUTION TIME:
0.142489
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
troco -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:38:38) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Troco", x)
else:
	print("Troco de", y)

-- OUTPUT:
Troco -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:38:42) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Troco", x)
else:
	print("Troco de", y)

-- EXECUTION TIME:
0.234718
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Troco -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:38:55) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta", x)
else:
	print("Troco de", y)

-- EXECUTION TIME:
0.129474
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:39:08) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta", x)
else:
	print("Troco de", y)

-- EXECUTION TIME:
0.131662
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta -26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 21:39:12) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta", x)
else:
	print("Troco de", y)

-- OUTPUT:
Falta -26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 21:41:04) 
-- CODE:
preco = float(input("preco:"))
pagamento = float(input("pagamento: "))
x = pagamento - preco
y = preco - pagamento
if(preco > pagamento):
	print("Falta", y)
else:
	print("Troco de", x)

-- EXECUTION TIME:
0.139043
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
