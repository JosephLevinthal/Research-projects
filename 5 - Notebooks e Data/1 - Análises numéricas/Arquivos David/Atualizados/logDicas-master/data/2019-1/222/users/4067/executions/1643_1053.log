== SUBMITION (2019-04-15 00:09:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo"
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.222749
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    if patrono == "cervo"
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:09:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo"
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 5
    if patrono == "cervo"
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:10:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == cervo
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.231036
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    if patrono == cervo
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:11:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == input(cervo)
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.140626
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 5
    if patrono == input(cervo)
                             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:11:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == input(cervo)
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 5
    if patrono == input(cervo)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:16:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono = cervo
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 5
    if patrono = cervo
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:17:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.254655
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:17:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = "cervo eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:19:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = patrono"eh patrono do Harry Potter"
else:
	mensagem = patrono"nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.197732
-- ERROR:
  File "/home/codebench/codes/1643/1053/main.py", line 6
    mensagem = patrono"eh patrono do Harry Potter"
                                                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:20:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = patrono,"eh patrono do Harry Potter"
else:
	mensagem = patrono,"nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.129807
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
('cervo', 'eh patrono do Harry Potter')
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
('bode', 'nao eh patrono do Harry Potter')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:20:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = patrono,"eh patrono do Harry Potter"
else:
	mensagem = patrono,"nao eh patrono do Harry Potter"
print(mensagem)
-- OUTPUT:
('cervo', 'eh patrono do Harry Potter')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:21:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = (patrono,"eh patrono do Harry Potter")
else:
	mensagem = (patrono,"nao eh patrono do Harry Potter")
print(mensagem)
-- EXECUTION TIME:
0.150368
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
('cervo', 'eh patrono do Harry Potter')
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
('bode', 'nao eh patrono do Harry Potter')
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:21:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = (patrono,"eh patrono do Harry Potter")
else:
	mensagem = (patrono,"nao eh patrono do Harry Potter")
print(mensagem)
-- OUTPUT:
('cervo', 'eh patrono do Harry Potter')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:22:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = input(patrono,"eh patrono do Harry Potter")
else:
	mensagem = input(patrono,"nao eh patrono do Harry Potter")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    mensagem = input(patrono,"eh patrono do Harry Potter")
TypeError: input expected at most 1 arguments, got 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:24:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(patrono, mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 00:25:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(patrono, mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:25:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("nome do patrono: ")
if patrono == "cervo":
	mensagem = "eh patrono do Harry Potter"
else:
	mensagem = "nao eh patrono do Harry Potter"
print(patrono, mensagem)
-- EXECUTION TIME:
0.219576
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
