== TEST (2019-04-08 13:59:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("frase")
if (a==frase):
	print(asno)
else:
	print(asno nao eh patrono do harry potter)
-- ERROR:
File "XXXX", line 8
    print(asno nao eh patrono do harry potter)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:00:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("frase")
if (a==frase):
	print("asno")
else:
	print("asno nao eh patrono do harry potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a==frase):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:09:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("cervo")
if (a==cervo) (a!=cervo):
	print("cervo eh patrono do harry potter")
else:
	print("cervo nao eh patrono do harry potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a==cervo) (a!=cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:09:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("cervo")
if (a=="cervo") (a!="cervo"):
	print("cervo eh patrono do harry potter")
else:
	print("cervo nao eh patrono do harry potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="cervo") (a!="cervo"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:14:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("cervo")
if (a=="cervo") (a!="cervo"):
	print("cervo eh patrono do harry potter")
	print("cervo nao eh patrono do harry potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="cervo") (a!="cervo"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:14:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=("cervo")
if (a=="cervo") (a!="cervo"):
	print("cervo eh patrono do harry potter")
	print("cervo nao eh patrono do harry potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="cervo") (a!="cervo"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:08:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("asno")
if (a=="asno") (a!="asno"):
   feit("asno eh patrono do harry potter")
else:
	feit("asno nao eh patrono do harry potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="asno") (a!="asno"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 15:08:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("frase")
if (a=="frase") (a!="frase"):
   feit("asno eh patrono do harry potter")
else:
	feit("asno nao eh patrono do harry potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="frase") (a!="frase"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:13:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=input("frase")
if (a=="frase") (a!="frase"):
   feit("asno eh patrono do harry potter")
else:
	feit("asno nao eh patrono do harry potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a=="frase") (a!="frase"):
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:18:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a=="frase"):
   feit("asno eh patrono do Harry Potter")
else:
	feit("asno nao eh patrono do Harry Potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    feit("asno nao eh patrono do Harry Potter")
NameError: name 'feit' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:22:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a>"frase"):
   feit("asno eh patrono do Harry Potter")
else:
	feit("asno nao eh patrono do Harry Potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    feit("asno nao eh patrono do Harry Potter")
NameError: name 'feit' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:22:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a>"frase"):
   frase("asno eh patrono do Harry Potter")
else:
	frase("asno nao eh patrono do Harry Potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    frase("asno nao eh patrono do Harry Potter")
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:26:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a>frase):
   frase("asno eh patrono do Harry Potter")
else:
	frase("asno nao eh patrono do Harry Potter")
print("feit")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a>frase):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:26:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a>frase):
   frase("asno eh patrono do Harry Potter")
else:
	frase("asno nao eh patrono do Harry Potter")
print("feit")	
-- EXECUTION TIME:
0.163775
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    if (a>frase):
NameError: name 'frase' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:27:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (a>frase):
   frase("asno eh patrono do Harry Potter")
else: 
	frase("asno nao eh patrono do Harry Potter")
print("frase")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (a>frase):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:29:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if ("frase == asno":
   frase("asno eh patrono do Harry Potter")
else: 
	frase("asno nao eh patrono do Harry Potter")
print("frase")	
-- ERROR:
File "XXXX", line 5
    if ("frase == asno":
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:29:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (frase == asno):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print("frase")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (frase == asno):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:29:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (frase == asno):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print("frase")	
-- EXECUTION TIME:
0.139425
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    if (frase == asno):
NameError: name 'frase' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:31:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a= input("frase")
if (frase == a):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print("frase")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (frase == a):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:32:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
asno= input("frase")
if (asno == frase):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print("frase")	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (asno == frase):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:35:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= input("frase")
if (patrono == cervo):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:35:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= input("frase")
if (patrono == cervo):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- EXECUTION TIME:
0.143782
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    patrono= input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:35:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= (asno)
if (patrono == frase):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono= (asno)
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:35:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= (asno)
if (patrono == frase):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- EXECUTION TIME:
0.208663
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    patrono= (asno)
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:36:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= (asno)
if (frase == patrono):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono= (asno)
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:36:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono= (asno)
if (frase == patrono):
   frase("asno eh patrono do Harry Potter.")
else: 
	frase("asno nao eh patrono do Harry Potter.")
print(mensagem, frase)	
-- EXECUTION TIME:
0.169688
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    patrono= (asno)
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:36:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=(asno)
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono=(asno)
NameError: name 'asno' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:36:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=(asno)
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com
	  )	
-- EXECUTION TIME:
0.163827
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    patrono=(asno)
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:36:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=(asno)
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- EXECUTION TIME:
0.160669
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 5, in <module>
    patrono=(asno)
NameError: name 'asno' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:37:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=("asno")
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    com("asno nao eh patrono do Harry Potter.")
NameError: name 'com' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:37:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=("asno")
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- EXECUTION TIME:
0.208145
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 9, in <module>
    com("asno nao eh patrono do Harry Potter.")
NameError: name 'com' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:37:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=("asno")
if (frase == patrono):
   com("asno eh patrono do Harry Potter.")
else: 
	com("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    com("asno nao eh patrono do Harry Potter.")
NameError: name 'com' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:37:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=(input("frase:"))
patrono=("asno")
if (frase == patrono):
   mensagem("asno eh patrono do Harry Potter.")
else: 
	mensagem("asno nao eh patrono do Harry Potter.")
print(mensagem, com)	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem("asno nao eh patrono do Harry Potter.")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:40:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	mensagem(frase,"asno nao eh patrono do Harry Potter")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    mensagem(frase,"asno nao eh patrono do Harry Potter")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:40:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	mensagem(frase,"asno nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.210105
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/1053/main.py", line 9, in <module>
    mensagem(frase,"asno nao eh patrono do Harry Potter")
NameError: name 'mensagem' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:40:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase,"asno nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.185937
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo asno nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:40:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase," nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.144556
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode  nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:40:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase," nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.180204
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode  nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:41:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.145156
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:42:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "asno nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo asno nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:42:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "asno nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.138966
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo asno nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode asno nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:42:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "asno nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo asno nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:42:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.13385
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:42:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:43:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno nao patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:43:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno nao patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.177125
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:43:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno nao patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:44:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("asno eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:45:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("cervo eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.12966
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo nao eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:45:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("asno")
if (frase == patrono):
   print("cervo eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo nao eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 18:45:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("cervo")
if (frase == patrono):
   print("cervo eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:45:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("cervo")
if (frase == patrono):
   print("cervo eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.175935
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 18:57:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
frase=input("frase:")
patrono=("cervo")
if (frase == patrono):
   print("cervo eh patrono do Harry Potter")
else: 
	print(frase, "nao eh patrono do Harry Potter")
	
-- EXECUTION TIME:
0.1665
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
