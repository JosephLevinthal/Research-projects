== TEST (2019-04-25 00:02:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(inpu("brasao: "))
if(x==StarK):
-- ERROR:
File "XXXX", line 5
    
                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:04:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(inpu("brasao: "))
if(x==lobo):
-- ERROR:
File "XXXX", line 5
    
                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:06:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(inpu("brasao: "))
if(lobo==Stark):
-- ERROR:
File "XXXX", line 5
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:47:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(inpu("brasao: "))
if(X==lobo):
	print("Stark")
elif(x==leao):
	print("Lannister")
elif(x==veado):
	print("Baratheon")
elif(x==dragao):
   print("Targaryen")
elif(x==rosa):
	print("Tyrell")
elif(x==sol):
   print("Martell")
elif(x==lula):
	print("Greyjoy")
elif(x==esfolado):
   print("Bolton")
elif(x==turta):
	print(Tully)
else:
	print("Entrada:Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(inpu("brasao: "))
NameError: name 'inpu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:48:02) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(inpu("brasao: "))
if(X==lobo):
	print("Stark")
elif(x==leao):
	print("Lannister")
elif(x==veado):
	print("Baratheon")
elif(x==dragao):
   print("Targaryen")
elif(x==rosa):
	print("Tyrell")
elif(x==sol):
   print("Martell")
elif(x==lula):
	print("Greyjoy")
elif(x==esfolado):
   print("Bolton")
elif(x==turta):
	print(Tully)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(inpu("brasao: "))
NameError: name 'inpu' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:48:57) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if(X==lobo):
	print("Stark")
elif(x==leao):
	print("Lannister")
elif(x==veado):
	print("Baratheon")
elif(x==dragao):
   print("Targaryen")
elif(x==rosa):
	print("Tyrell")
elif(x==sol):
   print("Martell")
elif(x==lula):
	print("Greyjoy")
elif(x==esfolado):
   print("Bolton")
elif(x==turta):
	print(Tully)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:50:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if(X==lobo):
	print("Stark")
elif(x==leao):
	print("Lannister")
elif(x==veado):
	print("Baratheon")
elif(x==dragao):
   print("Targaryen")
elif(x==rosa):
	print("Tyrell")
elif(x==sol):
   print("Martell")
elif(x==lula):
	print("Greyjoy")
elif(x==esfolado):
   print("Bolton")
elif(x==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:52:04) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if(X==lobo):
	print("Stark")
elif(x==leao):
	print("Lannister")
elif(x==veado):
	print("Baratheon")
elif(x==dragao):
   print("Targaryen")
elif(x==rosa):
	print("Tyrell")
elif(x==sol):
   print("Martell")
elif(x==lula):
	print("Greyjoy")
elif(x==esfolado):
   print("Bolton")
elif(x==turta):
	print(Tully)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:54:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:54:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:56:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("brasao: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:58:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("Guerra dos Tronos: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 00:58:33) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("Guerra dos Tronos: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:51:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("Guerra dos Tronos: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 16:52:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("descricao do brasao: "))
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:31:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("descricao do brasao: "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print(Tully)
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:38:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("descricao do brasao: "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:39:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("descricao do brasao: "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:41:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =int(input("descricao do brasao: "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =int(input())
ValueError: invalid literal for int() with base 10: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:45:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input(" TV : "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:46:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input("TV: "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:58:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input(" "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 17:58:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
x =float(input(" "))
print("Entrada: ",x)
if("x"==lobo):
	print("Stark")
elif("x"==leao):
	print("Lannister")
elif("x"==veado):
	print("Baratheon")
elif("x"==dragao):
   print("Targaryen")
elif("x"==rosa):
	print("Tyrell")
elif("x"==sol):
   print("Martell")
elif("x"==lula):
	print("Greyjoy")
elif("x"==esfolado):
   print("Bolton")
elif("x"==turta):
	print("Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    x =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:18:07) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =float(input("descricao do brasao: "))
print("Entrada: ",x)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:18:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =float(input("descricao do brasao: "))
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Casa: Tyrell")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:19:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =float(input("descricao do brasao: "))
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a =float(input())
ValueError: could not convert string to float: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:21:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =int(input("descricao do brasao: "))
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a =int(input())
ValueError: invalid literal for int() with base 10: 'lula'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:22:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =input("descricao do brasao: ")
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:22:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =input("descricao do brasao: ")
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.18662
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:25:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =input("descricao do brasao: ")
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 21:26:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =input("descricao do brasao: ")
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 21:26:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a =input("descricao do brasao: ")
print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.125505
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:05:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
from math import *
a =input("descricao do brasao: ")

print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 22:05:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
from math import *
a =input("descricao do brasao: ")

print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 22:06:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
from math import *
a =input("descricao do brasao: ")

print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.153752
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 14:13:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
from math import *
a =input("descricao do brasao: ")

print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- OUTPUT:
Entrada:  lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 14:14:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
from math import *
a =input("descricao do brasao: ")

print("Entrada: ",a)
if(a=="lobo"):
	print("Casa: Stark")
elif(a=="leao"):
	print("Casa: Lannister")
elif(a=="veado"):
	print("Casa: Baratheon")
elif(a=="dragao"):
   print("Casa: Targaryen")
elif(a=="rosa"):
	print("Casa: Tyrell")
elif(a=="sol"):
   print("Casa: Martell")
elif(a=="lula"):
	print("Casa: Greyjoy")
elif(a=="esfolado"):
   print("Casa: Bolton")
elif(a=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
-- EXECUTION TIME:
0.119426
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada:  lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada:  tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada:  dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
