== TEST (2019-04-15 14:28:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x, y) > 0 :
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (x, y) > 0 :
TypeError: '>' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:32:50) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if x > 0: 
	if y > 0: 
		print("Superiores")
	else:
	print("Inferiores")	
else: 
	print("Inferiores")
-- ERROR:
File "XXXX", line 9
    print("Inferiores")	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:33:09) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if x > 0: 
	if y > 0: 
		print("Superiores")

else: 
	print("Inferiores")
-- ERROR:
File "XXXX", line 9
    print("Inferiores")	
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:34:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x > 0), (y>0): 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
File "XXXX", line 5
    if (x > 0), (y>0): 
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:35:07) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x > 0)(y>0): 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (x > 0)(y>0): 
TypeError: 'bool' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:36:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))
a = x + y

if (a > 0): 
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 14:36:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))
a = x + y

if (a > 0): 
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 14:36:35) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))
a = x + y

if (a > 0): 
	print("Superiores")
else: 
	print("Inferiores")
-- EXECUTION TIME:
0.230441
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Inferiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:31:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x, y) > 0: 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if (x, y) > 0: 
TypeError: '>' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:32:13) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x) > 0 : 
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:32:25) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x) > 0 : 
	print("Superiores")
else: 
	print("Inferiores")
-- EXECUTION TIME:
0.195236
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Inferiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:33:10) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x, y)
if (a) > 0 : 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (a) > 0 : 
TypeError: '>' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:33:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x, y)
if (a > 0) : 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if (a > 0) : 
TypeError: '>' not supported between instances of 'tuple' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:34:06) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x + y)
if (a > 0) : 
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:34:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x + y)
if (a > 0) : 
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:34:24) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x + y)
if (a > 0) : 
	print("Superiores")
else: 
	print("Inferiores")
-- EXECUTION TIME:
0.230335
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Inferiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:34:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

a = (x + y)
if (a < 0) : 
	print("Inferiores")
else: 
	print("Superiores")
-- EXECUTION TIME:
0.170481
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Inferiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:38:02) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x < 0) & (y < x) : 
	print("Inferiores")
else: 
	print("Superiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:38:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x < 0) & (y < x) : 
	print("Inferiores")
else: 
	print("Superiores")
-- EXECUTION TIME:
0.181418
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:38:14) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x < 0) & (y < x) : 
	print("Inferiores")
else: 
	print("Superiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:38:34) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x < 0) & (y < 0) : 
	print("Inferiores")
else: 
	print("Superiores")
-- OUTPUT:
Superiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:38:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x < 0) & (y < 0) : 
	print("Inferiores")
else: 
	print("Superiores")
-- EXECUTION TIME:
0.129686
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Superiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:40:37) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x > 0) & (y > 0) ou  (x < 0) & (y>0): 
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
File "XXXX", line 5
    if (x > 0) & (y > 0) ou  (x < 0) & (y>0): 
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:42:11) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x != 0) & (y > 0):
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:42:32) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x =! 0) & (y > 0):
	print("Superiores")
else: 
	print("Inferiores")
-- ERROR:
File "XXXX", line 5
    if (x =! 0) & (y > 0):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-18 19:43:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x != 0) & (y > 0):
	print("Superiores")
else: 
	print("Inferiores")
-- OUTPUT:
Inferiores
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-18 19:43:48) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("Digite um valor "))
y = float(input("Digite um valor "))

if (x != 0) & (y > 0):
	print("Superiores")
else: 
	print("Inferiores")
-- EXECUTION TIME:
0.185429
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Inferiores
---- user output:
Inferiores
-- TEST CASE 2:
---- input:
0.1
0.1
---- correct output:
Superiores
---- user output:
Superiores
-- TEST CASE 3:
---- input:
-4.5
2.2
---- correct output:
Superiores
---- user output:
Superiores
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
