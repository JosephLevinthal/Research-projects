== SUBMITION (2019-03-29 17:26:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
-- EXECUTION TIME:
0.198865
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:

-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:26:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:27:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
print(round(var, 3))
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:28:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input(
-- ERROR:
File "XXXX", line 5
    
                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:34:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
print(round((math%pi)*(r ** 2)), 3)
print(round((math%pi)*4/3*(r ** 3)), 3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round((math%pi)*(r ** 2)), 3)
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 17:34:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
print(round((math(pi)*(r ** 2)), 3)
print(round((math(pi)*4/3*(r ** 3)), 3)
-- ERROR:
File "XXXX", line 6
    print(round((math(pi)*4/3*(r ** 3)), 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 09:43:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
var= float(input("digite o valor do raio: "))
area= pi*(var ** 2)
volume= 4/3*pi*(var ** 3)
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    area= pi*(var ** 2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 12:15:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# From math import *
var= float(input("digite o valor do raio: "))
area= pi*(var ** 2)
volume= 4/3*pi*(var ** 3)
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area= pi*(var ** 2)
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 12:17:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# From math import *
# pi
var= float(input("digite o valor do raio: "))
area= (var ** 2)*pi
volume= 4/3*(var ** 3)*pi
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    area= (var ** 2)*pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 12:19:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# From math import * pi
var= float(input("digite o valor do raio: "))
area= (var ** 2)*pi
volume= 4/3*(var ** 3)*pi
print(round(area, 3))
print(round(volume, 3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    area= (var ** 2)*pi
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 20:43:25) 
-- CODE:
import math 
var= float(input("digite o valor do raio: "))
area= (var ** 2)*math.pi
volume= 4/3*(var ** 3)*math.pi
print(round(area, 3))
print(round(volume, 3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 20:43:56) 
-- CODE:
import math 
var= float(input("digite o valor do raio: "))
area= (var ** 2)*math.pi
volume= 4/3*(var ** 3)*math.pi
print(round(area, 3))
print(round(volume, 3))
-- EXECUTION TIME:
0.153663
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
