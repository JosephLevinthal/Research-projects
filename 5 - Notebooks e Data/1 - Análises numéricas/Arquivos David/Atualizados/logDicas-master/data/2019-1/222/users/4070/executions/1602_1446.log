== TEST (2019-03-27 19:34:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
litros = 10
inst = (2/3)*10
sobrou = (1/3)*10

print(round(sobrou, 3))

-- OUTPUT:
3.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:35:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
litros = 10
inst = (2/3)*10
sobrou = (1/3)*10

print(round(sobrou, 3))

-- EXECUTION TIME:
0.253533
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
3.333
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
3.333
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:41:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*litro


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    vars = (1/2)*litro
NameError: name 'litro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:42:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*litro
print(round(vars, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    vars = (1/2)*litro
NameError: name 'litro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:42:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*litro
print(round(vars, 3))

-- EXECUTION TIME:
0.132025
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 7, in <module>
    vars = (1/2)*litro
NameError: name 'litro' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:43:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*litro
print(round(vars, 3))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    vars = (1/2)*litro
NameError: name 'litro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:43:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:43:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- EXECUTION TIME:
0.205706
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.5
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
7.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:43:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:43:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:43:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = int(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:46:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = float(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:46:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = float(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- EXECUTION TIME:
0.143409
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
3.5
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
10.0
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
7.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:48:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = float(input("litro:"))
vars = (1/2)*varp
print(round(vars, 3))

-- OUTPUT:
3.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:48:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
# varp = polpa de fruta
#vars = sobrou
varp = float(input("litro:"))
vars = (1/3)*varp
print(round(vars, 3))

-- EXECUTION TIME:
0.16514
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
