== TEST (2019-03-25 18:44:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(print("quanto vale a: "))
b = float(print("quanto vale b: "))
c = float(print("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = float(print("quanto vale a: "))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:45:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(print("quanto vale a: "))
b = float(print("quanto vale b: "))
c = float(print("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = float(print("quanto vale a: "))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:45:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(print("quanto vale a: "))
b = float(print("quanto vale b: "))
c = float(print("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = float(print("quanto vale a: "))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:46:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(input("quanto vale a: "))
b= float(input("quanto vale b: "))
c= float(input("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:47:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(input("quanto vale a: "))
b= float(input("quanto vale b: "))
c= float(input("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z, 5))
-- EXECUTION TIME:
0.11211
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 19:23:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codi
import math
a = float(input("quanto vale a: "))
b= float(input("quanto vale b: "))
c= float(input("quanto vale c: "))
s = (a+b+c)/2
Z = math.sqrt(s*(s-a)*(s-b)*(s-c))
print(round(Z, 5))
-- EXECUTION TIME:
0.139014
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
