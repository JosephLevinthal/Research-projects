== TEST (2019-03-24 17:20:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = math: radians(float(input("-3.130601 ")))

-- ERROR:
File "XXXX", line 5
    t1 = math: radians(float(input()))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:22:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = math: radians(float(input("-3, 130601 ")))
g1= math:

-- ERROR:
File "XXXX", line 5
    t1 = math: radians(float(input()))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:32:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = math:radians(float(input("-3.130601 ")))

-- ERROR:
File "XXXX", line 5
    t1 = math:radians(float(input()))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:33:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1 = math:radians(float(input("-3.130601")))

-- ERROR:
File "XXXX", line 5
    t1 = math:radians(float(input()))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:35:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

t1= math:radians(float(input("-3.130601")))
g1
-- ERROR:
File "XXXX", line 5
    t1= math:radians(float(input()))
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:40:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math:radians(float(input("-3.130601")))

-- ERROR:
File "XXXX", line 4
    t1= math:radians(float(input()))
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:42:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math,radians(float(input("-3.130601")))
g1= 

-- ERROR:
File "XXXX", line 5
    g1= 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:42:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math,radians(float(input("-3.130601")))
g1= math,radians(float(input("-60.02306")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    t1= math,radians(float(input()))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:43:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= Math,radians(float(input("-3.130601")))
g1= Math,radians(float(input("-60.02306")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    t1= Math,radians(float(input()))
NameError: name 'Math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:44:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math.radians(float(input("-3.130601")))
g1= math.radians(float(input("-60.02306")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    t1= math.radians(float(input()))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:45:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math,radians(float(input("-3.130601")))
g2= math,radians(float(input("-60.02306")))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    t1= math,radians(float(input()))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:48:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math,radians(float(input("-3.130601")))
g2= math,radians(float(input("-60.02306")))
t2= math,radians(float(input("-3.083550"))) 
g2= math,radians(float(input("-60.027781")))  
R= 6271,01


-- ERROR:
File "XXXX", line 8
    R= 6271,01
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 17:59:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
t1= math,radians(float(input("-3.130601")))
g2= math,radians(float(input("-60.02306")))
t2= math,radians(float(input("-3.083550"))) 
g2= math,radians(float(input("-60.027781")))  
R= 6271,01



-- ERROR:
File "XXXX", line 8
    R= 6271,01
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:50:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= math,radians(float(input("-3.130601")))
g2= math,radians(float(input("-60.02306")))
t2= math,radians(float(input("-3.083550"))) 
g2= math,radians(float(input("-60.027781")))  
R= 6271,01



-- ERROR:
File "XXXX", line 9
    R= 6271,01
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:51:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g2= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271,01



-- ERROR:
File "XXXX", line 9
    R= 6271,01
             ^
SyntaxError: invalid token
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:55:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)



-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:56:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2)
-- ERROR:
File "XXXX", line 11
    
                                                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:56:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:57:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print("a distancia e", round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 19:57:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print("a distancia e", round(d,2), "Ka")
-- EXECUTION TIME:
0.1327
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 10, in <module>
    d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 19:58:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 19:59:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
t1= radians(float(input("-3.130601")))
g1= radians(float(input("-60.02306")))
t2= radians(float(input("-3.083550"))) 
g2= radians(float(input("-60.027781")))  
R= 6271.01
d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
print("a distancia é",round(d,2), "Ka")
-- EXECUTION TIME:
0.140799
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 10, in <module>
    d= R * arcos(sen(t1) * sen(t2) + cos(t1) * cos(t2) * cos(g1 - g2))
NameError: name 'arcos' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:02:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1")))
long1= radians(float(input("longitude do ponto 1")))
lat2= radians(float(input("latitude do ponto 2"))) 
long2= radians(float(input("longitude do ponto 2")))  
R= 6271.01
d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:02:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1")))
long1= radians(float(input("longitude do ponto 1")))
lat2= radians(float(input("latitude do ponto 2"))) 
long2= radians(float(input("longitude do ponto 2")))  
R= 6271.01
d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- EXECUTION TIME:
0.137832
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 10, in <module>
    d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'arcos' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:02:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1")))
long1= radians(float(input("longitude do ponto 1")))
lat2= radians(float(input("latitude do ponto 2"))) 
long2= radians(float(input("longitude do ponto 2")))  
R= 6271.01
d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:03:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:04:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * arcos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'arcos' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:05:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * acos(sen(la1) * sen(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'sen' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:07:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sin(la1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    d= R * acos(sin(la1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
NameError: name 'la1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:09:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- OUTPUT:
a distancia é 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:10:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- OUTPUT:
a distancia é 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:10:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia é",round(d,2), "Ka")
-- EXECUTION TIME:
0.193334
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1017/main.py", line 11, in <module>
    print("a distancia \xe9",round(d,2), "Ka")
UnicodeEncodeError: 'ascii' codec can't encode character '\xe9' in position 12: ordinal not in range(128)

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:10:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1:")))
long1= radians(float(input("longitude do ponto 1:")))
lat2= radians(float(input("latitude do ponto 2:"))) 
long2= radians(float(input("longitude do ponto 2:")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:11:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:12:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:12:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- EXECUTION TIME:
0.177591
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia e 49.65 Ka
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:13:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:14:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:15:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- EXECUTION TIME:
0.196993
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia e 49.65 Ka
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:17:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 49.65 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:19:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6271.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- EXECUTION TIME:
0.143588
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia e 49.65 Ka
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-24 20:19:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6371.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- OUTPUT:
a distancia e 50.44 Ka
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-24 20:20:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1= radians(float(input("latitude do ponto 1: ")))
long1= radians(float(input("longitude do ponto 1: ")))
lat2= radians(float(input("latitude do ponto 2: "))) 
long2= radians(float(input("longitude do ponto 2: ")))  
R= 6371.01
d= R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("a distancia e",round(d,2), "Ka")
-- EXECUTION TIME:
0.139886
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
a distancia e 50.44 Ka
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:40:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("-3.130601")))
long1 = radians(float(input("-60.02306")))
lat2 = radians(float(input("-3.083550")))
long2 = radians(float(input("-60.027781")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-556.38
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:40:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("-3.130601")))
long1 = radians(float(input("-60.02306")))
lat2 = radians(float(input("-3.083550")))
long2 = radians(float(input("-60.027781")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- EXECUTION TIME:
0.125949
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
-556.38
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:40:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("-3.130601")))
long1 = radians(float(input("-60.02306")))
lat2 = radians(float(input("-3.083550")))
long2 = radians(float(input("-60.027781")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-556.38
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:41:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-556.38
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:41:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- EXECUTION TIME:
0.135021
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
-556.38
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:41:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1)) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2)
print(round(d,2))
-- OUTPUT:
-556.38
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:56:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("distancia em" ,round(d,2), "Km"
-- ERROR:
File "XXXX", line 12
    
                                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:56:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("distancia em" ,round(d,2), "Km")
-- OUTPUT:
distancia em 50.44 Km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:57:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("distancia em" ,round(d,2), "Km")
-- EXECUTION TIME:
0.125918
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
distancia em 50.44 Km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 00:57:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1")))
long1 = radians(float(input("longitude 1")))
lat2 = radians(float(input("latitude 2")))
long2 = radians(float(input("longitude 2")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("distancia em" ,round(d,2), "Km")
-- OUTPUT:
distancia em 50.44 Km
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 00:58:02) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1")))
long1 = radians(float(input("longitude 1")))
lat2 = radians(float(input("latitude 2")))
long2 = radians(float(input("longitude 2")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print("distancia em" ,round(d,2), "Km")
-- EXECUTION TIME:
0.129381
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
distancia em 50.44 Km
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 03:01:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- OUTPUT:
50.44
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 03:01:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
lat1 = radians(float(input("latitude 1: ")))
long1 = radians(float(input("longitude 1: ")))
lat2 = radians(float(input("latitude 2: ")))
long2 = radians(float(input("longitude 2: ")))
R = 6371.01
d = R * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1 - long2))
print(round(d,2))
-- EXECUTION TIME:
0.180641
-- TEST CASE 1:
---- input:
-3.036131
-60.04585
-3.088496
-59.59464
---- correct output:
50.44
---- user output:
50.44
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
