== TEST (2019-03-21 13:25:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numeros = int(input("digite um numero inteiro: "))

-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:26:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:27:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
n = n // 10
soma = soma + resto
print("a soma dos numeros e: , soma")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    soma = soma + resto
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:28:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
n = n // 10
soma = n + resto
print("a soma dos numeros e: , soma")
-- OUTPUT:
a soma dos numeros e: , soma
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:28:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
n = n // 10
soma = n + resto
print("a soma dos numeros e: , soma")
-- OUTPUT:
a soma dos numeros e: , soma
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:29:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
n = n // 10
soma = n + resto
print("a soma dos numeros e:" , soma)
-- OUTPUT:
a soma dos numeros e: 920
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:29:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))
resto = n%10
n = n // 10
soma = n + resto
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  920
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 13:44:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma = n*(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  42076551
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:16:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma = n*(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  42076551
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:16:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma = n*(n+1)//2
print("a soma dos numeros e : " , soma)
-- EXECUTION TIME:
0.141551
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
a soma dos numeros e :  42076551
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
a soma dos numeros e :  510555
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:20:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma = n*(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  42076551
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:21:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma = n*(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  42076551
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 18:21:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma =(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  4587
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-25 19:07:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

soma =(n+1)//2
print("a soma dos numeros e : " , soma)
-- OUTPUT:
a soma dos numeros e :  4587
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:43:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3141
ra = 

print("a soma dos numeros e : " , soma)
-- ERROR:
File "XXXX", line 7
    ra = 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:43:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3141
ra = n//a

print("a soma dos numeros e : " , soma)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("a soma dos numeros e : " , soma)
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:44:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3141
ra = n//a

print( ra)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:46:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3138
ra = n//a

print( ra)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:46:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3138
ra = n%a

print( ra)
-- OUTPUT:
2897
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:50:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3138
ra = n%a

b = 3141
rb = n//b

c = 3137
rc = n%c

d = 3141
rd = n//d

soma = ra + rb + rc + rd

print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:51:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3138
ra = n%a

b = 3141
rb = n//b

c = 3137
rc = n%c

d = 3141
rd = n//d

soma = ra + rb + rc + rd

print(soma)
-- EXECUTION TIME:
0.213923
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
5800
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2020
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:51:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = 3138
ra = n%a

b = 3141
rb = n//b

c = 3137
rc = n%c

d = 3141
rd = n//d

soma = ra + rb + rc + rd

print(soma)
-- OUTPUT:
5800
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 11:43:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//100
rc = n//10
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
print(soma)
print(soma)
-- OUTPUT:
9
91
917
1190
1190
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:00:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//100
b = rb%10
rc = n//10
c = 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- ERROR:
File "XXXX", line 10
    c = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:00:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//100
b = rb%10
rc = n//10

rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
91
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:12:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//1000
b = rb%10
rc = n//10
c = 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- ERROR:
File "XXXX", line 10
    c = 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:12:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//1000
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- EXECUTION TIME:
0.131129
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
9
917
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
1
101
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:12:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//1000
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
9
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:13:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//10000
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
0
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:13:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n//100
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
91
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%100
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
73
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%1000
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
173
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:14:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n//100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n//1000
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n%1000
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:15:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n%10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc = n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n//100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:16:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n//10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n//100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:17:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n//1000
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:18:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%1rb
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- ERROR:
File "XXXX", line 9
    rc =n%1rb
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%10
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:19:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:20:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = n%10
b = rb%10
rc =n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:39:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

ra = n//1000
rb = int(n%10)
b = rb%10
rc =n%100
 
rd = n%1000
print(ra)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- OUTPUT:
9
3
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:40:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
rd = n%1000
print(a)
print(rb)
print(rc)

soma = ra + rb + rc + rd
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(rb)
NameError: name 'rb' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:40:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
rd = n%1000
print(a)
print(b)
print(c)

soma = ra + rb + rc + rd
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(b)
NameError: name 'b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:40:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
rd = n%1000
print(a)

soma = ra + rb + rc + rd
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    soma = ra + rb + rc + rd
NameError: name 'ra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:40:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
rd = n%1000

print(a)


-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:41:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
b= n%1000

print(a,b)


-- OUTPUT:
9 173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:42:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000
b= n%1000

print(a)
print(b)


-- OUTPUT:
9
173
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:45:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

print(a)
print(b)


-- OUTPUT:
9
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:47:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n//10)
print(a)
print(b)
print(c)

-- OUTPUT:
9
1
917
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:47:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%10)
print(a)
print(b)
print(c)

-- OUTPUT:
9
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:50:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)
print(a)
print(b)
print(c)

-- OUTPUT:
9
1
73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:51:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10
print(a)
print(b)
print(c)

-- OUTPUT:
9
1
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:52:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10


print(a)
print(b)
print(c)
print(d)

-- OUTPUT:
9
1
7
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:52:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:52:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- EXECUTION TIME:
0.146515
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:53:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:53:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- EXECUTION TIME:
0.1418
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:53:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:53:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- EXECUTION TIME:
0.134411
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:53:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:54:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- EXECUTION TIME:
0.226258
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:54:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:54:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = a+b+c+d

print(soma)
-- EXECUTION TIME:
0.148026
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:55:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:55:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- EXECUTION TIME:
0.194163
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:57:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 18:57:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- EXECUTION TIME:
0.112589
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
18
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:59:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:00:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:00:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:01:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n//100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:01:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n//100)%10

soma = int(a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:02:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n//100)%10

soma = (a+b+c+d)

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:02:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n//100)%10

soma =a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:02:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)%10

soma =a+b+c+d

print(soma)
-- OUTPUT:
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:03:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:03:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.18462
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:03:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:03:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.146627
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:04:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:04:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.191279
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:05:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:05:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.174228
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:07:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:07:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.138141
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:08:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:08:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int(n/100)%10

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.134068
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:10:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int((n/100)%10)

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:10:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int((n/100)%10)

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- EXECUTION TIME:
0.147943
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
26
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:11:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("digite um numero inteiro: "))

a = n//1000

b= int((n/100)%10)

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:12:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input(""))

a = n//1000

b= int((n/100)%10)

c = int(n%100)//10

d = int(n/100)//10

soma =a+b+c+d

print(soma)
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:58:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input(""))

a = n//1000

b= (n/100)%10

c =(n%100)//10

d = (n%100)

soma=a+b+c+d

print(soma)
-- OUTPUT:
90.73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:58:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n/100)%10

c =(n%100)//10

d = (n%100)

soma=a+b+c+d

print(soma)
-- OUTPUT:
90.73
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:59:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n//100)%10

c =(n%100)//10

d = (n%100)

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 02:59:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n//100)%10

c =(n%100)//10

d = n%100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:00:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n//100)%10

c =(n // 10) % 10

d = n%100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:00:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n//100)%10

c =(n // 10) % 10

d = n%100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:02:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n//1000

b= (n//100)%10

c =(n // 10) % 10

d = n%100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:03:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n//100) % 10 

c =(n // 10) % 10

d = n % 100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:05:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 100

soma=a+b+c+d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:07:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 100

soma = a + b + c + d

print(soma)
-- OUTPUT:
90
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:09:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:09:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:09:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.127982
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 03:09:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 03:09:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.161578
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-30 23:22:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-30 23:22:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n = int(input("numero inteiro: "))

a = n // 1000

b= (n // 100) % 10 

c =(n // 10) % 10

d = n % 10

soma = a + b + c + d

print(soma)
-- EXECUTION TIME:
0.139308
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
