== TEST (2019-03-27 13:00:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1,var2,var3)
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:00:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1,var2,var3)
-- EXECUTION TIME:
0.185075
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:02:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:02:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)
-- EXECUTION TIME:
0.201246
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:05:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:07:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)

var4 = print((var1+var2+var3)-(var1+var3))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:07:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)

var4 = print((var1+var2+var3)-(var1+var3))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 13:07:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)

var4 = print((var1+var2+var3)-(var1+var3))
-- OUTPUT:
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 13:08:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

min(var1, var2, var3)
max(var1, var2, var3)

var4 = print((var1+var2+var3)-(var1+var3))
-- EXECUTION TIME:
0.138677
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:14:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
-- OUTPUT:
-2
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:15:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
-- EXECUTION TIME:
0.181629
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
-2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:15:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
-- OUTPUT:
-2
10
-2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:22:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
var5 = print((var1+var2+var3)-(var1+var2))
var6 = print((var1+var2+var3)-(var2+var3))
-- OUTPUT:
-2
10
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:22:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
var5 = print((var1+var2+var3)-(var1+var2))
var6 = print((var1+var2+var3)-(var2+var3))
-- EXECUTION TIME:
0.155447
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
10
-2
0
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:22:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

var1 = int(input())
var2 = int(input())
var3 = int(input())

print(min(var1, var2, var3))
print(max(var1, var2, var3))

var4 = print((var1+var2+var3)-(var1+var3))
var5 = print((var1+var2+var3)-(var1+var2))
var6 = print((var1+var2+var3)-(var2+var3))
-- OUTPUT:
-2
10
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
