== TEST (2019-04-08 19:15:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
opcao = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
Vc = (math.pi*math.pow(x,2)*((3*r)- x)/3
Vcom = ve - vc
		
if (opcao == "1"):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 12
    Vcom = ve - vc
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:15:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
opcao = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3
vcom = ve - vc
		
if (opcao == "1"):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 12
    vcom = ve - vc
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:15:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
opcao = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3
vcom = ve-vc
		
if (opcao == "1"):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 12
    vcom = ve-vc
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:16:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
opcao = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (opcao == "1"):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (opcao == "1"):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:16:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
opcao = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (opcao == 1):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (opcao == 1):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:17:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == 1):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:17:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op = 1):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op = 1):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:18:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == "1"):
		print(round(vc,4))

else:
		print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == "1"):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:18:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == 1):
	print(round(vc,4))

else:
	print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:19:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

Ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == "1"):
	print(round(vc,4))

else:
	print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == "1"):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:20:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == 1):
	print(round(vc,4))

else:
	print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:20:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
print(op)
-- ERROR:
File "XXXX", line 14
    print(op)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:21:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
print(r)
-- ERROR:
File "XXXX", line 14
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:21:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3
print(op)
-- ERROR:
File "XXXX", line 12
    print(op)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:21:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

e = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == 1):
	print(round(vc,4))

else:
	print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:21:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

e = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3

		
if (op == 1):
	print(round(vc,4))

else:
	print(round(vcom,4))
-- ERROR:
File "XXXX", line 14
    if (op == 1):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:21:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

e = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3


-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:22:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/3
vc = (math.pi*math.pow(x,2)*((3*r)- x)/3
-- ERROR:
File "XXXX", line 12
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:22:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

-- ERROR:
File "XXXX", line 12
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:22:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

ve = (math.pi*4*math.pow(r,3))/(3)
vc = (math.pi*math.pow(x,2)*((3*r)- x)/(3)


-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:22:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (math.pi*4*math.pow(r,3))/(3)
VC = (math.pi*math.pow(x,2)*((3*r)- x)/(3)

-- ERROR:
File "XXXX", line 12
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:23:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (math.pi*4*math.pow(r,3))/(3)
VC = (math.pi*math.pow(x,2)*((3*r)- x)/(3)

-- ERROR:
File "XXXX", line 13
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:23:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*math.pow(r,3))/(3)
VC = (math.pi*math.pow(x,2)*((3*r)- x)/(3)

-- ERROR:
File "XXXX", line 13
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 19:23:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*math.pow(r,3))/(3)
VC = ((math.pi*math.pow(x,2)*((3*r)- x))/(3)

-- ERROR:
File "XXXX", line 13
    
                                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:20:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)


-- ERROR:
File "XXXX", line 13
    
                                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:20:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*math.pow(x,2)*((3*r)- x))/(3)

-- ERROR:
File "XXXX", line 13
    
                                                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:20:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*x**2*((3*r)- x))/(3)

-- ERROR:
File "XXXX", line 13
    
                                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:20:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*x**2*((3*r)- x))/(3)

-- ERROR:
File "XXXX", line 13
    
                                       ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:21:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = (math.pi*x**2*((3*r)- x)

-- ERROR:
File "XXXX", line 13
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:21:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = (math.pi*x**2*((3*r)- x)

-- ERROR:
File "XXXX", line 13
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:21:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = (math.pi*(x**2)*(3*r - x)

-- ERROR:
File "XXXX", line 13
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:21:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)


-- ERROR:
File "XXXX", line 13
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:22:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
V = (math.pi*(x**2)*(3*r - x)

-- ERROR:
File "XXXX", line 13
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:22:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
V = (math.pi*(x**2))*(3*r - x)

-- ERROR:
File "XXXX", line 13
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:22:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)

-- ERROR:
File "XXXX", line 13
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:24:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)

if (op == 1):
	print(round(VE,4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)
VCom = VE - VC

if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(Vcomm,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)
VCom = VE - VC

if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(Vcomm,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)
VCom = VE - VC

if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(Vcomm,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)
VCom = VE - VC

if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(Vcom,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:25:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)
VCom = VE - VC

if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(Vcom,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:26:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)


if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(VE - VC,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:26:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)


if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(VE - VC,4))
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:26:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
import math
from math import *

r = float(input("raio: "))
x = float(input("altura: "))
op = int(input("1 ou 2: "))

VE = (4*math.pi*r**3)/(3)
VC = ((math.pi*(x**2))*(3*r - x))/(3)


if (op == 1):
	print(round(VC,4))

if (op == 2):
	print(round(VE - VC,4))
-- EXECUTION TIME:
0.156733
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
