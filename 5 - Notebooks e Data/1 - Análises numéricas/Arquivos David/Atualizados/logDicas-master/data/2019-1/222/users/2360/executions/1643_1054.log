== TEST (2019-04-14 11:57:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
reta1 = int(input("digite o valor 1: "))
reta2 = int(input("digite o valor 2: "))
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:58:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
reta1 = int(input("digite o valor 1: "))
reta2 = int(input("digite o valor 2: "))
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:58:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
reta1 = int(input("digite o valor 1: "))
reta2 = int(input("digite o valor 2: "))
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:59:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
reta1 = float(input("digite o valor 1: "))
reta2 = float(input("digite o valor 2: "))
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:07:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
reta1 = float(input("digite o valor 1: "))
reta2 = float(input("digite o valor 2: "))
if (2*reta1 + reta2 = 2):
	mensagem("ponto pertence a reta")
else
mensagem("ponto pertence a reta")
-- ERROR:
File "XXXX", line 6
    if (2*reta1 + reta2 = 2):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:08:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o valor 1: "))
y = float(input("digite o valor 2: "))
if (2*x + y = 2):
	mensagem("ponto pertence a reta")
else
mensagem("ponto pertence a reta")
-- ERROR:
File "XXXX", line 6
    if (2*x + y = 2):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:08:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o valor 1: "))
y = float(input("digite o valor 2: "))
if (2*(x + y) = 2):
	mensagem("ponto pertence a reta")
else
mensagem("ponto pertence a reta")
-- ERROR:
File "XXXX", line 6
    if (2*(x + y) = 2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:08:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o valor 1: "))
y = float(input("digite o valor 2: "))

-- ERROR:
File "XXXX", line 6
    if (2*(x + y) = 2):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:10:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o valor 1: "))
y = float(input("digite o valor 2: "))
if (2*x + y == 3):
	mensagem("ponto pertece a reta")
else:
	mensagem("nao pertece a reta")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("ponto pertece a reta")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 12:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite o valor 1: "))
y = float(input("digite o valor 2: "))
if (2*x + y == 3):
	mensagem("ponto pertece a reta")
else:
	mensagem("nao pertece a reta")
print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("ponto pertece a reta")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
