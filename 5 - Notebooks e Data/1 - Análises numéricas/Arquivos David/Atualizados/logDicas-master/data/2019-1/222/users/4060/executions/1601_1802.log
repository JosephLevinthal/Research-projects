== TEST (2019-03-29 22:58:52) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 22:59:14) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:00:20) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:00:56) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:02:19) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**d2/3 
print(dano)
-- OUTPUT:
322.6991325026012
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:02:56) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:13:04) 
-- CODE:
from math import * 
p=float(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(int(dano))
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:13:55) 
-- CODE:
from math import * 
p=float(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(dano)
-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:15:55) 
-- CODE:
from math import * 
p=float(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(int(dano))-p
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(int(dano))-p
TypeError: unsupported operand type(s) for -: 'NoneType' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:16:22) 
-- CODE:
from math import * 
p=float(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print((int(dano))-p)
-- OUTPUT:
-188.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:16:49) 
-- CODE:
from math import * 
p=float(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(p-(int(dano)))
-- OUTPUT:
188.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 23:17:11) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(p-(int(dano)))
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 23:17:18) 
-- CODE:
from math import * 
p=int(input())
d1=int(input())
d2=int(input())
dano=((5*d1)**(1/2))+pi**(d2/3) 
print(p-(int(dano)))
-- EXECUTION TIME:
0.123309
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
