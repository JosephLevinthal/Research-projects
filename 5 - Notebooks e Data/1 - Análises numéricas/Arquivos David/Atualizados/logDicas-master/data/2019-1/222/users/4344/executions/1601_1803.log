== TEST (2019-03-31 21:44:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

soma= (b+c+d+e)
print(soma)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:45:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

soma= (b+c+d+e)
print(soma)
-- EXECUTION TIME:
0.182736
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
2
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
13
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
7
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:48:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e)
print(digito)
-- OUTPUT:
1000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:50:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e)%11
print(digito)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:50:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e)%11
print(digito)
-- EXECUTION TIME:
0.207582
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
4
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:50:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e) %11
print(digito)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:51:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e) %11
print(digito)
-- EXECUTION TIME:
0.17866
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
4
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:51:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e)% 11
print(digito)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:51:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//2
b1 = a%2
c = b1//3
c1 = b1%3
d = c1//4
d1 = c1%4
e = d1//5

digito = (b+c+d+e)% 11
print(digito)
-- EXECUTION TIME:
0.224552
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
4
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:53:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = (b+c+d+e)%11
print(digito)
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:53:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = (b+c+d+e)%11
print(digito)
-- EXECUTION TIME:
0.227787
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
4
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:56:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- OUTPUT:
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:56:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- EXECUTION TIME:
0.245612
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
6
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
9
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:56:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = ((a*5) + (b*4) + (c*3) + (d*4)) %11
print(digito)
-- OUTPUT:
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:56:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//5
b1 = a%5
c = b1//4
c1 = b1%4
d = c1//3
d1 = c1%3
e = d1//2

digito = ((a*5) + (b*4) + (c*3) + (d*4)) %11
print(digito)
-- EXECUTION TIME:
0.227601
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
6
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
9
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:57:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:57:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- EXECUTION TIME:
0.130963
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
9
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
10
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:59:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = (a*5) + (b*4) + (c*3) + (d*4) % 11
print(digito)
-- OUTPUT:
10008
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 21:59:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = (a*5) + (b*4) + (c*3) + (d*4) % 11
print(digito)
-- EXECUTION TIME:
0.211902
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10008
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
17786
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
35
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:59:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = (a*5) + (b*4) + (c*3) + (d*4) %11
print(digito)
-- OUTPUT:
10008
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 21:59:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = (a*5) + (b*4) + (c*3) + (d*4)%11
print(digito)
-- OUTPUT:
10008
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 22:00:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- OUTPUT:
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 22:00:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((a*5) + (b*4) + (c*3) + (d*4))%11
print(digito)
-- EXECUTION TIME:
0.153678
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
9
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
10
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:14:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1
print(b, b1)
print(c, c1)
print(d, d1)
print(e)

#digito = (())
#print(digito)
-- OUTPUT:
2 0
0 0
0 0
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:18:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1
e*2+d*3+c*4+b*5
digito = ((e*2+d*3+c*4+b*5)%11)
print(digito)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:18:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1
e*2+d*3+c*4+b*5
digito = ((e*2+d*3+c*4+b*5)%11)
print(digito)
-- EXECUTION TIME:
0.125392
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 01:20:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((e*2+d*3+c*4+b*5)%11)
print(digito)
-- EXECUTION TIME:
0.11839
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 01:20:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = int(input("leia um numero inteiro de quatro digitos:"))
b = a//1000
b1 = a%1000
c = b1//100
c1 = b1%100
d = c1//10
d1 = c1%10
e = d1//1

digito = ((e*2+d*3+c*4+b*5)%11)
print(digito)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
