== TEST (2019-04-15 17:32:23) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper()==A)
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 4
    if(car.upper()==A)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:32:36) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper()==A):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:33:07) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper()==A):
cons=per/8
print(round(cons,2))
else:
cons=per/12
print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:34:06) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:34:09) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:34:55) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:35:10) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- EXECUTION TIME:
0.218181
-- ERROR:
  File "/home/codebench/codes/1642/2728/main.py", line 5
    cons=per/8
       ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:35:12) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
cons=per/8
else:
cons=per/12

print(round(cons,2))
-- ERROR:
File "XXXX", line 5
    cons=per/8
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 17:35:25) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
	cons=per/8
else:
	cons=per/12

print(round(cons,2))
-- OUTPUT:
5.42
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 17:35:38) 
-- CODE:
per=float(input("percurso em km: "))
car=input("tipo de carro (A/B): ")

if(car.upper() == "A"):
	cons=per/8
else:
	cons=per/12

print(round(cons,2))
-- EXECUTION TIME:
0.123587
-- TEST CASE 1:
---- input:
65
B

---- correct output:
5.42
---- user output:
5.42
-- TEST CASE 2:
---- input:
65
A
---- correct output:
8.12
---- user output:
8.12
-- TEST CASE 3:
---- input:
200
A
---- correct output:
25.0
---- user output:
25.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
