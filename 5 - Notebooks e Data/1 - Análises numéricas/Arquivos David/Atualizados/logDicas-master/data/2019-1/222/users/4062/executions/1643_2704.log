== TEST (2019-04-13 13:52:16) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2))
else:
	print(round(nota, 2)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:52:44) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2))
else:
	print(round(nota, 2)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:53:36) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2))
else:
	print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:53:42) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2))

-- ERROR:
File "XXXX", line 5
    
                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:54:21) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2 ))
else:
	print(nota)

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:54:27) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2 ))
else
	print(nota)

-- ERROR:
File "XXXX", line 5
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:54:48) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn==S):
	print(round(nota + (nota *0.01, 2 ))

-- ERROR:
File "XXXX", line 5
    
                                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:54:56) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
	print(round(nota + (nota *0.01, 2 ))

-- ERROR:
File "XXXX", line 3
    print(round(nota + (nota *0.01, 2 ))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:55:01) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
print(round(nota + (nota *0.01, 2 ))

-- ERROR:
File "XXXX", line 4
    
                                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:55:10) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
print(round(nota + bn (nota *0.01, 2 ))

-- ERROR:
File "XXXX", line 4
    
                                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 13:55:15) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
print(round(nota + bn (nota *0.01, 2 ))
-- ERROR:
File "XXXX", line 4
    
                                           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:02:37) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn = S):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn = S):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:03:06) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn = S):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn = S):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:06:03) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn = "S"):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn = "S"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:06:18) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn = s):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn = s):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:06:30) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn = ("s"):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn = ("s"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:06:45) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == S):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:07:23) 
-- CODE:
nota = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == "S"):
	print(round(nota + bn (nota *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(nota + bn (nota *0.05), 2 ))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:08:03) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == "S"):
	print(round(nota + bn (n *0.05), 2 ))
else:
	print(round(nota, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(nota + bn (n *0.05), 2 ))
NameError: name 'nota' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:08:22) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == "S"):
	print(round(n + bn (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n + bn (n *0.05), 2 ))
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:09:37) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? " ())
if	(bn == "S"):
	print(round(n + bn (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    bn = input("vai receber a boinifacao ? " ())
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:10:04) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? "()")
if	(bn == "S"):
	print(round(n + bn (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
File "XXXX", line 2
    bn = input("vai receber a boinifacao ? "()")
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:10:34) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == 2):
	print(round(n + bn (n *0.05), 2 ))
else:
	print(round(n, 2))
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:11:01) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == 2):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:11:58) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == S):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:18:15) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ".upper)
if	(bn == (s.upper):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
File "XXXX", line 3
    if	(bn == (s.upper):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:18:20) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ".upper)
if	(bn == s.upper):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn == s.upper):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 14:18:40) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? "(.upper))
if	(bn == s.upper):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
File "XXXX", line 2
    bn = input("vai receber a boinifacao ? "(.upper))
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:43:26) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn == s):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn == s):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:43:41) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? ")
if	(bn ==s):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn ==s):
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:48:20) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? S/N ")
if	(bn.upper() ==S):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn.upper() ==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:48:31) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? S/N ")
if	(bn.upper() =="S"):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- OUTPUT:
5.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 15:48:56) 
-- CODE:
n = float(input("nota do malandro: "))
bn = input("vai receber a boinifacao ? S/N ")
if	(bn.upper() =="S"):
	print(round(n + (n *0.05), 2 ))
else:
	print(round(n, 2))
-- EXECUTION TIME:
0.202717
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.25
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.45
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:51:49) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper() =="S"):
nf= n*(5/100)
	print(round(n + nf), 2 )
else:
	print(round(n, 2))
-- ERROR:
File "XXXX", line 4
    nf= n*(5/100)
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:51:57) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper() =="S"):
	nf= n*(5/100)
	print(round(n + nf), 2 )
else:
	print(round(n, 2))
-- OUTPUT:
5 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:55:10) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()==S):
	print(round(n+(n*0.5), 2))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if	(bn.upper()==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:55:28) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*0.5), 2))
else:
	print(n)

-- OUTPUT:
7.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 15:55:47) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*0.5), 2))
else:
	print(n)

-- EXECUTION TIME:
0.17692
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
7.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
13.5
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:55:53) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*0.5), 2))
else:
	print(n)

-- OUTPUT:
7.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:56:10) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*0.05), 2))
else:
	print(n)

-- OUTPUT:
5.25
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 15:56:25) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*0.05), 2))
else:
	print(n)

-- EXECUTION TIME:
0.179286
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.25
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.45
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:56:50) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/10)0), 2))
else:
	print(n)

-- ERROR:
File "XXXX", line 4
    print(round(n+(n*(5/10)0), 2))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:57:05) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/100), 2)))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n+(n*(5/100), 2)))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:57:28) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/100), 2)))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n+(n*(5/100), 2)))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:57:28) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/100), 2)))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n+(n*(5/100), 2)))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:57:28) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/100), 2)))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n+(n*(5/100), 2)))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:57:28) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(round(n+(n*(5/100), 2)))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(n+(n*(5/100), 2)))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:58:10) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print(float(round(n+(n*(5/100), 2))))
else:
	print(n)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(float(round(n+(n*(5/100), 2))))
TypeError: unsupported operand type(s) for +: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 15:58:53) 
-- CODE:
n= float(input("nota do malandro: "))
bn= input("vai receber a boinifacao ? S/N ")
if	(bn.upper()=="S"):
	print((round(n+(n*0.05), 2)
else:
	print(n)

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 16:00:12) 
-- CODE:
nota= float(input("nota do malandro: "))
boni= input("vai receber a boinifacao ? S/N ")
if	(boni.upper()=="S"):
	print((round(n+(n*0.05), 2)
else:
	print(round(n, 2))

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 16:23:23) 
-- CODE:
nota= float(input("nota do malandro: "))
boni= input("vai receber a boinifacao ? S/N ")
if	(boni.upper()=="S"):
	print((round(nota+(nota*0.05), 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:01:40) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:01:57) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:02:50) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:03:28) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:	
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:03:28) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:	
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:03:29) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:	
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:03:45) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:03:58) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ")
boni = nota+ (nota*0.05)
if	(boni.upper()=="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:04:38) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:04:49) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print((round(boni, 2)
else:
	print(nota)

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:04:51) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:05:02) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print(boni)
else:
	print(nota)

-- OUTPUT:
VAI RECEBER A BOINIFACAO ? S/N 5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 12:05:33) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print(boni)
else:
	print(nota)

-- EXECUTION TIME:
0.28726
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
VAI RECEBER A BOINIFACAO ? S/N 5.0
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
VAI RECEBER A BOINIFACAO ? S/N 9.0
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
VAI RECEBER A BOINIFACAO ? S/N 4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 12:09:31) 
-- CODE:
nota= float(input("nota do malandro: "))
sn= input("vai receber a boinifacao ? S/N ".upper())
boni = nota+ (nota*0.05)
if	(boni =="S"):
	print((round(boni, 2)
else:
	print(round(nota, 2))

-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:49:21) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if (b.upper() == 'S'):
	a= n* (10/100)
	print(n+a)
else:
	print(n)

-- EXECUTION TIME:
0.141305
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
digite a nota:aluno vai receber bonificacao? (S/N)5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
digite a nota:aluno vai receber bonificacao? (S/N)9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
digite a nota:aluno vai receber bonificacao? (S/N)4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:49:36) 
-- CODE:
n=float(input('digite a nota:'))
b=input('aluno vai receber bonificacao? (S/N)')
if (b.upper() == 'S'):
	a= n* (10/100)
	print(n+a)
else:
	print(n)

-- EXECUTION TIME:
0.119738
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
