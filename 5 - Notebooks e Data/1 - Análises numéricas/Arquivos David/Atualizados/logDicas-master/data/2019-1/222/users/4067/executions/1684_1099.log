== TEST (2019-04-29 13:15:59) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: sosceles")
		elif a =! b and b =! c and c =! a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if a > 0 and b > 0 and > 0:
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:16:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: sosceles")
		elif a =! b and b =! c and c =! a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 13
    elif a =! b and b =! c and c =! a:
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:16:56) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: sosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: sosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:17:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: sosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.132793
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: sosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entrada:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entrada:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:17:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: sosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: sosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:17:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.209193
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entrada:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entrada:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:17:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.151851
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entrada:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entrada:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:17:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:18:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:18:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:18:47) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:19:09) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:19:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:19:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.148604
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entrada:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entrada:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:20:32) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:21:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entrada: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.184772
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entrada:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entrada:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entrada:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 13:21:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entradas: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- OUTPUT:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:21:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entradas: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.14042
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
lado a: lado b: lado c: Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
lado a: lado b: lado c: Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
lado a: lado b: lado c: Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 13:21:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("lado a: "))
b = float(input("lado b: "))
c = float(input("lado c: "))
print("Entradas: ",a ,",",b,",",c)
if a > 0 and b > 0 and c > 0:
	if a < b+c and c < b+a and b < a+c:
		if a==b and b==c:
			print("Tipo de triangulo: equilatero")
		elif a==b or a==c or c==b:
			print("Tipo de triangulo: isosceles")
		elif a != b and b != c and c != a:
			print("Tipo de triangulo: escaleno")
	else:
			print("Tipo de triangulo: invalido")
else:
	print("tipo de triangulo: invalido")
-- EXECUTION TIME:
0.147053
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
