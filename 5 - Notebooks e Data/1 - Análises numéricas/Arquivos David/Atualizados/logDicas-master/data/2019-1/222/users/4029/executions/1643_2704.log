== TEST (2019-04-14 20:42:02) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno iirá receber bonificacao? (S/N) ").upper()
if (y = S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
File "XXXX", line 3
    if (y = S):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:42:45) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno iirá receber bonificacao? (S/N) ").upper()
if (y == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (y == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:43:25) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno iirá receber bonificacao? (S/N) ")
if (y == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (y == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:43:44) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (y == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:44:10) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (y == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:44:19) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (y == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:44:37) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == S):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if (x == S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:45:23) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:46:42) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x * 10)/100)
else:
	nota=x
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:47:38) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x * 10)/100)
else: 
	nota= x
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:47:52) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x * 10)/100)
else: 
	nota= x
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:48:33) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= (x + ((x * 10)/100))
else: 
	nota= x
print(nota)
-- OUTPUT:
5.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:49:36) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x/10)
else: 
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:50:04) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x/10)
else:
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:50:11) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (x == "S"):
	nota= x + ((x/10)
else
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:03) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else:
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:28) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else:
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:57) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else: 
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:56:13) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
 else: 
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:58:19) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
 else: 
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:02:39) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else:
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:07:00) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:07:26) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else:
	nota= x
print(nota)
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:08:27) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
print(nota)
-- ERROR:
File "XXXX", line 5
    print(nota)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:08:43) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
-- ERROR:
File "XXXX", line 5
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:21:03) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	z = x + ((x/10)
else:
	z = x
print(z)

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:21:31) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	z = x + ((x/10)
else: 
	z = x
print(z)

-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:29:13) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
	print(nota)
else: 
	nota= x
print(nota)

-- ERROR:
File "XXXX", line 5
    print(nota)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:29:36) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
	print(nota)
else: 
	nota= x
	print(nota)

-- ERROR:
File "XXXX", line 5
    print(nota)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:30:34) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else: 
	nota= x
print(nota)

-- ERROR:
File "XXXX", line 5
    else: 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:30:47) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + ((x/10)
else 
	nota= x
print(nota)

-- ERROR:
File "XXXX", line 5
    else 
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:32:45) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + (x/10)
else:
	nota= x
print(round(nota, 2))
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:33:20) 
-- CODE:
x= float(input("Nota do aluno: "))
y= input("O aluno ira receber bonificacao? (S/N) ")
if (y == "S"):
	nota= x + (x/10)
else:
	nota= x
print(round(nota, 2))
-- EXECUTION TIME:
0.25061
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
