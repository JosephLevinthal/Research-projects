== TEST (2019-06-24 01:27:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet=zeros(mat.shape[0], dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet=zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:27:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet=zeros(mat.shape[0], dtype=float)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet=zeros(mat.shape[0], dtype=float)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:31:17) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet=zeros(mat.shape[7], dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet=zeros(mat.shape[7], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:31:17) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet=zeros(mat.shape[7], dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet=zeros(mat.shape[7], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:31:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet=zeros(7, dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet=zeros(7, dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:33:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet.T=zeros(7, dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet.T=zeros(7, dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:34:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0], dtype=int)
			
vet=zeros(7, dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:35:03) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0], dtype=int)
			

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:35:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[7], dtype=int)
			

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[7], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:35:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[7], dtype=int):
			

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[7], dtype=int):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:36:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[7], dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[7], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:40:36) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[7],round(vet,1))
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[7],round(vet,1))
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:40:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0],round(vet,1))
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0],round(vet,1))
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:40:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

	vet= zeros(mat.shape[0],round(vet,1))
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0],round(vet,1))
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:41:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= dot(inv(mat.shape[0],round(vet,1))
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= dot(inv(mat.shape[0],round(vet,1))
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:42:09) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= dot(inv(mat.shape[0])
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= dot(inv(mat.shape[0])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:43:33) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0])
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:44:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0])
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:44:27) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0],dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0],dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:44:48) 
-- CODE:
from numpy import*

mat= array (eval(input(""))

vet= zeros(mat.shape[0],dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(mat.shape[0],dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:46:35) 
-- CODE:
from numpy import*

mat= array(eval(input(""))

funcionario= zeros(mat.shape[0],dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    funcionario= zeros(mat.shape[0],dtype=int)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:53:21) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
print(mat)
funcionario= zeros(mat.shape[0],dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 4
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:53:43) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
funcionario= zeros(mat.shape[0],dtype=int)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    funcionario= zeros(mat.shape[0],dtype=int)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:55:12) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
mat= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    mat= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:55:21) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
vet= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:55:35) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
	vet= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:55:40) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
		vet= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:55:45) 
-- CODE:
from numpy import*

mat= array(eval(input(""))
			  
			vet= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:56:09) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
vet= zeros(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:56:40) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
vet= ones(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= ones(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:57:19) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
N= ones(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    N= ones(N,7)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:57:27) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
n= ones(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    n= ones(N,7)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:57:39) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
print(vet.T, round(vet,2))		

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    print(vet.T, round(vet,2))		
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:57:53) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:58:35) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			  
vet= zeros(mat.shape[0], dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:58:48) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			  
	vet= zeros(mat.shape[0], dtype=int)

for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:58:59) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			  
	for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:59:06) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			  
		for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:59:43) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			  for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:59:49) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			 for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:59:53) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
			for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 01:59:58) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
		for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:00:02) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
	for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:00:08) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
for  i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for  i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:00:23) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)

elife i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    elife i in range(mat.shape [0]):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:00:30) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)

elif i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    elif i in range(mat.shape [0]):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:00:53) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)

else:
	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    else:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:01:27) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if ones(N,7)
vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:01:42) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:03:10) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
vet= zeros(7,dtype=int)
if(N,7)

vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:03:18) 
-- CODE:
from numpy import*

mat= array(eval(input("matriz quadrada: "))
			  
if(N,7)

vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:04:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)

vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:04:15) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
vet= zeros(7,dtype=int)
			  
if zeros(N,7)

vet= zeros(7,dtype=int)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 02:04:33) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- EXECUTION TIME:
0.557355
-- ERROR:
  File "/home/codebench/codes/1845/2220/main.py", line 8
    i in range(mat.shape [0]):
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:04:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)

	i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    i in range(mat.shape [0]):
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:04:50) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)

for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    for i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:05:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)
vet= zeros(7,dtype=int)

for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:06:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if zeros(N,7)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:07:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]= zeros(N,7)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    if mat[0]= zeros(N,7)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:07:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0],zeros(N,7)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    if mat[0],zeros(N,7)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:08:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:08:43) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]

elif mat[1]
vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    elif mat[1]
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:08:59) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]

	elif mat[1]
vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    elif mat[1]
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:09:43) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
print(mat)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:09:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
			  
print(mat)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:09:57) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
			  
	print(mat)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:11:43) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
x= mat

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    x= mat
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:12:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
x= mat(N,7)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    x= mat(N,7)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:12:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("matriz quadrada: "))
			  
if mat[0]
mat(N,7)

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    mat(N,7)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:14:07) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

vet= zeros(mat.shape[0], dtype=int)

if mat[0]

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:14:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

if mat[0]

vet= zeros(mat.shape[0], dtype=int)
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(mat.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:14:27) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

if mat[0]
			  
for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    for i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:14:35) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

if mat[0]
			  
	for i in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    for i in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:18:19) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

if pagamento > semana 
			  
	for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    for N in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:18:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))

if pagamento > semana 
			  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    for N in range(mat.shape [0]):
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:21:58) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
mat=zeros((N,7),dtype=int)
if pagamento > semana 
			  
			  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    mat=zeros((N,7),dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:22:53) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
for i inrange(N):
if pagamento > semana 
			  
			  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    for i inrange(N):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:23:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
for i in range(N):
if pagamento > semana 
			  
			  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    for i in range(N):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:23:14) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			
for i in range(N):
if pagamento > semana 
			  
			  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for i in range(N):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:23:39) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if pagamento > semana 
			  
for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:23:59) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if pagamento > semana 
			  
	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:24:08) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if pagamento > semana 
			  
		for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:24:54) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1 

			for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:25:04) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1 

for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:25:22) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1 
vet= zeros(7,dtype=int)

for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:25:38) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1 

	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    for i in range(N):		  
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:26:31) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1
	vet= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:26:42) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= array(eval(input("cada funcionario: "))
			

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:28:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("maior pagamento: "))
			

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 02:28:40) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("maior pagamento: "))

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:50:27) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:51:07) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0]):
vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 6
    for i in range(mat.shape[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:51:20) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:51:53) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
	vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:52:13) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:52:30) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
		vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:53:33) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
for i in range(7):

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for i in range(7):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:53:45) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(mat.shape[0])
	for i in range(7):

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for i in range(7):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:54:12) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))


for i in range(7):

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for i in range(7):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:54:23) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))


for i in range(7)

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:54:47) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))


for i in range(7)
	vet[i]= sum(mat[:,i])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet[i]= sum(mat[:,i])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:56:27) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:56:51) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
for i in range(mat.shape[0]):

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for i in range(mat.shape[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:57:01) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0]):

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 7
    for i in range(mat.shape[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:57:11) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 9
    vet= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:57:29) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])
	vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:57:38) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])
		vet[i]= sum(mat[i,:])

vet= zeros(7,dtype=int)
			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:57:57) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 10
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:10) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 10
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:19) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 10
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:30) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))
mat= zeros(7,dtype=int)

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 5
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:44) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  
		mat= zeros(7,dtype=int)

if N > 1
mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:51) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  
	mat= zeros(7,dtype=int)

if N > 1
mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:58:58) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  
mat= zeros(7,dtype=int)

if N > 1
mat= zeros(7,dtype=int)


	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 8
    mat= zeros(7,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-24 13:59:14) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- EXECUTION TIME:
0.812887
-- ERROR:
  File "/home/codebench/codes/1845/2220/main.py", line 10
    for i in range(N):		  
                     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:59:15) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N):		  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 10
    for i in range(N):		  
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:59:25) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0]):
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 11
    for N in range(mat.shape [0]):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:59:33) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
	vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 12
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:59:42) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
vet[i]= sum(mat[i,:])

print(vet)				
-- ERROR:
File "XXXX", line 12
    vet[i]= sum(mat[i,:])
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 13:59:50) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])

print(vet)				
-- ERROR:
File "XXXX", line 13
    print(vet)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:01) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])

	print(vet)				
-- ERROR:
File "XXXX", line 13
    print(vet)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:13) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])

	print(mat)				
-- ERROR:
File "XXXX", line 13
    print(mat)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:20) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])

print(mat)				
-- ERROR:
File "XXXX", line 13
    print(mat)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:28) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])

		print(mat)				
-- ERROR:
File "XXXX", line 13
    print(mat)				
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:40) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])


-- ERROR:
File "XXXX", line 13
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:00:51) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
-- ERROR:
File "XXXX", line 12
    
                                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:03) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0]):
-- ERROR:
File "XXXX", line 11
    for N in range(mat.shape [0]):
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:14) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
			  print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:22) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
			 print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:28) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
			print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:33) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
		print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:38) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
	print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:01:44) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("maior pagamento: "))

for i in range(7)
	for i in range(mat.shape[0])			  

if N > 1
	for i in range(N)	  
for N in range(mat.shape [0])
print(mat)
-- ERROR:
File "XXXX", line 12
    print(mat)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:03:12) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input("Matriz de horas: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:03:51) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(input(" ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:04:16) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(float(" ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:04:26) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(float(",")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:04:36) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(float("")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:04:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(float("Maior pagamento: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:05:15) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(dtype=int("Maior pagamento: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:05:29) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(dtype=int("")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:05:45) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(dtype=int))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:05:56) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat= array(eval(dtype=int)):

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
File "XXXX", line 4
    mat= array(eval(dtype=int)):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:06:10) 
-- CODE:
from numpy import*
from numpy.rondom import*

mat= array(eval(dtype=int))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:06:42) 
-- CODE:
from numpy import*
from numpy.rondom import*

mat= array(eval(input("Matriz de horas: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:07:08) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("Matriz de horas: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:07:32) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float("Matriz de horas: ")))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:07:42) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval("Matriz de horas: "))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:08:09) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(""))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:08:23) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(","))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:08:33) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval())

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:09:13) 
-- CODE:
from numpy import*
from numpy.random import*

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-24 14:09:22) 
-- CODE:
from numpy import*
from numpy.random import*

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:40:55) 
-- CODE:
from numpy import*
from numpy.random import*

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:43:33) 
-- CODE:
from numpy import*
from numpy.random import*
mat=array(eval(float("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:44:21) 
-- CODE:
from numpy import*
from numpy.random import*

mat=array(eval(float("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:44:33) 
-- CODE:
from numpy import*
from numpy.random import*

mat=array(eval(int("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:45:04) 
-- CODE:
from numpy import*

mat=array(eval(int("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:45:21) 
-- CODE:
from numpy import*

mat=array(eval(int("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:45:35) 
-- CODE:
from numpy import*

mat=array(eval(float("maior pagamento:")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:45:40) 
-- CODE:
from numpy import*

mat=array(eval(float("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:46:07) 
-- CODE:
from numpy import*

mat=array(eval(input("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:46:36) 
-- CODE:
from numpy import*

mat=array(eval(int("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:46:48) 
-- CODE:
from numpy import*

mat=array(eval("maior pagamento: "))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:47:23) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval("maior pagamento: "))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:47:48) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(int("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:47:55) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(float("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:48:04) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(float("maior pagamento: ")))
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:49:04) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(float("maior pagamento: ")))
mat=mat.T
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:49:13) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(int("maior pagamento: ")))
mat=mat.T
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:49:52) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(eval(int("digite o valor: ")))
mat=mat.T
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:51:10) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(("digite o valor: "))
mat=mat.T
vet= zeros(mat.shape[0],dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:51:24) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(("digite o valor: "))
mat=mat.T
vet= zeros(mat.shape[0],dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:51:35) 
-- CODE:
from numpy import*
from numpy.linalg import*

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:56:05) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= int(float("maior pagamento:"))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:56:18) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= int(float("maior pagamento: "))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:56:34) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= float(int("maior pagamento: "))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:56:41) 
-- CODE:
from numpy import*
from numpy.linalg import*

N= float(input("maior pagamento: "))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:58:02) 
-- CODE:
from numpy import*
from numpy.linalg import*

semana= float(input("maior pagamento: "))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:58:11) 
-- CODE:
from numpy import*
from numpy.linalg import*

semana=float(input("maior pagamento: "))

mat=array(("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:58:28) 
-- CODE:
from numpy import*
from numpy.linalg import*

semana=float(input("maior pagamento: "))

mat=array(eval("digite o valor: "))
mat=mat.T

for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:59:00) 
-- CODE:
from numpy import*
from numpy.linalg import*

semana=float(input("maior pagamento: "))
mat=zeros((N,N), dtype=int)

mat=array(eval("digite o valor: "))


for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:59:25) 
-- CODE:
from numpy import*
from numpy.linalg import*

semana=float(input("maior pagamento: "))
mat=zeros((N,N), dtype=float)

mat=array(eval("digite o valor: "))


for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 12:59:49) 
-- CODE:
from numpy import*

semana=float(input("maior pagamento: "))
mat=zeros((N,N), dtype=float)

mat=array(eval("digite o valor: "))


for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:00:05) 
-- CODE:
from numpy import*

N=float(input("maior pagamento: "))
mat=zeros((N,N), dtype=float)

mat=array(eval("digite o valor: "))


for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:01:56) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("")))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])


for i in range(mat.shape[0]):
	vet[i]= sum(mat[:,i])
for i in range(7):
	if vet[i]==max(vet):
		print(i+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:02:58) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(input("")))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:03:16) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float("")))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:03:21) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float("")))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:03:49) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(float(""))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:04) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(dtype=float(""))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:11) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(dtype=int(""))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:21) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(dot(""))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:28) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(mat.shape[0], dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:04:43) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(mat.shape[0], dtype=float)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:06:00) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(7,dtype=int)

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:06:20) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])
print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:06:55) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:07:26) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(7,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:09:34) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(ones(""))

vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:09:47) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(float(""))

vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:09:56) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(""))

vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:10:12) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(int(""))

vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:10:24) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))

vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 6
    vet= zeros(mat,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:32:51) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
f=dot(inv(mat))
vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 5
    f=dot(inv(mat))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:06) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
vet= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 5
    vet= zeros(mat,dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:17) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
f= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 5
    f= zeros(mat,dtype=int)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:33:29) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
ones= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 5
    ones= zeros(mat,dtype=int)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:34:38) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
qatd= zeros(mat,dtype=int)

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 5
    qatd= zeros(mat,dtype=int)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:34:50) 
-- CODE:
from numpy import*
from numpy.random import*

mat= array(eval(float(""))
			  

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 7
    for i in range(7):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:35:00) 
-- CODE:
from numpy import*

mat= array(eval(float(""))
			  

for i in range(7):
	vet[i]= sum(mat[i,:])

	vet[i]= sum(mat[:,i])

	print(vet)
-- ERROR:
File "XXXX", line 6
    for i in range(7):
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 13:35:34) 
-- CODE:
from numpy import*

mat= array(eval(float(""))
			  

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])

print(vet)
-- ERROR:
File "XXXX", line 6
    for i in range(mat.shape[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 15:05:59) 
-- CODE:
from numpy import*

mat= array(eval(float(""))
			  

for i in range(mat.shape[0]):
	vet[i]= sum(mat[i,:])

print(vet)
-- ERROR:
File "XXXX", line 6
    for i in range(mat.shape[0]):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:26:29) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = array(dtype=float("Pagamentos: "))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:26:51) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = array(eval(input("Pagamentos: ")))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:27:20) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = array(eval(float(input("Pagamentos: "))))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:27:37) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = array(eval(input("Pagamentos: ")))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:28:13) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = eval(input("Pagamentos: ")))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 4
    matriz = eval(input()))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:28:19) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = eval(input("Pagamentos: "))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:28:30) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(input("Pagamentos: "))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:28:50) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(int("Pagamentos: "))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:29:13) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    linhas = shape(matriz)[0]
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:29:20) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
linhas = shape(matriz)[0]
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    linhas = shape(matriz)[0]
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:30:10) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
vet= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    vet= zeros(matriz.shape[0], dtype=int)
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:30:20) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
linhas= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    linhas= zeros(matriz.shape[0], dtype=int)
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:30:30) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
linha_x= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    linha_x= zeros(matriz.shape[0], dtype=int)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:30:35) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
linha= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    linha= zeros(matriz.shape[0], dtype=int)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:31:00) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
vetor_nulo= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    vetor_nulo= zeros(matriz.shape[0], dtype=int)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:31:15) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
mat_nulo= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    mat_nulo= zeros(matriz.shape[0], dtype=int)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:31:21) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
matriz_nulo= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    matriz_nulo= zeros(matriz.shape[0], dtype=int)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-26 16:31:26) 
-- CODE:
from numpy import*
from numpy.random import*

matriz = float(eval(input(("Pagamentos: ")))
matriz_nula= zeros(matriz.shape[0], dtype=int)
colunas = shape(matriz)[1]

for i in range(linhas):
	print(max(matriz[i,:]))
-- ERROR:
File "XXXX", line 5
    matriz_nula= zeros(matriz.shape[0], dtype=int)
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
