== TEST (2019-04-07 22:16:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(int("digite a coordenada de x"))
y = float(int("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	  print("ponto não pertece a reta")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x = float(int("digite a coordenada de x"))
ValueError: invalid literal for int() with base 10: 'digite a coordenada de x'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:16:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	  print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:17:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	  print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:17:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	  print("ponto não pertece a reta")
-- EXECUTION TIME:
0.211863
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:17:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	  print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:17:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else :
	   print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:18:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	   print("ponto pertece a reta")
		
else:
	  print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:19:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if   (expressao == 3):
	  print("ponto pertece a reta")

else:
	   print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:21:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     print("ponto pertece a reta")
   
else:
	   print("ponto não pertece a reta")
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:23:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "ponto pertece a reta"
   
else:
	   mensagem = "ponto não pertece a reta"
	
print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "ponto pertece a reta"   
else:
	   mensagem = "ponto não pertece a reta"	
print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:25:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
		mensagem = "ponto pertece a reta"   
else:
		mensagem = "ponto não pertece a reta"	
print(mensagem)
-- OUTPUT:
ponto pertece a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:25:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
		mensagem = "ponto pertece a reta"   
else:
		mensagem = "ponto não pertece a reta"	
		
print(mensagem)
-- EXECUTION TIME:
0.156756
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertece a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:27:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "par"
	
else:
  	 mensagem = "impar"
	
print(mensagem)
-- OUTPUT:
par
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:27:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "ponto pertence a reta"
	
else:
  	 mensagem = "ponto nao pertece a reta"
	
print(mensagem)
-- EXECUTION TIME:
0.189739
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertece a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 22:27:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "ponto pertence a reta"
	
else:
  	 mensagem = "ponto nao pertece a reta"
	
print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 22:28:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite a coordenada de x"))
y = float(input("digite a coordenada de y"))
expressao = 2*x + y

if  (expressao == 3):
     mensagem = "ponto pertence a reta"
	
else:
  	 mensagem = "ponto nao pertence a reta"
	
print(mensagem)
-- EXECUTION TIME:
0.168146
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
