== TEST (2019-04-10 13:31:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
 from math import*
	
ve = ((4*pi)*(raio**3))/3
vc = ((pi)*(altuta*2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
File "XXXX", line 7
    from math import*
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:32:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4*pi)*(raio**3))/3
vc = ((pi)*(altuta*2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    ve = ((4*pi)*(raio**3))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:33:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4*pi)*(raio**3))/3
vc = ((pi)*(altuta*2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    ve = ((4*pi)*(raio**3))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:33:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4)*(raio**3))/3
vc = ((pi)*(altuta*2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vc = ((pi)*(altuta*2)*(3*raio - altura))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4)*(raio**3))/3
vc = ((2)*(altuta*2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    vc = ((2)*(altuta*2)*(3*raio - altura))/3
NameError: name 'altuta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:34:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4*pi)*(raio**3))/3
vc = ((2*pi*(altuta**2)*(3*raio - altura))/3

if  (opcao == 1):
     print(round(ve, 4))
	
else:
	 print(round(vc, 4))
-- ERROR:
File "XXXX", line 11
    if  (opcao == 1):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:36:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4*pi)*(raio**3))/3
vc = ((2*pi*(altuta**2)*(3*raio - altura))/3

print(ve)
-- ERROR:
File "XXXX", line 11
    print(ve)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:36:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("raio: "))
altura = float(input("altura: "))
opcao = int(input("1 indicar o volume de ar e 2 volume de conbustivel: "))
	
ve = ((4*pi)*(raio**3))/3
vc = ((2*pi*(altuta**2)*(3*raio - altura))/3
print("crlh")
-- ERROR:
File "XXXX", line 10
    print("crlh")
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:40:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))

v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v1 = ((4*pi)*(raio**3))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))

v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v1, 4))
		
else:
    print(round(v2, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    v1 = ((4*pi)*(raio**3))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:44:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v1, 4))
		
else:
    print(round(v2, 4))
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:45:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:45:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:45:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:45:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi)*(raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- EXECUTION TIME:
0.15138
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
122.509
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:46:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:48:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
v12 = v1 - v2
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v12, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:48:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
v12 = v1 - v2
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v12, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 13:50:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
v12 = v1 - v2
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v2, 4))
-- EXECUTION TIME:
0.132756
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
122.509
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
208.74
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:50:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
v12 = v2 - v1
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v12, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:55:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
v12 = v2 - v1
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v12, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:59:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
vt =(pi)*(raio**2)*(3*raio)

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:59:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
vt =(pi)*(raio**2)*(3*raio)
vt1 = vt1 - v2
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    vt1 = vt1 - v2
NameError: name 'vt1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 18:59:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
vt =(pi)*(raio**2)*(3*raio)
vt1 = vt - v2
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:00:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
vt =(pi)*(raio**2)*(3*raio)
vt1 = vt - v1
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- EXECUTION TIME:
0.173288
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
122.509
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
387.9239
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:00:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*
v1 = ((4*pi)*(raio**3))/3
v2 = ((pi*raio**2)*(3*raio - altura))/3
vt =(pi)*(raio**2)*(3*raio)
vt1 = vt - v1
if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:02:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*

v1 = ((4*pi)*(raio**3))/3

v2 = ((pi*raio**2)*(3*raio - altura))/3

vt1 = v1 - v2

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:02:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*

v1 = ((4*pi)*(raio**3))/3

v2 = ((pi*raio**2)*(3*raio - altura))/3

vt1 = v1 - v2

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:03:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*

v1 = ((4*pi)*(raio**3))/3

v2 = ((pi*raio**2)*(3*raio - altura))/3

vt1 = v1 + v2

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 19:04:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*

v1 = ((4*pi)*(raio**3))/3

v2 = ((pi*raio**2)*(3*raio - altura))/3

vt1 = v1 + v2
print(v1)
print(v2)

if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(vt1, 4))
-- OUTPUT:
179.5943800302165
122.50902352061196
122.509
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 19:04:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite o raio: "))
altura = float(input("digite a altura: "))
op = int(input(" 1 ou 2: "))
from math import*

v1 = ((4*pi)*(raio**3))/3

v2 = ((pi*raio**2)*(3*raio - altura))/3


if  (op == 1):
     print(round(v2, 4))
		
else:
    print(round(v1, 4))
-- EXECUTION TIME:
0.124736
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
122.509
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:46:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(volumedacalota)
		
else:
	 print(diferenca)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    volumedaesfera = (4*pi(raio**3))/3
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:47:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, ))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    volumedaesfera = (4*pi(raio**3))/3
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:48:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, ))
-- OUTPUT:
171
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:48:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.204682
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:48:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:48:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:49:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.159729
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:49:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:49:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:50:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.139507
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:51:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = (((pi)*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.207305
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:53:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = (((pi)*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:53:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = (((pi)*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:53:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = (((pi)*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:54:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*(raio**3))/3
volumedacalota = (((pi)*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota
print(volumedaesfera)
print(volumedacalota)
if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- OUTPUT:
179.5943800302165
9.025664794069577
170.5687
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 13:57:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = input("qual volume: ")

from math import*

volumedaesfera = (4*pi*altura**3)/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (diferenca == "1"):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.244155
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
-5.4343
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-10.7956
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:00:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = ((4*pi)(*altura**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (numero == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.138887
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1643/2443/main.py", line 10, in <module>
    volumedaesfera = ((4*pi)(*altura**3))/3
TypeError: float object argument after * must be a sequence, not float

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:01:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = ((4*pi)*(*altura**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (numero == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.169451
-- ERROR:
  File "/home/codebench/codes/1643/2443/main.py", line 10
    volumedaesfera = ((4*pi)*(*altura**3))/3
                             ^
SyntaxError: can use starred expression only as assignment target

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:01:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = ((4*pi)*(altura**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (numero == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
0.17692
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-10.7956
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:02:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio = float(input("digite:  "))
altura = float(input("altura: "))
numero = int(input("qual volume: "))

from math import*

volumedaesfera = ((4*pi)*(raio**3))/3
volumedacalota = ((pi*altura**2)*(3*raio - altura))/3
diferenca = volumedaesfera - volumedacalota

if  (numero == 1):
	  print(round(volumedacalota, 4))
		
else:
	 print(round(diferenca, 4))
-- EXECUTION TIME:
8.92568
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
