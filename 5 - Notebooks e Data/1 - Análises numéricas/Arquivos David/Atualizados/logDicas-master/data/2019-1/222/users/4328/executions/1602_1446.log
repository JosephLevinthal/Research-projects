== TEST (2019-03-26 11:17:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:17:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

-- OUTPUT:
618.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 11:18:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()
doar=(2/3*poupa)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:19:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()
doar=(2/3*poupa)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:25:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(2/3*poupa)

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 12:25:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(2/3*poupa)

print(round(doar,3))
-- EXECUTION TIME:
0.128039
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 7, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:26:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(2/3*poupa)

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 12:26:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(2/3*poupa)

print(round(doar,3))
-- EXECUTION TIME:
0.142583
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 7, in <module>
    doar=(2/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:27:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(1/3*poupa)

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(1/3*poupa)
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:28:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3*poupa))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(float(1/3*poupa))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:29:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3(input())))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(float(1/3(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:29:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3(input())))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(float(1/3(input())))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 12:29:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3(input())))

print(round(doar,3))
-- EXECUTION TIME:
0.13943
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1446/main.py", line 7, in <module>
    doar=(float(1/3(input())))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:30:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3(print(poupa))))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(float(1/3(print(poupa))))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:30:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(float(1/3*(print(poupa))))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(float(1/3*(print(poupa))))
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:32:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(int(1/3*(print(poupa))))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(int(1/3*(print(poupa))))
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:33:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=input()

doar=(1/3*(print(poupa)))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(1/3*(print(poupa)))
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:34:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=(1/3*(print(poupa)))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(1/3*(print(poupa)))
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:36:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=(1/3*(print(poupa)))

print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    doar=(1/3*(print(poupa)))
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)

print(round(doar,3))
-- ERROR:
File "XXXX", line 9
    print(round(doar,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)

print(round(doar,3))
-- ERROR:
File "XXXX", line 9
    print(round(doar,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:36) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)

-- ERROR:
File "XXXX", line 8
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)

-- ERROR:
File "XXXX", line 8
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:38:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)
-- ERROR:
File "XXXX", line 8
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:39:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)
-- ERROR:
File "XXXX", line 8
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:39:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)
			  
print(round(doar,3))
-- ERROR:
File "XXXX", line 9
    print(round(doar,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:39:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa))
			  
print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(doar,3))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 12:41:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print(round((1/3)*(poupa),3)
-- ERROR:
File "XXXX", line 8
    
                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:56:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar=print((1/3)*(poupa)
			  
round(doar,3)
-- ERROR:
File "XXXX", line 9
    round(doar,3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:57:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar = print((1/3)*(poupa)
		  
print(round(doar,3))
-- ERROR:
File "XXXX", line 9
    print(round(doar,3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:58:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar = print((1/3)*(poupa)
		  
quantidade = print(round(doar,3))
-- ERROR:
File "XXXX", line 9
    quantidade = print(round(doar,3))
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:58:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa=float(input())

doar = print((1/3)*(poupa))
		  
quantidade = print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    quantidade = print(round(doar,3))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 18:58:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa = float(input())

doar = print((1/3)*(poupa))
		  
quantidade = print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    quantidade = print(round(doar,3))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:01:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

poupa = float(input())

doar = print((1/3)*(poupa))

quantidade = print(round(doar,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    quantidade = print(round(doar,3))
TypeError: type NoneType doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
