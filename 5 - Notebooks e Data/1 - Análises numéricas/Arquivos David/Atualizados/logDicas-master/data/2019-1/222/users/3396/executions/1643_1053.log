== TEST (2019-04-03 19:32:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono=input("patrono:")
if(patrono==cervo):
	mensagem("cervo eh patrono do Harry Potter")
else:
	mensagem("patrono", "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(patrono==cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:34:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono=input("patrono:")
patrono=cervo
if(patrono==cervo):
	mensagem("cervo eh patrono do Harry Potter")
else:
	mensagem("patrono", "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:38:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono=cervo
insert=input("insert:")
if(insert==patrono):
	mensagem("cervo eh patrono do Harry Potter")
else:
	mensagem("insert", "nao eh patronmo do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    patrono=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:39:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem("cervo eh patrono do Harry Potter")
else:
	mensagem("insert", "nao eh patronmo do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("cervo eh patrono do Harry Potter")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:39:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert", "nao eh patronmo do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("cervo eh patrono do Harry Potter")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:40:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert", "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    mensagem("cervo eh patrono do Harry Potter")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:40:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(insert "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem=(insert "nao eh patrono do Harry Potter")
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:40:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert" "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem=(insert "nao eh patrono do Harry Potter")
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:41:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert", "nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem=(insert "nao eh patrono do Harry Potter")
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:41:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if(insert==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert, nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem=(insert "nao eh patrono do Harry Potter")
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-03 19:42:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono="cervo"
insert=input("insert:")
if((insert)==patrono):
	mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=("insert nao eh patrono do Harry Potter")
	print(mensagem)
-- ERROR:
File "XXXX", line 9
    mensagem=(insert "nao eh patrono do Harry Potter")
                                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:39:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto==cervo)
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto "nao eh patrono do Harry Potter")
print(mensagem)
	
-- ERROR:
File "XXXX", line 5
    if(expecto==cervo)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:40:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto==cervo):
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto "nao eh patrono do Harry Potter")
print(mensagem)
	
-- ERROR:
File "XXXX", line 8
    mensagem=(expecto "nao eh patrono do Harry Potter")
                                                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:40:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto==cervo):
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto, "nao eh patrono do Harry Potter")
print(mensagem)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(expecto==cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:41:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
patrono=cervo
if(expecto==cervo):
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto, "nao eh patrono do Harry Potter")
print(mensagem)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:41:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
patrono=cervo
if(expecto=="cervo"):
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto, "nao eh patrono do Harry Potter")
print(mensagem)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    patrono=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 14:41:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
patrono="cervo"
if(expecto=="cervo"):
   mensagem=("cervo eh patrono do Harry Potter")
else:
	mensagem=(expecto, "nao eh patrono do Harry Potter")
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:09:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto=="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem=expecto + "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:09:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto=="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem=expecto + "nao eh patrono do Harry Potter"
print(mensagem)
	
-- EXECUTION TIME:
0.152299
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:10:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto=="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem= expecto + "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:10:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto=="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem= expecto +  "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:11:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto=="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem= expecto  +  "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto =="cervo"):
   mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem= expecto  +  "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:11:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto =="cervo"):
   mensagem ="cervo eh patrono do Harry Potter"
else:
	mensagem = expecto  +  "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:12:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
expecto=input("expecto:")
if(expecto =="cervo"):
   mensagem ="cervo eh patrono do Harry Potter"
else:
	mensagem = expecto  +  "nao eh patrono do Harry Potter"
print(mensagem)
	
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:22:00) 
-- CODE:
frrase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg= frase + "nao eh patrono do Harry Potter"
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    if(frase == "cervo"):
NameError: name 'frase' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:22:36) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg= frase + "nao eh patrono do Harry Potter"
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:23:19) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg= frase + "nao eh patrono do Harry Potter"
print(msg)
-- EXECUTION TIME:
0.138562
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:25:31) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg=frase+ "nao eh patrono do Harry Potter"
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:25:48) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg=frase+ "nao eh patrono do Harry Potter"
print(msg)
-- EXECUTION TIME:
0.126591
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:26:12) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg=frase + "nao eh patrono do Harry Potter"
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:26:13) 
-- CODE:
frase = input("digite:")
if(frase == "cervo"):
	msg= "cervo eh patrono do Harry Potter"
else:
	msg=frase + "nao eh patrono do Harry Potter"
print(msg)
-- EXECUTION TIME:
0.214544
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
