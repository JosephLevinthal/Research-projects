== TEST (2019-03-20 19:04:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:05:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2)

-- ERROR:
File "XXXX", line 7
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:05:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2)

-- ERROR:
File "XXXX", line 7
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2
-- ERROR:
File "XXXX", line 7
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2)
-- ERROR:
File "XXXX", line 7
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:06:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:06:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.193064
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 4, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:07:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:07:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.149499
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 4, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:10:50) 
-- CODE:
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:11:02) 
-- CODE:
vendas= int(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.136207
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1602/1014/main.py", line 1, in <module>
    vendas= int(input())
ValueError: invalid literal for int() with base 10: '700.50'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-20 19:11:48) 
-- CODE:
vendas=float(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- OUTPUT:
210.15
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-20 19:11:55) 
-- CODE:
vendas=float(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.1439
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:22:06) 
-- CODE:
vendas=float(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.155752
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-25 18:39:17) 
-- CODE:
vendas=float(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.248189
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 17:58:20) 
-- CODE:
vendas=float(input("valor total das vendas:"))
lucro= vendas*(30/100)
print(round(lucro, 2))
-- EXECUTION TIME:
0.254893
-- TEST CASE 1:
---- input:
700.50
---- correct output:
210.15
---- user output:
210.15
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
