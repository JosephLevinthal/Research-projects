== TEST (2019-04-01 19:00:55) 
-- CODE:
r1 = float(input("digite r1"))
-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:01:02) 
-- CODE:
r1 = float(input("digite r1: "))
-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:02:05) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:02:24) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:02:29) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:04:17) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(r1*r2)+(r2*r3)+(r1*r3)
-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:04:35) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- EXECUTION TIME:
0.17134
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
410.0
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
140.0
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
6705.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:06:19) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2+r3)+(r1*r3)
-- OUTPUT:
1.1512925464970225
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:06:40) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2+r3)+(r1*r3)
print(req)
-- OUTPUT:
168.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:06:43) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2+r3)+(r1*r3)
print(req)
-- EXECUTION TIME:
0.261063
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
168.0
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
78.0
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
2878.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:08:10) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3
print(req)
-- OUTPUT:
3360.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:09:04) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/r1*r2+r2*r3+r1*r3
print(req)
-- EXECUTION TIME:
0.162038
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
8240.0
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
digite r1: digite r2: digite r3: 770.0
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
digite r1: digite r2: digite r3: 355140.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:09:04) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/r1*r2+r2*r3+r1*r3
print(req)
-- OUTPUT:
8240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:09:30) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)/r1*r2+r2*r3+r1*r3
print(req)
-- OUTPUT:
8240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:09:59) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)/(r1*r2)+(r2*r3)+r1*r3
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:10:15) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)/(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:10:34) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:11:23) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2)+(r2*r3)+(r1*r3)//r1*r2*r3
print(req)
-- OUTPUT:
3416.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:11:31) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2)+(r2*r3)+(r1*r3)//r1*r2*r3
print(req)
-- OUTPUT:
3416.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:11:44) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2)+(r2*r3)+(r1*r3)/r1*r2*r3
print(req)
-- OUTPUT:
3416.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:13:53) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//((r1*r2)+(r2*r3)+(r1*r3))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:14:10) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(((r1*r2)+(r2*r3)+(r1*r3)))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:14:28) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(((r1*r2)+(r2*r3)+r1*r3))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:15:13) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(((r1*r2)+(r2*r3)+r1*r3))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:16:58) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(r1*r2)+(r2*r3)*(r1*r3)
print(req)
-- OUTPUT:
33610.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:18:57) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2*r3)//(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:19:24) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//r1*r2+r2*r3+r1*r3
print(req)
-- OUTPUT:
8240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:20:08) 
-- CODE:
r1 = int(input("digite r1: "))
r2 = int(input("digite r2: "))
r3 = int(input("digite r3: "))

req = r1*r2*r3//r1*r2+r2*r3+r1*r3
print(req)
-- OUTPUT:
8240
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:21:07) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+r1*r3
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:21:29) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+r1*r3
print(req)
-- EXECUTION TIME:
0.232424
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
410.0
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
140.0
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
6705.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:21:50) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = (r1*r2)*r3//(r1*r2)+(r2*r3)+r1*r3
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:22:09) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*(r2*r3)//(r1*r2)+(r2*r3)+r1*r3
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:22:27) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//((r1*r2)+(r2*r3))+r1*r3
print(req)
-- OUTPUT:
125.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:22:52) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:23:07) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+((r2*r3)+(r1*r3))
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:24:33) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)+3
print(req)
-- OUTPUT:
413.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:24:43) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)-10
print(req)
-- OUTPUT:
400.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:24:55) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)-20
print(req)
-- OUTPUT:
390.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:25:20) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)(+(r1*r3))
print(req)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    req = r1*r2*r3//(r1*r2)+(r2*r3)(+(r1*r3))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:25:43) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)-13
print(req)
-- OUTPUT:
397.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:26:49) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//(r1*r2)+(r2*r3)+(r1*r3)
print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:27:31) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//((r1*r2)+(r2*r3)+(r1*r3))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:27:43) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//((r1*r2)+(r2*r3)+(r1*r3))
print(req)
-- EXECUTION TIME:
0.159012
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
4.0
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
2.0
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
19.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:27:56) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3//((r1*r2)+((r2*r3)+(r1*r3)))
print(req)
-- OUTPUT:
4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:28:18) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = 6//5

print(req)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:28:38) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = 6//5

print(req)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:28:52) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = 6//12

print(req)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:29:09) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = 6/12

print(req)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:29:16) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = 6/12

print(req)
-- EXECUTION TIME:
0.154757
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
0.5
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
0.5
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
0.5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:30:38) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = round(6/12, 15)

print(req)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:34:04) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/(r1*r2)+(r2*r3)+(r1*r3)

print(req)
-- OUTPUT:
410.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:34:41) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/r1*r2+r2*r3+r1*r3

print(req)
-- OUTPUT:
8240.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 19:34:54) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/(r1*r2+r2*r3+r1*r3)

print(req)
-- OUTPUT:
4.565217391304348
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 19:35:01) 
-- CODE:
r1 = float(input("digite r1: "))
r2 = float(input("digite r2: "))
r3 = float(input("digite r3: "))

req = r1*r2*r3/(r1*r2+r2*r3+r1*r3)

print(req)
-- EXECUTION TIME:
0.144983
-- TEST CASE 1:
---- input:
12
28
10
---- correct output:
4.565217391304348
---- user output:
4.565217391304348
-- TEST CASE 2:
---- input:
5
8
10
---- correct output:
2.3529411764705883
---- user output:
2.3529411764705883
-- TEST CASE 3:
---- input:
60
88
45
---- correct output:
19.899497487437184
---- user output:
19.899497487437184
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
