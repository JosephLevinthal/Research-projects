== SUBMITION (2019-03-27 19:37:12) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = 10

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.141636
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
10
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
10
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:38:00) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = 10

# Impressao do valor total:
print(float)
-- EXECUTION TIME:
0.188224
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
<class 'float'>
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
<class 'float'>
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
<class 'float'>
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:14) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("Qual o valor unitario do jogo? "))

# Calculo do valor a ser pago, incluindo o frete:
total = 125*8

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.160942
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1000
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1000
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1000
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:21) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input("80"))

# Calculo do valor a ser pago, incluindo o frete:
total = 125*8

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.117191
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
1000
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
1000
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
1000
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:26) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 125*8

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.170341
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
801000
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
801000
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
801000
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:36) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 80+45

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.144718
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
80125
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
80125
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
80125
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:40:37) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 80+45

# Impressao do valor total:
print(total)
-- OUTPUT:
80125
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:47) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 125

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.127562
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
80125
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
80125
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
80125
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 19:40:49) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 125

# Impressao do valor total:
print(total)
-- EXECUTION TIME:
0.211097
-- TEST CASE 1:
---- input:
1.23
---- correct output:
54.84
---- user output:
80125
-- TEST CASE 2:
---- input:
356
---- correct output:
2893.0
---- user output:
80125
-- TEST CASE 3:
---- input:
123987.0
---- correct output:
991941.0
---- user output:
80125
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-27 19:40:51) 
-- CODE:
# Este código é apenas um ESBOÇO da solução.
# Modifique-o para atender as especificações do enunciado.

# Leitura das entradas e conversao para float:
var = float(input(80))

# Calculo do valor a ser pago, incluindo o frete:
total = 125

# Impressao do valor total:
print(total)
-- OUTPUT:
80125
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
