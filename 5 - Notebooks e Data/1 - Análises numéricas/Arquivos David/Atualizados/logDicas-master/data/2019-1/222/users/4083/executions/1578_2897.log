== SUBMITION (2019-03-18 11:24:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.173911
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:25:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16"))

# Impressao do dobro do numero
print(32)
-- EXECUTION TIME:
0.133436
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:25:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16"))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.185749
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:26:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.152378
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1632
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1632
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:26:12) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.18905
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1632
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1632
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:27:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16: "))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.163533
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:28:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16: "))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.156627
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:28:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
161234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:28:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print(32)
-- EXECUTION TIME:
0.144234
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1632
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
1632
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:28:58) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print(32)
-- OUTPUT:
1632
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:29:21) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(16))

# Impressao do dobro do numero
print("32")
-- OUTPUT:
1632
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:30:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16: "))

# Impressao do dobro do numero
print("32")
-- OUTPUT:
32
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:31:04) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("16: "))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.197753
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:34:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print("32")
-- OUTPUT:
32
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:34:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print("32")
-- EXECUTION TIME:
0.162181
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:34:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:35:46) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(32)
-- OUTPUT:
32
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:36:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(32)
-- EXECUTION TIME:
0.159909
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
32
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
32
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:45:47) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:46:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = input("digite o nuemero: "))

# Impressao do dobro do numero
print(num)
-- ERROR:
File "XXXX", line 4
    num = input())
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 11:47:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(2*num)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 11:47:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("digite o nuemero: "))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.201937
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
