== TEST (2019-03-22 11:51:55) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(365**(-n))
print(round(prob,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:52:52) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(prob,2))
-- OUTPUT:
0.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:53:19) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:53:32) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:53:49) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:54:04) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 11:54:40) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 11:54:50) 
-- CODE:
import math
n=int(input())
prob=1-((math.factorial(365))/math.factorial(365-n))*(1/(365**n))
print(round(100*prob,2))
-- EXECUTION TIME:
0.133738
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
