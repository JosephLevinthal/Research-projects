== TEST (2019-04-15 13:26:23) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:27:25) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 == a, b, c, d, e):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(n1 == a, b, c, d, e):
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 13:28:05) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
ADA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 12:49:54) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
ADA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 13:40:54) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:12:24) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome = n1 .upper()
	print(nome)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:14:18) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 .upper()
	print(nome1)
	print(nome2)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:15:05) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 .lower()
	print(nome1)
	print(nome2)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:16:13) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 .upper()
	print(nome1)
	print(nome2)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:19:50) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:28:42) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome = n2 .upper()
	print(nome)
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:30:40) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:31:43) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper()
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:32:18) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2 .upper):
	nome1 = n1 .
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 
	print(nome1)
	print(nome2)
-- ERROR:
File "XXXX", line 4
    nome1 = n1 .
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:32:24) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2 .upper):
	nome1 = n1 
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 
	print(nome1)
	print(nome2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(n1 > n2 .upper):
TypeError: '>' not supported between instances of 'str' and 'builtin_function_or_method'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:32:37) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2 .upper()):
	nome1 = n1 
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:33:08) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2 .upper()):
	nome1 = n1 
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:53:19) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 .upper() > n2 .upper()):
	nome1 = n1 
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:54:21) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome1)
	print(nome2)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome1)
	print(nome2)
-- OUTPUT:
Ada
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:54:43) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome2)
	print(nome1)
-- OUTPUT:
LEON
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 18:54:52) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.210651
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
LEON
Ada
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
MARCOS
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
GEORGE
WILSON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:54:57) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 .upper()
	print(nome2)
	print(nome1)
-- OUTPUT:
LEON
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:55:22) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 
	print(nome2)
	print(nome1)
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:55:31) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 
	print(nome2)
	print(nome1)
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 18:55:42) 
-- CODE:
n1 = input("Digite nome 1: ")
n2 = input("Digite nome 2: ")
if(n1 > n2):
	nome1 = n1 .upper() 
	nome2 = n2 
	print(nome2)
	print(nome1)
else:
	nome1 = n1
	nome2 = n2 
	print(nome2)
	print(nome1)
-- EXECUTION TIME:
0.173377
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Leon
Ada
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
MARCOS
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
george
WILSON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 20:57:48) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if((n1 .upper()) > (n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
	
	
-- ERROR:
File "XXXX", line 4
    if((n1 .upper()) > (n2 .upper()):
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 20:58:12) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 20:58:21) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:00:10) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	print(n1 .upper())
	print(n2)
else:
	print(n2 .upper())
	print(n1)
	
	
-- OUTPUT:
LEON
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:04:05) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:04:50) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	print(n1)
else:
	print(n2)
	
	
-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:05:19) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	print(n1)
else:
	print(n2)
	
	
-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:06:30) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	n1 == n1 .upper()
	print(n1)
else:
	n2 == n2.upper()
	print(n2)
	
	
-- OUTPUT:
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:07:17) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2 .upper()):
	n1 == n1 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2.upper()
	print(n2)
	print(n1)
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:09:30) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

x = n1 and n2 .upper()
print(x)
		
	
	
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:10:03) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

x = n1 .upper() and n2 .upper()
print(x)
		
	
	
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:10:23) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

x = n1 .upper() , n2 .upper()
print(x)
		
	
	
-- OUTPUT:
('ADA', 'LEON')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:10:56) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

x = n1 .upper()  
x = n2 .upper()
print(x)
		
	
	
-- OUTPUT:
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:11:43) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

x = n1 .upper()  
y = n2 .upper()
print(x)
print(y)
		
	
	
-- OUTPUT:
ADA
LEON
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:13:29) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:13:47) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- EXECUTION TIME:
0.155736
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Leon
Ada
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Marcos
Demetrius
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
george
WILSON
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:13:58) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:14:21) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:15:27) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 > n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Leon
Ada
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:16:12) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:16:19) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:16:34) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- EXECUTION TIME:
0.129551
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Ada
Leon
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
Marcos
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
WILSON
george
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:16:40) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:17:26) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if((n1 < n2) .upper()):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if((n1 < n2) .upper()):
AttributeError: 'bool' object has no attribute 'upper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:18:03) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:18:14) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:18:20) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	n1 == n1 .upper()
	n2 == n2 .upper()
	print(n1)
	print(n2)
else:
	n2 == n2 . upper()
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:20:39) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:21:11) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:21:23) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 21:21:34) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- OUTPUT:
Ada
Leon
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-27 21:21:44) 
-- CODE:
n1 = str(input("Digite o nome 1: "))
n2 = str(input("Digite o nome 2: "))

if(n1 < n2 .upper()):
	print(n1)
	print(n2)
else:
	print(n2)
	print(n1)
		
	
	
-- EXECUTION TIME:
0.214483
-- TEST CASE 1:
---- input:
Ada
Leon
---- correct output:
Ada
Leon
---- user output:
Ada
Leon
-- TEST CASE 2:
---- input:
Marcos
Demetrius
---- correct output:
Demetrius
Marcos
---- user output:
Demetrius
Marcos
-- TEST CASE 3:
---- input:
WILSON
george
---- correct output:
george
WILSON
---- user output:
george
WILSON
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
