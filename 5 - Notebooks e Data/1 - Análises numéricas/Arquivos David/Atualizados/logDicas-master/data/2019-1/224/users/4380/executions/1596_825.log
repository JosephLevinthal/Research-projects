== TEST (2019-03-28 18:17:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:19:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:20:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2)))
print(round(4/3*pi*(raio**3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:21:22) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:21:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- EXECUTION TIME:
0.133111
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/825/main.py", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:22:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- EXECUTION TIME:
0.266118
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/825/main.py", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:22:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:23:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=int(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),4))
print(round(4/3*pi*(raio**3),4))
-- EXECUTION TIME:
0.217763
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/825/main.py", line 4, in <module>
    raio=int(input())
ValueError: invalid literal for int() with base 10: '4.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:24:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=float(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),4))
print(round(4/3*pi*(raio**3),4))
-- OUTPUT:
63.6173
381.7035
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-28 18:24:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=float(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- OUTPUT:
63.617
381.704
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-28 18:25:10) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
raio=float(input("valor do raio: "))
from math import pi
print(round(pi*(raio**2),3))
print(round(4/3*pi*(raio**3),3))
-- EXECUTION TIME:
0.124537
-- TEST CASE 1:
---- input:
4.5

---- correct output:
63.617
381.704
---- user output:
63.617
381.704
-- TEST CASE 2:
---- input:
12.34
---- correct output:
478.388
7871.076
---- user output:
478.388
7871.076
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
