2019-5-28 18:33:13.446#viewportChange#0
2019-5-28 18:33:34.746#mousedown#{"isTrusted":true}
2019-5-28 18:33:34.750#focus#
2019-5-28 18:33:36.273#change#{"from":{"line":0,"ch":0,"sticky":"after","xRel":171.6875},"to":{"line":0,"ch":0,"sticky":"after","xRel":171.6875},"text":["from numpy import *","pal = input(\"digite a frase: \")","copy = \"\"","i = 0","#retira os espaços da frase","while(i<len(pal)):","\tif(pal[i] == \" \"):","\t\tcopy = copy + \"\"","\telse:","\t\tcopy = copy + str(pal[i])","\ti = i + 1","print(copy.upper())","valor = 0","i2 = 0","#analisa se a frase é um palindromo ou não","while(i2<len(copy)):","\tif(copy[i2] == copy[-1*(i2+1)]): #quando é palindromo então ex: string[0] == string[-1];","\t\tvalor = valor + 1             #string[1] == string[-2], e assim por diante.","\telse:","\t\tvalor = valor + 0","\ti2 = i2 + 1","#se o toda a string copy ter simetria, então o valor vai ser igual ao tamanho da string sem espaço.","#pois para todo o copy[i2] == copy[-(1+i2)] no laço, adiciona-se o valor 1, assim para todos os caracteres. ","#se todos os caracteres forem simétricos então o adicionar-se-à 1 a todos os caracteres comparados, o valor chegará ao máximo.","if(valor == len(copy)):","\tprint(\"1\")","else:","\tprint(\"0\")","#autor: Lincoln Junior (UFAM)"],"removed":[""],"origin":"paste"}
2019-5-28 18:33:36.314#viewportChange#0
2019-5-28 18:33:37.411#mousedown#{"isTrusted":true}
2019-5-28 18:33:39.300#change#{"from":{"line":28,"ch":0,"sticky":"after","xRel":-0.3125},"to":{"line":28,"ch":29,"sticky":"before","xRel":21.48748779296875},"text":[""],"removed":["#autor: Lincoln Junior (UFAM)"],"origin":"+delete"}
2019-5-28 18:33:39.300#keyHandled#"Backspace"
2019-5-28 18:33:39.300#change#{"from":{"line":28,"ch":0,"sticky":"after","xRel":-0.3125},"to":{"line":28,"ch":29,"sticky":"before","xRel":21.48748779296875},"text":[""],"removed":["#autor: Lincoln Junior (UFAM)"],"origin":"+delete"}
2019-5-28 18:33:39.300#keyHandled#"Backspace"
2019-5-28 18:33:42.502#submit#Congratulations, your code is correct!
2019-5-28 18:33:44.337#blur#
2019-5-28 18:34:36.238#mousedown#{"isTrusted":true}
2019-5-28 18:34:36.261#focus#
2019-5-28 18:34:38.066#change#{"from":{"line":4,"ch":0,"sticky":"after","xRel":-1.3125},"to":{"line":4,"ch":27,"sticky":"before","xRel":-1.38751220703125},"text":[""],"removed":["#retira os espaços da frase"],"origin":"+delete"}
2019-5-28 18:34:38.066#keyHandled#"Backspace"
2019-5-28 18:34:39.978#mousedown#{"isTrusted":true}
2019-5-28 18:34:42.113#change#{"from":{"line":14,"ch":0,"sticky":"after","xRel":2.6875},"to":{"line":14,"ch":42,"sticky":"before","xRel":88.6875},"text":[""],"removed":["#analisa se a frase é um palindromo ou não"],"origin":"+delete"}
2019-5-28 18:34:42.113#keyHandled#"Backspace"
2019-5-28 18:34:49.396#change#{"from":{"line":14,"ch":0,"sticky":null},"to":{"line":14,"ch":0,"sticky":null},"text":["#analisa se a frase é um palindromo ou não"],"removed":[""],"origin":"undo"}
2019-5-28 18:34:49.396#keyHandled#"Ctrl-Z"
2019-5-28 18:34:50.440#change#{"from":{"line":4,"ch":0,"sticky":null},"to":{"line":4,"ch":0,"sticky":null},"text":["#retira os espaços da frase"],"removed":[""],"origin":"undo"}
2019-5-28 18:34:50.440#keyHandled#"Ctrl-Z"
2019-5-28 18:34:50.440#change#{"from":{"line":4,"ch":0,"sticky":null},"to":{"line":4,"ch":0,"sticky":null},"text":["#retira os espaços da frase"],"removed":[""],"origin":"undo"}
2019-5-28 18:34:50.440#keyHandled#"Ctrl-Z"
2019-5-28 18:34:57.419#submit#Congratulations, your code is correct!
2019-5-30 18:03:05.514#viewportChange#0
2019-5-30 18:20:42.295#mousedown#{"isTrusted":true}
2019-5-30 18:20:42.331#focus#
2019-5-30 18:20:45.774#keyHandled#"'{'"
2019-5-30 18:20:48.695#mousedown#{"isTrusted":true}
2019-5-30 18:20:49.678#mousedown#{"isTrusted":true}
