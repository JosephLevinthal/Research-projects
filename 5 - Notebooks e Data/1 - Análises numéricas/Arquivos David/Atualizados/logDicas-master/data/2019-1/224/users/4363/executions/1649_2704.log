== TEST (2019-04-11 19:39:46) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:41:21) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
else:
	a=a
print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:41:25) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
else:
	a=a
print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:41:30) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
else:
	a=a
print(a)
-- EXECUTION TIME:
0.29338
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:42:29) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
print(a)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:42:38) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
print(a)
print(msg)
-- OUTPUT:
5.5
S
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:42:42) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
print(a)
print(msg)
-- OUTPUT:
5.5
S
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:42:45) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
print(a)
print(msg)
-- EXECUTION TIME:
0.165762
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
S
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
S
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
S
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:43:04) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
float(print(a))
float(print(msg))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    float(print(a))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:43:18) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
float(print(a))
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    float(print(a))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:44:15) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = float(input("vai receber a bonificacao ? :"))
if (a>0):
	a = a+a*(10/100)
	msg = "S"
else:
	a=a
	msg = "N"
float(print(a))
print(msg)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:45:21) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = float(input("vai receber a bonificacao ? :"))
if (b="S"):
	a = a+a*(10/100)
else:(b="N")
	a=a
float(print(a))

-- ERROR:
File "XXXX", line 3
    if (b="S"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:45:26) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = float(input("vai receber a bonificacao ? :"))
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
	a=a
float(print(a))

-- ERROR:
File "XXXX", line 6
    a=a
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:45:50) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = float(input("vai receber a bonificacao ? :"))
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
	a = a
float(print(a))

-- ERROR:
File "XXXX", line 6
    a = a
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:46:09) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = float(input("vai receber a bonificacao ? :"))
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
float(print(a))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:46:21) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :"))
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
float(print(a))

-- ERROR:
File "XXXX", line 2
    b = input())
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:46:27) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
float(print(a))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    float(print(a))
TypeError: float() argument must be a string or a number, not 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:46:45) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:46:57) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:47:10) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:47:36) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :".(upper))
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- ERROR:
File "XXXX", line 2
    b = input("vai receber a bonificacao ? :".(upper))
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:47:58) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
b = b.upper()
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:48:06) 
-- CODE:
a = float(input("nota do aluno de 0 a 10:"))
b = input("vai receber a bonificacao ? :")
b = b.upper()
if (b=="S"):
	a = a+a*(10/100)
else:(b=="N")
print(a)

-- EXECUTION TIME:
0.16707
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
