== TEST (2019-04-05 19:50:24) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
if(preco>pagamento) :
	falta=preco-pagamento
else :
	falta=pagamento-preco
print(falta)	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 19:50:46) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
if(preco>pagamento) :
	falta=preco-pagamento
else :
	falta=pagamento-preco
print(falta)	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 19:51:10) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
if(preco>pagamento) :
	falta=preco-pagamento
else :
	falta=pagamento-preco
print(round(falta,2))	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 19:51:19) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
if(preco>pagamento) :
	falta=preco-pagamento
else :
	falta=pagamento-preco
print(round(falta,2))	
-- EXECUTION TIME:
0.218838
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 19:56:58) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
falta=preco-pagamento
troco=pagamento-preco
if(preco>pagamento) :
	print(round(falta,2))
else :
	print(round(troco,2))

	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:01:50) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn="falta" + x
else :
	msn="troco" + y
print(round(msn,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    msn="falta" + x
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:02:43) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn=falta + x
else :
	msn=troco + y
print(round(msn,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    msn=falta + x
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:05:11) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn=x
	h="falta"
else :
	msn=y
	h="troco"
print(h+(round(msn,2))	
	
-- ERROR:
File "XXXX", line 13
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:05:37) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn=x
	h="falta"
else :
	msn=y
	h="troco"
print((h)+(round(msn,2))	
	
-- ERROR:
File "XXXX", line 13
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:16:45) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn=x
   print("falta" + (round(x,2)))
else :
	msn=y
	print("troco de" + (round(y,2)))

	
-- ERROR:
File "XXXX", line 7
    print("falta" + (round(x,2)))
                                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:17:22) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	msn=x
   print(falta + (round(x,2)))
else :
	msn=y
	print(troco + (round(y,2)))

	
-- ERROR:
File "XXXX", line 7
    print(falta + (round(x,2)))
                              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:17:51) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
h=falta
t=troco de
if(preco>pagamento) :
	msn=x
   print(h + (round(x,2)))
else :
	msn=y
	print(t + (round(y,2)))

	
-- ERROR:
File "XXXX", line 6
    t=troco de
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:18:07) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
h="falta"
t="troco de"
if(preco>pagamento) :
	msn=x
   print(h + (round(x,2)))
else :
	msn=y
	print(t + (round(y,2)))

	
-- ERROR:
File "XXXX", line 9
    print(h + (round(x,2)))
                          ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:18:56) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
h="falta"
t="troco de"
if(preco>pagamento) :
	msn=x
   print(round(x,2)) + print(h)
else :
	msn=y
	print(round(y,2)) + print(t)

	
-- ERROR:
File "XXXX", line 9
    print(round(x,2)) + print(h)
                               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:20:11) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
h="falta"
t="troco de"
if(preco>pagamento) :
	msn=x
   print(round(x,2)) 
	print(h)
else :
	msn=y
	print(round(y,2)) 
	print(t)

	
-- ERROR:
File "XXXX", line 9
    print(round(x,2)) 
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:20:39) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
h="falta"
t="troco de"
if(preco>pagamento) :
	msn=x
   print(round(msn,2)) 
	print(h)
else :
	msn=y
	print(round(msn,2)) 
	print(t)

	
-- ERROR:
File "XXXX", line 9
    print(round(msn,2)) 
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:21:22) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
if(preco>pagamento) :
	msn=preco-pagamento
   print(round(msn,2)) 
	print(h)
else :
	msn=pagamento-preco
	print(round(msn,2)) 
	print(t)

	
-- ERROR:
File "XXXX", line 7
    print(round(msn,2)) 
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:23:30) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   print(round(msn1,2)) 
	print(h)
else :
	print(round(msn2,2)) 
	print(t)

	
-- ERROR:
File "XXXX", line 9
    print(h)
           ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:24:06) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   print(round(msn1,2)) 
	
else :
	print(round(msn2,2)) 
	

	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:24:06) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   print(round(msn1,2)) 
	
else :
	print(round(msn2,2)) 
	

	
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:25:28) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=print(round(msn1,2)) 
	
else :
	j=print(round(msn2,2)) 
print(j)	
	

	
-- OUTPUT:
26.0
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:26:29) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= h + print(round(msn1,2)) 
	
else :
	j= t + print(round(msn2,2)) 
	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    j= h + print(round(msn1,2)) 
TypeError: must be str, not NoneType
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:28:23) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= h + print(round(msn1,2)) 
	
else :
	j= t + print(round(msn2,2)) 
print(j)	
	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    j= h + print(round(msn1,2)) 
TypeError: must be str, not NoneType
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:28:46) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
h="falta"
t="troco de"
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= h + print(round(msn1,2)) 
else :
	j= t + print(round(msn2,2)) 
print(j)	
	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    j= h + print(round(msn1,2)) 
TypeError: must be str, not NoneType
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:29:24) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= "falta"+ print(round(msn1,2)) 
else :
	j= "troco de" + print(round(msn2,2)) 
print(j)	
	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    j= "falta"+ print(round(msn1,2)) 
TypeError: must be str, not NoneType
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:29:52) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= "falta" print(round(msn1,2)) 
else :
	j= "troco de" print(round(msn2,2)) 
print(j)	
	
	

	
-- ERROR:
File "XXXX", line 6
    j= "falta" print(round(msn1,2)) 
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:31:10) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=  print(round(msn1,2)) 
else :
	j=  print(round(msn2,2)) 
print(j)	
	
	

	
-- OUTPUT:
26.0
None
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:31:36) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=  print(round(msn1,2)) 
else :
	j=  print(round(msn2,2)) 
print(j)	
print("falta de")
	
	

	
-- OUTPUT:
26.0
None
falta de
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:31:37) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=  print(round(msn1,2)) 
else :
	j=  print(round(msn2,2)) 
print(j)	
print("falta de")
	
	

	
-- OUTPUT:
26.0
None
falta de
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:32:21) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=  print(round(msn1,2)) 
else :
	j=  print(round(msn2,2)) 
print("falta de")+print(j)

	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta de")+print(j)
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:32:22) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j=  print(round(msn1,2)) 
else :
	j=  print(round(msn2,2)) 
print("falta de")+print(j)

	
	

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print("falta de")+print(j)
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:34:19) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= (round(msn1,2))
else :
	j= (round(msn2,2)
print("falta de" + j)		 

	

	
-- ERROR:
File "XXXX", line 9
    print("falta de" + j)		 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:34:35) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= (round(msn1,2))
else :
	j= (round(msn2,2)
print(j)		 

	

	
-- ERROR:
File "XXXX", line 9
    print(j)		 
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 20:35:02) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
   j= (round(msn1,2))
else :
	j= (round(msn2,2)
			 
		 
print(j)
	

	
-- ERROR:
File "XXXX", line 11
    print(j)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:54:40) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print(falta,round(msn1,2))
else :
	print(troco de,round(msn2,2))
	
			 
		 


	
-- ERROR:
File "XXXX", line 8
    print(troco de,round(msn2,2))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:55:01) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 16:55:15) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- EXECUTION TIME:
0.139039
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:55:58) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 16:56:06) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- EXECUTION TIME:
0.265917
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:57:06) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 16:57:14) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
msn1=preco-pagamento
msn2=pagamento-preco
if(preco>pagamento) :
	print("falta",round(msn1,2))
else :
	print("troco de",round(msn2,2))
	
			 
		 


	
-- EXECUTION TIME:
0.213328
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:41:33) 
-- CODE:
preco=float(input("preco"))
pagamento=float(inut("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de", round(y,2))
			 
		 


	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento=float(inut("pagamento"))
NameError: name 'inut' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:41:49) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de", round(y,2))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:41:58) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de", round(y,2))
			 
		 


	
-- EXECUTION TIME:
0.219604
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:42:21) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(y,2))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:42:31) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(y,2))
			 
		 


	
-- EXECUTION TIME:
0.205663
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:42:40) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(x,2))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:42:53) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(x,2))
			 
		 


	
-- EXECUTION TIME:
0.117589
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de -28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:43:15) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(y,2))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:43:22) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",round(x,2))
else :
	print("troco de",round(y,2))
			 
		 


	
-- EXECUTION TIME:
0.151558
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:21:51) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print("falta",(round(x,2))
else :
	print("troco de",(round(y,2))
			 
		 


	
-- ERROR:
File "XXXX", line 7
    else :
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 17:22:26) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("falta"),(round(x,2)))
else :
	print(("troco de"),(round(y,2)))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 17:22:49) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("falta"),(round(x,2)))
else :
	print(("troco de"),(round(y,2)))
			 
		 


	
-- EXECUTION TIME:
0.190057
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:00:33) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("falta"),(round(x,2)))
else :
	print(("troco de"),(round(y,2)))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:00:53) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("falta"),(round(x,2)))
else :
	print(("Troco de"),(round(y,2)))
			 
		 


	
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:01:00) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("falta"),(round(x,2)))
else :
	print(("Troco de"),(round(y,2)))
			 
		 


	
-- EXECUTION TIME:
0.150031
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:01:10) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("Falta"),(round(x,2)))
else :
	print(("Troco de"),(round(y,2)))
			 
		 


	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:01:19) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("Falta"),(round(x,2)))
else :
	print(("Troco de"),(round(y,2)))
			 
		 


	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:01:30) 
-- CODE:
preco=float(input("preco"))
pagamento=float(input("pagamento"))
x=preco-pagamento
y=pagamento-preco
if(preco>pagamento) :
	print(("Falta"),(round(x,2)))
else :
	print(("Troco de"),(round(y,2)))
			 
		 


	
-- EXECUTION TIME:
0.17475
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:09:33) 
-- CODE:
preco=float(input("p"))
pagamento=float(input("pa"))
fa=preco-pagamento
troco=pagamento-preco

if(preco>pagamento):
	print("Falta", round(fa,2))
else:
	print("Troco de", round(troco,2))


	
-- EXECUTION TIME:
0.160617
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
