== TEST (2019-03-17 16:28:53) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia"
print(frase.???)
-- ERROR:
File "XXXX", line 2
    print(frase.???)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:30:13) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(.upper(frase).???)
-- ERROR:
File "XXXX", line 2
    print(.upper(frase).???)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:30:34) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.???)
-- ERROR:
File "XXXX", line 2
    print(frase.???)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:31:01) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.uper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.uper(frase))
AttributeError: 'str' object has no attribute 'uper'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:31:11) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper(frase))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:31:44) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:31:59) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(.upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
File "XXXX", line 2
    print(.upper("ada lovelace foi a primeira programadora da historia."))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:32:37) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print(frase.upper("ada lovelace foi a primeira programadora da historia."))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper("ada lovelace foi a primeira programadora da historia."))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:34:01) 
-- CODE:
frase = "ada lovelace foi a primeira programadora da historia."
print("ada lovelace foi a primeira programadora da historia.".upper(frase))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print("ada lovelace foi a primeira programadora da historia.".upper(frase))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:37:40) 
-- CODE:
frase:"Ada Lovelace foi a primeira programadora da historia."
	print(frase.upper())
-- ERROR:
File "XXXX", line 2
    print(frase.upper())
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:38:54) 
-- CODE:
string = "Ada Lovelace foi a primeira programadora da historia."
	print(string.upper())
-- ERROR:
File "XXXX", line 2
    print(string.upper())
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:39:20) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(.upper(frase))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 16:39:32) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(frase.upper(frase))
-- ERROR:
File "XXXX", line 2
    print(frase.upper(frase))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:37:08) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print("Ada Lovelace foi a primeira programadora da historia".upper(frase))
-- ERROR:
File "XXXX", line 2
    print("Ada Lovelace foi a primeira programadora da historia".upper(frase))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:41:38) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(frase = "Ada Lovelace foi a primeira programadora da historia".upper(frase))
-- ERROR:
File "XXXX", line 2
    print(frase = "Ada Lovelace foi a primeira programadora da historia".upper(frase))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:42:28) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper( "Ada Lovelace foi a primeira programadora da historia"))
-- ERROR:
File "XXXX", line 2
    print(.upper( "Ada Lovelace foi a primeira programadora da historia"))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:42:37) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper( "Ada Lovelace foi a primeira programadora da historia"))
-- ERROR:
File "XXXX", line 2
    print(.upper( "Ada Lovelace foi a primeira programadora da historia"))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:43:46) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper( "Ada Lovelace foi a primeira programadora da historia")
-- ERROR:
File "XXXX", line 2
    print(.upper( "Ada Lovelace foi a primeira programadora da historia")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 18:43:52) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper( "Ada Lovelace foi a primeira programadora da historia")
-- EXECUTION TIME:
0.144446
-- ERROR:
  File "/home/codebench/codes/1577/1559/main.py", line 2
    print(.upper( "Ada Lovelace foi a primeira programadora da historia")
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:44:09) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
	print(.upper("Ada Lovelace foi a primeira programadora da historia"))
-- ERROR:
File "XXXX", line 2
    print(.upper("Ada Lovelace foi a primeira programadora da historia"))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:45:32) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print(frase.upper( "Ada Lovelace foi a primeira programadora da historia"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(frase.upper( "Ada Lovelace foi a primeira programadora da historia"))
TypeError: upper() takes no arguments (1 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:46:13) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print(str.upper( "Ada Lovelace foi a primeira programadora da historia"))
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:47:22) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia".upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 18:48:18) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia".upper())
-- EXECUTION TIME:
0.146656
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-18 18:48:27) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia".upper())
-- OUTPUT:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 18:48:33) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia".upper())
-- EXECUTION TIME:
0.115165
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-18 18:48:52) 
-- CODE:
frase = "Ada Lovelace foi a primeira programadora da historia."
print("Ada Lovelace foi a primeira programadora da historia.".upper())
-- EXECUTION TIME:
0.132088
-- TEST CASE 1:
---- input:
nonono
---- correct output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
---- user output:
ADA LOVELACE FOI A PRIMEIRA PROGRAMADORA DA HISTORIA.
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
