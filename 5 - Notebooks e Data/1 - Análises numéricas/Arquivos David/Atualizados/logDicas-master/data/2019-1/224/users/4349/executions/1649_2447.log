== TEST (2019-04-14 10:53:13) 
-- CODE:
num1= float(input(("preco: ")
num2= float(input("pagamento: "))
						
if(preco>pagamento)
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
File "XXXX", line 2
    num2= float(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:53:53) 
-- CODE:
num1= float(input(("preco: ")
num2= float(input("pagamento: "))
						
if(num1>num2)
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
File "XXXX", line 2
    num2= float(input())
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:54:23) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2)
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
File "XXXX", line 4
    if(num1>num2)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:54:34) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round, 2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:54:59) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round, 2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:55:10) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round, 2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 10:56:05) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round, 2(mensagem))
-- EXECUTION TIME:
0.116921
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2447/main.py", line 6, in <module>
    print(round, 2(mensagem))
TypeError: 'int' object is not callable

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:56:23) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(round, 2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round(mensagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round, 2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:57:03) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "fala_x"
	print(float(round, 2(mensagem)))

else:
	mensagem= "troco_de_y"
	print(round(mensagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(float(round, 2(mensagem)))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:57:50) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(float(round, 2(mensagem)))

else:
	mensagem= "troco_de_y"
	print(float(round(mensagem), 2)
-- ERROR:
File "XXXX", line 11
    
                                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:58:09) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(float(round(mensagem), 2))

else:
	mensagem= "troco_de_y"
	print(float(round(mensagem), 2)
-- ERROR:
File "XXXX", line 11
    
                                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:58:41) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(float(round(mensagem), 2))

else:
	mensagem= "troco_de_y"
	print(float(round(mensagem), 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(float(round(mensagem), 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:59:20) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(round(mensagem), 2))

else:
	mensagem= "troco_de_y"
	print(round(mensagem), 2))
-- ERROR:
File "XXXX", line 6
    print(round(mensagem), 2))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:59:29) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(round(mensagem), 2)

else:
	mensagem= "troco_de_y"
	print(round(mensagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(mensagem), 2)
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:00:36) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(round,2(mensagem))

else:
	mensagem= "troco_de_y"
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:01:50) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(round(int(mensagem),2))

else:
	mensagem= "troco_de_y"
	print(round(int(mensagem),2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(int(mensagem),2))
ValueError: invalid literal for int() with base 10: 'falta_x'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:03:10) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta_x"
	print(round(int(mensagem)),2)

else:
	mensagem= "troco_de_y"
	print(round(int(mensagem)),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(int(mensagem)),2)
ValueError: invalid literal for int() with base 10: 'falta_x'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:03:56) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round(int(mensagem)),2)

else:
	mensagem= "troco_de"
	print(round(int(mensagem)),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(int(mensagem)),2)
ValueError: invalid literal for int() with base 10: 'falta'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:04:56) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round(int(mensagem)),2)

else:
	mensagem= "trocode"
	print(round(int(mensagem)),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(int(mensagem)),2)
ValueError: invalid literal for int() with base 10: 'falta'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:06:08) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,2(int(mensagem)))

else:
	mensagem= "trocode"
	print(round,2(int(mensagem)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2(int(mensagem)))
ValueError: invalid literal for int() with base 10: 'falta'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:06:21) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,2(int(mensagem)))

else:
	mensagem= "trocode"
	print(round,2(int(mensagem)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2(int(mensagem)))
ValueError: invalid literal for int() with base 10: 'falta'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:06:58) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,(mensagem))

else:
	mensagem= "trocode"
	print(round,2(mensagem))
-- OUTPUT:
<built-in function round> falta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:07:12) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,2(mensagem))

else:
	mensagem= "trocode"
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:07:17) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,2(mensagem))

else:
	mensagem= "trocode"
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2(mensagem))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 11:08:11) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta"
	print(round,2+mensagem)
else:
	mensagem= "trocode"
	print(round,2+mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round,2+mensagem)
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:17:24) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= "falta",x
	print(round,2(mensagem))
else:
	mensagem= "trocode",y
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem= "falta",x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:18:36) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= ("falta",x)
	print(round,2(mensagem))
else:
	mensagem= ("trocode",y)
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem= ("falta",x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:18:37) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= ("falta",x)
	print(round,2(mensagem))
else:
	mensagem= ("trocode",y)
	print(round,2(mensagem))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem= ("falta",x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:18:46) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= ("falta",x)
	print(round,2(mensagem))
else:
	mensagem= ("trocode",y)
	print(round,2(mensagem))
-- EXECUTION TIME:
0.179446
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2447/main.py", line 5, in <module>
    mensagem= ("falta",x)
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:19:25) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= ("falta",x)
	print(round,(mensagem, 2))
else:
	mensagem= ("trocode",y)
	print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem= ("falta",x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:19:48) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	mensagem= ("falta",x)
	print(round,(mensagem, 2))
else:
	mensagem= ("troco_de",y)
	print(round(mensagem, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    mensagem= ("falta",x)
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:21:06) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x=num1-num2
	mensagem= ("falta",x)
	print(round,(mensagem, 2))
else:
	y=num2-num1
	mensagem= ("troco_de",y)
	print(round(mensagem, 2))
-- OUTPUT:
<built-in function round> (('falta', 26.0), 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:21:50) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x=num1-num2
	mensagem= ("falta",x)
	print(round,(mensagem, 2))
else:
	y=num2-num1
	mensagem= ("troco_de",y)
	print(round(mensagem, 2))
-- OUTPUT:
<built-in function round> (('falta', 26.0), 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:24:02) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x=num1-num2
	mensagem= ("Falta",x)
	print(round,(mensagem, 2))
else:
	y=num2-num1
	mensagem= ("Troco_de",y)
	print(round(mensagem, 2))
-- OUTPUT:
<built-in function round> (('Falta', 26.0), 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:24:52) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x=num1-num2
	mensagem= ("Falta",x)
	print(round,(mensagem, 2))
else:
	y=num2-num1
	mensagem= ("Troco_de",y)
	print(round(mensagem, 2))
-- OUTPUT:
<built-in function round> (('Falta', 26.0), 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:26:00) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x=num1-num2
	mensagem=("Falta",x)
	print(round,(mensagem, 2))
else:
	y=num2-num1
	mensagem=("Troco_de",y)
	print(round(mensagem, 2))
-- OUTPUT:
<built-in function round> (('Falta', 26.0), 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:28:54) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta",x 2))
else:
	y=num2-num1
	print(round("Trocod_de", 2))
-- ERROR:
File "XXXX", line 6
    print(round,("Falta",x 2))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:38:25) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta",x 2))
else:
	y=num2-num1
	print(round("Trocod_de",y 2))
-- ERROR:
File "XXXX", line 6
    print(round,("Falta",x 2))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:38:46) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta", 2))
else:
	y=num2-num1
	print(round("Trocod_de", 2))
-- OUTPUT:
<built-in function round> ('Falta', 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:38:59) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta", 2))
else:
	y=num2-num1
	print(round("Troco_de", 2))
-- OUTPUT:
<built-in function round> ('Falta', 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:39:19) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta", 2))
else:
	y=num2-num1
	print(round("Troco_de", 2))
-- OUTPUT:
<built-in function round> ('Falta', 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:39:22) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta", 2))
else:
	y=num2-num1
	print(round("Troco_de", 2))
-- OUTPUT:
<built-in function round> ('Falta', 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:39:49) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta", 2))
else:
	y=num2-num1
	print(round("Troco_de", 2))
-- OUTPUT:
<built-in function round> ('Falta', 2)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:49:33) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round,("Falta",x 2))
else:
	y=num2-num1
	print(round("Troco_de",y 2))
-- ERROR:
File "XXXX", line 6
    print(round,("Falta",x 2))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:49:48) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(round("Falta",x 2))
else:
	y=num2-num1
	print(round("Troco_de",y 2))
-- ERROR:
File "XXXX", line 6
    print(round("Falta",x 2))
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:50:52) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta",x)
else:
	y=num2-num1
	print(round("Troco_de",y 2))
-- ERROR:
File "XXXX", line 9
    print(round("Troco_de",y 2))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:51:47) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta",x)
else:
	y=num2-num1
	print(round("Troco de",y 2))
-- ERROR:
File "XXXX", line 9
    print(round("Troco de",y 2))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:52:23) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta"x)
else:
	y=num2-num1
	print(round("Troco de"y 2))
-- ERROR:
File "XXXX", line 6
    print("Falta"x)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:52:37) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta" x)
else:
	y=num2-num1
	print(round("Troco de" y 2))
-- ERROR:
File "XXXX", line 6
    print("Falta" x)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:52:51) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("falta" x)
else:
	y=num2-num1
	print(round("troco de" y 2))
-- ERROR:
File "XXXX", line 6
    print("falta" x)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:53:17) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("falta" x)
else:
	y=num2-num1
	print(round("troco de" y 2))
-- ERROR:
File "XXXX", line 6
    print("falta" x)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:53:43) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(x)
else:
	y=num2-num1
	print(round("troco de" y 2))
-- ERROR:
File "XXXX", line 9
    print(round("troco de" y 2))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:54:35) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print(x)
else:
	y=num2-num1
	print("troco de" y)
-- ERROR:
File "XXXX", line 9
    print("troco de" y)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:55:12) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Faltax)
else:
	y=num2-num1
	print("Troco de" y)
-- ERROR:
File "XXXX", line 6
    print("Faltax)
                 ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:55:27) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta"x)
else:
	y=num2-num1
	print("Troco de" y)
-- ERROR:
File "XXXX", line 6
    print("Falta"x)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 09:56:10) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta", x)
else:
	y=num2-num1
	print("Troco de", y)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 09:56:31) 
-- CODE:
num1= float(input("preco: "))
num2= float(input("pagamento: "))
						
if(num1>num2):
	x= num1-num2
	print("Falta", x)
else:
	y=num2-num1
	print("Troco de", y)
-- EXECUTION TIME:
0.14636
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
