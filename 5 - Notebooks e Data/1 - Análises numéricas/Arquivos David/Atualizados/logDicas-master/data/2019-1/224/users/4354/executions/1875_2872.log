== TEST (2019-07-02 18:16:30) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:04) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:13) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:14) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:14) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:14) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:14) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:15) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:19) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = 1
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:22) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
ldsad = 1
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    ldsad = 1
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:27) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
ldsad = 1
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    ldsad = 1
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])

-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:56) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:56) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:17:57) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:03) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l= shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l= shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:08) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
= shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 5
    c = shape(mat) [1]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:22) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = shape(mat) [0]
c = shape(mat) [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = shape(mat) [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:41) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:50) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:18:51) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: '))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 4
    l = mat.shape [0]
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:19:27) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 7
    for i in range(l)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:19:29) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l)
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
File "XXXX", line 7
    for i in range(l)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:19:34) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:19:51) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[1,i] * p[1,i+1])
print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:20:31) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[0,i] * p[0,i+1])
print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:21:09) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[0,0] * p[0,1])
print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:21:36) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0,0] * p[0,1])
print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:21:47) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)

print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:22:34) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])
print(prod)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:22:58) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])
print(prod/l)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:23:07) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])
print(prod/c)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:23:32) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])/2
print(prod/l)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:23:46) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])/2
print(range(prod/l,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:24:23) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])/2
print(round(prod/l,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:26:40) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	print(p)
	prod = prod + (p[0] * p[1])/2
print(round(prod/l,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 18:27:17) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
j = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[0] * p[1])/2
print(round(prod/l,2))
-- EXECUTION TIME:
0.974089
-- TEST CASE 1:
---- input:
[[6.8,8.2],[4.2,1.1],[8.4,7.9]]
---- correct output:
21.12
---- user output:
21.12
-- TEST CASE 2:
---- input:
[[5.6,3.0],[2.2,1.1],[6.3,4.4]]
---- correct output:
7.82
---- user output:
7.82
-- TEST CASE 3:
---- input:
[[2,3,4],[3.4,5.5,6]]
---- correct output:
6.18
---- user output:
6.18
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 18:27:49) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
prod = 0
for i in range(l):
	p = mat[i,:]
	prod = prod + (p[0] * p[1])/2
print(round(prod/l,2))
-- EXECUTION TIME:
1.13209
-- TEST CASE 1:
---- input:
[[6.8,8.2],[4.2,1.1],[8.4,7.9]]
---- correct output:
21.12
---- user output:
21.12
-- TEST CASE 2:
---- input:
[[5.6,3.0],[2.2,1.1],[6.3,4.4]]
---- correct output:
7.82
---- user output:
7.82
-- TEST CASE 3:
---- input:
[[2,3,4],[3.4,5.5,6]]
---- correct output:
6.18
---- user output:
6.18
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 18:30:19) 
-- CODE:
from numpy import *
from numpy.linalg import *
mat = array(eval(input('digite a matriz: ')))
l = mat.shape [0]
c = mat.shape [1]
proc = 0
for i in range(l):
	p = mat[i,:]
	proc = proc + (p[0] * p[1])/2
print(round(proc/l,2))
#batatinha quando nasce
#espalha rama pelo chao
#a menina quando cresce
#poe a mao no coraçao

-- EXECUTION TIME:
1.17211
-- TEST CASE 1:
---- input:
[[6.8,8.2],[4.2,1.1],[8.4,7.9]]
---- correct output:
21.12
---- user output:
21.12
-- TEST CASE 2:
---- input:
[[5.6,3.0],[2.2,1.1],[6.3,4.4]]
---- correct output:
7.82
---- user output:
7.82
-- TEST CASE 3:
---- input:
[[2,3,4],[3.4,5.5,6]]
---- correct output:
6.18
---- user output:
6.18
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
