== TEST (2019-04-16 19:35:01) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=consumo*3.5
	print(round(c,2)
else:
	d=consumo*3.0
   print(round(d,2))

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:35:45) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=consumo*3.5
	print(round(c,2)
if(consumo<10):
	d=consumo*3.0
   print(round(d,2))

-- ERROR:
File "XXXX", line 5
    if(consumo<10):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:13) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=((consumo*3.5)+30)
	print(round(c,2)
if(consumo<10):
	d=((consumo*3.0)+30)
   print(round(d,2))

-- ERROR:
File "XXXX", line 5
    if(consumo<10):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:56) 
-- CODE:
consumo=float(input("Digite o consumo:"))
f=10
if(consumo>f):
	c=((consumo*3.5)+30)
	print(round(c,2)
if(consumo<f):
	d=((consumo*3.0)+30)
   print(round(d,2))

-- ERROR:
File "XXXX", line 6
    if(consumo<f):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:38:56) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=((consumo*3.5)+30)
	print(round(c,2)
else:
	d=((consumo*3.0)+30)
   print(round(d,2))

-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:40:06) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=((consumo*3.5)+30)
	print(round(c,2))
else:
	d=((consumo*3.0)+30)
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:40:53) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:41:25) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:42:06) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:44:03) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:44:49) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))
-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:13) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
   print(round(d,2))

-- ERROR:
File "XXXX", line 7
    print(round(d,2))
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:48) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:


-- ERROR:
File "XXXX", line 7
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:01) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	c=1

-- ERROR:
File "XXXX", line 7
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:28) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
	print(round(d,2))

-- OUTPUT:
54.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:46:38) 
-- CODE:
consumo=float(input("Digite o consumo:"))
if(consumo>10):
	c=(consumo*3.5)+30
	print(round(c,2))
else:
	d=(consumo*3.0)+30
	print(round(d,2))

-- EXECUTION TIME:
0.158589
-- TEST CASE 1:
---- input:
8.0
---- correct output:
54.0
---- user output:
54.0
-- TEST CASE 2:
---- input:
32.0
---- correct output:
142.0
---- user output:
142.0
-- TEST CASE 3:
---- input:
150.4

---- correct output:
556.4
---- user output:
556.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
