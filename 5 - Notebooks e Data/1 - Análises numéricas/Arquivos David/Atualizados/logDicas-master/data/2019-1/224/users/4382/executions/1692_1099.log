== SUBMITION (2019-04-30 18:47:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c:float(input("numero3: "))
if(a>0 and b>0 and c>0):
if(a<b+c and b<a+c and c<a+b):
	if(a==b==c):
	print("tipo de triangulo:equilatero")
	elif(a==b!=c or b==c!=a or c==a!=b)
	print("tipo de triangulo:isosceles")
	else():
	print("tipo de triangulo:escaleno")
else:
	print("tipo de triangulo:invalido")
	
	
-- EXECUTION TIME:
0.175099
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 5
    c:float(input())
     ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:47:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c:float(input("numero3: "))
if(a>0 and b>0 and c>0):
if(a<b+c and b<a+c and c<a+b):
	if(a==b==c):
	print("tipo de triangulo:equilatero")
	elif(a==b!=c or b==c!=a or c==a!=b)
	print("tipo de triangulo:isosceles")
	else():
	print("tipo de triangulo:escaleno")
else:
	print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 7
    if(a<b+c and b<a+c and c<a+b):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:47:50) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if(a>0 and b>0 and c>0):
if(a<b+c and b<a+c and c<a+b):
	if(a==b==c):
	print("tipo de triangulo:equilatero")
	elif(a==b!=c or b==c!=a or c==a!=b)
	print("tipo de triangulo:isosceles")
	else():
	print("tipo de triangulo:escaleno")
else:
	print("tipo de triangulo:invalido")
	
	
-- EXECUTION TIME:
0.224436
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 7
    if(a<b+c and b<a+c and c<a+b):
     ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:47:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if(a>0 and b>0 and c>0):
if(a<b+c and b<a+c and c<a+b):
	if(a==b==c):
	print("tipo de triangulo:equilatero")
	elif(a==b!=c or b==c!=a or c==a!=b)
	print("tipo de triangulo:isosceles")
	else():
	print("tipo de triangulo:escaleno")
else:
	print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 7
    if(a<b+c and b<a+c and c<a+b):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:48:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if (a>0 and b>0 and c>0):
if (a<b+c and b<a+c and c<a+b):
	if( a==b==c):
	print("tipo de triangulo:equilatero")
	elif(a==b!=c or b==c!=a or c==a!=b)
	print("tipo de triangulo:isosceles")
	else:
	print("tipo de triangulo:escaleno")
else:
	print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 7
    if (a<b+c and b<a+c and c<a+b):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:50:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
	      if( a==b==c):
	          print("tipo de triangulo:equilatero")
	      elif(a==b!=c or b==c!=a or c==a!=b)
	          print("tipo de triangulo:isosceles")
	      else:
	          print("tipo de triangulo:escaleno")
   else:
	   print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 10
    elif(a==b!=c or b==c!=a or c==a!=b)
                                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:53:10) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
			if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a==b!=c or b==c!=a or c==a!=b):
				 print("tipo de triangulo:isosceles")
	      else:
				print("tipo de triangulo:escaleno")
   else:
	   print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 8
    if( a==b==c):
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:54:12) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
			if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
   else:
	   print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 8
    if( a==b==c):
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:56:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
			if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
   else:
	   print("tipo de triangulo:invalido")
	
	
-- ERROR:
File "XXXX", line 9
    if( a==b==c):
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:59:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
			if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
		else:
	         print("tipo de triangulo:invalido")		
else:
	         print("tipo de triangulo:invalido")
	
	 
	
	
-- ERROR:
File "XXXX", line 9
    if( a==b==c):
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:59:37) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
		if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
		else:
	         print("tipo de triangulo:invalido")		
else:
	         print("tipo de triangulo:invalido")
	
	 
	
	
-- ERROR:
File "XXXX", line 9
    if( a==b==c):
                ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:00:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
		   if( a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
		else:
	         print("tipo de triangulo:invalido")		
else:
	         print("tipo de triangulo:invalido")
	
				
			
	 
	
	
-- ERROR:
File "XXXX", line 10
    print("tipo de triangulo:equilatero")
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:01:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("numero1: "))
b=float(input("numero2: "))
c=float(input("numero3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
    if (a<b+c and b<a+c and c<a+b):
		   if(a==b==c):
				print("tipo de triangulo:equilatero")
			elif(a!=b!=c):
				 print("tipo de triangulo:escaleno")
	      else:
				print("tipo de triangulo:isosceles")
		else:
	         print("tipo de triangulo:invalido")		
else:
	         print("tipo de triangulo:invalido")
	
				
			
	 
	
	
-- ERROR:
File "XXXX", line 10
    print("tipo de triangulo:equilatero")
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:21:32) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:21:34) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.158037
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:21:36) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.143516
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:21:36) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:21:50) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:21:52) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
		print("Tipo de triangulo:invalido")
else:
	print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.217188
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:22:34) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:22:35) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.183512
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:22:37) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.21454
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:22:37) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:23:03) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:23:04) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.158484
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:23:05) 
-- CODE:
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:23:54) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:23:55) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.134093
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:24:29) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:24:40) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:24:51) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:25:02) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:25:07) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.216571
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:25:30) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.216475
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:25:30) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:25:50) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:26:02) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- EXECUTION TIME:
0.169087
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo:invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 19:26:03) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo:isosceles")
	else:
			print("Tipo de triangulo:invalido")
else:
			print("Tipo de triangulo:invalido")
	

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo:isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 19:26:31) 
-- CODE:
a = float(input ("digite a: "))
b = float(input ("digite b: "))
c = float(input ("digite c: "))
print("Entradas:", a, ",", b, ",", c)
if (a>0 and b>0 and c>0):
	if(a<b+c and b<a+c and c<a+b):
		if(a==b==c):
			print("Tipo de triangulo: equilatero")
		elif(a!=b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
	else:
			print("Tipo de triangulo: invalido")
else:
			print("Tipo de triangulo: invalido")
	

-- EXECUTION TIME:
0.139187
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
