== TEST (2019-03-26 19:06:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:06:33) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- EXECUTION TIME:
0.178972
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
2.4
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
4.2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
104.1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:06:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:06:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- EXECUTION TIME:
0.129823
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
2.4
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
4.2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
104.1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:06:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:06:59) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- EXECUTION TIME:
0.11696
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
2.4
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
4.2
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
104.1
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 09:13:28) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
total_vendas = float(input("total de vendas"))
obtencao_de_lucro = total_vendas*(0.3) 
print(obtencao_de_lucro)
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 13:19:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("digite o valo de x"))
y=int(input("digite o valor de y"))
print(x)
print(y)
print(x//y)
print(x%y)


-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:30:29) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("digite o valo de x"))
y=int(input("digite o valor de y"))
print(x)
print(y)
print(x//y)
print(x%y)


-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:30:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=int(input("digite o valo de x"))
y=int(input("digite o valor de y"))
print(x)
print(y)
print(x//y)
print(x%y)


-- EXECUTION TIME:
0.158252
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
