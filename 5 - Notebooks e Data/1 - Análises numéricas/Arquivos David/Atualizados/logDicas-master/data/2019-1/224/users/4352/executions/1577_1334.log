== TEST (2019-03-17 17:10:25) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", ...)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  Ellipsis
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 17:10:49) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", )

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto: 
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 17:10:55) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", )

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto: 
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 17:12:53) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 16//2)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-17 17:12:59) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 16//2)

print("Potenciacao: ", 2**3)
-- OUTPUT:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-17 17:13:07) 
-- CODE:
print("Adicao: ", 5 + 3)

print("Subtracao: ", 10-2)

print("Multiplicacao: ", 2*4)

print("Divisao: ", 16/2)

print("Resto: ", 16//2)

print("Potenciacao: ", 2**3)
-- EXECUTION TIME:
0.192125
-- TEST CASE 1:
---- input:
xxx
---- correct output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
---- user output:
Adicao:  8
Subtracao:  8
Multiplicacao:  8
Divisao:  8.0
Resto:  8
Potenciacao:  8
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
