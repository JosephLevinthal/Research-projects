== TEST (2019-04-09 19:36:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3)
	print(pertence)
else:
	print(tafora)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:36:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	print(pertence)
else:
	print(tafora)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:36:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	print(pertence)
else:
	print(tafora)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:37:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem(pertence)
	print(mensagem)
else:
	mensagem(tafora)
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:38:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem(ponto pertence a reta)
	print(mensagem)
else:
	mensagem(ponto nao pertence a reta)
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:39:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem("ponto pertence a reta")
	print(mensagem)
else:
	mensagem("ponto nao pertence a reta")
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:40:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem=("ponto pertence a reta")
	print(mensagem)
else:
	mensagem=("ponto nao pertence a reta")
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:40:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem=("ponto pertence a reta")
	print(mensagem)
else:
	mensagem=("ponto nao pertence a reta")
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:41:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:41:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(x==2x+y=3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(x==2x+y=3):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:43:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(x==2x+y):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(x==2x+y):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:07:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input())
y= float(input())
if(2x+y):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(2x+y):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:09:27) 
-- CODE:
x= float(input())
y= float(input())
if(2x+y):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 3
    if(2x+y):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:10:18) 
-- CODE:
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 3
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:10:23) 
-- CODE:
x= float(input())
y= float(input())
if(2x+y=3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 3
    if(2x+y=3):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:10:49) 
-- CODE:
x= float(input())
y= float(input())
if(2*x+y=3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 3
    if(2*x+y=3):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:11:04) 
-- CODE:
x= float(input())
y= float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:11:07) 
-- CODE:
x= float(input())
y= float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- EXECUTION TIME:
0.162375
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
