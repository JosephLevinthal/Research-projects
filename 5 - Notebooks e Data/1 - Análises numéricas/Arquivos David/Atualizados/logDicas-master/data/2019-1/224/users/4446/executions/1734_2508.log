== TEST (2019-05-15 22:37:01) 
-- CODE:
from math import sqrt
k= int(input("numero de termos: "))
v1= 0 
v2= 1
i= 0
soma= 0
if(k==1):
	print(sqrt(12))
else:
	while(i<k):
		sinal= (-1)**i
		soma= soma + sinal * (1/(v2*(3**v1)))
		v1= v1 + 1
		v2= v2 + 2
		i= i + 1
	print(round(sqrt(12)*soma, 8))
	
-- OUTPUT:
3.14260475
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 22:37:07) 
-- CODE:
from math import sqrt
k= int(input("numero de termos: "))
v1= 0 
v2= 1
i= 0
soma= 0
if(k==1):
	print(sqrt(12))
else:
	while(i<k):
		sinal= (-1)**i
		soma= soma + sinal * (1/(v2*(3**v1)))
		v1= v1 + 1
		v2= v2 + 2
		i= i + 1
	print(round(sqrt(12)*soma, 8))
	
-- EXECUTION TIME:
0.12867
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.14260475
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14159265
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14159265
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:47:04) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    i= i + 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:48:11) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    i= i + 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:48:18) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- ERROR:
File "XXXX", line 9
    i= i + 2
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:48:36) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:49:23) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 23:52:01) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:00:52) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:01:21) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:02:48) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:07:54) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(n>0):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- OUTPUT:
3.16666667
3.03333333
3.01190476
3.00555556
3.0030303
3.0018315
3.00119048
3.00081699
3.0005848
3.0004329
3.00032938
3.00025641
3.0002035
3.0001642
3.00013441
3.00011141
3.00009337
3.00007903
3.00006748
3.00005807
3.00005034
3.00004392
3.00003854
3.00003401
3.00003017
3.00002688
3.00002405
3.00002161
3.00001948
3.00001763
3.000016
3.00001457
3.0000133
3.00001218
3.00001118
3.00001028
3.00000948
3.00000876
3.00000811
3.00000753
3.000007
3.00000651
3.00000608
3.00000567
3.00000531
3.00000497
3.00000467
3.00000438
3.00000412
3.00000388
3.00000366
3.00000346
3.00000327
3.00000309
3.00000293
3.00000277
3.00000263
3.0000025
3.00000237
3.00000226
3.00000215
3.00000205
3.00000195
3.00000186
3.00000178
3.0000017
3.00000163
3.00000156
3.00000149
3.00000143
3.00000137
3.00000131
3.00000126
3.00000121
3.00000116
3.00000112
3.00000107
3.00000103
3.000001
3.00000096
3.00000092
3.00000089
3.00000086
3.00000083
3.0000008
3.00000077
3.00000075
3.00000072
3.0000007
3.00000067
3.00000065
3.00000063
3.000
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 00:13:04) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
	print(round(soma, 8))
-- EXECUTION TIME:
577.129
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:13:58) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- OUTPUT:
3.0030303
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 00:14:21) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- EXECUTION TIME:
0.333082
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.0030303
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
2.99995608
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.00006748
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:16:02) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- OUTPUT:
3.0030303
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 00:18:02) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(n>0):
	sinal= (-1)**y
	soma= 3 + (sinal * (4/(i * j * k)))
	i= i + 2
	j= j + 2
	k= k + 2
print(round(soma, 8))
-- EXECUTION TIME:
575.092
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:19:56) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.0030303
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:20:26) 
-- CODE:
n=int(input("numero de termos: "))
y=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= 3 + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
6.0030303
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:22:32) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma +  (3 + sinal * (4/(i * j * k)))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- OUTPUT:
15.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:22:58) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + 3 + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- OUTPUT:
15.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:24:42) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma, 8))
-- OUTPUT:
0.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:24:58) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 00:25:08) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.175064
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.14271284
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14157215
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14162381
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:28:40) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:29:43) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:29:59) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:30:09) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:30:49) 
-- CODE:
n=int(input("numero de termos: "))
y=1
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
2.86031746
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:31:05) 
-- CODE:
n=int(input("numero de termos: "))
y=2
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.1452381
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:31:49) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:32:01) 
-- CODE:
n=int(input("numero de termos: "))
y=1
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
2.86031746
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:32:13) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 00:34:42) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- OUTPUT:
3.14271284
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:13:44) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.219015
-- ERROR:
  File "/home/codebench/codes/1734/2508/main.py", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:13:46) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:13:54) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:17:07) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.140846
-- ERROR:
  File "/home/codebench/codes/1734/2508/main.py", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:17:15) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.220006
-- ERROR:
  File "/home/codebench/codes/1734/2508/main.py", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 16:17:19) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.202366
-- ERROR:
  File "/home/codebench/codes/1734/2508/main.py", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 16:17:33) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:24:00) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:34:23) 
-- CODE:
n=int(input("numero de termos: "))
y=0
soma=0
i=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(y+1<n):
	sinal= (-1)**y
	soma= soma + sinal * (4/(i * j * k))
	y= y + 1
	i= i + 2
	j= j + 2
	k= k + 2
	
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**y
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:36:36) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(i<n):
	sinal= (-1)**i
	soma= soma + sinal * (4/(y * j * k))
	i= i + 1
	y= y + 2
	j= j + 2
	k= k + 2
	print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:38:01) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(i+1<n):
	sinal= (-1)**i
	soma= soma + sinal * (4/(y * j * k))
	y= y + 2
	j= j + 2
	k= k + 2
	i= i + 1
	print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 11
    sinal= (-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:38:37) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
while(i+1<n):
	sinal= (-1)**i
	soma= soma + sinal * (4/(y * j * k))
	y= y + 2
	j= j + 2
	k= k + 2
	i= i + 1
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.718683
-- ERROR:
  File "/home/codebench/codes/1734/2508/main.py", line 10
    while(i+1<n):
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:38:39) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
while(i+1<n):
	sinal= (-1)**i
	soma= soma + sinal * (4/(y * j * k))
	y= y + 2
	j= j + 2
	k= k + 2
	i= i + 1
print(round(soma + 3, 8))
-- ERROR:
File "XXXX", line 10
    while(i+1<n):
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:39:11) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(i+1<n):
		sinal= (-1)**i
		soma= soma + sinal * (4/(y * j * k))
		y= y + 2
		j= j + 2
		k= k + 2
		i= i + 1
	print(round(soma + 3, 8))
-- EXECUTION TIME:
0.625379
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
numero de termos: 3.14155633
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:39:18) 
-- CODE:
n=int(input("numero de termos: "))
i=0
soma=0
y=2
j=3
k=4
if(n==1):
	print("3")
else:
	while(i+1<n):
		sinal= (-1)**i
		soma= soma + sinal * (4/(y * j * k))
		y= y + 2
		j= j + 2
		k= k + 2
		i= i + 1
print(round(soma + 3, 8))
-- EXECUTION TIME:
0.609556
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
