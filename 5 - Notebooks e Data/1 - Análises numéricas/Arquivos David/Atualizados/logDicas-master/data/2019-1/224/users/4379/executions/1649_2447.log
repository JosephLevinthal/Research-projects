== SUBMITION (2019-04-15 19:23:45) 
-- CODE:
pq=input("digite o preço:")
-- EXECUTION TIME:
0.16369
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:

-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:

-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:23:46) 
-- CODE:
pq=input("digite o preço:")
-- EXECUTION TIME:
0.139876
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:

-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:

-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:24:12) 
-- CODE:
preço=input("digite o preço:")
-- EXECUTION TIME:
0.128141
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:

-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:

-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:30:30) 
-- CODE:
preço=float(input("digite o preço:")
if preço>"pagamento"
-- EXECUTION TIME:
0.205631
-- ERROR:
  File "/home/codebench/codes/1649/2447/main.py", line 3
    
                         ^
SyntaxError: unexpected EOF while parsing

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:39) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag==deve
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag==deve
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:47) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:48) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:49) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:49) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:36:49) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag
print("falta deve")
-- ERROR:
File "XXXX", line 3
    if preco>pag
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:37:38) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
print("falta deve")
-- EXECUTION TIME:
0.132239
-- ERROR:
  File "/home/codebench/codes/1649/2447/main.py", line 4
    print("falta deve")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:37:40) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
print("falta deve")
-- ERROR:
File "XXXX", line 4
    print("falta deve")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:37:59) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
	print("falta deve")
-- OUTPUT:
falta deve
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:39:02) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
	print("falta:")
-- OUTPUT:
falta:
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:40:56) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
	print("falta , x")
-- OUTPUT:
falta , x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:41:01) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
	print("falta , x")
-- OUTPUT:
falta , x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:41:19) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
if preco>pag:
	print("falta , x")
-- OUTPUT:
falta , x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:42:37) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x=preco-pag
if preco>pag:
	print("falta , x")
-- OUTPUT:
falta , x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:43:03) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
if preco>pag:
	print("falta , x")
-- OUTPUT:
falta , x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:43:29) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
if preco>pag:
	print(falta , x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(falta , x)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:43:53) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
if preco>pag:
	print("falta" , x)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:46:47) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y=pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("falta" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:47:12) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("falta" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:47:21) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("falta" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:48:01) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("falta" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:48:04) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("falta" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:20) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("troco" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:30) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("troco" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:36) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("falta" , x))
else:
	print(round("troco de" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:50:09) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("Falta" , x))
else:
	print(round("Troco de" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("Falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:50:13) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print(round("Falta" , x))
else:
	print(round("Troco de" , y))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round("Falta" , x))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:50:44) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print("Falta" , x))
else:
	print("Troco de" , y))
-- ERROR:
File "XXXX", line 6
    print("Falta" , x))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:50:45) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco-pag
y= pag-preco
if preco>pag:
	print("Falta" , x))
else:
	print("Troco de" , y))
-- ERROR:
File "XXXX", line 6
    print("Falta" , x))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:51:35) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco - pag
y= pag - preco
if preco > pag:
	print("Falta" , x))
else:
	print("Troco de" , y))
-- ERROR:
File "XXXX", line 6
    print("Falta" , x))
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:51:44) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco - pag
y= pag - preco
if preco > pag:
	print("Falta" , x)
else:
	print("Troco de" , y)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:51:52) 
-- CODE:
preco=float(input("digite o preco: "))
pag=float(input("digite o pagamento: "))
x= preco - pag
y= pag - preco
if preco > pag:
	print("Falta" , x)
else:
	print("Troco de" , y)
-- EXECUTION TIME:
0.202863
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
