== TEST (2019-03-21 18:49:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(1/3))
total= quantidade-quantidade_de_michel
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    quantidade_de_michael= float(input(1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 18:52:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3))
total= quantidade-quantidade_de_michel
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    quantidade_de_michael= float(input(quantidade*1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 18:52:25) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3))
total= quantidade-quantidade_de_michel
print(total)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    quantidade_de_michael= float(input(quantidade*1/3))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 18:56:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(round(quantidade*1/3, 3))
print(quantidade_de_michael)
-- ERROR:
File "XXXX", line 6
    print(quantidade_de_michael)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 18:58:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3)
total= round(quantidade_de_michael, 3)
print(total)
-- ERROR:
File "XXXX", line 6
    total= round(quantidade_de_michael, 3)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 18:59:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3)
print(round(quantidade_de_michael, 3))
-- ERROR:
File "XXXX", line 6
    print(round(quantidade_de_michael, 3))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:01:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3)
print(round(int(quantidade_de_michael, 3)))
-- ERROR:
File "XXXX", line 6
    print(round(int(quantidade_de_michael, 3)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:01:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3)
print(int(round(quantidade_de_michael, 3)))
-- ERROR:
File "XXXX", line 6
    print(int(round(quantidade_de_michael, 3)))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:02:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
quantidade_de_michael= float(input(quantidade*1/3)
-- ERROR:
File "XXXX", line 6
    
                                                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:05:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
total= quantidade/3
print(round(total, 3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:05:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
quantidade= float(input("qual a quantidade de litros?"))
total= quantidade/3
print(round(total, 3))
-- EXECUTION TIME:
0.194194
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
