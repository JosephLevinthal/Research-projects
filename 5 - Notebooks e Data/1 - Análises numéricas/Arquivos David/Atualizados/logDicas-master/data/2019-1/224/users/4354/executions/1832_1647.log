== TEST (2019-06-13 18:15:51) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:17:55) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
for j in freq:
	if(i>=70):
		z[b] = freq[b]
	b = b + 1
print(z)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:30:21) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
for j in freq:
	if(j >= 70):
		z[b] = j
	b = b + 1
print(z)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:31:27) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = -1
for j in freq:
	if(j >= 70):
		z[b] = j
	b = b + 1
print(z)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:32:51) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
for j in freq:
	if(j >= 70):
		z[b] = j
		b = b + 1
print(z)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:33:19) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
for j in freq:
	if(j >= 70):
		z[b] = freq[b]
		b = b + 1
print(z)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:33:57) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
v = 0
for j in freq:
	if(j >= 70):
		z[b] = v
		b = b + 1
	v = v + 1
print(z)
		
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import * 
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 18:34:19) 
-- CODE:
from numpy import * 
freq = array(eval(input("digite as frequencias: ")))
ap = 0
rep = 0
for i in freq:
	if(i >= 70):
		ap = ap + 1
	else:
		rep = rep + 1
print(ap)
z = zeros(ap, dtype = int)
b = 0
v = 0
for j in freq:
	if(j >= 70):
		z[b] = v
		b = b + 1
	v = v + 1
print(z)
		
	
-- EXECUTION TIME:
0.889569
-- TEST CASE 1:
---- input:
[20,35,70,75,45,85]
---- correct output:
3
[2 3 5]
---- user output:
3
[2 3 5]
-- TEST CASE 2:
---- input:
[70,65,35,70,75,45,85]
---- correct output:
4
[0 3 4 6]
---- user output:
4
[0 3 4 6]
-- TEST CASE 3:
---- input:
[70,65,35]
---- correct output:
1
[0]
---- user output:
1
[0]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
