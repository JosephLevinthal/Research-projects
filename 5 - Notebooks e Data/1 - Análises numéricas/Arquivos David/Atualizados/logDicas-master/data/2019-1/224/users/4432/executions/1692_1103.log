== SUBMITION (2019-04-25 19:27:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a," ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.1313
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidos
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1   22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:27:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a," ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:28:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a," , ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.301731
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidos
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1  ,  22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:28:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:28:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.156557
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidos
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 ,  22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:28:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:29:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.198604
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidos
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:29:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:29:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:30:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b<a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.202037
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas  3.0  e  4.0  invalidos
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo  6.5   3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
Entradas  1.1  e  22.2  invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:30:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- EXECUTION TIME:
0.126153
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidos
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:30:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidos")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:31:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.212484
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:31:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.149839
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:31:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:31:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:32:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:    "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.140053
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 ,  22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:21:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-29 21:21:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- OUTPUT:
2.0 nao pertence ao intervalo  3.0   4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:23:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,",",b)
	else:
		print(x,"nao pertence ao intervalo ",a," ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.149064
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0   4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-29 21:25:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.215502
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0 ,  4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 ,  22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:00:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu códx
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
	
-- EXECUTION TIME:
0.252838
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0 ,  4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 ,  22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
