== TEST (2019-04-05 13:51:55) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:52:14) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:52:25) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:52:34) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- EXECUTION TIME:
0.112538
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1.0
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:52:47) 
-- CODE:
x=int(input("Digite um numero: "))
y=int(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- EXECUTION TIME:
0.171279
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:52:51) 
-- CODE:
x=int(input("Digite um numero: "))
y=int(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:53:02) 
-- CODE:
x=int(input("Digite um numero: "))
y=int(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- EXECUTION TIME:
0.12681
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:53:39) 
-- CODE:
x=int(input("Digite um numero: "))
y=int(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	z=x+y
	print(z)
else:
	z=y-x
	print(z)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:53:49) 
-- CODE:
x=int(input("Digite um numero: "))
y=int(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	z=x+y
	print(z)
else:
	z=y-x
	print(z)
-- EXECUTION TIME:
0.135288
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:54:16) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)=="0"):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:44:41) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)==0):
	print(x+y)
else:
	print(y-x)
-- EXECUTION TIME:
0.17057
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
1.0
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
10.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:44:57) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x+y)%2)== 0):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:45:47) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
z=(x+y)%2
print(z)
if(((x+y)%2)== 0):
	print(x+y)
else:
	print(y-x)
-- OUTPUT:
1.0
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:46:19) 
-- CODE:
x=float(input("Digite um numero: "))
y=float(input("Digite outro numero: "))
if(((x*y)%2)== 0):
	print(x+y)
else:
	print(y-x)
-- EXECUTION TIME:
0.127201
-- TEST CASE 1:
---- input:
9
10
---- correct output:
19
---- user output:
19.0
-- TEST CASE 2:
---- input:
3
7
---- correct output:
4
---- user output:
4.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
