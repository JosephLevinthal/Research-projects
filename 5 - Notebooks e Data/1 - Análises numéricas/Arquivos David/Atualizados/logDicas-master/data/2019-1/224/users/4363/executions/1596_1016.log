== TEST (2019-03-26 19:37:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lado_a = float(input("insira o lado a")
lado_b = float(input("insira o lado b")
lado_c = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    lado_b = float(input()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:41) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:42) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a")
ladob = float(input("insira o lado b")
ladoc = float(input("insira o lado c")

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:37:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a"))
ladob = float(input("insira o lado b"))
ladoc = float(input("insira o lado c"))

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:38:22) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
ladoa = float(input("insira o lado a"))
ladob = float(input("insira o lado b"))
ladoc = float(input("insira o lado c"))

-- ERROR:
File "XXXX", line 5
    ladob = float(input()
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:30) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print((a+b+c)/2

-- ERROR:
File "XXXX", line 11
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:36) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print((a+b+c)/2
-- ERROR:
File "XXXX", line 11
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:37) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print((a+b+c)/2
-- ERROR:
File "XXXX", line 11
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:37) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print((a+b+c)/2
-- ERROR:
File "XXXX", line 11
    
                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:49) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print(a+b+c/2
-- ERROR:
File "XXXX", line 11
    
                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:39:50) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2

print(a+b+c/2
-- ERROR:
File "XXXX", line 11
    
                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:40:02) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2
-- ERROR:
File "XXXX", line 11
    
                 ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:40:29) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c)/2
print(s_perimetro)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:41:20) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s_perimetro = (a+b+c) / 2
print(s_perimetro)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:42:52) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(sqrt(s * s - a * s - b * s - c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(sqrt(s * s - a * s - b * s - c))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:43:13) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(sqrt(s*s-a*s-b*s-c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(sqrt(s*s-a*s-b*s-c))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:43:26) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(sqrt(s*s-a*s-b*s-c))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(sqrt(s*s-a*s-b*s-c))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:44:10) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(sqrt(s*(s-a)*(s-b)*(s-c)))
-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:44:16) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(sqrt(s*(s-a)*(s-b)*(s-c)))
-- EXECUTION TIME:
0.207263
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967475975385
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.1665442616423
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:44:44) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:44:55) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(round(sqrt(s*(s-a)*(s-b)*(s-c),5))
-- ERROR:
File "XXXX", line 10
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:44:56) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(round(sqrt(s*(s-a)*(s-b)*(s-c),5))
-- ERROR:
File "XXXX", line 10
    
                                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:45:00) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(round(sqrt(s*(s-a)*(s-b)*(s-c),5))))
-- ERROR:
File "XXXX", line 9
    print(round(sqrt(s*(s-a)*(s-b)*(s-c),5))))
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:45:04) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(sqrt(s*(s-a)*(s-b)*(s-c),5)))
TypeError: sqrt() takes exactly one argument (2 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 14:53:44) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(s)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:36:01) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
print(s)
-- OUTPUT:
21.85
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:37:52) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = (s*(s-a)*(s-b)*(s-c))**0.5
print(a)

-- OUTPUT:
69.41967475975385
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:38:06) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = (s*(s-a)*(s-b)*(s-c))**0.5
print(a)

-- EXECUTION TIME:
0.156506
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967475975385
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.1665442616423
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:38:39) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt((s*(s-a)*(s-b)*(s-c))
print(a)

-- EXECUTION TIME:
0.138908
-- ERROR:
  File "/home/codebench/codes/1596/1016/main.py", line 10
    print(a)
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:38:39) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt((s*(s-a)*(s-b)*(s-c))
print(a)

-- ERROR:
File "XXXX", line 10
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:39:00) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c)
print(a)

-- ERROR:
File "XXXX", line 10
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:39:01) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c)
print(a)

-- ERROR:
File "XXXX", line 10
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:39:02) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c)
print(a)

-- ERROR:
File "XXXX", line 10
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:39:02) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c)
print(a)

-- ERROR:
File "XXXX", line 10
    print(a)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:40:14) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5)

-- ERROR:
File "XXXX", line 11
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:40:19) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5)
-- ERROR:
File "XXXX", line 11
    
                    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:40:30) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:40:35) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- EXECUTION TIME:
0.138798
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:40:35) 
-- CODE:
from math import *
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
a = float(input("insira o lado a"))
b = float(input("insira o lado b"))
c = float(input("insira o lado c"))

s = (a+b+c) / 2
a = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(a,5))
-- EXECUTION TIME:
0.184027
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
