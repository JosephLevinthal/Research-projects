== TEST (2019-04-09 19:27:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y:flota(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print(y==3-2*x,"ponto pertence a reta")
else:
	print(y==3-2*x,"ponto nao pertence a reta")



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y:flota(input())
NameError: name 'flota' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:27:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y:float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print(y==3-2*x,"ponto pertence a reta")
else:
	print(y==3-2*x,"ponto nao pertence a reta")



	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    y==3-2*x
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:27:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print(y==3-2*x,"ponto pertence a reta")
else:
	print(y==3-2*x,"ponto nao pertence a reta")



	
-- OUTPUT:
True ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:28:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print(y==3-2*x,"ponto pertence a reta")
else:
	print(y==3-2*x,"ponto nao pertence a reta")



	
-- EXECUTION TIME:
0.121253
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
True ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
False ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:29:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")



	
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:29:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")



	
-- EXECUTION TIME:
0.160948
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:31:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2X+Ỳ=3
if(y==2X+Ỳ=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.204908
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2X+\u1ef2=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2x+y=3
if(y==2x+y=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.186111
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2x+y=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2x+y=3
if(y==2x+y=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.267598
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2x+y=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2x+y=3
if(y==2x+y=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.129799
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2x+y=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2x+y=3
if(y==2x+y=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.233625
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2x+y=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==2x+y=3
if(y==2x+y=3):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.306266
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 6
    y==2x+y=3
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:32:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código
x=float(input("digite x:"))
y=float(input("digite y:"))
y==3-2*x
if(y==3-2*x):
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")




-- EXECUTION TIME:
0.149278
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
