== TEST (2019-03-21 19:07:22) 
-- CODE:
print(round(2.6,3))
-- OUTPUT:
2.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:07:27) 
-- CODE:
print(round(2.6,3))
-- EXECUTION TIME:
0.14814
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.6
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
2.6
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
2.6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:07:30) 
-- CODE:
print(round(2.6,3))
-- OUTPUT:
2.6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:13:41) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros%ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:14:28) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros/ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:15:00) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros/ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:15:12) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros/ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:18:33) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros**ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:20:17) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros/2/3ficariamichael1/3)
print(round(total,3))
-- ERROR:
File "XXXX", line 3
    total=(quantoslitros/2/3ficariamichael1/3)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:21:08) 
-- CODE:
quantoslitros=float(input("digite o numero"))
ficaramichael=float(input("digite o numero"))
total=(quantoslitros-ficariamichael)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ficaramichael=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:24:49) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=2/3
ficaramichael=int(input(1/3))
total=(quantoslitros/dor=ficariamichael)
print(round(total,3))
-- ERROR:
File "XXXX", line 4
    total=(quantoslitros/dor=ficariamichael)
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:25:07) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=2/3
ficaramichael=int(input(1/3))
total=(quantoslitros/doar=ficariamichael)
print(round(total,3))
-- ERROR:
File "XXXX", line 4
    total=(quantoslitros/doar=ficariamichael)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:25:51) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("digite o numero"))
ficaramichael=int(input(1/3))
total=(quantoslitros/doar=ficariamichael)
print(round(total,3))
-- ERROR:
File "XXXX", line 4
    total=(quantoslitros/doar=ficariamichael)
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:26:10) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("digite o numero"))
ficaramichael=int(input(1/3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:26:55) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=float(input("digite o numero"))
ficaramichael=int(input(1/3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:27:57) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=float(input("digite o numero"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:28:45) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("digite o numero"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:29:21) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("2**3"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:29:38) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("2**3"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- EXECUTION TIME:
0.203935
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1446/main.py", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 15:34:23) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("2**3"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 15:34:35) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=int(input("2**3"))
ficaramichael=int(input(1**3))
total=(quantoslitros/doar)
print(round(total,3))
-- EXECUTION TIME:
0.196491
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1446/main.py", line 2, in <module>
    doar=int(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:12:40) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
print(round(doar,ficara,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(doar,ficara,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:13:10) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
print=round(doar,ficara,3)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print=round(doar,ficara,3)
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:14:06) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
print(round(doar,ficara,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(doar,ficara,3))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:14:34) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
print(round(doar,ficara,(3)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(doar,ficara,(3)))
TypeError: round() takes at most 2 arguments (3 given)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:16:32) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
total=(quantoslitros/0.666666,quantoslitros/1/3)
print(round(total,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(total,3))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:17:11) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
total=(quantoslitros/0.666666,quantoslitros/1/3)
print(total)
-- OUTPUT:
(10.5000105000105, 2.3333333333333335)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:17:46) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
total=(quantoslitros/0.666666,quantoslitros/1/3)
print(total)
-- EXECUTION TIME:
0.18904
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
(10.5000105000105, 2.3333333333333335)
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
(22.5000225000225, 5.0)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:18:26) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros/0.666666)
ficara=(quantoslitros/1/3)
total=(quantoslitros/0.666666-quantoslitros/1/3)
print(total)
-- OUTPUT:
8.166677166677166
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:19:17) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print(total)
-- OUTPUT:
2.333328666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:19:58) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print=round(total,3)
-- OUTPUT:
2.333328666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:20:12) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print=round(total,3)
-- OUTPUT:
2.333328666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:20:31) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print=round(total,3)
-- EXECUTION TIME:
0.158657
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:

-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:21:22) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print=(round(total,3))
-- OUTPUT:
2.333328666666666
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:21:47) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print(round(total,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:21:59) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*0.666666)
ficara=(quantoslitros*1/3)
total=(quantoslitros*0.666666-quantoslitros*1/3)
print(round(total,3))
-- EXECUTION TIME:
0.119057
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:22:48) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:23:08) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- EXECUTION TIME:
0.161624
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:23:14) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:23:26) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- EXECUTION TIME:
0.138311
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:23:46) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- EXECUTION TIME:
0.154793
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 16:23:54) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- OUTPUT:
2.333
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 16:24:10) 
-- CODE:
quantoslitros=int(input("digite o numero"))
doar=(quantoslitros*2/3)
ficara=(quantoslitros*1/3)
total=(quantoslitros*2/3-quantoslitros*1/3)
print(round(total,3))
-- EXECUTION TIME:
0.206214
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:

-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:04:20) 
-- CODE:
litros=float(input("digite o numero"))
doacao=1/3*litros
print(round(doacao))
-- EXECUTION TIME:
0.177725
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
7
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:04:33) 
-- CODE:
litros=float(input("digite o numero"))
doacao=1/3*litros
print(round(doacao,3))
-- EXECUTION TIME:
0.13411
-- TEST CASE 1:
---- input:
7
---- correct output:
2.333
---- user output:
2.333
-- TEST CASE 2:
---- input:
20.0
---- correct output:
6.667
---- user output:
6.667
-- TEST CASE 3:
---- input:
15
---- correct output:
5.0
---- user output:
5.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
