== TEST (2019-04-25 19:14:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
else: 
	
	
-- ERROR:
File "XXXX", line 22
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:15:32) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    preco=p
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:15:35) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.164509
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 3, in <module>
    preco=p
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:15:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.148097
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 3, in <module>
    preco=p
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:15:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.236827
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 3, in <module>
    preco=p
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:15:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.139214
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1692/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:15:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    preco=p
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:15:36) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco=p
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.204163
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 3, in <module>
    preco=p
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:06) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.219658
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:07) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.264774
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:16:07) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:07) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.202611
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:41) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.149204
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:41) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.20016
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:16:41) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.215698
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:16:42) 
-- CODE:
con=float(input("con"))
tipo=input("y")
preco="p"
v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:17:12) 
-- CODE:
con=float(input("con"))
tipo=input("y")

v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.135091
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:17:12) 
-- CODE:
con=float(input("con"))
tipo=input("y")

v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:17:39) 
-- CODE:
con=float(input("con"))
tipo=input("y")

v=p*con
if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    v=p*con
NameError: name 'p' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:17:58) 
-- CODE:
con=float(input("con"))
tipo=input("y")

v=p*conif(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
File "XXXX", line 4
    v=p*conif(tipo.upper()=="R") and (con<=500):
                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:18:08) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:09) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.194415
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 24, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:10) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.124721
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 24, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:10) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.146698
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 24, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:18:11) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 24, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:11) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.148097
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 12, in <module>
    print("Valor total:", "R$",v)
NameError: name 'v' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:11) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.101805
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1692/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:18:55) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:56) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.142006
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:57) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.146097
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:57) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.155271
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:18:57) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:57) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.28401
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:18:57) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.142325
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
conyEntradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:20:58) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.200358
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:20:58) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:22:27) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.156822
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:22:27) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:22:44) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:23:39) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:28:55) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:29:14) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:29:59) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo)
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.187523
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:30:44) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.13678
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:30:45) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:30:45) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.23304
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
conyEntradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 19:30:45) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.128947
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
conyEntradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:14:39) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.215738
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:14:50) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.122001
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:15:38) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:16:02) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.150127
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 19:16:42) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 19:16:52) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.156537
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:22:59) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 20:23:15) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.189352
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:23:17) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:23:31) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 20:23:47) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- EXECUTION TIME:
0.215941
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 20:59:40) 
-- CODE:
con=float(input("con"))
tipo=input("y")

if(tipo.upper()=="R") and (con<=500):
	p=0.44
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="R") and (con>500):
	p=0.65
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con<=1000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="C")	and (con>1000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con<=5000):
	p=0.55
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)

elif(tipo.upper()=="I")	and (con>5000):
	p=0.60
	v=p*con
	v=round(v,2)
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Valor total:", "R$",v)
else: 
	print("Entradas:",con, "kWh", "e tipo",tipo.upper())
	print("Dados invalidos")
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:05:58) 
-- CODE:
c=float(input("con"))
t=float(input("t"))

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print(round(t,2))
elif	
-- ERROR:
File "XXXX", line 8
    elif	
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:06:03) 
-- CODE:
c=float(input("con"))
t=float(input("t"))

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print(round(t,2))
	
-- EXECUTION TIME:
0.173118
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:06:04) 
-- CODE:
c=float(input("con"))
t=float(input("t"))

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print(round(t,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:06:25) 
-- CODE:
c=float(input("con"))
t=float(input("t"))

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print(round(t,2))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:08:43) 
-- CODE:
c=float(input("con"))
t=float(input("t"))

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",t)
	print("Valor total:", "R$",t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:09:09) 
-- CODE:
c=float(input("con"))
t=input("t")

if(t.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",t)
	print("Valor total:", "R$",t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:09:59) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i)
	print("Valor total:", "R$",t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:10:09) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i)
	print("Valor total:", "R$",t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:10:30) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:12:34) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    t=float(input())
ValueError: could not convert string to float: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:19:32) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.280807
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:19:33) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.181277
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:19:33) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.196711
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:19:34) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:19:55) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.131988
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:20:04) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.154419
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:20:05) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:21:29) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	

	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:23) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.136846
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:24) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.124155
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:24) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.146459
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:26) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.16056
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:26) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.136667
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:26) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.190576
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1692/1101/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:22:29) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.190045
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:22:29) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:28:43) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.153085
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.075
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:21) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:41:50) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:42:43) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.800000000000004
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 21:43:41) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 21:43:43) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.171955
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:07:24) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R.upper())
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:07:34) 
-- CODE:
c=float(input("con"))
i=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",i.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:10:23) 
-- CODE:
c=float(input("con"))
V=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(i.upper()=="R") and (c<=500):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:10:25) 
-- CODE:
c=float(input("con"))
V=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.198675
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 4, in <module>
    if(i.upper()=="R") and (c<=500):
NameError: name 'i' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:10:32) 
-- CODE:
c=float(input("con"))
V=input("t")

if(i.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(i.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(i.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(i.upper()=="R") and (c<=500):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:11:24) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 36, in <module>
    print("Entradas:", c, "kWh", "e tipo",I)
NameError: name 'I' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:11:25) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.129992
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 36, in <module>
    print("Entradas:", c, "kWh", "e tipo",I)
NameError: name 'I' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:11:30) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",R)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",C)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",I)
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 36, in <module>
    print("Entradas:", c, "kWh", "e tipo",I)
NameError: name 'I' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:14:59) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:15:01) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.213556
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:04) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:22) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:15:39) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:16:00) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:16:02) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V.upper()=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V.upper()=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V.upper()=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.138852
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:16:38) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:16:39) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.122672
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:16:42) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V=="R") and (c<=500):
	w=0.44
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (c>500):
	w=0.65
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c<=1000):	
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (c>1000):	
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c<=5000):
	w=0.55
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (c>5000):
	w=0.60
	t=c*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:20:48) 
-- CODE:
c=float(input("con"))
V=input("t")

if(V=="R") and (co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 32, in <module>
    elif(V=="I")	and (co<=5000):
NameError: name 'co' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:20:53) 
-- CODE:
co=float(input("con"))
V=input("t")

if(V=="R") and (co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 22:20:54) 
-- CODE:
co=float(input("con"))
V=input("t")

if(V=="R") and (co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.164196
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 22:20:57) 
-- CODE:
co=float(input("con"))
V=input("t")

if(V=="R") and (co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 13:31:25) 
-- CODE:
co=float(input("con"))
V=input("t")

if(V=="R") and (co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R")	and (co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C")	and (co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I")	and (co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:22) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:43:39) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.206852
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:33) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:45:30) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.232971
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:45:31) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.126022
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:45:32) 
-- CODE:
co=float(input("con"))
V=input("t")
	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V.upper())
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:49:53) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:54) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.190674
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:55) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.157065
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:56) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.183281
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:56) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.246168
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:56) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.423779
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:56) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.459294
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:56) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.423776
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:57) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.388296
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total: R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:49:57) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:", "R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.480574
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:50:49) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:50:50) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.225209
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:50:51) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	

if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.184034
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:51:14) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	
if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:51:31) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	
if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", c, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:52:00) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	
if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.195644
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:52:01) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	
if(V=="R" and co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Valor total:R$ -30.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:53:12) 
-- CODE:
co=float(input("con"))
V=input("t")
V=V.upper()	
if(V=="R" and 0<co<=500):
	w=0.44
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)

elif(V=="R"	and co>500):
	w=0.65
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and 0<co<=1000):	
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="C"	and co>1000):	
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(V=="I" and 0<co<=5000):
	w=0.55
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total:R$",t)
	
elif(V=="I"	and co>5000):
	w=0.60
	t=co*w
	t=round(t,2)
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Valor total: R$",t)
	
elif(co<0):
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
else:
	print("Entradas:", co, "kWh", "e tipo",V)
	print("Dados invalidos")
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.22439
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
