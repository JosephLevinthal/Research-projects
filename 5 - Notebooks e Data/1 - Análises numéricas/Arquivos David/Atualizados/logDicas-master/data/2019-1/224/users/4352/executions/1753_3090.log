== TEST (2019-05-16 19:05:19) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite o numero do movimento da lagartixa: "))
	if soma > 0:
		soma = soma + 1
		print("Acima")
	elif soma = 0:
		soma = soma + 1
		print("Inicial")
	else:
		soma = soma + 1
		print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma = 0:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:05:26) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite o numero do movimento da lagartixa: "))
	if soma > 0:
		soma = soma + 1
		print("Acima")
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
	else:
		soma = soma + 1
		print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:05:41) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
	else:
		soma = soma + 1
		print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Ac
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:05:45) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
	else:
		soma = soma + 1
		print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Ac
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:07:03) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
	m = int(input("digite o numero do movimento da lagartixa: "))
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
	m = int(input("digite o numero do movimento da lagartixa: "))
	else:
		soma = soma + 1
		print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:07:16) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
	   m = int(input("digite o numero do movimento da lagartixa: "))
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
		m = int(input("digite o numero do movimento da lagartixa: "))
	else:
		soma = soma + 1
		print("Abaixo")

-- ERROR:
File "XXXX", line 7
    m = int(input())
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:07:25) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
	m = int(input("digite o numero do movimento da lagartixa: "))
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
	m = int(input("digite o numero do movimento da lagartixa: "))
	else:
		soma = soma + 1
		print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:07:32) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + 1
		print("Acima")
m = int(input("digite o numero do movimento da lagartixa: "))
	elif soma == 0:
		soma = soma + 1
		print("Inicial")
m = int(input("digite o numero do movimento da lagartixa: "))
	else:
		soma = soma + 1
		print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:07:57) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
if soma > 0:
	soma = soma + 1
	print("Acima")
m = int(input("digite o numero do movimento da lagartixa: "))
elif soma == 0:
	soma = soma + 1
	print("Inicial")
m = int(input("digite o numero do movimento da lagartixa: "))
else:
	soma = soma + 1
	print("Abaixo")

-- ERROR:
File "XXXX", line 4
    if soma > 0:
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:08:14) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
   if soma > 0:
	   soma = soma + 1
	   print("Acima")
m = int(input("digite o numero do movimento da lagartixa: "))
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
m = int(input("digite o numero do movimento da lagartixa: "))
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:08:53) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
   if soma > 0:
	   soma = soma + 1
	   print("Acima")
m = int(input("digite o numero do movimento da lagartixa: "))
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 9
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:08:58) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
   if soma > 0:
	   soma = soma + 1
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- OUTPUT:
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:09:58) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
   if soma > 0:
	   soma = soma + 1
		m = int(input("digite o numero do movimento da lagartixa: "))
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 7
    m = int(input())
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
   if soma > 0:
	   soma = soma + 1
		m = int(input("digite o numero do movimento da lagartixa:"))
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 7
    m = int(input())
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:11) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
   if soma > 0:
	   soma = soma + 1
		m = int(input("digite o numero do movimento da lagartixa: "))
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 7
    m = int(input())
                   ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:29) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
	m = int(input("digite: "))
   if soma > 0:
	   soma = soma + 1
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 6
    if soma > 0:
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:35) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
	m = int(input("digite: "))
   if soma > 0:
	   soma = soma + 1
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 6
    if soma > 0:
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:47) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
	if soma > 0:
	   soma = soma + 1
	   print("Acima")
   elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:10:55) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
	if soma > 0:
	   soma = soma + 1
	   print("Acima")
	elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
   else:
	   soma = soma + 1
	   print("Abaixo")

-- ERROR:
File "XXXX", line 11
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:11:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
soma = soma + 1
while m != 0:
	if soma > 0:
	   soma = soma + 1
	   print("Acima")
	elif soma == 0:
	   soma = soma + 1
	   print("Inicial")
	else:
	   soma = soma + 1
	   print("Abaixo")

-- OUTPUT:
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:13:27) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
	   soma = soma + va
		print(soma)
	   print("Acima")
	elif soma == 0:
		va = va + m
	   soma = soma + va
		print(soma)
	   print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
	   print("Abaixo")

-- ERROR:
File "XXXX", line 7
    soma = soma + va
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:13:36) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
		soma = soma + va
		print(soma)
	   print("Acima")
	elif soma == 0:
		va = va + m
	   soma = soma + va
		print(soma)
	   print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
	   print("Abaixo")

-- ERROR:
File "XXXX", line 9
    print("Acima")
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:13:54) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
		soma = soma + va
print(soma)
print("Acima")
	elif soma == 0:
		va = va + m
	   soma = soma + va
print(soma)
print("Inicial")
	else:
		va = va + m
		soma = soma +va
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 10
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:14:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		va = va + m
	   soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- ERROR:
File "XXXX", line 12
    soma = soma + va
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:14:21) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
54
Acima
65
Acima
77
Acima
90
Acima
104
Acima
119
Acima
135
Acima
152
Acima
170
Acima
189
Acima
209
Acima
230
Acima
252
Acima
275
Acima
299
Acima
324
Acima
350
Acima
377
Acima
405
Acima
434
Acima
464
Acima
495
Acima
527
Acima
560
Acima
594
Acima
629
Acima
665
Acima
702
Acima
740
Acima
779
Acima
819
Acima
860
Acima
902
Acima
945
Acima
989
Acima
1034
Acima
1080
Acima
1127
Acima
1175
Acima
1224
Acima
1274
Acima
1325
Acima
1377
Acima
1430
Acima
1484
Acima
1539
Acima
1595
Acima
1652
Acima
1710
Acima
1769
Acima
1829
Acima
1890
Acima
1952
Acima
2015
Acima
2079
Acima
2144
Acima
2210
Acima
2277
Acima
2345
Acima
2414
Acima
2484
Acima
2555
Acima
2627
Acima
2700
Acima
2774
Acima
2849
Acima
2925
Acima
3002
Acima
3080
Acima
3159
Acima
3239
Acima
3320
Acima
3402
Acima
3485
Acima
3569
Acima
3654
Acima
3740
Acima
3827
Acima
3915
Acima
4004
Acima
4094
Acima
4185
Acima
4277
Acima
4370
Acima
4464
Acima
4559
Acima
4655
Acima
4752
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:14:54) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
54
Acima
74
Acima
94
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:15:07) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		m = int(input("digite: "))
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
63
Acima
82
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:15:17) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		m = int(input("digite: "))
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
63
Acima
82
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:15:29) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
54
Acima
74
Acima
94
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:15:34) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
54
Acima
74
Acima
94
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:15:53) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
		m = int(input("digite: "))
	elif soma == 0:
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- OUTPUT:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
54
Acima
65
Acima
86
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:16:40) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
		m = int(input("digite: "))
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
9
Acima
10
Acima
20
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:17:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	if soma > 0:
		soma = soma + m
		int(input("digite: "))
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    int(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:17:23) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:17:30) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:17:44) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- EXECUTION TIME:
0.309097
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-3
Inicial
-8
Abaixo
-15
Abaixo
-24
Abaixo
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
20
Inicial
10
Acima
20
Acima
0
Acima
-30
Inicial
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:17:44) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:18:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:18:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- EXECUTION TIME:
0.345276
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
digite o numero do movimento da lagartixa: digite: -3
Inicial
digite: -8
Abaixo
digite: -15
Abaixo
digite: -24
Abaixo
digite: -24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
digite o numero do movimento da lagartixa: digite: 20
Inicial
digite: 10
Acima
digite: 20
Acima
digite: 0
Acima
digite: -30
Inicial
digite: -30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:22:10) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
va = m
soma = 0
while m != 0:
	if soma > 0:
		m = int(input("digite: "))
		va = va + m 
		soma = soma + va
		print(soma)
		print("Acima")
	elif soma == 0:
		m = int(input("digite: "))
		va = va + m
		soma = soma + va
		print(soma)
		print("Inicial")
	else:
		va = va + m
		soma = soma +va
		print(soma)
		print("Abaixo")

-- EXECUTION TIME:
0.305845
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
2
Inicial
5
Acima
9
Acima
14
Acima
20
Acima
27
Acima
35
Acima
44
Acima
63
Acima
82
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-4
Inicial
-11
Abaixo
-21
Abaixo
-34
Abaixo
-50
Abaixo
-69
Abaixo
-91
Abaixo
-116
Abaixo
-144
Abaixo
-175
Abaixo
-209
Abaixo
-246
Abaixo
-286
Abaixo
-329
Abaixo
-375
Abaixo
-424
Abaixo
-476
Abaixo
-531
Abaixo
-589
Abaixo
-650
Abaixo
-714
Abaixo
-781
Abaixo
-851
Abaixo
-924
Abaixo
-1000
Abaixo
-1079
Abaixo
-1161
Abaixo
-1246
Abaixo
-1334
Abaixo
-1425
Abaixo
-1519
Abaixo
-1616
Abaixo
-1716
Abaixo
-1819
Abaixo
-1925
Abaixo
-2034
Abaixo
-2146
Abaixo
-2261
Abaixo
-2379
Abaixo
-2500
Abaixo
-2624
Abaixo
-2751
Abaixo
-2881
Abaixo
-3014
Abaixo
-3150
Abaixo
-3289
Abaixo
-3431
Abaixo
-3576
Abaixo
-3724
Abaixo
-3875
Abaixo
-4029
Abaixo
-4186
Abaixo
-4346
Abaixo
-4509
Abaixo
-4675
Abaixo
-4844
Abaixo
-5016
Abaixo
-5191
Abaixo
-5369
Abaixo
-5550
Abaixo
-5734
Abaixo
-5921
Abaixo
-6111
Abaixo
-6304
Abaixo
-6500
Abaixo
-6699
Abaixo
-6901
Abaixo
-7106
Abaixo
-7314
Abaixo
-7525
Abaixo
-7739
Abaixo
-7956
Abaixo
-8176
Abaixo
-8399
Abaixo
-8625
Abaixo
-8854
Abaixo
-9086
Abaixo
-9321
Abaixo
-9559
Abaixo
-980
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
digite o numero do movimento da lagartixa: digite: 20
Inicial
digite: 10
Acima
digite: 20
Acima
digite: 0
Acima
digite: -30
Inicial
digite: -30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:29:33) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:29:46) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- EXECUTION TIME:
0.430528
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-3
Inicial
-8
Abaixo
-15
Abaixo
-24
Abaixo
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
20
Inicial
10
Acima
20
Acima
0
Acima
-30
Inicial
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:29:58) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:30:18) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:31:20) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:31:30) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- OUTPUT:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:31:30) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print(soma)
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print(soma)
		print("Inicial")
	else:
		soma = soma + m
		print(soma)
		print("Abaixo")

-- EXECUTION TIME:
0.489024
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
1
Inicial
2
Acima
3
Acima
4
Acima
5
Acima
6
Acima
7
Acima
8
Acima
18
Acima
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-3
Inicial
-8
Abaixo
-15
Abaixo
-24
Abaixo
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
digite o numero do movimento da lagartixa: digite: 20
Inicial
digite: 10
Acima
digite: 20
Acima
digite: 0
Acima
digite: -30
Inicial
digite: -30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:32:36) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
      print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- ERROR:
File "XXXX", line 7
    print("Acima")
                 ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:32:47) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:32:54) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:32:55) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- EXECUTION TIME:
0.613085
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
digite o numero do movimento da lagartixa: digite: Inicial
digite: Abaixo
digite: Abaixo
digite: Abaixo
digite: Abaixo
-24
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
digite o numero do movimento da lagartixa: digite: Inicial
digite: Acima
digite: Acima
digite: Acima
digite: Inicial
digite: Abaixo
-30
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:33:12) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:33:22) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
		print("Abaixo")
print(soma)
-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:33:43) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
print("Acima")
	elif soma == 0:
		soma = soma + m
print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")
-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:33:57) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
   elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")
-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:34:06) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
   elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")
-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:34:16) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")
-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:35:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	elif soma == 0:
		soma = soma + m
	else:
		soma = soma + m
print(soma)
print("Acima")
print("Inicial")
print("Abaixo")

-- OUTPUT:
18
Acima
Inicial
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:35:43) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
	elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:35:50) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
   elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:35:52) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
   elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:36:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
print("Acima")
   elif soma == 0:
		soma = soma + m
print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:36:13) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
print("Acima")
   elif soma == 0:
		soma = soma + m
print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:36:21) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
   elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:36:23) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
   elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- EXECUTION TIME:
0.701585
-- ERROR:
  File "/home/codebench/codes/1753/3090/main.py", line 8
    elif soma == 0:
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:36:32) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:37:01) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
	elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:37:08) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
print("Acima")
	elif soma == 0:
		soma = soma + m
print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:37:53) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
	elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:37:57) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
	print("Acima")
	elif soma == 0:
		soma = soma + m
	print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:38:02) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
print("Acima")
	elif soma == 0:
		soma = soma + m
print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:38:08) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + 
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 6
    soma = soma + 
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:38:12) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:38:19) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:38:20) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- EXECUTION TIME:
0.535004
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
Inicial
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
digite o numero do movimento da lagartixa: digite: Inicial
digite: Acima
digite: Acima
digite: Acima
digite: Inicial
digite: -30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:39:57) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
if soma > 0:
	soma = soma + m
print("Acima")
elif soma == 0:
	soma = soma + m
print("Inicial")
else:
	soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:42:06) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m 
print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- ERROR:
File "XXXX", line 8
    elif soma == 0:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:42:10) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m 
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:42:44) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m 
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- EXECUTION TIME:
0.240634
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
Inicial
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
Inicial
Acima
Acima
Acima
Inicial
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:42:45) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m 
		print("Acima")
	elif soma == 0:
		soma = soma + m
		print("Inicial")
	else:
		soma = soma + m
print(soma)
print("Abaixo")

-- OUTPUT:
Inicial
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
Acima
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:45:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	if soma > 0:
		soma = soma + m 
	elif soma == 0:
		soma = soma + m
	else:
		soma = soma + m
print(soma)
print("Abaixo")
-- OUTPUT:
18
Abaixo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:48:33) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
print(soma)
print("Abaixo")
-- ERROR:
File "XXXX", line 13
    print(soma)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:11) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:49:17) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- EXECUTION TIME:
0.233057
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:18) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:49:19) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- EXECUTION TIME:
0.171983
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:20) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:30) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:37) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:49:49) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- EXECUTION TIME:
0.181199
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
18
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-24
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
-30
Abaixo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:49:49) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:50:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:50:14) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:50:46) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	m = int(input("digite: "))
	soma = soma + m
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
18
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:50:58) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	soma = soma + 1
	m = int(input("digite: "))
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
10
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:51:05) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	soma = soma + m
	m = int(input("digite: "))
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
19
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:51:10) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	soma = soma + m
	m = int(input("digite: "))
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
19
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 19:51:25) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	soma = soma + m
	m = int(input("digite: "))
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- EXECUTION TIME:
0.176747
-- TEST CASE 1:
---- input:
1
1
1
1
1
1
1
1
1
10
0
---- correct output:
19
Acima
---- user output:
19
Acima
-- TEST CASE 2:
---- input:
-1
-3
-5
-7
-9
0
---- correct output:
-25
Abaixo
---- user output:
-25
Abaixo
-- TEST CASE 3:
---- input:
30
20
-10
10
-20
-30
0
---- correct output:
0
Inicial
---- user output:
0
Inicial
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 19:51:25) 
-- CODE:
m = int(input("digite o numero do movimento da lagartixa: "))
soma = 0
while m != 0:
	soma = soma + m
	m = int(input("digite: "))
if soma > 0:
	print(soma)
	print("Acima")
elif soma == 0:
	print(soma)
	print("Inicial")
else:
	print(soma)
	print("Abaixo")
-- OUTPUT:
19
Acima
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
