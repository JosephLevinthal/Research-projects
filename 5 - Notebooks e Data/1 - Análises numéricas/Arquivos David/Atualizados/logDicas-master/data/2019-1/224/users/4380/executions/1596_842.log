== TEST (2019-03-26 19:47:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("numero de quatro digitos: "))
n1=n//1000
n2=n%1000
n3=n2//100
n4=n2%100
n5=n4//10
n6=n4%10
print(n2+n4+n5+n6)
-- OUTPUT:
256
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:48:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("numero de quatro digitos: "))
n1=n//1000
n2=n%1000
n3=n2//100
n4=n2%100
n5=n4//10
n6=n4%10
print(n2+n4+n5+n6)
-- EXECUTION TIME:
0.275366
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
256
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
21
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:48:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("numero de quatro digitos: "))
n1=n//1000
n2=n%1000
n3=n2//100
n4=n2%100
n5=n4//10
n6=n4%10
print(n1+n3+n5+n6)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:49:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
n=int(input("numero de quatro digitos: "))
n1=n//1000
n2=n%1000
n3=n2//100
n4=n2%100
n5=n4//10
n6=n4%10
print(n1+n3+n5+n6)
-- EXECUTION TIME:
0.158657
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
