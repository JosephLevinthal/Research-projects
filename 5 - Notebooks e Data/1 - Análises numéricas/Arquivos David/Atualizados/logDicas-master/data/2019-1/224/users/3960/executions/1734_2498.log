== TEST (2019-05-10 12:29:26) 
-- CODE:
habA = int(input(Insira o número de habitantes da cidade A: ))
habB = int(input(Insira o número de habitantes da cidade B: ))
cresc_popA = float(input(Insira o percentual de crescimento populacional da cidade A: ))
cresc_popB = float(input(Insira o percentual de crescimento populacional da cidade B: ))

cont = 0

while(cont_habA <= cont_habB):
	habA = habA + (habA * cresc_popA / 100)
	habB = habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- ERROR:
File "XXXX", line 1
    habA = int(input(Insira o número de habitantes da cidade A: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:29:44) 
-- CODE:
habA = int(input(Insira o numero de habitantes da cidade A: ))
habB = int(input(Insira o numero de habitantes da cidade B: ))
cresc_popA = float(input(Insira o percentual de crescimento populacional da cidade A: ))
cresc_popB = float(input(Insira o percentual de crescimento populacional da cidade B: ))

cont = 0

while(cont_habA <= cont_habB):
	habA = habA + (habA * cresc_popA / 100)
	habB = habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- ERROR:
File "XXXX", line 1
    habA = int(input(Insira o numero de habitantes da cidade A: ))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:29:58) 
-- CODE:
habA = int(input(Insira o numero de habitantes da cidade A:))
habB = int(input(Insira o numero de habitantes da cidade B: ))
cresc_popA = float(input(Insira o percentual de crescimento populacional da cidade A: ))
cresc_popB = float(input(Insira o percentual de crescimento populacional da cidade B: ))

cont = 0

while(cont_habA <= cont_habB):
	habA = habA + (habA * cresc_popA / 100)
	habB = habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- ERROR:
File "XXXX", line 1
    habA = int(input(Insira o numero de habitantes da cidade A:))
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:30:05) 
-- CODE:
hab = int(input(Insira o numero de habitantes da cidade A:))
habB = int(input(Insira o numero de habitantes da cidade B: ))
cresc_popA = float(input(Insira o percentual de crescimento populacional da cidade A: ))
cresc_popB = float(input(Insira o percentual de crescimento populacional da cidade B: ))

cont = 0

while(cont_habA <= cont_habB):
	habA = habA + (habA * cresc_popA / 100)
	habB = habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- ERROR:
File "XXXX", line 1
    hab = int(input(Insira o numero de habitantes da cidade A:))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:30:41) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont = 0

while(cont_habA <= cont_habB):
	habA = habA + (habA * cresc_popA / 100)
	habB = habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while(cont_habA <= cont_habB):
NameError: name 'cont_habA' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:32:30) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = 0
cont_habB = 0
cont = 0

while(cont_habA <= cont_habB):
	cont_habA = cont_habA + (habA * cresc_popA / 100)
	cont_habB = cont_habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:33:22) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = 0
cont_habB = 0
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (habA * cresc_popA / 100)
	cont_habB = cont_habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:35:56) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = 0
cont_habB = 1
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (habA * cresc_popA / 100)
	cont_habB = cont_habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:36:55) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = habA
cont_habB = habB
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (habA * cresc_popA / 100)
	cont_habB = cont_habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:37:49) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = habA
cont_habB = habB
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (habA * cresc_popA / 100)
	cont_habB = cont_habB + (habB * cresc_popB / 100)
	
	cont = cont + 1
	
	print(cont)
-- OUTPUT:
1
2
3
4
5
6
7
8
9
10
11
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 12:39:57) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = habA
cont_habB = habB
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (cont_habA * cresc_popA / 100)
	cont_habB = cont_habB + (cont_habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 12:40:47) 
-- CODE:
habA = int(input("Insira o numero de habitantes da cidade A: "))
habB = int(input("Insira o numero de habitantes da cidade B: "))
cresc_popA = float(input("Insira o percentual de crescimento populacional da cidade A: "))
cresc_popB = float(input("Insira o percentual de crescimento populacional da cidade B: "))

cont_habA = habA
cont_habB = habB
cont = 0

while(cont_habA < cont_habB):
	cont_habA = cont_habA + (cont_habA * cresc_popA / 100)
	cont_habB = cont_habB + (cont_habB * cresc_popB / 100)
	
	cont = cont + 1
	
print(cont)
-- EXECUTION TIME:
0.141302
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
