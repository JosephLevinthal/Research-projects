== TEST (2019-04-14 21:40:54) 
-- CODE:
var = ((a**2 + b**2 + c**2 / a + b + c))
print(round(var, 7))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    var = ((a**2 + b**2 + c**2 / a + b + c))
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:41:55) 
-- CODE:
var = (a**2 + b**2 + c**2 / a + b + c)
print(round(var, 7))



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    var = (a**2 + b**2 + c**2 / a + b + c)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:42:02) 
-- CODE:
var = (a**2 + b**2 + c**2 / a + b + c)
print(round(var, 7))



-- EXECUTION TIME:
0.124618
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1613/1800/main.py", line 1, in <module>
    var = (a**2 + b**2 + c**2 / a + b + c)
NameError: name 'a' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:30) 
-- CODE:
leia as variaveis = (a**2 + b**2 + c**2 / a + b + c)
print(round(var, 7))



-- ERROR:
File "XXXX", line 1
    leia as variaveis = (a**2 + b**2 + c**2 / a + b + c)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:42:41) 
-- CODE:
leia as var = (a**2 + b**2 + c**2 / a + b + c)
print(round(var, 7))



-- ERROR:
File "XXXX", line 1
    leia as var = (a**2 + b**2 + c**2 / a + b + c)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:14:03) 
-- CODE:
Ler a,b,c
delta=b**2-4 * a * c / a+b+c
print(float(Ler,round(delta, 7)))

-- ERROR:
File "XXXX", line 1
    Ler a,b,c
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:14:13) 
-- CODE:
Ler= a,b,c
delta=b**2-4 * a * c / a+b+c
print(float(Ler,round(delta, 7)))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    Ler= a,b,c
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:16:31) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(float(Ler,round(delta, 7)))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(float(Ler,round(delta, 7)))
NameError: name 'Ler' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:17:16) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(float(round(Ler, 7))

-- ERROR:
File "XXXX", line 6
    
                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:17:26) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(round(Ler, 7))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(Ler, 7))
NameError: name 'Ler' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:19:01) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(round(Ler, 7))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(Ler, 7))
NameError: name 'Ler' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:19:12) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(round(Ler, 7))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(Ler, 7))
NameError: name 'Ler' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:19:45) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(round(delta, 7))

-- OUTPUT:
560.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:20:06) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c / a+b+c
print(round(delta, 7))

-- EXECUTION TIME:
0.138396
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
560.0
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
159350.0
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
14514.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:21:53) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
		else:
			print("tem raiz real")
print(round(delta, 7))

-- ERROR:
File "XXXX", line 7
    else:
        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:22:16) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(delta, 7))

-- OUTPUT:
nao tem raiz real
-1775.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:22:26) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(delta, 7))

-- EXECUTION TIME:
0.19576
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
nao tem raiz real
-1775.0
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
nao tem raiz real
-169000.0
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
tem raiz real
13680.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:23:11) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(delta, 7))

-- OUTPUT:
nao tem raiz real
-1775.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:23:25) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(delta, 7))

-- EXECUTION TIME:
0.12901
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
nao tem raiz real
-1775.0
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
nao tem raiz real
-169000.0
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
tem raiz real
13680.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:04) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(if, 7))

-- ERROR:
File "XXXX", line 9
    print(round(if, 7))
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:15) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(a, 7))

-- OUTPUT:
nao tem raiz real
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:25:30) 
-- CODE:
a=float(input("digite a: "))
b=float(input("digite b: "))
c=float(input("digite c: "))
delta=b**2-4 * a * c
if (delta<0):
	 print("nao tem raiz real")
else:
			print("tem raiz real")
print(round(a, 7))

-- EXECUTION TIME:
0.186489
-- TEST CASE 1:
---- input:
20
25
30
---- correct output:
25.6666667
---- user output:
nao tem raiz real
20.0
-- TEST CASE 2:
---- input:
235
400
350
---- correct output:
342.8680203
---- user output:
nao tem raiz real
235.0
-- TEST CASE 3:
---- input:
90
120
2
---- correct output:
106.1509434
---- user output:
tem raiz real
90.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
