== TEST (2019-04-15 19:03:56) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificaçao:".upper())
if "S":
	print(nota + 10/100 * nota)


-- OUTPUT:
O ALUNO TEM BONIFICAÇAO:5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:04:59) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificaçao:")
if "S":
	print(nota + 10/100 * nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:11:03) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:")
if "S":
	print(nota + 10/100 * nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:15:51) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:")
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:16:04) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:")
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.199256
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:16:25) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".upper())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
O ALUNO TEM BONIFICACAO:5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:16:44) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".upper())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.160599
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
O ALUNO TEM BONIFICACAO:5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
O ALUNO TEM BONIFICACAO:9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
O ALUNO TEM BONIFICACAO:4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:17:29) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:17:39) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.139401
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:18:36) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota + boni)
else:
	print(nota)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(nota + 10/100 * nota + boni)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:18:51) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:19:03) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.187363
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:19:40) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").lower()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:19:46) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").lower()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.14508
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:20:02) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".lower())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
o aluno tem bonificacao:5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:20:08) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".lower())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.212314
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
o aluno tem bonificacao:5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
o aluno tem bonificacao:9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
o aluno tem bonificacao:4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:23:06) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".lower())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
o aluno tem bonificacao:5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:23:45) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:".upper())
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
O ALUNO TEM BONIFICACAO:5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:24:05) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:24:12) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao:").upper()
if "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.162693
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.840000000000001
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:25:59) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao S/N:")
if boni.upper()== S:
	print(nota + 10/100 * nota)
else:
	print(nota)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if boni.upper()== S:
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:26:48) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao S/N:")
if boni.upper()== "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:26:56) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao S/N:")
if boni.upper()== "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.200848
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:54:03) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao :")
if boni.upper()== "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:54:05) 
-- CODE:
nota= float(input("nota do aluno:"))
boni=input("o aluno tem bonificacao :")
if boni.upper()== "S":
	print(nota + 10/100 * nota)
else:
	print(nota)


-- EXECUTION TIME:
0.150654
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
