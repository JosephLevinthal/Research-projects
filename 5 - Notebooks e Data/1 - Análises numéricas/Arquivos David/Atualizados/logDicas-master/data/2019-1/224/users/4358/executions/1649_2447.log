== SUBMITION (2019-04-14 18:07:50) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	falta=preco-pag
	print(round(falta,2)
else:
	troco=falta
	print(round(troco,2)
-- EXECUTION TIME:
0.200153
-- ERROR:
  File "/home/codebench/codes/1649/2447/main.py", line 6
    else:
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:07:53) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	falta=preco-pag
	print(round(falta,2)
else:
	troco=falta
	print(round(troco,2)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:14:39) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	falta=preco-pag
	print(round(falta))
else:
	troco=preco-pag
	print(round(troco,2))
-- EXECUTION TIME:
0.146727
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
-28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:14:43) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	falta=preco-pag
	print(round(falta))
else:
	troco=preco-pag
	print(round(troco,2))
-- EXECUTION TIME:
0.199284
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
-28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:14:46) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	falta=preco-pag
	print(round(falta))
else:
	troco=preco-pag
	print(round(troco,2))
-- OUTPUT:
26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:15:57) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(falta+x,2))
else:
	y=preco-pag
	print(round(troco+y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round(falta+x,2))
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:17:34) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(falta+x)
else:
	y=preco-pag
	print(troco+y)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(falta+x)
NameError: name 'falta' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:18:26) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round("falta"+x,2)
else:
	y=preco-pag
	print(round("troco"+y<2)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:18:45) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round("falta"+x,2)
else:
	y=preco-pag
	print(round("troco"+y,2)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:26:52) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round(y,2))
-- EXECUTION TIME:
0.178747
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:26:55) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round(y,2))
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:28:48) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round(y,2))
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:30:13) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round("falta"+x,2))
else:
	y=pag-preco
	print(round("troco de"+y,2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(round("falta"+x,2))
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 01:43:52) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round("y,2))
-- ERROR:
File "XXXX", line 8
    print(round("y,2))
                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 01:44:07) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round("y,2"))
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 01:44:30) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print(round(x,2))
else:
	y=pag-preco
	print(round(y,2))
-- OUTPUT:
26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 02:02:39) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("falta",x)
else:
	y=pag-preco
	print("troco de",y)
-- EXECUTION TIME:
0.191538
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
troco de 0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 02:02:42) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("falta",x)
else:
	y=pag-preco
	print("troco de",y)
-- OUTPUT:
falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 02:04:19) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("Falta",x)
else:
	y=pag-preco
	print("Troco de",y)
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 02:04:34) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("Falta",x)
else:
	y=pag-preco
	print("Troco de",y)
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 02:04:50) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("Falta",x)
else:
	y=pag-preco
	print("Troco de",y)
	
-- OUTPUT:
Falta 26.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 02:05:31) 
-- CODE:
preco=float(input("Digite o preco:"))
pag=float(input("Digite o pagamento:"))
if(preco>pag):
	x=preco-pag
	print("Falta",x)
else:
	y=pag-preco
	print("Troco de",y)
	
-- EXECUTION TIME:
0.135456
-- TEST CASE 1:
---- input:
38.0
12.0
---- correct output:
Falta 26.0
---- user output:
Falta 26.0
-- TEST CASE 2:
---- input:
32.0
60.0
---- correct output:
Troco de 28.0
---- user output:
Troco de 28.0
-- TEST CASE 3:
---- input:
516.0
516.0
---- correct output:
Troco de 0.0
---- user output:
Troco de 0.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
