2019-5-28 18:47:15.160#viewportChange#0
2019-5-28 18:47:29.423#mousedown#{"isTrusted":true}
2019-5-28 18:47:29.480#focus#
2019-5-28 18:47:30.329#change#{"from":{"line":0,"ch":0,"sticky":"after","xRel":19.67333984375},"to":{"line":0,"ch":0,"sticky":"after","xRel":19.67333984375},"text":["from numpy import *","pal = input(\"digite a frase: \")","copy = \"\"","i = 0","#retira os espaços da frase","while(i<len(pal)):","\tif(pal[i] == \" \"):","\t\tcopy = copy + \"\"","\telse:","\t\tcopy = copy + str(pal[i])","\ti = i + 1","print(copy.upper())","valor = 0","i2 = 0","#analisa se a frase é um palindromo ou não","while(i2<len(copy)):","\tif(copy[i2] == copy[-1*(i2+1)]): #quando é palindromo então ex: string[0] == string[-1];","\t\tvalor = valor + 1             #string[1] == string[-2], e assim por diante.","\telse:","\t\tvalor = valor + 0","\ti2 = i2 + 1","#se o toda a string copy ter simetria, então o valor vai ser igual ao tamanho da string sem espaço.","#pois para todo o copy[i2] == copy[-(1+i2)] no laço, adiciona-se o valor 1, assim para todos os caracteres. ","#se todos os caracteres forem simétricos então o adicionar-se-à 1 a todos os caracteres comparados, o valor chegará ao máximo.","if(valor == len(copy)):","\tprint(\"1\")","else:","\tprint(\"0\")","#autor: Lincoln Junior (UFAM)"],"removed":[""],"origin":"paste"}
2019-5-28 18:47:30.373#viewportChange#0
2019-5-28 18:47:32.111#mousedown#{"isTrusted":true}
2019-5-28 18:47:34.640#change#{"from":{"line":21,"ch":0,"sticky":"after","xRel":1.0284423828125},"to":{"line":23,"ch":126,"sticky":"before","xRel":12.4830322265625},"text":[""],"removed":["#se o toda a string copy ter simetria, então o valor vai ser igual ao tamanho da string sem espaço.","#pois para todo o copy[i2] == copy[-(1+i2)] no laço, adiciona-se o valor 1, assim para todos os caracteres. ","#se todos os caracteres forem simétricos então o adicionar-se-à 1 a todos os caracteres comparados, o valor chegará ao máximo."],"origin":"+delete"}
2019-5-28 18:47:34.640#keyHandled#"Backspace"
2019-5-28 18:47:34.664#viewportChange#0
2019-5-28 18:47:36.535#mousedown#{"isTrusted":true}
2019-5-28 18:47:37.543#mousedown#{"isTrusted":true}
2019-5-28 18:47:39.455#mousedown#{"isTrusted":true}
2019-5-28 18:47:39.865#mousedown#{"isTrusted":true}
2019-5-28 18:47:40.082#mousedown#{"isTrusted":true}
2019-5-28 18:47:40.375#mousedown#{"isTrusted":true}
2019-5-28 18:47:40.417#dblclick#{"isTrusted":true}
2019-5-28 18:47:40.799#mousedown#{"isTrusted":true}
2019-5-28 18:47:41.135#mousedown#{"isTrusted":true}
2019-5-28 18:47:41.702#dblclick#{"isTrusted":true}
2019-5-28 18:47:41.983#mousedown#{"isTrusted":true}
2019-5-28 18:47:45.184#mousedown#{"isTrusted":true}
2019-5-28 18:47:46.006#change#{"from":{"line":26,"ch":0,"sticky":"after","xRel":3.0284423828125},"to":{"line":26,"ch":29,"sticky":"before","xRel":36.84661865234375},"text":[""],"removed":["#autor: Lincoln Junior (UFAM)"],"origin":"+delete"}
2019-5-28 18:47:46.006#keyHandled#"Backspace"
2019-5-28 18:47:47.208#change#{"from":{"line":26,"ch":0,"sticky":null},"to":{"line":26,"ch":0,"sticky":null},"text":["#autor: Lincoln Junior (UFAM)"],"removed":[""],"origin":"undo"}
2019-5-28 18:47:47.208#keyHandled#"Ctrl-Z"
2019-5-28 18:47:47.398#change#{"from":{"line":21,"ch":0,"sticky":null},"to":{"line":21,"ch":0,"sticky":null},"text":["#se o toda a string copy ter simetria, então o valor vai ser igual ao tamanho da string sem espaço.","#pois para todo o copy[i2] == copy[-(1+i2)] no laço, adiciona-se o valor 1, assim para todos os caracteres. ","#se todos os caracteres forem simétricos então o adicionar-se-à 1 a todos os caracteres comparados, o valor chegará ao máximo."],"removed":[""],"origin":"undo"}
2019-5-28 18:47:47.398#keyHandled#"Ctrl-Z"
2019-5-28 18:47:47.427#viewportChange#0
2019-5-28 18:47:49.442#change#{"from":{"line":0,"ch":0,"sticky":"after","xRel":19.67333984375},"to":{"line":0,"ch":0,"sticky":"after","xRel":19.67333984375},"text":["from numpy import *","pal = input(\"digite a frase: \")","copy = \"\"","i = 0","#retira os espaços da frase","while(i<len(pal)):","\tif(pal[i] == \" \"):","\t\tcopy = copy + \"\"","\telse:","\t\tcopy = copy + str(pal[i])","\ti = i + 1","print(copy.upper())","valor = 0","i2 = 0","#analisa se a frase é um palindromo ou não","while(i2<len(copy)):","\tif(copy[i2] == copy[-1*(i2+1)]): #quando é palindromo então ex: string[0] == string[-1];","\t\tvalor = valor + 1             #string[1] == string[-2], e assim por diante.","\telse:","\t\tvalor = valor + 0","\ti2 = i2 + 1","#se o toda a string copy ter simetria, então o valor vai ser igual ao tamanho da string sem espaço.","#pois para todo o copy[i2] == copy[-(1+i2)] no laço, adiciona-se o valor 1, assim para todos os caracteres. ","#se todos os caracteres forem simétricos então o adicionar-se-à 1 a todos os caracteres comparados, o valor chegará ao máximo.","if(valor == len(copy)):","\tprint(\"1\")","else:","\tprint(\"0\")","#autor: Lincoln Junior (UFAM)"],"removed":[""],"origin":"paste"}
2019-5-28 18:47:49.484#viewportChange#0
2019-5-28 18:47:50.688#mousedown#{"isTrusted":true}
2019-5-28 18:47:52.454#change#{"from":{"line":28,"ch":0,"sticky":"after","xRel":-3.6363525390625},"to":{"line":28,"ch":29,"sticky":"before","xRel":54.84661865234375},"text":[""],"removed":["#autor: Lincoln Junior (UFAM)"],"origin":"+delete"}
2019-5-28 18:47:52.454#keyHandled#"Backspace"
2019-5-28 18:47:52.454#change#{"from":{"line":28,"ch":0,"sticky":"after","xRel":-3.6363525390625},"to":{"line":28,"ch":29,"sticky":"before","xRel":54.84661865234375},"text":[""],"removed":["#autor: Lincoln Junior (UFAM)"],"origin":"+delete"}
2019-5-28 18:47:52.454#keyHandled#"Backspace"
2019-5-28 18:47:56.988#submit#Congratulations, your code is correct!
