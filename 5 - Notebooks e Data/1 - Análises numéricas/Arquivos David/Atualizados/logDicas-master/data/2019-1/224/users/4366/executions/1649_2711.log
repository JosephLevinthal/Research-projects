== TEST (2019-04-09 19:43:43) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(tickets==passes):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem"INSUFICIENTE"
	print(mensagem.upper())
-- ERROR:
File "XXXX", line 10
    mensagem"INSUFICIENTE"
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:43:51) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(tickets==passes):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:44:22) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if():
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- EXECUTION TIME:
0.216861
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:44:26) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if():
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:44:27) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if():
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:44:29) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if():
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- EXECUTION TIME:
0.209659
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:45:34) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(valor<compra):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(valor<compra):
NameError: name 'compra' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:55:10) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(tickets*RU+passes*busao<=valor):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:55:21) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(tickets*RU+passes*busao<=valor):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:55:41) 
-- CODE:
valor=int(input("digite o valor disponivel:"))
RU=int(input("digite a quantidade de tickets do RU:"))
tickets=float(input("digite o valor dos tickets:"))
passes=int(input("digite a quantidade de passes de onibus:"))
busao=float(input("digite o valor dos passes:"))
if(tickets*RU+passes*busao<=valor):
	mensagem="SUFICIENTE"
	print(mensagem.upper())
else:
	mensagem="INSUFICIENTE"
	print(mensagem.upper())
-- EXECUTION TIME:
0.208062
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
