== TEST (2019-06-04 22:36:59) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(int))
print(m)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:38:31) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(int))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	h=h+1
print(m)	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:39:18) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	h=h+1
print(m)
print(max(m))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:40:10) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:43:03) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))
if(max(x)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(x)>=17)and(max(x)<=18.49):
	print("ABAIXO DO PESO")
elif(max(x)>=18.5)and(max(x)<=24.99):
	print("PESO NORMAL")
elif(max(x)>=25)and(max(x)<=29.99):
	print("ACIMA DO PESO")
elif(max(x)>=30)and(max(x)<=34.99):
	print("OBESIDADE")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:43:14) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))
if(max(x)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(x)>=17)and(max(x)<=18.49):
	print("ABAIXO DO PESO")
elif(max(x)>=18.5)and(max(x)<=24.99):
	print("PESO NORMAL")
elif(max(x)>=25)and(max(x)<=29.99):
	print("ACIMA DO PESO")
elif(max(x)>=30)and(max(x)<=34.99):
	print("OBESIDADE")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:44:02) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))
n=max(x)
print(n)
if(n<17):
	print("MUITO ABAIXO DO PESO")
elif(max(x)>=17)and(max(x)<=18.49):
	print("ABAIXO DO PESO")
elif(max(x)>=18.5)and(max(x)<=24.99):
	print("PESO NORMAL")
elif(max(x)>=25)and(max(x)<=29.99):
	print("ACIMA DO PESO")
elif(max(x)>=30)and(max(x)<=34.99):
	print("OBESIDADE")
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:45:16) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 22:45:39) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
	
-- EXECUTION TIME:
0.97474
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
37.79
OBESIDADE SEVERA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 22:45:57) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
else:
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.19479
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
Digite as massas: Digite as altuas: [24.61 22.99 19.13 20.16]
24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
Digite as massas: Digite as altuas: [ 8.84 12.95 17.44]
17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
Digite as massas: Digite as altuas: [37.79 31.88]
37.79
OBESIDADE SEVERA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-04 22:46:20) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print(max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-04 22:46:51) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.23755
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 21:08:04) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
0.940736
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 21:14:13) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.01993
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 21:14:58) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.15862
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:34:07) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.21916
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:35:14) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]**2))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
1.14283
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
Digite as massas: Digite as altuas: [ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
Digite as massas: Digite as altuas: [37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:35:24) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
0.941271
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
Digite as massas: Digite as altuas: [ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
Digite as massas: Digite as altuas: [37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-12 19:35:35) 
-- CODE:
from numpy import*
x=array(eval(input("Digite as massas: ")))
y=array(eval(input("Digite as altuas: ")))
m=zeros(size(x),dtype(float))
h=0
for i in x:
	m[h]=m[h]+(i/(y[h]*y[h]))
	m[h]=round(m[h],2)
	h=h+1
print(m)
print("O MAIOR IMC DA TURMA EH:",max(m))

if(max(m)<17):
	print("MUITO ABAIXO DO PESO")
elif(max(m)>=17)and(max(m)<=18.49):
	print("ABAIXO DO PESO")
elif(max(m)>=18.5)and(max(m)<=24.99):
	print("PESO NORMAL")
elif(max(m)>=25)and(max(m)<=29.99):
	print("ACIMA DO PESO")
elif(max(m)>=30)and(max(m)<=34.99):
	print("OBESIDADE")
elif(max(m)>=35)and(max(m)<=39.99):
	print("OBESIDADE SEVERA")
elif(max(m)>=40):
	print("OBESIDADE MORBIDA")
	
-- EXECUTION TIME:
0.97909
-- TEST CASE 1:
---- input:
[64.58,77.85,45.96,55.55]
[1.62,1.84,1.55,1.66]
---- correct output:
[24.61  22.99  19.13  20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
---- user output:
[24.61 22.99 19.13 20.16]
O MAIOR IMC DA TURMA EH: 24.61
PESO NORMAL
-- TEST CASE 2:
---- input:
[34.67,45.78,55.89]
[1.98,1.88,1.79]
---- correct output:
[  8.84  12.95  17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
---- user output:
[ 8.84 12.95 17.44]
O MAIOR IMC DA TURMA EH: 17.44
ABAIXO DO PESO
-- TEST CASE 3:
---- input:
[102.89,99.87]
[1.65,1.77]
---- correct output:
[37.79  31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
---- user output:
[37.79 31.88]
O MAIOR IMC DA TURMA EH: 37.79
OBESIDADE SEVERA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
