== TEST (2019-05-01 19:41:20) 
-- CODE:
from math import*
pvo=int(input("Digite os potos de vida inicial:"))
d1=int(input(digite de 1 a 20:))
d2=int(input(digite de 1 a 20:))
dano=((5*d1)**0.5)+(pi**(d2/3))
cai=int(dano)-pvo
print(cai)
-- ERROR:
File "XXXX", line 3
    d1=int(input(digite de 1 a 20:))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:42:01) 
-- CODE:
from math import*
pvo=int(input("Digite os potos de vida inicial:"))
d1=int(input("digite de 1 a 20:"))
d2=int(input("digite de 1 a 20:"))
dano=((5*d1)**0.5)+(pi**(d2/3))
cai=int(dano)-pvo
print(cai)
-- OUTPUT:
-188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:42:32) 
-- CODE:
from math import*
pvo=int(input("Digite os potos de vida inicial:"))
d1=int(input("digite de 1 a 20:"))
d2=int(input("digite de 1 a 20:"))
dano=((5*d1)**0.5)+(pi**(d2/3))
cai=int(dano)-pvo
print(cai)
-- EXECUTION TIME:
0.173621
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
-188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
-285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
-497
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 19:42:58) 
-- CODE:
from math import*
pvo=int(input("Digite os potos de vida inicial:"))
d1=int(input("digite de 1 a 20:"))
d2=int(input("digite de 1 a 20:"))
dano=((5*d1)**0.5)+(pi**(d2/3))
cai=pvo-(int(dano))
print(cai)
-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 19:43:18) 
-- CODE:
from math import*
pvo=int(input("Digite os potos de vida inicial:"))
d1=int(input("digite de 1 a 20:"))
d2=int(input("digite de 1 a 20:"))
dano=((5*d1)**0.5)+(pi**(d2/3))
cai=pvo-(int(dano))
print(cai)
-- EXECUTION TIME:
0.235474
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
