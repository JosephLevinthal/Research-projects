== TEST (2019-03-21 19:09:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(input(int("escolha um numero inteiro")))
y=float(input(int("escolha um numero inteiro exceto 0")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=float(input(int("escolha um numero inteiro")))
ValueError: invalid literal for int() with base 10: 'escolha um numero inteiro'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:09:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(int(input("escolha um numero inteiro")))
y=float(input(int("escolha um numero inteiro exceto 0")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=float(input(int("escolha um numero inteiro exceto 0")))
ValueError: invalid literal for int() with base 10: 'escolha um numero inteiro exceto 0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:10:19) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
x=float(int(input("escolha um numero inteiro")))
y=float(int(input("escolha um numero inteiro exceto 0")))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=float(input(int("escolha um numero inteiro exceto 0")))
ValueError: invalid literal for int() with base 10: 'escolha um numero inteiro exceto 0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:12:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=float(input(int("escolha um numero inteiro exceto 0")))
ValueError: invalid literal for int() with base 10: 'escolha um numero inteiro exceto 0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:12:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    y=float(input(int("escolha um numero inteiro exceto 0")))
ValueError: invalid literal for int() with base 10: 'escolha um numero inteiro exceto 0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:16:16) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:16:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- EXECUTION TIME:
0.207573
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.0
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.0
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:16:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.6
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:17:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro")))
divisor=float(int(input("escolha um numero inteiro exceto 0")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- EXECUTION TIME:
0.140123
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.6
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.5
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:17:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.6
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:18:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.6
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:18:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- EXECUTION TIME:
0.167358
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8.0
5.0
1.6
3.0
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14.0
2.0
7.0
0.0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347.0
2.0
173.5
1.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:18:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.6
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:19:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo/divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.6
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:19:52) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:20:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=float(int(input("escolha um numero inteiro para ser o dividendo")))
divisor=float(int(input("escolha um numero inteiro exceto 0 para ser o divisor")))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8.0
5.0
1.0
3.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:21:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=int(input("escolha um numero inteiro para ser o dividendo"))
divisor=int(input("escolha um numero inteiro exceto 0 para ser o divisor"))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- OUTPUT:
8
5
1
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:21:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
dividendo=int(input("escolha um numero inteiro para ser o dividendo"))
divisor=int(input("escolha um numero inteiro exceto 0 para ser o divisor"))
quociente= dividendo//divisor
resto= dividendo%divisor
print(dividendo)
print(divisor)
print(quociente)
print(resto)

-- EXECUTION TIME:
0.201961
-- TEST CASE 1:
---- input:
8
5
---- correct output:
8
5
1
3
---- user output:
8
5
1
3
-- TEST CASE 2:
---- input:
14
2
---- correct output:
14
2
7
0
---- user output:
14
2
7
0
-- TEST CASE 3:
---- input:
347
2
---- correct output:
347
2
173
1
---- user output:
347
2
173
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
