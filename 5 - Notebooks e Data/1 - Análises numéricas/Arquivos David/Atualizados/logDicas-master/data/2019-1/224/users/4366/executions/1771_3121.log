== TEST (2019-05-23 11:41:15) 
-- CODE:
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
vitorias1=0
vitorias2=0
while(i<size(vet1)):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
	else:
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
File "XXXX", line 12
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:41:46) 
-- CODE:
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
vitorias1=0
vitorias2=0
while(i<size(vet1)):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
File "XXXX", line 13
    print("EMPATE")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:42:04) 
-- CODE:
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
vitorias1=0
vitorias2=0
while(i<size(vet1)):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    vet1=array(eval(input()))
NameError: name 'array' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:42:54) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(i<size(vet1)):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    while(i<size(vet1)):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:43:48) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao<size(vet1)):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    while(posicao<size(vet1)):
NameError: name 'size' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:45:49) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao<vet1):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    while(posicao<vet1):
TypeError: '<' not supported between instances of 'int' and 'list'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:47:35) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet11=vet2):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
File "XXXX", line 6
    while(posicao!=vet11=vet2):
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:47:46) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet11!=vet2):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    while(posicao!=vet11!=vet2):
NameError: name 'vet11' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:48:23) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet1!=vet2):
	if(vet1[posicao]=="EUSAPIA"):
		vitorias1=vitorias1+3
	elif(vet2[posicao]=="BARSANULFO"):
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print("EMPATE")
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(vet1[posicao]=="EUSAPIA"):
IndexError: list index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:51:48) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet1!=vet2):
	if(vet1[posicao]!=vet2[posicao]):
		mensagem="EUPASIA"
		print(mensagem)
		vitorias1=vitorias1+3
	elif(vet2[posicao]!=vet1[posicao]):
		mensagem="BARSANULFO"
		print(mensagem)
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print(mensagem)
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(vet1[posicao]!=vet2[posicao]):
IndexError: list index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 11:52:33) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet1!=vet2):
	if(vet1[posicao]!=vet2):
		mensagem="EUPASIA"
		print(mensagem)
		vitorias1=vitorias1+3
	elif(vet2[posicao]!=vet1):
		mensagem="BARSANULFO"
		print(mensagem)
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print(mensagem)
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(vet1[posicao]!=vet2):
IndexError: list index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-23 18:50:46) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
vitorias1=0
vitorias2=0
while(posicao!=vet1!=vet2):
	if(vet1[posicao]!=vet2):
		mensagem="EUPASIA"
		print(mensagem)
		vitorias1=vitorias1+3
	elif(vet2[posicao]!=vet1):
		mensagem="BARSANULFO"
		print(mensagem)
		vitorias2=vitorias2+3
	posicao=posicao+1
else:
	mensagem="EMPATE"
print(mensagem)
	

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(vet1[posicao]!=vet2):
IndexError: list index out of range
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:05:33) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
		elif(vet1[posicao]==11 and vet2[posicao]==33):
			valor_vet1=1
			valor_vet2=0
		elif(vet1[posicao]==22 and vet2[posicao]==33):
			valor_vet1=0
			valor_vet2=1
		elif(vet1[posicao]==33 and vet2[posicao]==22):
			valor_vet1=0
			valor_vet2=1
		soma_vet1=soma_vet1+valor_vet1
		soma_vet2=soma_vet2+valor_vet2
		posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
File "XXXX", line 15
    elif(vet1[posicao]==11 and vet2[posicao]==33):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:06:38) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while(i<size(vet1)):
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:08:08) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.144378
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1771/3121/main.py", line 8, in <module>
    while(posicao<size(vet1)):
NameError: name 'size' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:08:12) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    while(posicao<size(vet1)):
NameError: name 'size' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:10:28) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao< size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.210449
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1771/3121/main.py", line 8, in <module>
    while(posicao< size(vet1)):
NameError: name 'size' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:10:53) 
-- CODE:
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.123277
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1771/3121/main.py", line 8, in <module>
    while(posicao<size(vet1)):
NameError: name 'size' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:11:40) 
-- CODE:
from numpy import*
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.406796
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
BARSANULFO
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
EUSAPIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:11:46) 
-- CODE:
from numpy import*
vet1=eval(input("digite a sequencia 1:"))
vet2=eval(input("digite a sequencia 2:"))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.589521
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
BARSANULFO
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
EUSAPIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:12:24) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.444664
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
BARSANULFO
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
EUSAPIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:13:05) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:07) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet1==soma_vet2):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.515515
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:43) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.518284
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:53) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.963909
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
12
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:53) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
1.75159
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:54) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
1.09603
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:54) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.3941
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:55) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.39754
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
10
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:15:55) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.53843
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
10
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:16:17) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:18:06) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.595851
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:18:54) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.537903
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
BARSANULFO
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
EUSAPIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:18:56) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.46422
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
BARSANULFO
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
EUSAPIA
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:18:59) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:19:30) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:19:32) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("EUSAPIA")
if(soma_vet1>soma_vet2):
	print("BARSANULFO")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:20:29) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
posicao=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(posicao<size(vet1)):
	if(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==11 and vet2[posicao]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[posicao]==22 and vet2[posicao]==33):
		valor_vet1=0
		valor_vet2=1
	elif(vet1[posicao]==33 and vet2[posicao]==22):
		valor_vet1=0
		valor_vet2=1
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	posicao=posicao+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.552186
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-25 14:28:45) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:28:50) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.475582
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:30:26) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.397355
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1771/3121/main.py", line 19, in <module>
    elif(vet1[i]==11 and vet2==11):
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:30:47) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.4765
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:09) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.28558
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:09) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
1.08978
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
12
EUSAPIA
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
10
BARSANULFO
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:10) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.52746
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:10) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.31093
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:10) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.27743
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:11) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.75915
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
12
EUSAPIA
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:13) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.130756
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1771/3121/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:15) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
1.35976
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:15) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
1.84418
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:32:15) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
2.28923
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
BARSANULFO
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-25 14:40:33) 
-- CODE:
from numpy import*
vet1=array(eval(input("digite a sequencia 1:")))
vet2=array(eval(input("digite a sequencia 2:")))
i=0
soma_vet1=0
soma_vet2=0
valor_vet1=0
valor_vet2=0
while(i<size(vet1)):
	if(vet1[i]==33 and vet2[i]==22):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==11):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==33):
		valor_vet1=1
		valor_vet2=0
	elif(vet1[i]==11 and vet2[i]==11):
		valor_vet1=0
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==22):
		valor_vet1=0
		valor_vet2=0
	elif(vet1[i]==33 and vet2[i]==33):
		valor_vet1=0
		valor_vet2=0
	elif(vet1[i]==22 and vet2[i]==33):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==33 and vet2[i]==11):
		valor_vet2=1
		valor_vet1=0
	elif(vet1[i]==11 and vet2[i]==22):
		valor_vet2=1
		valor_vet1=0
	soma_vet1=soma_vet1+valor_vet1
	soma_vet2=soma_vet2+valor_vet2
	i=i+1
print(size(vet1))
if(soma_vet2==soma_vet1):
	print("EMPATE")
if(soma_vet2>soma_vet1):
	print("BARSANULFO")
if(soma_vet1>soma_vet2):
	print("EUSAPIA")
		

	
	
	
	
	
	
	
	
	

-- EXECUTION TIME:
0.372608
-- TEST CASE 1:
---- input:
[33,22,33,22,11,11,33,22,11,11,22,33]
[22,33,22,11,11,33,22,11,11,22,33,33]
---- correct output:
12
EUSAPIA
---- user output:
12
EUSAPIA
-- TEST CASE 2:
---- input:
[33,22,33,11,33,22,11,22,33,11]
[11,33,22,33,11,33,22,11,22,33]
---- correct output:
10
EMPATE
---- user output:
10
EMPATE
-- TEST CASE 3:
---- input:
[33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11,22]
[11,33,33,22,11,11,22,33,33,22,11,11,22,33,33,22,11,11]
---- correct output:
18
BARSANULFO
---- user output:
18
BARSANULFO
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
