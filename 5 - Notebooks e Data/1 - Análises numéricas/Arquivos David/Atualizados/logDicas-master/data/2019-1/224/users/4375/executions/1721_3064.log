== TEST (2019-05-02 18:26:42) 
-- CODE:
cabeca=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
if(valor<10)and(valor2<10):
elif(cabeca=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cabeca=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cabeca=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cabeca=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:27:39) 
-- CODE:
cabeca=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
elif(cabeca=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cabeca=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cabeca=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 5
    elif(cabeca=="AAMEUL"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:28:53) 
-- CODE:
cabeca=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
if(valor<10)and(valor2<10):
elif(cabeca=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cabeca=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cabeca=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cabeca=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:30:32) 
-- CODE:
cabeca=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
if(valor<10)and(valor2<10):
	elif(cabeca=="AAMEUL"):
		msg=valor+valor2+8
		print(msg)
	elif(cabeca=="HETHRADIAH"):
		msg=(valor+valor2)*2
		print(msg)
	elif(cabeca=="RAKSHASA"):
		msg=valor+valor2+10
		print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cabeca=="AAMEUL"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:31:33) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
if(valor<10)and(valor2<10):
	elif(cab=="AAMEUL"):
		msg=valor+valor2+8
		print(msg)
	elif(cab=="HETHRADIAH"):
		msg=(valor+valor2)*2
		print(msg)
	elif(cab=="RAKSHASA"):
		msg=valor+valor2+10
		print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cab=="AAMEUL"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:32:33) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cabeca=cabeca.upper()
if(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    cabeca=cabeca.upper()
NameError: name 'cabeca' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:06) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=float(input("valor dos dados: "))
valor2=float(input("valor dos dados: "))
cab=cab.upper()
if(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- OUTPUT:
32.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:33:38) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- EXECUTION TIME:
0.184512
-- TEST CASE 1:
---- input:
AAMEUL
23
1
---- correct output:
Entrada invalida
---- user output:
32
-- TEST CASE 2:
---- input:
RAKSHASA
1
2
---- correct output:
13
---- user output:
nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: valor dos dados: valor dos dados: 13
-- TEST CASE 3:
---- input:
AAMEUL
2
3
---- correct output:
13
---- user output:
nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: valor dos dados: valor dos dados: 13
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:53) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- OUTPUT:
32
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:34:12) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- EXECUTION TIME:
0.162395
-- TEST CASE 1:
---- input:
AAMEUL
23
1
---- correct output:
Entrada invalida
---- user output:
32
-- TEST CASE 2:
---- input:
RAKSHASA
1
2
---- correct output:
13
---- user output:
13
-- TEST CASE 3:
---- input:
AAMEUL
2
3
---- correct output:
13
---- user output:
13
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:39) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)and(valor2<10):
elif(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cab=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:35:02) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)or(valor2<10):
elif(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cab=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:36:00) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)and(valor2<10):
	
elif(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 7
    elif(cab=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:38:02) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)and(valor2<10):
elif(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- ERROR:
File "XXXX", line 6
    elif(cab=="AAMEUL"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:39:55) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)and(valor2<10)and(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(valor<10) and (valor2<10) and(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(valor<10)and(valor2<10)and(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:40:14) 
-- CODE:
cab=input("nome da cabeca AAMEUL, HETHRADIAH ou RAKSHASA: ")
valor=int(input("valor dos dados: "))
valor2=int(input("valor dos dados: "))
cab=cab.upper()
if(valor<10)and(valor2<10)and(cab=="AAMEUL"):
	msg=valor+valor2+8
	print(msg)
elif(valor<10) and (valor2<10) and(cab=="HETHRADIAH"):
	msg=(valor+valor2)*2
	print(msg)
elif(valor<10)and(valor2<10)and(cab=="RAKSHASA"):
	msg=valor+valor2+10
	print(msg)
else:
	print("Entrada invalida")
	

-- EXECUTION TIME:
0.112414
-- TEST CASE 1:
---- input:
AAMEUL
23
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 2:
---- input:
RAKSHASA
1
2
---- correct output:
13
---- user output:
13
-- TEST CASE 3:
---- input:
AAMEUL
2
3
---- correct output:
13
---- user output:
13
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
