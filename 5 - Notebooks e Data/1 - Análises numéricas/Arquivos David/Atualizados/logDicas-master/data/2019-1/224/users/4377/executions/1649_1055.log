== TEST (2019-04-05 21:07:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(2*ang)))/9.8
if (d>=r) :
	print(sim)
else :
	print(nao)
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:08:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(2*ang)))/9.8
if (d >= r) :
	print(sim)
else :
	print(nao)
	
-- ERROR:
File "XXXX", line 9
    if (d >= r) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:08:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(2*ang)))/9.8
if (d >= r) :
	print(sim)
else :
	print(nao)
	
-- ERROR:
File "XXXX", line 9
    if (d >= r) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:09:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(2*ang)))/9.8
if (d >= r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d >= r) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:09:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(2*ang)))/9.8
if (d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:12:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin9radians(2*ang)))/9.8
if (d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 21:12:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(radians(2*ang)))/9.8
if (d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:58:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(radians(2*ang)))/9.8
if (d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 16:58:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(radians(2*ang)))/9.8
if(d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if(d>=r) :
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:43:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
v0=float(input("v0"))
ang=int(input("ang"))
d=float(input("d"))
from math import*
r=((((v0)**2)*(sin(radians(2*ang)))/9.8
if (d>=r) :
	print("sim")
else :
	print("nao")
	
-- ERROR:
File "XXXX", line 9
    if (d>=r) :
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:50:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=int(input(degrees("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(d>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alfa=int(input(degrees("alfa")))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:53:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=int(input(radians("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(d>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alfa=int(input(radians("alfa")))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:53:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=int(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(d>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    alfa=int(input())
ValueError: invalid literal for int() with base 10: '45.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:53:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(d>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    if(d>=R) :
NameError: name 'd' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:54:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:55:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:55:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
0.221559
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:02:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:03:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
0.133592
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:04:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 10
    if(distancia==R) :
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:05:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=((((v0)**2)*(sin(radians(2*alfa))))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 10
    if(distancia==R) :
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:05:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 10
    if(distancia==R) :
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:06:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 10
    if(distancia==R) :
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:07:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia==R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:08:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:12:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:13:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=((v0)**2)*(sin(radians(2*alfa))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:14:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:15:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:19:05) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 4
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:20:00) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia=float(input(" ddistancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 4
    distancia=float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:21:48) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 4
    distancia = float(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:22:02) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input(degrees("alfa"))
ddd = float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 4
    ddd = float(input())
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:22:36) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if(distancia>=R) :
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:22:54) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(((v0)**2)*(sin(radians(2*alfa)))/g
if(distancia>=R):
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if(distancia>=R):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:24:59) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(radians(2*alfa) )  )  )/g
if(distancia >= R):
	print("sim")
else :
	print("nao")

	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:27:22) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(radians(2*alfa) )  )  )/g
if(distancia >= R):
	print("sim")
else :
	print("nao")
print(distancia,R)	

	
-- OUTPUT:
sim
11.3 11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:27:59) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(radians(2*alfa) )  )  )/g
if(distancia == R):
	print("sim")
else :
	print("nao")
print(distancia,R)	

	
-- OUTPUT:
nao
11.3 11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:28:12) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(radians(2*alfa) )  )  )/g
if(distancia == R):
	print("sim")
else :
	print("nao")
print(distancia,R)	

	
-- EXECUTION TIME:
0.13542
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
11.3 11.2482865705094
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
51.0 49.91357750773639
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:39) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
print(distancia,R)	

	
-- OUTPUT:
nao
11.3 11.2482865705094
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:52) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
print(distancia,R)	

	
-- EXECUTION TIME:
0.123139
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
11.3 11.2482865705094
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
51.0 49.91357750773639
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:34:42) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:34:52) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.288639
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:09:42) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:09:58) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.150993
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:10:07) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:10:08) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.282754
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:10:08) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.131703
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:10:08) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:10:08) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.298381
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:10:22) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=float(input("alfa"))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin( radians(alfa)*2 )  )  )/g
if(distancia <= R):
	print("sim")
else :
	print("nao")
	

	
-- EXECUTION TIME:
0.16587
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:12:30) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia-R=<0.1)	
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia-R=<0.1)	
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:12:31) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia-R=<0.1)	
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia-R=<0.1)	
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:13:24) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia-R)<= 0.1)	
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia-R)<= 0.1)	
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:13:49) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R)<= 0.1)	
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R)<= 0.1)	
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:14:22) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R)<= 0.1) :
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R)<= 0.1) :
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:14:46) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) <= 0.1) :
	print("sim")
else :
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) <= 0.1) :
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:15:22) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) <= 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) <= 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:15:44) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) =< 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) =< 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:15:50) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) < 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:16:01) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia = float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) < 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:16:14) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) < 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:16:39) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) < 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:17:48) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
if(abs(distancia - R) <= 0.1):
	print("sim")
else:
	print("nao")
	

	
-- ERROR:
File "XXXX", line 8
    if(abs(distancia - R) <= 0.1):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:21:02) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
	print("sim")
if(abs(distancia - R) <= 0.1):
	print("sim")
else:
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:21:10) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
	print("sim")
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:21:22) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
	print("sim")
if(abs(distancia - R) < 0.1):
	print("sim")
else:
	print("nao")
	

	
-- EXECUTION TIME:
0.195493
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:22:26) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
	print("sim")
if(abs(distancia - R) <= 0.1):
	print("sim")
else:
	print("nao")
	

	
-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:22:35) 
-- CODE:
from math import*
v0=float(input("v0"))
alfa=radians(float(input("alfa")))
distancia=float(input("distancia"))
g=9.8
R=(  (v0**2)  *  (sin(alfa)*2 )  )  / g
if(distancia == R):
	print("sim")
if(abs(distancia - R) <= 0.1):
	print("sim")
else:
	print("nao")
	

	
-- EXECUTION TIME:
0.133945
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:56:53) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(2*angulo)))/9.8


if(abs((distancia-R)=<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if(abs((distancia-R)=<0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:57:07) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(2*angulo)))/9.8


if(abs((distancia-R)=<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if(abs((distancia-R)=<0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:57:10) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(2*angulo)))/9.8


if(abs((distancia-R)=<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if(abs((distancia-R)=<0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:59:09) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if abs((distancia-R)=<0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if abs((distancia-R)=<0.1) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:59:15) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if abs((distanciah-R)=<0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if abs((distanciah-R)=<0.1) :
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:59:24) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if abs((distanciah-R)<0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if abs((distanciah-R)<0.1) :
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 13:59:41) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if abs((distanciah-R)<0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if abs((distanciah-R)<0.1) :
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:00:57) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs((distanciah-R)<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs((distanciah-R)<0.1)) :
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:01:11) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(distanciah-R)<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(distanciah-R)<0.1)) :
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:01:33) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(distanciah-R)<0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(distanciah-R)<0.1)) :
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:01:40) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
distanciah=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(distanciah-R)<=0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(distanciah-R)<=0.1)) :
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:02:19) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(h-R) < 0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(h-R) < 0.1)) :
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:02:27) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(h-R) < 0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(h-R) < 0.1)) :
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:02:48) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs(h - R) < 0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs(h - R) < 0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:02:58) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs(h - R) < 0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs(h - R) < 0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:02:59) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs(h - R) < 0.1)) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs(h - R) < 0.1)) :
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:03:10) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs (h - R) < 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs (h - R) < 0.1) ) :
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:03:29) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs (h - R) <= 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs (h - R) <= 0.1) ) :
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:03:36) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs (h - R) < = 0.1) ) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:03:36) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (abs (h - R) < = 0.1) ) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:04:38) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
43.5237
-- ERROR:
  File "/home/codebench/codes/1649/1055/main.py", line 5
    if (abs (h - R) < = 0.1) ) :
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:05:03) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8

if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (abs (h - R) < = 0.1) ) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:05:33) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if(d==R) :
	print("sim")
	
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if(d==R) :
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:05:43) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (d == R) :
	print("sim")
	
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (d == R) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:06:07) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (h == R) :
	print("sim")

if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (h == R) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:06:19) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
h=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (h == R) :
	print("sim")
if (abs (h - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (h == R) :
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:06:34) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (hd == R) :
	print("sim")
if (abs (hd - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:06:42) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (hd==R) :
	print("sim")
if (abs (hd - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd==R) :
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:07:21) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (hd==R) :
	print("sim")
if (abs (hd - R) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd==R) :
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:07:40) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if ( hd == R ) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if ( hd == R ) :
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:07:52) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (hd == R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
0.29793
-- ERROR:
  File "/home/codebench/codes/1649/1055/main.py", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:07:53) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo)))/9.8
if (hd == R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
0.158729
-- ERROR:
  File "/home/codebench/codes/1649/1055/main.py", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:08:50) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=(((v0)**2)*(sin(radians(2*angulo))) / 9.8
if (hd == R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:09:13) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (hd == R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:09:21) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (hd == R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 5
    if (hd == R) :
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:09:52) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
from math import*
R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (hd==R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (hd==R) :
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:10:50) 
-- CODE:
v0=float(input("v0"))
angulo=float(input("alfa"))
hd=float(input("dh"))
from math import*
R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (hd==R) :
	print("sim")
if (abs ( hd - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 6
    if (hd==R) :
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (distancia==R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia==R) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (radians (2*angulo) ) ) / 9.8
if (distancia==R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) ) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia==R) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia==R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia==R) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia==R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia==R) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia==R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia==R) :
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:33) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8
if (distancia == R) :
	print("sim")
if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 7
    if (distancia == R) :
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:43) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8

if (abs (distancia - R ) < = 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 8
    if (abs (distancia - R ) < = 0.1) :
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:12:50) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) )  / 9.8

if (abs (distancia - R ) < 0.1) :
	print("sim")
else :
	print("nao")

	
-- ERROR:
File "XXXX", line 8
    if (abs (distancia - R ) < 0.1) :
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 14:13:03) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) ) )  / 9.8

if (abs (distancia - R ) < 0.1) :
	print("sim")
else :
	print("nao")

	
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 14:13:25) 
-- CODE:
from math import*
v0=float(input("v0"))
angulo=radians(float(input("alfa")))
distancia=float(input("dh"))

R=( ( (v0)**2) * (sin (2*angulo) ) )  / 9.8

if (abs (distancia - R ) < 0.1) :
	print("sim")
else :
	print("nao")

	
-- EXECUTION TIME:
0.201589
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:20:21) 
-- CODE:
v0=float(input("v0"))
angu=float(input("angu"))
D=float(input("D"))
from math import*
R=((v0**2)*sin(radians(2*angu))) / 9.8

if (abs(D-R)<0.1):
	print("sim")
else:
	print("nao")
-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:20:24) 
-- CODE:
v0=float(input("v0"))
angu=float(input("angu"))
D=float(input("D"))
from math import*
R=((v0**2)*sin(radians(2*angu))) / 9.8

if (abs(D-R)<0.1):
	print("sim")
else:
	print("nao")
-- EXECUTION TIME:
0.225065
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
