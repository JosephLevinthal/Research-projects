== TEST (2019-04-10 13:08:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx int(input("me da coor x"))
-- ERROR:
File "XXXX", line 4
    coorx int(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:10:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = int(input("me da coor x,bicho:"))
coory = int(input("me da coor y,macho:"))
-- ERROR:
File "XXXX", line 4
    coorx int(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:11:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = int(input("me da coor x,bicho:"))
coory = int(input("me da coor y,macho:"))
coorxy = (coorx , coory)
-- ERROR:
File "XXXX", line 4
    coorx int(input())
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:11:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = int(input("me da coor x,bicho:"))
coory = int(input("me da coor y,macho:"))
coorxy = (coorx , coory)
print(coorxy)
-- OUTPUT:
(20, -37)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:12:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2x=y=3
print(coorxy)
-- ERROR:
File "XXXX", line 6
    coorxy = 2x=y=3
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:12:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2x+y=3
print(coorxy)
-- ERROR:
File "XXXX", line 6
    coorxy = 2x+y=3
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:12:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2*x+y=3
print(coorxy)
-- ERROR:
File "XXXX", line 6
    coorxy = 2*x+y=3
            ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:14:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2*coorx+coory==3
-- ERROR:
File "XXXX", line 6
    coorxy = 2*x+y=3
            ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:16:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2*coorx+coory==3
if coorxy = 3:
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    if coorxy = 3:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:16:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2*coorx+coory=3
if coorxy = 3:
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 7
    if coorxy = 3:
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 13:17:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coorx = float(input("me da coor x,bicho:"))
coory = float(input("me da coor y,macho:"))
coorxy = 2*coorx+coory=3
if coorxy == 3:
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
-- ERROR:
File "XXXX", line 6
    coorxy = 2*coorx+coory=3
            ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 17:36:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("digite coordena x:"))
y = float(input("digite coordena y:"))
reta = 2*x+y 
if reta == 3:
	mensagem = "ponto pertence a reta"
else:
	mensagem = "ponto nao pertence a reta"
print(mensagem.lower())

-- EXECUTION TIME:
0.164394
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
