== TEST (2019-05-26 22:13:09) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
while(i<size(vetor)):
	string = string + str(vetor[i])+ "x^" + str(i)
	i = i  +  1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:13:44) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = " "
i = 0
while(i<size(vetor)):
	string = string + str(vetor[i])+ "x^ " + str(i)
	i = i  +  1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:14:59) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
while(i<size(vetor)):
	string = string + str(vetor[i])+ " x^" + str(i) + " "  
	i = i  +  1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:15:43) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
while(i<size(vetor)):
	string = string + str(vetor[i])+ "x^" + str(i) + " + "  
	i = i  +  1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:17:34) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
while(i<size(vetor)):
	string = string + str(vetor[(-1)*(i + 1)])+ "x^" + str(i) + " + "  
	i = i  +  1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:30:22) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str[s] + " + "
	i = i  +  1
	s = s - 1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:30:43) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str(s) + " + "
	i = i  +  1
	s = s - 1
print(string)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:44:13) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	i = i  +  1
	s = s - 1
print(string[-6])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:44:39) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:44:53) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:45:11) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:52:03) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
		if(s != 1):
			string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
		else:
			string = string + str(vetor[i]) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])
##############
-- ERROR:
File "XXXX", line 11
    i = i  +  1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:52:30) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	if(s != 1):
		string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	else:
		string = string + str(vetor[i]) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])
##############
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:53:54) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	if(s != 1):
		string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	else:
		string = string + str(vetor[i]) + " + "
	i = i  +  1
	s = s - 1
print(string)
##############
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:55:09) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	if(s != 2):
		string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	else:
		string = string + str(vetor[i]) + " + "
	i = i  +  1
	s = s - 1
print(string[:-6])
##############
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-26 22:55:30) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	if(s != 2):
		string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	else:
		string = string + str(vetor[i]) + "x + "
	i = i  +  1
	s = s - 1
print(string[:-6])
##############
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-26 22:55:40) 
-- CODE:
from numpy import *
vetor = array(eval(input("digite os coeficientes: ")))
string = ""
i = 0
s = size(vetor)
while(i<size(vetor)):
	if(s != 2):
		string = string +  str(vetor[i]) + "x^" + str(s-1) + " + "
	else:
		string = string + str(vetor[i]) + "x + "
	i = i  +  1
	s = s - 1
print(string[:-6])
##############
-- EXECUTION TIME:
0.490486
-- TEST CASE 1:
---- input:
[30,20,11]

---- correct output:
30x^2 + 20x + 11

---- user output:
30x^2 + 20x + 11
-- TEST CASE 2:
---- input:
[10]

---- correct output:
10

---- user output:
10
-- TEST CASE 3:
---- input:
[11,50,20,30,2]

---- correct output:
11x^4 + 50x^3 + 20x^2 + 30x + 2

---- user output:
11x^4 + 50x^3 + 20x^2 + 30x + 2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
