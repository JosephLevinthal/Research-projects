== TEST (2019-05-09 19:20:55) 
-- CODE:
from math import*
angulo= eval(input("angulo: "))
k = float(input("numero k: "))
c=0
sen(x)=x

while (c<k):
	sen(X)
-- ERROR:
File "XXXX", line 5
    sen(x)=x
    ^
SyntaxError: can't assign to function call
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:22:45) 
-- CODE:
from math import*
angulo= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    senx=x
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:23:09) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senax=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:23:27) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:23:46) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=0

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:24:24) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:25:01) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:25:11) 
-- CODE:
from math import*
x= eval(input("angulo: "))
k = float(input("numero k: "))
c=3
senx=x

while (c<k):
	senx= x-((x**c)/factorial(c))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:59:17) 
-- CODE:

x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	i= i+2
print(senx)
 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    x=eval(input())
  File "<string>", line 1, in <module>
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:59:39) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	i= i+2
print(senx)
 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    i= i+2
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 17:59:55) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	c= c+2
print(senx)
 
-- OUTPUT:
1.4911037005487295
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:00:56) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= 0
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	c= c+2
print(round(senx, 8)
 
-- ERROR:
File "XXXX", line 11
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:01:03) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= 0
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	c= c+2
print(round(senx, 8)
-- ERROR:
File "XXXX", line 10
    
                        ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:01:19) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= 0
c= 3
while (c<=k):
	senx= x + ((-1)**c)*(x**c)/factorial(c)
	c= c+2
print(round(senx, 8))
-- OUTPUT:
1.4911037
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:01:57) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= senx + ((-1)**c)*(x**c)/factorial(c)
	c= c+2
print(round(senx, 8))
-- OUTPUT:
0.8451396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:02:47) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= senx + (((-1)**c)*(x**c))/factorial(c)
	c= c+2
print(round(senx, 8))
-- OUTPUT:
0.8451396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:02:56) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
while (c<=k):
	senx= senx + (((-1)**c)*(x**c))/factorial(c)
	c= c+2
print(round(senx, 8))
-- OUTPUT:
0.8451396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:03:46) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
i=0
while (c<=k):
	senx= senx + (((-1)**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
print(round(senx, 8))
-- OUTPUT:
2.1370678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:03:55) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
i=0
while (c<=k):
	senx= senx + (((-1)**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
print(round(senx, 8))
-- OUTPUT:
2.1370678
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:04:46) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
i=1
while (c<=k):
	senx= x + (((-1)**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
print(round(senx, 8))
-- OUTPUT:
1.65048895
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:07:22) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
i=1
while (c<=k):
	senx= x + (-1**i)*((x**c)/factotial(c))
	c= c+2
	i=i+1
print(round(senx, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    senx= x + (-1**i)*((x**c)/factotial(c))
NameError: name 'factotial' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:07:35) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
senx= x
c= 3
i=1
while (c<=k):
	senx= x + (-1**i)*((x**c)/factorial(c))
	c= c+2
	i=i+1
print(round(senx, 10))
-- OUTPUT:
1.4911037005
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:10:41) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<=k):
	soma= ((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(senx, 10))
-- OUTPUT:
1.4911037005
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:11:01) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<=k):
	soma= ((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(som, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(round(som, 10))
NameError: name 'som' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:11:12) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<=k):
	soma= ((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(soma, 10))
-- OUTPUT:
-0.0796926262
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:12:22) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<=k):
	soma= soma +((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(soma, 10))
-- OUTPUT:
-0.7256567238
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:12:44) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<=k):
	soma= soma +((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(senx
				, 10))
-- OUTPUT:
0.845139603
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:13:10) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
while (c<k):
	soma= soma +((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= x+ soma
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:13:59) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<k):
	soma= soma +((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= senx + soma
print(round(senx, 10))
-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:14:52) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
print(factorial(c))
while (c<k):
	soma= soma +((-1**i)*(x**c))/factorial(c)
	c= c+2
	i=i+1
	senx= senx + soma
print(round(senx, 10))

-- OUTPUT:
6
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:16:31) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<k):
	soma= soma +(-1**i)*((x**c)/factorial(c))
	c= c+2
	i=i+1
	senx= senx + soma
print(round(senx, 10))

-- OUTPUT:
0.9248322293
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:19:56) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<=k):
	soma= soma+ ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.5662714712600792
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:21:01) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
   print(soma)
	


-- ERROR:
File "XXXX", line 12
    print(soma)
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:21:18) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.5662714712600792
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:21:46) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.5662714712600792
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:21:58) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3
i=1
senx= x
while (c<=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.5662714712600792
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:23:16) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 
i=1
senx= x
while (c!=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- ERROR:
File "XXXX", line 5
    c= 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:23:21) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 3 
i=1
senx= x
while (c!=k):
	soma= soma + ((-1)**i * (x**c))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.6459640975062462
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:24:20) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c!=k):
	soma= soma + ((-1)**i * (x**(c+3))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- ERROR:
File "XXXX", line 10
    i= i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:25:52) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c!=k):
	soma= soma + ((-1)**i * (x)**(c+3))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma= soma + ((-1)**i * (x)**(c+3))/factorial(c)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:26:17) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c!=k):
	soma= soma + ((-1)**i * (x**(c+3))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- ERROR:
File "XXXX", line 10
    i= i+1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:26:40) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c!=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c)
	i= i+1
	c= c+2
print(soma)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    soma= soma + (-1)**i * (x**(c+3))/factorial(c)
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:27:52) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
d=c+3
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(d))/factorial(d)
	i= i+1
	c= c+2
print(soma)
	


-- OUTPUT:
-0.6459640975062462
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:28:40) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	print(soma)
	


-- OUTPUT:
-0.6459640975062462
-0.5662714712600792
-0.5709532253953978
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:29:28) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	senx= senx+soma
print(round(senx, 10))
	


-- OUTPUT:
-0.2123924674
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:30:43) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= senx + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
print(round(senx, 10))
	


-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:31:55) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	cu=  + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	soma= soma + cu
print(round(senx, 10))
	


-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:32:02) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	cu=  + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	soma= soma + cu
print(round(senx, 10))
	


-- OUTPUT:
1.5707963268
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:32:24) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	cu=  + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	soma= soma + cu
print(round(cu, 10))
	


-- OUTPUT:
-0.0046817541
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:32:53) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	cu=  + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	soma= soma + cu
	senx= senx + soma
print(round(cu, 10))
	


-- OUTPUT:
-0.0046817541
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:33:04) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	cu=  + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
	soma= soma + cu
	senx= senx + soma
print(round(senx, 10))
	


-- OUTPUT:
-0.2123924674
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:34:21) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:34:32) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k= int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.279109
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:35:01) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:35:27) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:35:40) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.149173
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:35:47) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
senx= x
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= senx + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:37:04) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:37:16) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * (x**(c+3))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:38:06) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + ((-1)**i * (x**(c+3)))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:38:47) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + ((-1)**i * (x**(c+3)))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.246836
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:38:50) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + ((-1)**i * (x**(c+3)))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.137212
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:39:22) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=0
while (c<=k):
	soma= soma + ((-1)**i * (x**(c+3)))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.219869
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
2.1417495522
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-2.1417495522
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
1.2280998186
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:39:28) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + ((-1)**i * (x**(c+3)))/factorial(c+3)
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.155576
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:40:11) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:40:17) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:40:35) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:40:36) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.137825
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:40:38) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.213951
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:41:55) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:42:07) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.15043
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0045248555
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:42:16) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<=k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:42:24) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:42:49) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:43:00) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:43:07) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.157041
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0045248555
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:43:19) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- EXECUTION TIME:
0.194836
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.9998431014
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-1.0045248555
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:43:21) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	soma= soma + (-1)**i * ((x**(c+3))/factorial(c+3))
	i= i+1
	c= c+2
senx= x + soma
print(round(senx, 10))
	


-- OUTPUT:
0.9998431014
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:46:13) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 1
while (c<k):
	soma= soma + (-1)**c * ((x**(c+2))/factorial(c+2))
	c= c+2
senx= x + soma
print(round(senx, 10))
-- OUTPUT:
0.845139603
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:46:57) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
senx=x
c= 1
while (c<k):
	senx= senx + (-1)**c * ((x**(c+2))/factorial(c+2))
	c= c+2
print(round(senx, 10))
-- OUTPUT:
0.845139603
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:55:21) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	sinal= (-1)**c
	senx= senx + sinal * ((x**(i))/factorial(i))
	c= c+1
	i= i+2
print(round(senx, 10))
-- EXECUTION TIME:
0.177009
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 9, in <module>
    senx= senx + sinal * ((x**(i))/factorial(i))
NameError: name 'senx' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:55:23) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
soma=0
c= 0
i=1
while (c<k):
	sinal= (-1)**c
	senx= senx + sinal * ((x**(i))/factorial(i))
	c= c+1
	i= i+2
print(round(senx, 10))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    senx= senx + sinal * ((x**(i))/factorial(i))
NameError: name 'senx' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:55:40) 
-- CODE:
from math import*
x=eval(input("angulo: "))
k=int(input("numero: "))
senx=0
c= 0
i=1
while (c<k):
	sinal= (-1)**c
	senx= senx + sinal * ((x**(i))/factorial(i))
	c= c+1
	i= i+2
print(round(senx, 10))
-- EXECUTION TIME:
0.146126
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
