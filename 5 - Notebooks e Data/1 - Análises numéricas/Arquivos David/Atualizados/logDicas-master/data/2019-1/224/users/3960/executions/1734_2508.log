== TEST (2019-05-10 15:58:55) 
-- CODE:
from math import *
n = int(input("insere o numero natul"))

cont = 1
numP = 3

while (cont < n):
	numP = numP + (-1)**(cont+1) / (cont+1)*(cont+2)*(cont+3) 
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 15:59:19) 
-- CODE:
from math import *
n = int(input("insere o numero natul"))

cont = 1
numP = 3

while (cont < n):
	numP = numP + (-1)**(cont+1) / (cont+1)*(cont+2)*(cont+3) 
	cont = cont + 1
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 15:59:34) 
-- CODE:
from math import *
n = int(input("insere o numero natul"))

cont = 1
numP = 3

while (cont < n):
	numP = numP + (-1)**(cont+1) / (cont+1)*(cont+2)*(cont+3) 
	cont = cont + 1
	print(numP)
-- OUTPUT:
9.0
2.333333333333334
9.833333333333334
1.4333333333333318
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 15:59:44) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
numP = 3

while (cont < n):
	numP = numP + (-1)**(cont+1) / (cont+1)*(cont+2)*(cont+3) 
	cont = cont + 1
	print(numP)
-- OUTPUT:
9.0
2.333333333333334
9.833333333333334
1.4333333333333318
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:06:52) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont+2) * (cont+3)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	print(numP)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(numP)
NameError: name 'numP' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:07:02) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont+2) * (cont+3)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	print(i)
-- OUTPUT:
3.1666666666666665
3.1166666666666667
3.138888888888889
3.126984126984127
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:07:55) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont*2 +1) * (cont*2 +2)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	print(i)
-- OUTPUT:
3.1666666666666665
3.1333333333333333
3.145238095238095
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-10 16:10:11) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont*2 +1) * (cont*2 +2)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	print(i)
-- OUTPUT:
3.1666666666666665
3.1333333333333333
3.145238095238095
3.1396825396825396
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:10:24) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont*2 +1) * (cont*2 +2)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	print(round(i,8))
-- EXECUTION TIME:
0.139216
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
3.14162381
3.14156573
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.16666667
3.13333333
3.1452381
3.13968254
3.14271284
3.14088134
3.14207182
3.14125482
3.14183962
3.14140672
3.1417361
3.14147969
3.14168319
3.14151899
3.14165339
3.14154199
3.14163536
3.14155633
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-10 16:10:34) 
-- CODE:
from math import *
n = int(input("insere o numero natul: "))

cont = 1
i = 3

while (cont < n):
	d = (cont*2) * (cont*2 +1) * (cont*2 +2)
	i = i + (-1)**(cont+1) * 4 / d 
	cont = cont + 1
	
print(round(i,8))
-- EXECUTION TIME:
0.185379
-- TEST CASE 1:
---- input:
5
---- correct output:
3.13968254
---- user output:
3.13968254
-- TEST CASE 2:
---- input:
22
---- correct output:
3.14161607
---- user output:
3.14161607
-- TEST CASE 3:
---- input:
19
---- correct output:
3.14155633
---- user output:
3.14155633
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
