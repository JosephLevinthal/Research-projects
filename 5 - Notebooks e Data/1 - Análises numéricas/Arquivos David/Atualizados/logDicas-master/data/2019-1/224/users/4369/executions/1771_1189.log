== TEST (2019-05-30 08:08:30) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c)


-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:11:30) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replacer(' ', '')
if c[0: ] == [ :-1]:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    if c[0: ] == [ :-1]:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:11:51) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replacer(' ', '')
if c[0: ] == [ :c-1]:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    if c[0: ] == [ :c-1]:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:12:07) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replacer(' ', '')
if c[0: ] == [ :1]:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    if c[0: ] == [ :1]:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:12:31) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0: ] == [ :1]:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    if c[0: ] == [ :1]:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:12:48) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0: ] == c[ :-1]:
	print(1)
else:
	print(0)

-- ERROR:
File "XXXX", line 3
    if c[0: ] == [ :1]:
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:13:36) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
print(v)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:13:43) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
print(v)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:14:06) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
print(v)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:15:22) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if v[0:] == v[:-1]:
	print(v)
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:15:39) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if v[0:] == v[:-1]:
	print(v)
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:16:03) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[:-1]:
	print(v)
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:16:29) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:2] == c[1:-1]:
	print(v)
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:16:48) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:2] == c[1:-1]:
	print(v)
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:23:09) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[:i-1]:
	print(c)
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if c[0:] == c[:i-1]:
NameError: name 'i' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:23:28) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[:c-1]:
	print(c)
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if c[0:] == c[:c-1]:
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:24:00) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[:-1]:
	print(c)
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if c[0:] == c[:c-1]:
TypeError: unsupported operand type(s) for -: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:25:00) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(c)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:25:15) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 08:25:23) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(v)
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.130156
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:26:37) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:26:47) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:27:18) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:-1] == c[-1::0]:
	print(v)
	print(1)
else:
	print(0)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if c[0:-1] == c[-1::0]:
ValueError: slice step cannot be zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 08:27:39) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[::1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:19:32) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if c[0:] == c[::-1]:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:23:04) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if (c[0:] == c[::-1]):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:23:14) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if (c[0:]) == (c[::-1]):
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:24:19) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v=c.replace(' ', '')
if c[0:] == c[::-1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:24:45) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v= c.replace(' ', '')
if c[0:] == c[::-1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 17:24:46) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v= c.replace(' ', '')
if c[0:] == c[::-1]:
	print(v)
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.221553
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:24:47) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v= c.replace(' ', '')
if c[0:] == c[::-1]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:26:35) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
v = c.replace(' ', '')
if c[0:] == c[-1:]:
	print(v)
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:28:10) 
-- CODE:
c = (input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if (c[0:]) == c[::-1]:
	print(1)
else:
	print(0)
-- OUTPUT:
ACARARAJADADAJARARACA
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:29:34) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if (c[0:]) == c[::-1]:
	print(0)
else:
	print(1)
-- OUTPUT:
ACARARAJADADAJARARACA
0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 17:29:40) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if (c[0:]) == c[::-1]:
	print(0)
else:
	print(1)
-- EXECUTION TIME:
0.159377
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
0
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
1
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 17:30:26) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if c[0:]) == c[::-1]:
	print(1)
else:
	print(0)
-- ERROR:
File "XXXX", line 3
    if c[0:]) == c[::-1]:
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 17:30:32) 
-- CODE:
c = str(input("Digite uma string: ")) .upper()
print(c.replace(' ', '')) 
if c[0:] == c[::-1]:
	print(1)
else:
	print(0)
-- EXECUTION TIME:
0.141646
-- TEST CASE 1:
---- input:
ACARARAJADADAJARARACA
---- correct output:
ACARARAJADADAJARARACA
1
---- user output:
ACARARAJADADAJARARACA
1
-- TEST CASE 2:
---- input:
CACHORRO
---- correct output:
CACHORRO
0
---- user output:
CACHORRO
0
-- TEST CASE 3:
---- input:
amalanadanalama
---- correct output:
AMALANADANALAMA
1
---- user output:
AMALANADANALAMA
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
