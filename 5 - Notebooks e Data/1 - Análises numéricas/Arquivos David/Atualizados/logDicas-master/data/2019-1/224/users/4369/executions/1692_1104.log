== TEST (2019-05-02 01:05:54) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and ):
elif(a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 6
    if(b > a and d > c and ):
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:06:54) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c):
elif(a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
-- ERROR:
File "XXXX", line 7
    elif(a == c or b == d or b == c or a == d):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:07:46) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c):
	print("Entradas validas")
elif(a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
-- OUTPUT:
Entradas validas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:09:01) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, b)
	print("Intervalo 2:", c, d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 2.0
Intervalo 2: 4.0 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:10:15) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:10:43) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.143172
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Nao ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:12:03) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:14:48) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c and a == c or b == d or b == c or a == d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:15:39) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:15:56) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- OUTPUT:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:16:10) 
-- CODE:
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))
c = float(input("Digite o numero c: "))
d = float(input("Digite o numero d: "))

if(b > a and d > c):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif(a != c and b != d and b != c and a != d):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.15408
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Nao ha intersecao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 17:47:05) 
-- CODE:
e= float(input("Diga o consumo de energia (em kWh): "))
i= input("diga o tipo de instalacao R, I ou C: ")
print("Entradas:", e, "kWh e tipo", i.upper())

if(i.upper()== "R") and (e>0) and (e<=500):
	x= e*0.44
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "R") and (e>0) and (e>500):
	x= e*0.65
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "C") and (e>0) and (e<=1000):
	x= e*0.55
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "C") and (e>0) and (e>1000):
	x= e*0.60
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "I") and (e>0) and (e<=5000):
	x= e*0.55
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "I") and (e>0) and (e>5000):
	x= e*0.60
	print("Valor total: R$",round(x, 2))
else:
	print("Dados invalidos")
-- OUTPUT:
Entradas: 1.0 kWh e tipo 2
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 17:47:08) 
-- CODE:
e= float(input("Diga o consumo de energia (em kWh): "))
i= input("diga o tipo de instalacao R, I ou C: ")
print("Entradas:", e, "kWh e tipo", i.upper())

if(i.upper()== "R") and (e>0) and (e<=500):
	x= e*0.44
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "R") and (e>0) and (e>500):
	x= e*0.65
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "C") and (e>0) and (e<=1000):
	x= e*0.55
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "C") and (e>0) and (e>1000):
	x= e*0.60
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "I") and (e>0) and (e<=5000):
	x= e*0.55
	print("Valor total: R$",round(x, 2))
elif(i.upper()== "I") and (e>0) and (e>5000):
	x= e*0.60
	print("Valor total: R$",round(x, 2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.154836
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Entradas: 1.0 kWh e tipo 2
Dados invalidos
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Entradas: 1.5 kWh e tipo 5
Dados invalidos
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Entradas: -1.0 kWh e tipo -3
Dados invalidos
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 17:47:48) 
-- CODE:
a= float(input("escolha um valor para a: "))
b= float(input("escolha um valor para b: "))
c= float(input("escolha um valor para c: "))
d= float(input("escolha um valor para d: "))
if (b>a) and (d>c) and (a==c) or (a==d) or (b==c) or (b==d) or (b>c) or (d<b):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Ha intersecao")
elif (b>a) and (d>c):
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Nao ha intersecao")
else:
	print("Intervalo 1:", a, ",", b)
	print("Intervalo 2:", c, ",", d)
	print("Entradas invalidas")
-- EXECUTION TIME:
0.220161
-- TEST CASE 1:
---- input:
1
2
4
5
---- correct output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
---- user output:
Intervalo 1: 1.0 , 2.0
Intervalo 2: 4.0 , 5.0
Nao ha intersecao
-- TEST CASE 2:
---- input:
1.5
5
2.5
3
---- correct output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
---- user output:
Intervalo 1: 1.5 , 5.0
Intervalo 2: 2.5 , 3.0
Ha intersecao
-- TEST CASE 3:
---- input:
-1
-3
1
3
---- correct output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
---- user output:
Intervalo 1: -1.0 , -3.0
Intervalo 2: 1.0 , 3.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
