== TEST (2019-04-30 11:00:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a=b=c):
	print("Entradas:" a "," b "," c)
	print("Tipo de triangulo: equilatero")
else:
	print("Entradas:" a "," b "," c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: invalido")
		
-- ERROR:
File "XXXX", line 6
    if (a=b=c):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:00:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a==b==c):
	print("Entradas:" a "," b "," c)
	print("Tipo de triangulo: equilatero")
else:
	print("Entradas:" a "," b "," c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: invalido")
		
-- ERROR:
File "XXXX", line 7
    print("Entradas:" a "," b "," c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:01:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a==b==c):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: equilatero")
else:
	print("Entradas:" a "," b "," c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: invalido")
		
-- ERROR:
File "XXXX", line 10
    print("Entradas:" a "," b "," c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:01:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a==b==c):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: equilatero")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: invalido")
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:04:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a+b>c)and(a+c>b)and(b+c>a):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			if (a==b==c):
			print("Tipo de triangulo: equilatero")
		
-- ERROR:
File "XXXX", line 18
    print("Tipo de triangulo: equilatero")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 11:05:20) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a+b>c)and(a+c>b)and(b+c>a):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			if (a==b==c):
			print("Tipo de triangulo: equilatero")
		
-- ERROR:
File "XXXX", line 18
    print("Tipo de triangulo: equilatero")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:30:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a+b>c)and(a+c>b)and(b+c>a):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			if (a==b==c):
			print("Tipo de triangulo: equilatero")
		
-- EXECUTION TIME:
0.19915
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 18
    print("Tipo de triangulo: equilatero")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:32:06) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a+b>c)and(a+c>b)and(b+c>a):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			if (a==b==c):
				print("Tipo de triangulo: equilatero")
			else:
				print("Tipo de triangulo: invalido")
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>b+c)or(b>a+c)or(c>a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: equilatero")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: equilatero")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:22) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: equilatero")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if (a==b) or (a==c) or (b==c):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: equilatero")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:40:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b) or (a==c) or (b==c)):
		print("Tipo de triangulo: isosceles")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: equilatero")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:41:28) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:41:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:41:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:42:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
			
		
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:42:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a=float(input("lado 1: "))
b=float(input("lado 2: "))
c=float(input("lado 3: "))
if (a>=b+c)or(b>=a+c)or(c>=a+b):
	print("Entradas:" ,a, "," ,b, "," ,c)
	print("Tipo de triangulo: invalido")
else:
	print("Entradas:" ,a, "," ,b, "," ,c)
	if ((a==b==c)):
		print("Tipo de triangulo: equilatero")
	else:
		if (a!=b) and (a!=c) and (b!=c):
			print("Tipo de triangulo: escaleno")
		else:
			print("Tipo de triangulo: isosceles")
			
		
-- EXECUTION TIME:
0.205165
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
