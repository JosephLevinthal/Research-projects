== TEST (2019-06-11 19:06:01) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a,0,-1):
	print("*"*i*2)

-- OUTPUT:
**********************
********************
******************
****************
**************
************
**********
********
******
****
**
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:08:02) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))
b=2*a
for i in range (b,a):
	print("*"*b)

-- OUTPUT:
**********************
********************
******************
****************
**************
************
**********
********
******
****
**
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:08:28) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))
b=2*a
for i in range (b,a):
	print("*"*i*2)

-- OUTPUT:
**********************
********************
******************
****************
**************
************
**********
********
******
****
**
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:16:00) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a,0,-1):
	print("*"*i*2)
-- OUTPUT:
**********************
********************
******************
****************
**************
************
**********
********
******
****
**
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:17:25) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a,0,-1):
print("*"*i*2)
-- ERROR:
File "XXXX", line 4
    print("*"*i*2)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:30:43) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
print("*"*i)
-- ERROR:
File "XXXX", line 4
    print("*"*i)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:30:51) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i)
-- OUTPUT:
*
**
***
****
*****
******
*******
********
*********
**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:31:16) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a,a+1):
	print("*"*i)
-- OUTPUT:
***********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:32:05) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i+"*"*i)
-- OUTPUT:
**
****
******
********
**********
************
**************
****************
******************
********************
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:32:54) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i +"o"+"*"*i)
-- OUTPUT:
o
*o*
**o**
***o***
****o****
*****o*****
******o******
*******o*******
********o********
*********o*********
**********o**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:33:11) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i +"o"*i+"*"*i)
-- OUTPUT:
*o*
**oo**
***ooo***
****oooo****
*****ooooo*****
******oooooo******
*******ooooooo*******
********oooooooo********
*********ooooooooo*********
**********oooooooooo**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:33:31) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i +"o"*i+"o"*i+"*"*i)
-- OUTPUT:
*oo*
**oooo**
***oooooo***
****oooooooo****
*****oooooooooo*****
******oooooooooooo******
*******oooooooooooooo*******
********oooooooooooooooo********
*********oooooooooooooooooo*********
**********oooooooooooooooooooo**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:34:25) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i(a-i) +"o"*i+"o"*i+"*"*i(a-i))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print("*"*i(a-i) +"o"*i+"o"*i+"*"*i(a-i))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:34:49) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*i*(a-i) +"o"*i+"o"*i+"*"*i*(a-i))
-- OUTPUT:
**********oo**********
******************oooo******************
************************oooooo************************
****************************oooooooo****************************
******************************oooooooooo******************************
******************************oooooooooooo******************************
****************************oooooooooooooo****************************
************************oooooooooooooooo************************
******************oooooooooooooooooo******************
**********oooooooooooooooooooo**********
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:35:03) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*(a-i) +"o"*i+"o"*i+"*"*(a-i))
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:35:25) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*(a-i) +"o"*i+"o"*i+"*"*(a-i))
-- OUTPUT:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 19:35:29) 
-- CODE:
a=int(input("digite o numero de numeros na base: "))

for i in range (a):
	print("*"*(a-i) +"o"*i+"o"*i+"*"*(a-i))
-- EXECUTION TIME:
0.576305
-- TEST CASE 1:
---- input:
11
---- correct output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
---- user output:
**********************
**********oo**********
*********oooo*********
********oooooo********
*******oooooooo*******
******oooooooooo******
*****oooooooooooo*****
****oooooooooooooo****
***oooooooooooooooo***
**oooooooooooooooooo**
*oooooooooooooooooooo*
-- TEST CASE 2:
---- input:
19
---- correct output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
---- user output:
**************************************
******************oo******************
*****************oooo*****************
****************oooooo****************
***************oooooooo***************
**************oooooooooo**************
*************oooooooooooo*************
************oooooooooooooo************
***********oooooooooooooooo***********
**********oooooooooooooooooo**********
*********oooooooooooooooooooo*********
********oooooooooooooooooooooo********
*******oooooooooooooooooooooooo*******
******oooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooo*
-- TEST CASE 3:
---- input:
26
---- correct output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo********
*******oooooooooooooooooooooooooooooooooooooo*******
******oooooooooooooooooooooooooooooooooooooooo******
*****oooooooooooooooooooooooooooooooooooooooooo*****
****oooooooooooooooooooooooooooooooooooooooooooo****
***oooooooooooooooooooooooooooooooooooooooooooooo***
**oooooooooooooooooooooooooooooooooooooooooooooooo**
*oooooooooooooooooooooooooooooooooooooooooooooooooo*
---- user output:
****************************************************
*************************oo*************************
************************oooo************************
***********************oooooo***********************
**********************oooooooo**********************
*********************oooooooooo*********************
********************oooooooooooo********************
*******************oooooooooooooo*******************
******************oooooooooooooooo******************
*****************oooooooooooooooooo*****************
****************oooooooooooooooooooo****************
***************oooooooooooooooooooooo***************
**************oooooooooooooooooooooooo**************
*************oooooooooooooooooooooooooo*************
************oooooooooooooooooooooooooooo************
***********oooooooooooooooooooooooooooooo***********
**********oooooooooooooooooooooooooooooooo**********
*********oooooooooooooooooooooooooooooooooo*********
********oooooooooooooooooooooooooooooooooooo**
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
