== TEST (2019-04-11 18:28:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if(>200//5)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(>200//5)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:33:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if( )
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if( )
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:35:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if(==200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(==200)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:36:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if(200>)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200>)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("compra"==200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("compra"==200)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("compra" == 200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("compra" == 200)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco desconto: "))
if("compra" == 200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("compra" == 200)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:38:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:38:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:38:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:39:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" => 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" => 200.0)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:41:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
if("entrada" 5% >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" 5% >= 200.0)
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
desconto 5%
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    desconto 5%
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
desconto= 5%
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    desconto= 5%
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
desconto= 5%
if("entrada + desconto" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    desconto= 5%
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:42:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
desconto= 5%
if("entrada + desconto" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    desconto= 5%
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco: "))
desconto= 5%
if("entrada" + "desconto" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    desconto= 5%
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:43:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada"== 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"== 200.0)
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:44:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- EXECUTION TIME:
0.169206
-- ERROR:
  File "/home/codebench/codes/1649/869/main.py", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
else:
	mensagem= "imprima o valor a ser pago"
	print(round, 2)
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada= float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:44:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:46:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if(200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200.0)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:46:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if(200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- EXECUTION TIME:
0.154464
-- ERROR:
  File "/home/codebench/codes/1649/869/main.py", line 5
    if(200.0)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:46:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if(200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200.0)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:46:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if(200.0=="entrada")
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200.0=="entrada")
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:46:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input("leia o preco sem desconto: "))
if(200.0 == "entrada")
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200.0 == "entrada")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if(200.0 == "entrada")
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if(200.0 == "entrada")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada"==200)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"==200)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada"==200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada"==200.0)
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:48:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
entrada = float(input())
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:54:09) 
-- CODE:
entrada = float(input(200.0))
if("entrada" >= 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if("entrada" >= 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:19:38) 
-- CODE:
entrada = float(input())
if("entrada" == 200.0 - 5/100)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if("entrada" == 200.0 - 5/100)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:20:13) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0 - 5/100)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if("entrada" == 200.0 - 5/100)
                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:20:33) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0 - 5//100)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if("entrada" == 200.0 - 5//100)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:20:51) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0)
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if("entrada" == 200.0)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:21:04) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0):
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- OUTPUT:
imprima o valor a ser pago
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:21:21) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0):
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- EXECUTION TIME:
0.141871
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
imprima o valor a ser pago
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
imprima o valor a ser pago
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:21:37) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0 - 5//100):
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- OUTPUT:
imprima o valor a ser pago
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:21:58) 
-- CODE:
entrada = float(input("preco da compra"))
if("entrada" == 200.0 - 5//100):
	mensagem= "leia o preco sem desconto"
	print(mensagem)
	print(round, 2)
else:
	mensagem= "imprima o valor a ser pago"
	print(mensagem)
-- EXECUTION TIME:
0.132528
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
imprima o valor a ser pago
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
imprima o valor a ser pago
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:24:14) 
-- CODE:
entrada = float(input("preco da compra"))
desconto= 5//100
print(round, 2)
-- OUTPUT:
<built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:25:16) 
-- CODE:
entrada = float(input("preco da compra"))
print(round, 2)
-- OUTPUT:
<built-in function round> 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:25:22) 
-- CODE:
entrada = float(input("preco da compra"))
print(round, 2)
-- EXECUTION TIME:
0.180945
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
<built-in function round> 2
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
<built-in function round> 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:26:47) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
print(round, 2("valor a ser pago"))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(round, 2("valor a ser pago"))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:31:39) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
entrada2= float(input("valor a ser pago"))
desconto= entrada+5*200/100
print(round, 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    entrada2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:31:58) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
entrada2= float(input("valor a ser pago"))
desconto= entrada+5*200/100
print(round, 2)
-- EXECUTION TIME:
0.142887
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/869/main.py", line 2, in <module>
    entrada2= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:32:08) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
entrada2= float(input("valor a ser pago"))
desconto= entrada+5*200/100
print(round, 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    entrada2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:32:59) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
entrada2= float(input("valor a ser pago"))
desconto= entrada+5*200/100
print(round, 2)(desconto)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    entrada2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:34:07) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
entrada2= float(input("valor a ser pago"))
desconto= entrada+5*200/100
print(round("desconto", 2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    entrada2= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:35:06) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
desconto= entrada+5*200/100
print(round("desconto", 2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(round("desconto", 2))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-13 18:35:17) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
desconto= entrada+5*200/100
print(round("desconto", 2))
		
-- EXECUTION TIME:
0.19179
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/869/main.py", line 3, in <module>
    print(round("desconto", 2))
TypeError: type str doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:36:25) 
-- CODE:
entrada = float(input("preco da compra sem desconto"))
desconto= entrada+200.0(5*200/100)
print(round("desconto", 2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    desconto= entrada+200.0(5*200/100)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-13 18:37:14) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
desconto= entrada+200.0(5*200/100)
print(round("desconto", 2))
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    desconto= entrada+200.0(5*200/100)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:11:28) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
if(200.0>5*200//100):
	mensagem "preco com desconto"
	print(mensagem)
else:
	mensagem "valor a ser pago"
	print(entrada+mansagem)
-- ERROR:
File "XXXX", line 3
    mensagem "preco com desconto"
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:12:07) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(entrada+mansagem)
-- OUTPUT:
preco com desconto
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 10:12:21) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(entrada+mansagem)
-- EXECUTION TIME:
0.152061
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
preco com desconto
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
preco com desconto
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:12:41) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- OUTPUT:
preco com desconto
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 10:12:54) 
-- CODE:
entrada= float(input("preco da compra sem desconto"))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- EXECUTION TIME:
0.211385
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
preco com desconto
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
preco com desconto
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:14:10) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- OUTPUT:
preco com desconto
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 10:14:21) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- EXECUTION TIME:
0.144368
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
preco com desconto
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
preco com desconto
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:15:06) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 2
    if(200.0>):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:15:10) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 2
    if(200.0>):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:16:00) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>200.0(5*200//100)):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 2
    if(>200.0(5*200//100)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:16:30) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>200.0==5*200//100):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 2
    if(>200.0==5*200//100):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:16:57) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>200.0(5*200//100)):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 2
    if(>200.0(5*200//100)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:17:17) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>(5*200//100)):
	mensagem= "preco com desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- OUTPUT:
preco com desconto
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:18:26) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(200.0>(5*200//100)):
	mensagem= "valor a ser pago" ()
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    mensagem= "valor a ser pago" ()
TypeError: 'str' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:19:42) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(200.0>):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 3
    if(200.0>):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:19:57) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(200.0>):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
File "XXXX", line 3
    if(200.0>):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:20:44) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(entrada+mansagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(entrada+mansagem), 2)
NameError: name 'mansagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:21:17) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(desconto+mansagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(desconto+mansagem), 2)
NameError: name 'mansagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:22:04) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(desconto+mansagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(desconto+mansagem), 2)
NameError: name 'mansagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:22:32) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(desconto+mensagem), 2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(desconto+mensagem), 2)
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:23:08) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(int(desconto+mensagem), 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(int(desconto+mensagem), 2))
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:23:47) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(int(round((desconto+mensagem), 2))
-- ERROR:
File "XXXX", line 9
    
                                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:24:02) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(float(round((desconto+mensagem), 2))
-- ERROR:
File "XXXX", line 9
    
                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:24:24) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(float((desconto+mensagem), 2))
-- ERROR:
File "XXXX", line 9
    
                                               ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:24:42) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(float(desconto+mensagem), 2)))
-- ERROR:
File "XXXX", line 8
    print(round(float(desconto+mensagem), 2)))
                                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 10:24:50) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"
	print(round(float(desconto+mensagem), 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(float(desconto+mensagem), 2))
TypeError: unsupported operand type(s) for +: 'int' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:42:36) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto>==200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"

-- ERROR:
File "XXXX", line 3
    if(desconto>==200.0):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:43:16) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto>=200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"

-- ERROR:
File "XXXX", line 3
    if(desconto>==200.0):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:43:43) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100 
if(desconto>=200.0):
	mensagem= "preco sem desconto"
	print(mensagem)
else:
	mensagem= "valor a ser pago"

-- EXECUTION TIME:
0.208191
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:

-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:45:07) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100
print(entrada+desconto)
if(desconto>=200.0):
	
-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:47:59) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100
soma= entrada+desconto
print(soma)
-- OUTPUT:
210.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:48:19) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= 5*200//100
soma= entrada+desconto
print(soma)
-- EXECUTION TIME:
0.172716
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
210.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
210.53
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:49:14) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada+5*200//100
soma= entrada+desconto
print(soma)
-- OUTPUT:
410.18
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:50:57) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada-5*200//100
soma= entrada+desconto
print(round(soma), 2)
-- OUTPUT:
390 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 15:51:46) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if()
desconto= entrada-5*200//100
soma= entrada+desconto
print(round(soma), 2)
-- EXECUTION TIME:
0.154835
-- ERROR:
  File "/home/codebench/codes/1649/869/main.py", line 2
    if()
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:53:09) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>=200):
	desconto= entrada-5*200//100
	soma= entrada+desconto
	print(round(soma), 2)
	
else:
	mensagem= "sem desconto"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if(>=200):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:53:19) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>=200.0):
	desconto= entrada-5*200//100
	soma= entrada+desconto
	print(round(soma), 2)
	
else:
	mensagem= "sem desconto"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if(>=200.0):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 15:54:14) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
if(>=200):
	desconto= entrada-5*200//100
	soma= entrada+desconto
	print(round(soma), 2)
	
else:
	mensagem= "sem desconto"
	print(mensagem)
-- ERROR:
File "XXXX", line 2
    if(>=200):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:23:48) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2)
	
else:
	mensagem= "sem desconto"
	print(mensagem)
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:25:35) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2)
	
else:
	print("sem desconto"
-- ERROR:
File "XXXX", line 6
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:26:32) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2)
else:
   print("sem desconto"
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:26:56) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2)
else:
   print("sem desconto")
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:27:05) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2)
else:
   print("sem desconto")
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:27:38) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada - desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:27:54) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.124866
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/869/main.py", line 4, in <module>
    print(round(entrada - desconto, 2))
NameError: name 'desconto' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:28:07) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada - desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:21:03) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada - desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:21:33) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:22:00) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.149904
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/869/main.py", line 4, in <module>
    print(round(entrada-desconto, 2))
NameError: name 'desconto' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:22:28) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:24:10) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:24:54) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto),2)
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto),2)
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:25:06) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto),202)
else:
   print("sem desconto")
-- EXECUTION TIME:
0.213882
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/869/main.py", line 4, in <module>
    print(round(entrada-desconto),202)
NameError: name 'desconto' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:25:13) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada >=200:
	print(round(entrada-desconto),206)
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto),206)
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:29:20) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada>=200:
	print(round("entrada"-"desconto"),2)
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round("entrada"-"desconto"),2)
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:29:41) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada>=200:
	print(round("entrada"-"desconto", 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round("entrada"-"desconto", 2))
TypeError: unsupported operand type(s) for -: 'str' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:30:10) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
deconto= entrada + 5/100
if entrada>=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(entrada-desconto, 2))
NameError: name 'desconto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:30:28) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:30:42) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:31:03) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:31:20) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada-desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.188264
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
-0.05
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
-0.05
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:32:14) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:32:26) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.202694
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
-0.05
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
-0.05
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:32:36) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada + 5/100
if entrada>=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
-0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:37:37) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if entrada>=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:37:49) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if entrada>=200:
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.158741
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:39:55) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if (entrada>=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:40:05) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if (entrada>=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:40:09) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if (entrada>=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.234226
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:40:21) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if ("entrada">=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if ("entrada">=200):
TypeError: '>=' not supported between instances of 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:40:39) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if (entrada>=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:40:56) 
-- CODE:
entrada= float(input("preco da compra sem desconto: "))
desconto= entrada * 5/100
if (entrada>=200):
	print(round(entrada - desconto, 2))
else:
   print("sem desconto")
-- EXECUTION TIME:
0.155728
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
