== TEST (2019-04-02 19:02:42) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
from math import * 
angulo = radians(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = b**2 + c**2 - 2 * (b*c) * cos(angulo)
#saída
print(b)
print(c)
print(cos)
print(round(a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    angulo = radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:03:06) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = b**2 + c**2 - 2 * (b*c) * cos(angulo)
#saída
print(b)
print(c)
print(cos)
print(round(a, 2))
-- OUTPUT:
8.0
10.0
<built-in function cos>
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:03:27) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = radians (b**2 + c**2 - 2 * (b*c) * cos(angulo))
#saída
print(b)
print(c)
print(cos)
print(round(a, 2))
-- OUTPUT:
8.0
10.0
<built-in function cos>
5.52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:03:58) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = radians (b**2 + c**2 - 2 * (b*c) * cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
5.52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:04:10) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = radians (b**2 + c**2 - 2 * (b*c) * cos(angulo))
#saída
print(round(a, 2))
-- EXECUTION TIME:
0.191402
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
5.52
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
8.87
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:04:13) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = radians (b**2 + c**2 - 2 * (b*c) * cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
5.52
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:06:14) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = ((b**2) + (c**2) - 2 * (b*c) * radians(cos(angulo))) 
#saída
print(round(a, 2))
-- OUTPUT:
166.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:06:36) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * radians(cos(angulo))) 
#saída
print(round(a, 2))
-- OUTPUT:
166.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:06:48) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * radians(cos(angulo))) 
#saída
print(round(a, 2))
-- OUTPUT:
166.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:07:24) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2) + sqrt(c**2) - 2 * (b*c) * radians(cos(angulo))) 
#saída
print(round(a, 2))
-- ERROR:
File "XXXX", line 9
    a = sqrt(b**2) + sqrt(c**2) - 2 * (b*c) * radians(cos(angulo))) 
                                                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:07:29) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2) + sqrt(c**2) - 2 * (b*c) * radians(cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
20.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:07:40) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2) + sqrt(c**2) - 2 * (b*c) * radians(cos(angulo))
#saída
print(round(a, 2))
-- EXECUTION TIME:
0.28624
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
20.66
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
35.03
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:07:41) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2) + sqrt(c**2) - 2 * (b*c) * radians(cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
20.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:11:01) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2) + (c**2) - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:11:25) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2) + (c**2) - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:11:49) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2)** 0.5 - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
165.19
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:12:02) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2)** 0.5 - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
165.19
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:12:23) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b)**2 + (c)**2 - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:12:38) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b)**2 + (c)**2 - 2 * (b*c) * (cos(angulo))
#saída
print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:13:00) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * (cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:13:12) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * (cos(angulo)))**0.5
#saída
print(round(a, 2))
-- EXECUTION TIME:
0.196884
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
17.79
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
22.55
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:13:13) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * (cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:13:32) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2 + c**2 - 2 * (b*c) * (cos(angulo)))
#saída
print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:13:42) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2 + c**2 - 2 * (b*c) * (cos(angulo)))
#saída
print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:14:10) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2 + c**2 - 2 * (b*c) * radians(cos(angulo)))
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:14:21) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = sqrt(b**2 + c**2 - 2 * (b*c) * radians(cos(angulo)))
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:14:31) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * radians(cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:14:39) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2 * (b*c) * radians(cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:09) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:17) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo)))**0.5
#saída
print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:23) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo))
#saída
print(round(a, 2))
-- ERROR:
File "XXXX", line 11
    print(round(a, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:25) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo))
#saída
print(round(a, 2))
-- ERROR:
File "XXXX", line 11
    print(round(a, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:31) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo))
#saída

-- ERROR:
File "XXXX", line 11
    
           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:36) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo))
#saída
-- ERROR:
File "XXXX", line 11
    
           ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:15:42) 
-- CODE:
# LEI DOS COSSENOS
#-------------------------
#lados e ângulos
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
angulo = float(input("digite o angulo entre b e c: "))
#lei dos cossenos / valor de a²
from math import * 
a = (b**2 + c**2 - 2*b*c * radians(cos(angulo))
-- ERROR:
File "XXXX", line 10
    
                                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:16:04) 
-- CODE:
b = float(input("digite o lado b: "))
-- ERROR:
File "XXXX", line 10
    
                                                   ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:18:15) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * cos(ang))

print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:18:37) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:18:52) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:19:17) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- EXECUTION TIME:
0.166397
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
12.91
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
28.76
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:19:17) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:19:54) 
-- CODE:
b = int(input("digite o lado b: "))
c = int(input("digite o lado c: "))
ang = int(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:01) 
-- CODE:
b = int(input("digite o lado b: "))
c = int(input("digite o lado c: "))
ang = int(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:10) 
-- CODE:
b = int(input("digite o lado b: "))
c = int(input("digite o lado c: "))
ang = int(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:20:17) 
-- CODE:
b = int(input("digite o lado b: "))
c = int(input("digite o lado c: "))
ang = int(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- EXECUTION TIME:
0.166069
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
12.91
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:17) 
-- CODE:
b = int(input("digite o lado b: "))
c = int(input("digite o lado c: "))
ang = int(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:46) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
2.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:51) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
2.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:20:59) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- EXECUTION TIME:
0.117061
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
2.94
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
1.83
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:20:59) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
2.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:21:26) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * (radians(cos(ang))))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:21:33) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * (radians(cos(ang))))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:23:01) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * (cos(ang))

print(round(a, 2))
-- ERROR:
File "XXXX", line 8
    print(round(a, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:23:05) 
-- CODE:
b = float(input("digite o lado b: "))
c = float(input("digite o lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import * 
a = sqrt(b**2 + c**2 - 2 * b * c * (cos(ang))

print(round(a, 2))
-- ERROR:
File "XXXX", line 8
    print(round(a, 2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:25:06) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * cos(ang)

print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:25:20) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * cos(ang)

print(round(a, 2))
-- OUTPUT:
316.39
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:25:30) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c * cos(ang))

print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:25:37) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c * cos(ang))

print(round(a, 2))
-- OUTPUT:
17.79
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:25:55) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:26:04) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:26:11) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c / radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
98.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:26:41) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = sqrt(b**2 + c**2 - 2 * b * c / radians(cos(ang)))

print(round(a, 2))
-- OUTPUT:
98.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:27:41) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 sqrt(- 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- ERROR:
File "XXXX", line 6
    a = b**2 + c**2 sqrt(- 2 * b * c * radians(cos(ang)))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:27:41) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 sqrt(- 2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- ERROR:
File "XXXX", line 6
    a = b**2 + c**2 sqrt(- 2 * b * c * radians(cos(ang)))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:27:51) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - sqrt(2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = b**2 + c**2 - sqrt(2 * b * c * radians(cos(ang)))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:28:03) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - sqrt(2 * b * c * radians(cos(ang)))

print(round(a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a = b**2 + c**2 - sqrt(2 * b * c * radians(cos(ang)))
ValueError: math domain error
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:28:14) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 -(2 * b * c * radians(cos(ang)))**0.5

print(round(a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(a, 2))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:28:21) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 -(2 * b * c * radians(cos(ang)))**0.5

print(round(a, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(a, 2))
TypeError: type complex doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:29:01) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)
print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:29:06) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)
print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:29:12) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)
print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:29:32) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = (a)**0.5
print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:29:39) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = (a)**0.5
print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:30:41) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
2.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:30:48) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- EXECUTION TIME:
0.107121
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
2.94
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
1.83
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:30:48) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**0.5 + c**0.5 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
2.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:31:46) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a/2)

print(round(resultado, 2))
-- OUTPUT:
9.13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:31:56) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a/2)

print(round(resultado, 2))
-- EXECUTION TIME:
0.181274
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
9.13
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
20.34
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:31:56) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a/2)

print(round(resultado, 2))
-- OUTPUT:
9.13
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:32:07) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a/0.5)

print(round(resultado, 2))
-- OUTPUT:
18.26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:32:15) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a/0.5)

print(round(resultado, 2))
-- OUTPUT:
18.26
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:32:48) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b + c - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
4.55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:32:54) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b + c - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
4.55
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:33:49) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - (2 * b * c * radians(cos(ang)))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:33:56) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - (2 * b * c * radians(cos(ang)))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:39:41) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**0.2 + c**0.2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:39:50) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**0.2 + c**0.2 - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
2.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:40:43) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b*b + c*c - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:40:50) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b*b + c*c - 2 * b * c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
12.91
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:42:53) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))


print(round(a, 2))
-- OUTPUT:
166.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:43:04) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))


print(round(a, 2))
-- EXECUTION TIME:
0.231096
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
166.66
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
827.38
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:43:04) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * radians(cos(ang))


print(round(a, 2))
-- OUTPUT:
166.66
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:43:36) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c // radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
98.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:43:43) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c // radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
98.94
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:44:31) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * 2*c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
13.01
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:44:40) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * 2*c * radians(cos(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- OUTPUT:
13.01
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:47:28) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * (cos(radians(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- ERROR:
File "XXXX", line 7
    resultado = sqrt(a)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:47:33) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * (cos(radians(ang))
resultado = sqrt(a)

print(round(resultado, 2))
-- ERROR:
File "XXXX", line 7
    resultado = sqrt(a)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 19:47:53) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * (cos(radians(ang)))
resultado = sqrt(a)
print(round(resultado, 2))
-- OUTPUT:
9.17
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 19:48:04) 
-- CODE:
b = float(input("digite o valor do lado b: "))
c = float(input("digite o valor do lado c: "))
ang = float(input("digite o angulo de alfa: "))

from math import *
a = b**2 + c**2 - 2 * b * c * (cos(radians(ang)))
resultado = sqrt(a)
print(round(resultado, 2))
-- EXECUTION TIME:
0.206594
-- TEST CASE 1:
---- input:
8
10
60
---- correct output:
9.17
---- user output:
9.17
-- TEST CASE 2:
---- input:
18.8
21.9
49.1
---- correct output:
17.14
---- user output:
17.14
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
