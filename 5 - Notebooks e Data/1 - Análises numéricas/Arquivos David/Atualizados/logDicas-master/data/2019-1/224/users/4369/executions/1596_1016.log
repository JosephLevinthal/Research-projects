== TEST (2019-03-23 01:02:40) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
var1 = int(input("Digite a: "))
var2 = int(input("Digite b: "))
var3 = int(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(x, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    var1 = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 01:03:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = int(input("Digite a: "))
b = int(input("Digite b: "))
c = int(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(x, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 01:03:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = int(input("Digite a: "))
b = int(input("Digite b: "))
c = int(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 01:03:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = int(input("Digite a: "))
b = int(input("Digite b: "))
c = int(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- EXECUTION TIME:
0.197791
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1016/main.py", line 5, in <module>
    a = int(input())
ValueError: invalid literal for int() with base 10: '11.0'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-23 01:04:27) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-23 01:04:34) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
from math import *
a = float(input("Digite a: "))
b = float(input("Digite b: "))
c = float(input("Digite c: "))
s = (a + b + c) / 2
A = sqrt(s*(s-a)*(s-b)*(s-c))
print(round(A, 5))
-- EXECUTION TIME:
0.121026
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
