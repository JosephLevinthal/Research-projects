== TEST (2019-04-09 18:21:55) 
-- CODE:
# dinheiro total
v_disp = int(input("digite seu saldo: "))
# para o RU
quant_ru = int(input("digite quantos tickets de ru ce quer: "))
# valor dos tickets do RU
v_ru = float(input("digite o valor do ticket do ru: "))
# para os passes de onibus
quant_p = int(input("digite quantos passes ce quer: "))
# valor dos passes
v_p = float(input("digite o valor do passe: "))
#################################
if v_disp > (quant_ru * v_ru) + (quant_P * v_p):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    if v_disp > (quant_ru * v_ru) + (quant_P * v_p):
NameError: name 'quant_P' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:22:25) 
-- CODE:
# dinheiro total
v_disp = int(input("digite seu saldo: "))
# para o RU
quant_ru = int(input("digite quantos tickets de ru ce quer: "))
# valor dos tickets do RU
v_ru = float(input("digite o valor do ticket do ru: "))
# para os passes de onibus
quant_p = int(input("digite quantos passes ce quer: "))
# valor dos passes
v_p = float(input("digite o valor do passe: "))
#################################
if v_disp > (quant_ru * v_ru) + (quant_p * v_p):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:22:37) 
-- CODE:
# dinheiro total
v_disp = int(input("digite seu saldo: "))
# para o RU
quant_ru = int(input("digite quantos tickets de ru ce quer: "))
# valor dos tickets do RU
v_ru = float(input("digite o valor do ticket do ru: "))
# para os passes de onibus
quant_p = int(input("digite quantos passes ce quer: "))
# valor dos passes
v_p = float(input("digite o valor do passe: "))
#################################
if v_disp > (quant_ru * v_ru) + (quant_p * v_p):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.146581
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
