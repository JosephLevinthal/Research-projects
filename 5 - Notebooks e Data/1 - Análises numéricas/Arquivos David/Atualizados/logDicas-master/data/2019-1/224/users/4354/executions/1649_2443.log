== SUBMITION (2019-04-05 22:22:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: ")
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(rount(volume_calota,2))
else :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,2))						 
	
							 
-- EXECUTION TIME:
0.197208
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 7
    opcao_de_calculo = int(input())
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:24:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: ")
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(rount(volume_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- ERROR:
File "XXXX", line 7
    opcao_de_calculo = int(input())
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: ")
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(rount(volume_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- ERROR:
File "XXXX", line 7
    opcao_de_calculo = int(input())
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:24:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(rount(volume_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(rount(volume_calota,2))
NameError: name 'rount' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:25:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(rount(volume_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(rount(volume_calota,2))
NameError: name 'rount' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:26:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- EXECUTION TIME:
0.154577
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2443/main.py", line 11, in <module>
    print(round(volume_calota,2))
NameError: name 'volume_calota' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:26:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- EXECUTION TIME:
0.137798
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
digite 1 ou 2
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:26:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	
else : 
	print("digite 1 ou 2")
	
							 
-- OUTPUT:
9.03
digite 1 ou 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:27:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	

	
							 
-- EXECUTION TIME:
0.187903
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:27:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * (altura_coluna) ** 2 * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:28:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:29:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))	

	
							 
-- EXECUTION TIME:
0.146022
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:30:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))
else :
	print("digite 1 ou 2 na opcao de calculo")

	
							 
-- OUTPUT:
9.03
digite 1 ou 2 na opcao de calculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:34:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:34:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.125083
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:35:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:36:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:36:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:36:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:37:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	volume_combustivel = volume_da_esfera - volume_da_calota
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:38:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.180512
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:39:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:39:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:40:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.196674
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:40:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = int(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = float((4 * pi * raio ** 3) / 3)
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:42:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = float((4 * pi * raio ** 3) / 3)
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.23403
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:42:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = float((4 * pi * raio ** 3) / 3)
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 22:42:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = float((4 * pi * raio ** 3) / 3)
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :	
	print(round(volume_combustivel,4))

	
							 
-- OUTPUT:
9.03
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:42:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = float((pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3) 
volume_da_esfera = float((4 * pi * raio ** 3) / 3)
volume_combustivel = float(volume_da_esfera - volume_da_calota)
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
else :	
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.170293
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:51:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,2))
if(opcao_de_calculo == 2) :
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.196564
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.03
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 22:51:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,4))
if(opcao_de_calculo == 2) :
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.217877
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 01:02:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio = float(input("digite o raio: "))
altura_coluna = float(input("digite a altura da coluna de ar: "))
opcao_de_calculo = float(input("digite a opcao de calculo 1 ou 2: "))
volume_da_calota = (pi * ((altura_coluna) ** 2) * (3 * raio - altura_coluna)) / 3 
volume_da_esfera = (4 * pi * raio ** 3) / 3
volume_combustivel = volume_da_esfera - volume_da_calota
if(opcao_de_calculo == 1) :
	print(round(volume_da_calota,4))
if(opcao_de_calculo == 2) :
	print(round(volume_combustivel,4))

	
							 
-- EXECUTION TIME:
0.132241
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
