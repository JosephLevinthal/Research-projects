== TEST (2019-04-10 11:09:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono")
-- OUTPUT:
nao_eleitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:12:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono")
if  nome = "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
-- ERROR:
File "XXXX", line 5
    if  nome = "cervo":
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:12:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
-- ERROR:
File "XXXX", line 5
    if  nome = "cervo":
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:12:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)
-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:13:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:14:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print ("mensagem")

-- OUTPUT:
mensagem
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:14:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:14:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
	print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:14:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
	print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:15:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
	print (mensagem)
else:
	mensagem = "nao eh patrono do harry potter"
	print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:15:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = input("digite o nome do patrono:")
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
	print (mensagem)
else:
	mensagem = "nao eh patrono do harry potter"


-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:15:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"


-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:16:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  nome == "cervo":
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)


-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:16:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)


-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:16:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)


-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:17:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:18:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:19:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = str(input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (nome,mensagem)

-- OUTPUT:
cervo cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:19:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (nome,mensagem)

-- OUTPUT:
cervo cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:20:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print (|nome|,|mensagem|)

-- ERROR:
File "XXXX", line 9
    print (|nome|,|mensagem|)
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:22:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print("nome:" , mensagem)

-- OUTPUT:
nome: cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:22:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("digite o nome do patrono:"))
if  (nome == "cervo"):
	mensagem = "cervo é patrono do harry potter"
else:
	mensagem = "nao eh patrono do harry potter"
print(mensagem)

-- OUTPUT:
cervo é patrono do harry potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:36:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:


-- ERROR:
File "XXXX", line 9
    
    ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:36:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
-- ERROR:
File "XXXX", line 8
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:36:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:39:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:39:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:39:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 11:39:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- EXECUTION TIME:
0.14627
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:39:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:39:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- OUTPUT:
cervo eh patrono do harry
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 11:42:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do harry")
else:
	print(nome , "nao eh patrono")

-- EXECUTION TIME:
0.181736
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do harry
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 11:44:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono")

-- EXECUTION TIME:
0.219528
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 11:44:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono do Harry Potter")

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 11:45:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono do Harry Potter")

-- EXECUTION TIME:
0.192606
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:05:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	mensasgem:"djhgkwj"
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono do Harry Potter")

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:05:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono do Harry Potter")

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:05:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
nome = (input("nome do patrono:"))
if  (nome == "cervo"):
	print("cervo eh patrono do Harry Potter")
else:
	print(nome , "nao eh patrono do Harry Potter")

-- EXECUTION TIME:
0.140269
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
