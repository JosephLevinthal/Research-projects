== SUBMITION (2019-04-11 18:33:47) 
-- CODE:
from math import *
velocidade_inicial = float(input("velocidade inicial: "))
angulo = radians(float(input("angulo de lancamento: ")))
distancia_porco = float(input("digite a distancia entre o passaro e o porco: "))
gravidade = 9.8
distancia = ((velocidade_inicial ** 2) * sin(2 * angulo)) / gravidade

if (distancia == distancia_porco) :
	print("sim")
if (abs(distancia_porco - distancia) <= 0.1) : 
	print("sim")
else :
	print("nao")
-- EXECUTION TIME:
0.153011
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
nao
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:34:06) 
-- CODE:
valor_disponivel = float(input("valor disponivel: "))
qtd_tickets = int(input("quantidade de tickets: "))
valor_ticket = float(input("valor do ticket "))
qtd_passe_onibus = int(input("quantidade dos passes: "))
valor_passes = float(input("valor do passe: "))

valor_total_ticket = valor_ticket * qtd_tickets
valor_total_passe = valor_passes * qtd_passe_onibus
if(valor_disponivel > valor_total_ticket + valor_total_passe) :
	print("SUFICIENTE")
else :
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.111669
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
