== TEST (2019-05-01 23:07:22) 
-- CODE:
a = input("tipo de instalacao")
b = int(input("consumo"))
print("Entradas:", b "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- ERROR:
File "XXXX", line 3
    print("Entradas:", b "kWh e tipo", a)
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:07:45) 
-- CODE:
a = input("tipo de instalacao")
b = int(input("consumo"))
print("Entradas:" b "kWh e tipo" a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- ERROR:
File "XXXX", line 3
    print("Entradas:" b "kWh e tipo" a)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:08:01) 
-- CODE:
a = input("tipo de instalacao")
b = int(input("consumo"))
print("Entradas:", b "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- ERROR:
File "XXXX", line 3
    print("Entradas:", b "kWh e tipo", a)
                                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:08:30) 
-- CODE:
a = input("tipo de instalacao")
b = int(input("consumo"))
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    b = int(input())
ValueError: invalid literal for int() with base 10: 'I'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:09:03) 
-- CODE:
b = int(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:09:37) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = b*0.40
	else:
		c = b*0.65
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = b*0.55
	else:
		c = b*0.60
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = b*0.55
	else:
		c = b*0.60
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:11:47) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = "Valor total", round(b*0.44, 2)
	else:
		c = "Valor total", round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = "Valor total", round(b*0.55, 2)
	else:
		c = "Valor total", round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = "Valor total", round(b*0.55, 2)
	else:
		c = "Valor total", round(b*0.60, 2)
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:13:52) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:14:12) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ("Valor total: R$", round(b*0.60, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- EXECUTION TIME:
0.180401
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
('Valor total: R$', 573.3)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:14:35) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ("Valor total: R$", round(b*0.44, 2))
	else:
		c = ("Valor total: R$", round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- EXECUTION TIME:
0.179824
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
Entradas: 955.5 kWh e tipo R
('Valor total: R$', 621.08)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:49) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ("Valor total: R$", round(b*0.44, 2))
	else:
		c = ("Valor total: R$", round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:14:54) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ("Valor total: R$", round(b*0.44, 2))
	else:
		c = ("Valor total: R$", round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ("Valor total: R$", round(b*0.55, 2))
	else:
		c = ("Valor total: R$", round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:17:07) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ('Valor total: R$', round(b*0.44, 2))
	else:
		c = ('Valor total: R$', round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- EXECUTION TIME:
0.230822
-- TEST CASE 1:
---- input:
-56
I
---- correct output:
Entradas: -56.0 kWh e tipo I
Dados invalidos
---- user output:
consumotipo de instalacaoEntradas: -56.0 kWh e tipo I
Dados invalidos
-- TEST CASE 2:
---- input:
955.5
R
---- correct output:
Entradas: 955.5 kWh e tipo R
Valor total: R$ 621.08
---- user output:
consumotipo de instalacaoEntradas: 955.5 kWh e tipo R
('Valor total: R$', 621.08)
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:17:08) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ('Valor total: R$', round(b*0.44, 2))
	else:
		c = ('Valor total: R$', round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:17:57) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = (Valor total: R$, round(b*0.44, 2))
	else:
		c = (Valor total: R$, round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = (Valor total: R$, round(b*0.55, 2))
	else:
		c = (Valor total: R$, round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = (Valor total: R$, round(b*0.55, 2))
	else:
		c = (Valor total: R$, round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- EXECUTION TIME:
0.193672
-- ERROR:
  File "/home/codebench/codes/1692/1101/main.py", line 8
    c = (Valor total: R$, round(b*0.44, 2))
                   ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:17:58) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = (Valor total: R$, round(b*0.44, 2))
	else:
		c = (Valor total: R$, round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = (Valor total: R$, round(b*0.55, 2))
	else:
		c = (Valor total: R$, round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = (Valor total: R$, round(b*0.55, 2))
	else:
		c = (Valor total: R$, round(b*0.60, 2))
else:
	c = "Dados invalidos"
print(c)	
		
-- ERROR:
File "XXXX", line 8
    c = (Valor total: R$, round(b*0.44, 2))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:24:53) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=500):
		c = ('Valor total: R$', round(b*0.44, 2))
	else:
		c = ('Valor total: R$', round(b*0.65, 2))
elif(a=="I"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=1000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
elif(a=="C"):
	if(b<0):
		c = "Dados invalidos"
	elif(b<=5000):
		c = ('Valor total: R$', round(b*0.55, 2))
	else:
		c = ('Valor total: R$', round(b*0.60, 2))
else:
	print("Dados invalidos")
print(c)	
		
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 23:26:47) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=500):
		c = round(b*0.44, 2)
	else:
		c = round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=1000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=5000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
else:
	print("Dados invalidos")
print("Valor total: R$", c)	
		
-- EXECUTION TIME:
0.199629
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1101/main.py", line 27, in <module>
    print("Valor total: R$", c)	
NameError: name 'c' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:26:49) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=500):
		c = round(b*0.44, 2)
	else:
		c = round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=1000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=5000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
else:
	print("Dados invalidos")
print("Valor total: R$", c)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 27, in <module>
    print("Valor total: R$", c)	
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:07) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=500):
		c = round(b*0.44, 2)
	else:
		c = round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=1000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=5000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
else:
	print("Dados invalidos")
print("Valor total: R$", c)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 27, in <module>
    print("Valor total: R$", c)	
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:10) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=500):
		c = round(b*0.44, 2)
	else:
		c = round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=1000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=5000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
else:
	print("Dados invalidos")
print("Valor total: R$", c)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 27, in <module>
    print("Valor total: R$", c)	
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 23:27:58) 
-- CODE:
b = float(input("consumo"))
a = input("tipo de instalacao")
print("Entradas:", b, "kWh e tipo", a)
if(a=="R"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=500):
		c = round(b*0.44, 2)
	else:
		c = round(b*0.65, 2)
elif(a=="I"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=1000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
elif(a=="C"):
	if(b<0):
		print("Dados invalidos")
	elif(b<=5000):
		c = round(b*0.55, 2)
	else:
		c = round(b*0.60, 2)
else:
	print("Dados invalidos")
print("Valor total: R$", c)	
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 27, in <module>
    print("Valor total: R$", c)	
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
