== TEST (2019-04-27 15:54:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if(h or r > H):
		print("Entradas:,H,h,r")
		print("Entradas invalidas")
	if(h or r<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:08) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:18) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:20) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):
		
	

-- ERROR:
File "XXXX", line 16
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:36) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	if((h or r)<= H):

-- ERROR:
File "XXXX", line 14
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:56:54) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 14
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:57:11) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 14
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-27 15:57:28) 
-- CODE:
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
if(H and h and r > 0):
	if((h or r) > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
-- ERROR:
File "XXXX", line 14
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:15:43) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
-- ERROR:
File "XXXX", line 22
    elif(r < h < (H-r):
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:17:25) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:17:59) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:18:17) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:18:37) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:18:48) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:19:04) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:19:47) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(V)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:20:00) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:24) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:25) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:25) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:25) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:27) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:21:28) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_se2 = (4/3*pi*r**3)/2 - v_ar
			
		elif(h == H):
			hc = h - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:29:44) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*R
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			print(v) 
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:32:31) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*R
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			print(v) 
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:33:23) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*R
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			print(v) 
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:35:41) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			print(v)
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			print(v)
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(v)
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			print(round(v*1000,3))
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*R
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			print(v) 
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			print(v)
-- OUTPUT:
81.98719067828401
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:39:51) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*R
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:40:16) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:42:59) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = round(v,3)
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- EXECUTION TIME:
0.125308
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
altura do tanque: nivel de combustivel do tanque: raio do bojo semiesferico: Entradas: 11.3 , 5.7 , 2.3
Volume: 81.987 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
altura do tanque: nivel de combustivel do tanque: raio do bojo semiesferico: Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
altura do tanque: nivel de combustivel do tanque: raio do bojo semiesferico: Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:44:21) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3) *1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.0 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:46:06) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3) *1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = round(v,3) * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- OUTPUT:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.0 litros
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:47:16) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = round(v,3) *1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",v,"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- EXECUTION TIME:
0.174284
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.0 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:47:40) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))

if(H and h and r > 0):
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v *1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- EXECUTION TIME:
0.119
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:58:27) 
-- CODE:
from math import *
# Teste todas as possibilidades de entradas 'H', 'h' e 'x'
# Se seu programa funciona para apenas um caso de tese, isso não quer dizer que ele vai funcionar para todos os outros
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
H = float(input("altura do tanque: "))
h = float(input("nivel de combustivel do tanque: "))
r = float(input("raio do bojo semiesferico: "))
# verificação se H,h e r são positivos
if(H and h and r > 0):
# verificação se 2*r é maior que H ou se h é maior que H (Caso de invalidez)
	if(2*r >= H or h > H):
		print("Entradas:",H,",",h,",",r)
		print("Entradas invalidas")
# se não forem é caso de validez
	else:
		if(h < r):
			v = (pi / 3 * h ** 2) * (3 * r - h)
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == r):
			v = (4/3 * pi * r ** 3)/2
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
# altura do combustível entre r e a altura (H - r, QUE É A ALTURA DO CILINDRO INTERMEDIARIO MAIS O RAIO DA SEMISESFERA INFEIROR)			
		elif(r < h < (H-r)):
			hc = h-r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v *1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == (H - r)):
			hc = h - r
			v = (4/3 * pi * r ** 3)/2 + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h > (H - r)):
			har = H - h
			hc = H - 2*r
			v_ar = (pi / 3 * har ** 2) * (3 * r - har)
			v_total = 4/3 * pi * r **3 + pi*r**2*hc
			v = v_total - v_ar
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		elif(h == H):
			hc = H - 2*r
			v = (4/3 * pi * r ** 3) + pi*r**2*hc
			v = v * 1000
			print("Entradas:",H,",",h,",",r)
			print("Volume:",round(v,3),"litros")
		else:
			print("Entradas:",H,",",h,",",r)
			print("Entradas invalidas")
else:
	print("Entradas:",H,",",h,",",r)
	print("Entradas invalidas")
			
-- EXECUTION TIME:
0.15582
-- TEST CASE 1:
---- input:
11.3
5.7
2.3
---- correct output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
---- user output:
Entradas: 11.3 , 5.7 , 2.3
Volume: 81987.191 litros
-- TEST CASE 2:
---- input:
8.5
9.5
2.2
---- correct output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
---- user output:
Entradas: 8.5 , 9.5 , 2.2
Entradas invalidas
-- TEST CASE 3:
---- input:
8
4
6
---- correct output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
---- user output:
Entradas: 8.0 , 4.0 , 6.0
Entradas invalidas
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
