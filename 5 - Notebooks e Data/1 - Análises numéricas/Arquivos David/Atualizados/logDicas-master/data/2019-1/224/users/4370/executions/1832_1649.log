== SUBMITION (2019-06-13 19:45:38) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split("","")
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.02639
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1832/1649/main.py", line 3, in <module>
    v=string.split("","")
TypeError: 'str' object cannot be interpreted as an integer

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:45:54) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split("","")
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:46:53) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.25076
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
7
[7 0 0 0 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
8
[8 0 0 0 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
7
[7 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:46:56) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:46:58) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:46:59) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.08696
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
7
[7 0 0 0 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
8
[8 0 0 0 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
digite: 7
[7 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:47:18) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[0]=cores[0]+1
	if(v[i]=="M"):
		cores[0]=cores[0]+1
	if(v[i]=="V"):
		cores[0]=cores[0]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
0.755319
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
7
[7 0 0 0 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
8
[8 0 0 0 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
7
[7 0 0 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:47:46) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.10406
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[2 2 0 3 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.54748
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[2 2 0 3 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:05) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:06) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
4.6351
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[2 2 0 3 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:08) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
6.06481
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:08) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
7.07769
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:10) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
7.8955
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:10) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
8.93604
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[3 2 1 2 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
4
[0 3 4 0 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
3
[2 2 0 3 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:48:10) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:15) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
4.16467
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[2 2 0 3 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
digite: 3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
digite: 4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:16) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
3.40765
-- TEST CASE 1:
---- input:
A,V,V,V,C,A,C,P,P,A
---- correct output:
3
[2 2 0 3 3]
---- user output:
3
[2 2 0 3 0]
-- TEST CASE 2:
---- input:
A,V,V,P,C,A,C,P,P,M
---- correct output:
3
[3 2 1 2 2]
---- user output:
digite: 3
[3 2 1 2 0]
-- TEST CASE 3:
---- input:
M,M,M,M,C,C,C,A,A,A
---- correct output:
4
[0 3 4 0 3]
---- user output:
digite: 4
[0 3 4 0 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:48:16) 
-- CODE:
from numpy import *
string=input("digite: ")
v=string.split(',')
cores=zeros(5,dtype=int)
for i in range(size(v)):
	if(v[i]=="P"):
		cores[0]=cores[0]+1
	if(v[i]=="C"):
		cores[1]=cores[1]+1
	if(v[i]=="M"):
		cores[2]=cores[2]+1
	if(v[i]=="V"):
		cores[3]=cores[3]+1
print(max(cores))
print(cores)
		
-- EXECUTION TIME:
1.76433
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1832/1649/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
