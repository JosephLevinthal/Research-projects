== TEST (2019-05-16 17:28:46) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(i/ factorial(k))+1
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i/ factorial(k))+1
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:08) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(i/ (factorial(k)))+1
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i/ (factorial(k)))+1
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:22) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(i)/ (factorial(k))+1
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+1
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:37) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(i)/ (factorial(k))+i
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:30:06) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/ (factorial(k))+i
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:30:17) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/ (factorial(k))+i
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:30:22) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/ (factorial(k))+i
	k=k+1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:02) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/ (factorial(k))+i
	k=k-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:15) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/(factorial(k))+i
	k=k-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:45) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/(factorial(k))+i
	k=k-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:50) 
-- CODE:
from math import *
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/(factorial(k))+i
	k=k-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:36:08) 
-- CODE:
from math import *
k=(1/factorial(1))+(1/factorial(2))+(1/factorial(3))+(1/factorial(4))
k=int(input("valor_inicial: "))

i=0
while(k>0):
	i=(1)/(factorial(k))+i
	k=k-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(i)/ (factorial(k))+i
OverflowError: int too large to convert to float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:39:18) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(k>0):
	i=(1)/(factorial(k))+i
	n=n-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    while(k>0):
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:39:30) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n>0):
	i=(1)/(factorial(k))+i
	n=n-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    i=(1)/(factorial(k))+i
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:39:40) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(k,8))
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:39:58) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(k,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(k,8))
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:08) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(k,8))
NameError: name 'k' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:28) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n<0):
	i=(1)/(factorial(n))+i
	n=n1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:33) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n<0):
	i=(1)/(factorial(n))+i
	n=n1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:44) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n<0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:48) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n<0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:40:52) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=0
while(n<0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:41:08) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n<0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:41:23) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n<0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:41:27) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n<0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:41:31) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n<0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- OUTPUT:
7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:41:34) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n<0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- EXECUTION TIME:
0.127795
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
7
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
15
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
6
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:42:17) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n>0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    n=n(-1/2)
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:42:33) 
-- CODE:
from math import *
n=float(input("valor_inicial: "))
i=1
while(n>0):
	i=(1)/(factorial(n))+i
	n=n(-1/2)
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    n=n(-1/2)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:42:50) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-1
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    n=n(-1/2)
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:43:24) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-i
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    i=(1)/(factorial(n))+i
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:43:47) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n>0):
	from math import *
	i=(1)/(factorial(n))+i
	n=n-i
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(1)/(factorial(n))+i
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:43:50) 
-- CODE:
from math import *
n=int(input("valor_inicial: "))
i=1
while(n>0):
	from math import *
	i=(1)/(factorial(n))+i
	n=n-i
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    i=(1)/(factorial(n))+i
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:45:43) 
-- CODE:
from math import factorial
n=int(input("valor_inicial: "))
i=1
while(n>0):
	i=(1)/(factorial(n))+i
	n=n-i
print(round(n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    i=(1)/(factorial(n))+i
ValueError: factorial() only accepts integral values
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
