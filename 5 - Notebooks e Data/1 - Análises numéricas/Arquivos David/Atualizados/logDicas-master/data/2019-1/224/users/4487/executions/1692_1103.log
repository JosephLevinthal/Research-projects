== SUBMITION (2019-04-30 18:42:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
if(b=="R"):
		if(a>500):
			c=a*0.65
			print("Valor total: R$ ",round(c,2))
		else:
		   c=a*0.44
		   print("Valor total: R$ ",round(c,2))
	elif(b=="C"):
		if(a>1000):
			c=a*0.60
			print("Valor total: R$ ",round(c,2))
		else:
		   c=a*0.55
		   print("Valor total: R$ ",round(c,2))
	elif(b=="I"):
	   if(a>5000):
		   c=a*0.60
		   print("Valor total: R$ ",round(c,2))
	   else:
		   c=a*0.55
		   print("Valor total: R$ ",round(c,2))
else:
	print("Dados invalidos")
-- EXECUTION TIME:
0.156564
-- ERROR:
  File "/home/codebench/codes/1692/1103/main.py", line 11
    elif(b=="C"):
                ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:42:43) 
-- CODE:
x=float(input("x:   "))
a=float(input("a:   "))
b=float(input("b:   "))
if(b>a):
	if(x<=b)and(x>=a):
		print(x,"pertence ao intervalo ",a,", ",b)
	else:
		print(x,"nao pertence ao intervalo ",a,", ",b)
else:
	print("Entradas ",a," e ",b," invalidas")
-- EXECUTION TIME:
0.192433
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo  3.0 ,  4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas  6.5  e  3.5  invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo  1.1 ,  22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
