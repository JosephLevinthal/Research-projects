== TEST (2019-04-06 23:59:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
r = ((Vi)**2) * (sin(2 * radians(ang))) / g 


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = ((Vi)**2) * (sin(2 * radians(ang))) / g 
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 00:00:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
r = (((Vi)**2) * (sin(2 * radians(ang))) / g)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (((Vi)**2) * (sin(2 * radians(ang))) / g)
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 00:01:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
r = (((Vi)**2) * (sin(2 * radians(ang))) / g)
print(r)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (((Vi)**2) * (sin(2 * radians(ang))) / g)
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 00:06:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
ang = radians(ang)
r = (((Vi)**2) * (sin(2 * ang)) / g)
print(r)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    r = (((Vi)**2) * (sin(2 * ang)) / g)
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 00:08:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
ang = radians(ang)
r = Vi**2 * sin(2 * ang / g
print(r)


-- ERROR:
File "XXXX", line 11
    print(r)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 00:08:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
ang = radians(ang)
r = Vi**2 * sin(2 * ang) / g
print(r)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    r = Vi**2 * sin(2 * ang) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 23:43:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
g = 9,8
ang = radians(ang)
r = Vi**2 * sin(2 * ang) / g
print(r)


-- EXECUTION TIME:
0.196506
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1055/main.py", line 10, in <module>
    r = Vi**2 * sin(2 * ang) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 23:44:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
ang = radians(ang)
r = Vi**2 * sin(2 * ang) / g
print(r)


-- EXECUTION TIME:
0.136529
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1055/main.py", line 11, in <module>
    r = Vi**2 * sin(2 * ang) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia: "))
from math import *
g = 9,8
r = (Vi**2 * sin(2 * radians(ang))) / g
print(r)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    r = (Vi**2 * sin(2 * radians(ang))) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:24:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9,8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
print(r)


-- OUTPUT:
110.23320839099213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:28:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
print(r)


-- OUTPUT:
110.23320839099213
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:32:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
if(abs(d - r < 0.1)):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:32:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
if(abs(d - r < 0.1)):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- EXECUTION TIME:
0.230343
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:33:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
if(abs(d - r) < 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- EXECUTION TIME:
0.138378
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
nao
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:33:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
if(abs(d - r) < 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:34:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad)
if(abs(d - r) < 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:41:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad) / g
if(abs(d - r) < 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:41:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
Vi = float(input("Digite a velocidade inicial: "))
ang = float(input("Digite o angulo: "))
d = float(input("Digite a distancia em metros: "))
from math import *
g = 9.8
rad = radians(ang)
r = (Vi)**2 * sin(2 * rad) / g
if(abs(d - r) < 0.1):
	mensagem = "sim"
	print(mensagem)
else:
	mensagem = "nao"
	print(mensagem)
	


-- EXECUTION TIME:
0.283191
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
