== SUBMITION (2019-05-14 20:13:39) 
-- CODE:
from math import factorial
n=int(input"digite n:")
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**c
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(e,8))
-- EXECUTION TIME:
0.137884
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 2
    n=int(input"digite n:")
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:13:41) 
-- CODE:
from math import factorial
n=int(input"digite n:")
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**c
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(e,8))
-- ERROR:
File "XXXX", line 2
    n=int(input"digite n:")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:14:01) 
-- CODE:
from math import 
n=int(input"digite n:")
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**c
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(soma,8))
-- ERROR:
File "XXXX", line 1
    from math import 
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:14:06) 
-- CODE:
from math import* 
n=int(input"digite n:")
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**c
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(soma,8))
-- ERROR:
File "XXXX", line 2
    n=int(input"digite n:")
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:14:31) 
-- CODE:
from math import* 
n=int(input("digite n:"))
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**c
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    sinal=(-1)**c
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:14:39) 
-- CODE:
from math import* 
n=int(input("digite n:"))
e=0
indice=1
soma=0
if(n==1):
	print(factorial(12))
else:
	while():
	sinal=(-1)**indice
   soma=soma+sinal*(1/factorial(indice))
indice=indice+1
print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    sinal=(-1)**indice
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:16:14) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
indice=0
soma=1
if(n==1):
	print(factorial(12))
else:
	while(indice<n):
	sinal=(-1)**indice
   soma=soma+sinal*(1/soma*(3**indice))
   indice=indice+1
   print(round(soma,8))
-- EXECUTION TIME:
0.143435
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 9
    sinal=(-1)**indice
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:16:15) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
indice=0
soma=1
if(n==1):
	print(factorial(12))
else:
	while(indice<n):
	sinal=(-1)**indice
   soma=soma+sinal*(1/soma*(3**indice))
   indice=indice+1
   print(round(soma,8))
-- EXECUTION TIME:
0.137769
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 9
    sinal=(-1)**indice
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:16:16) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
indice=0
soma=1
if(n==1):
	print(factorial(12))
else:
	while(indice<n):
	sinal=(-1)**indice
   soma=soma+sinal*(1/soma*(3**indice))
   indice=indice+1
   print(round(soma,8))
-- ERROR:
File "XXXX", line 9
    sinal=(-1)**indice
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:18:10) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
	sinal=(-1)**i
   soma=soma+sinal*(1/(v2(3**v1)))
	v1=v1+1
	v2=v2+2
   i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.138466
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 10
    sinal=(-1)**i
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:18:14) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
	sinal=(-1)**i
   soma=soma+sinal*(1/(v2(3**v1)))
	v1=v1+1
	v2=v2+2
   i=i+1
   print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    sinal=(-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:18:23) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
	sinal= (-1)**i
   soma=soma+sinal*(1/(v2(3**v1)))
	v1=v1+1
	v2=v2+2
   i=i+1
   print(round(soma,8))
-- ERROR:
File "XXXX", line 10
    sinal= (-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:18:25) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
	sinal= (-1)**i
   soma=soma+sinal*(1/(v2(3**v1)))
	v1=v1+1
	v2=v2+2
   i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.161217
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 10
    sinal= (-1)**i
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:19:08) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.199381
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 11
    soma=soma+sinal*(1/(v2(3**v1)))
                                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:19:37) 
-- CODE:
from math import factorial
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.154274
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 11
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:19:52) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.176025
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 11
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:20:08) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(soma,8))
-- EXECUTION TIME:
0.283679
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 12
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:20:39) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.207271
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 12
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:20:59) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.169642
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 12
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:21:22) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.145698
-- ERROR:
  File "/home/codebench/codes/1734/2502/main.py", line 12
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:21:35) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma+sinal*(1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- ERROR:
File "XXXX", line 12
    soma=soma+sinal*(1/(v2*(3**v1)))
                                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:22:28) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma + sinal* (1/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- ERROR:
File "XXXX", line 12
    soma=soma + sinal* (1/(v2*(3**v1)))
                                      ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:22:50) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
      soma=soma + sinal* ((1)/(v2*(3**v1)))
	   v1=v1+1
	   v2=v2+2
      i=i+1
   print(round(sqrt(12)*soma,8))
-- ERROR:
File "XXXX", line 12
    soma=soma + sinal* ((1)/(v2*(3**v1)))
                                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:23:30) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
		soma=soma + sinal* ((1)/(v2*(3**v1)))
		v1=v1+1
		v2=v2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:23:32) 
-- CODE:
from math import sqrt
n=int(input("digite n:"))
v1=0
v2=1
i=0
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal=(-1)**i
		soma=soma + sinal* ((1)/(v2*(3**v1)))
		v1=v1+1
		v2=v2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.166557
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
