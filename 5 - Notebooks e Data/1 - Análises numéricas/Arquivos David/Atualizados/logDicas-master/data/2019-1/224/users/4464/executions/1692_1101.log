== TEST (2019-04-25 15:24:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = input("qual teu cunsumu mouusa: ")

-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:28:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entradas:" , x ,"e", "tipo" , y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:28:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print("Entradas:" , x ,"e", "tipo" , y)
NameError: name 'y' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:28:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)

-- OUTPUT:
Entradas: -56 e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:31:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0):
elif (tipo /= "R" or "I" or "C")
	if 

-- ERROR:
File "XXXX", line 8
    elif (tipo /= "R" or "I" or "C")
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:31:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0):
elif (tipo /= "R" or "I" or "C"):
	if 

-- ERROR:
File "XXXX", line 8
    elif (tipo /= "R" or "I" or "C"):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:31:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0):
	elif (tipo /= "R" or "I" or "C"):
	if 

-- ERROR:
File "XXXX", line 8
    elif (tipo /= "R" or "I" or "C"):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:32:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0 or tipo /= "R" or "I" or "C"):
elif 
-- ERROR:
File "XXXX", line 7
    if (x > 0 or tipo /= "R" or "I" or "C"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:33:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0) or (tipo /= "R" or "I" or "C"):
elif 
-- ERROR:
File "XXXX", line 7
    if (x > 0) or (tipo /= "R" or "I" or "C"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:33:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0) or (tipo /= "R" or "I" or "C"):

-- ERROR:
File "XXXX", line 7
    if (x > 0) or (tipo /= "R" or "I" or "C"):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:33:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):

-- ERROR:
File "XXXX", line 8
    
                                              ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:39:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 500) and (tipo == "R") :
		f = x*0,44
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56 e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:40:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 500) and (tipo == "R") :
		f = x*0,44
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:40:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 500) and (tipo == "R") :
		f = x*0,44
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 500) and (tipo == "R") :
		f = x*0,44
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:42:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = (x*0,55)
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:42:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = (x * 0,55)
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:43:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = x * 0,55
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:43:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = x * 0,55
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:43:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = x * 0,55
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:44:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		f = x * 0,55
		print("Valor total: R$", f)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:47:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.44)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:47:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.44)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:48:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:48:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:49:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = int(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:49:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:49:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", x)

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:49:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", abs(x)

-- ERROR:
File "XXXX", line 12
    
                                     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:49:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", abs(x))

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:50:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", round(x,2)

-- ERROR:
File "XXXX", line 12
    
                                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 15:50:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", round(x,2))

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-26 13:12:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
x = float(input("qual teu cunsumu mouusa: "))
tipo = input("tipo da sua instalacion sinhor")
print("Entradas:" , x ,"kWh" ,"e", "tipo" , tipo)
if (x > 0) or (tipo != "R" or "I" or "C"):
	if (x <= 1000) and (tipo == "C") :
		x = (x * 0.55)
		print("Valor total: R$", round(x,2))

-- OUTPUT:
Entradas: -56.0 kWh e tipo I
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
