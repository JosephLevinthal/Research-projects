== TEST (2019-05-14 20:15:14) 
-- CODE:
from math import*
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(factorial(12))
else:
	while(i<n):
	sinal = (-1)**i
	soma=soma + sinal * (1 /(v2*(3**v1))) 
	i=i+1
print(round(factorial(12)*soma,8))


-- ERROR:
File "XXXX", line 11
    sinal = (-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:15:50) 
-- CODE:
from math import factorial
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(factorial(12))
else:
	while(i<n):
	sinal = (-1)**i
	soma=soma + sinal * (1 /(v2*(3**v1))) 
	i=i+1
print(round(factorial(12)*soma,8))


-- ERROR:
File "XXXX", line 11
    sinal = (-1)**i
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:16:04) 
-- CODE:
from math import factorial
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(factorial(12))
else:
	while(i<n):
		sinal = (-1)**i
		soma=soma + sinal * (1 /(v2*(3**v1))) 
		i=i+1
	print(round(factorial(12)*soma,8))


-- OUTPUT:
479001600.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:16:48) 
-- CODE:
from math import sqrt
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal = (-1)**i
		soma=soma + sinal * (1 /(v2*(3**v1))) 
		i=i+1
	print(round(sqrt(12)*soma,8))


-- OUTPUT:
3.46410162
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:17:13) 
-- CODE:
from math import sqrt
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal = (-1)**i
		soma=soma + sinal * (1 /(v2*(3**v1))) 
		i=i+1
	print(round(sqrt(12)*soma,8))


-- EXECUTION TIME:
0.144768
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.46410162
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.46410162
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
0.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 20:18:03) 
-- CODE:
from math import sqrt
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal = (-1)**i
		soma=soma + sinal * (1 /(v2*(3**v1))) 
		v1=v1+1
		v2=v2+2
		i=i+1
	print(round(sqrt(12)*soma,8))


-- OUTPUT:
3.1415933
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 20:18:20) 
-- CODE:
from math import sqrt
n=int(input("digite n: "))
v1=0
v2=1
i=0 #indice
soma=0
if(n==1):
	print(sqrt(12))
else:
	while(i<n):
		sinal = (-1)**i
		soma=soma + sinal * (1 /(v2*(3**v1))) 
		v1=v1+1
		v2=v2+2
		i=i+1
	print(round(sqrt(12)*soma,8))


-- EXECUTION TIME:
0.167769
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
