== SUBMITION (2019-04-07 21:50:06) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
x = (c * e - b * f) / (a * e - b * d)
y = (a * f - c * s) / (a * e - b * d) 
if(a * e - b * d == 0) :
	print("Nao tem solucao")
else :
	print(x)
	print(y)

-- EXECUTION TIME:
0.174414
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1650/2449/main.py", line 7, in <module>
    x = (c * e - b * f) / (a * e - b * d)
ZeroDivisionError: float division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:50:32) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
x = (c * e - b * f) / (a * e - b * d)
y = (a * f - c * s) / (a * e - b * d) 
if(a * e - b * d == 0) :
	print("Nao tem solucao")
else :
	print(x)
	print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = (c * e - b * f) / (a * e - b * d)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:50:40) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
x = (c * e - b * f) / (a * e - b * d)
y = (a * f - c * s) / (a * e - b * d) 
if(a * e - b * d == 0) :
	print("Nao tem solucao")
else :
	print(x)
	print(y)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    x = (c * e - b * f) / (a * e - b * d)
ZeroDivisionError: float division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:53:17) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * s) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 21:53:22) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * s) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- EXECUTION TIME:
0.136489
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:

-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:53:47) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * s) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:54:00) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * s) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:54:10) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * s) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:55:02) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:55:02) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:55:33) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 21:55:44) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- EXECUTION TIME:
0.173366
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 21:56:09) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- OUTPUT:
Nao tem solucao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 01:07:11) 
-- CODE:
a = float(input("digite a : "))
b = float(input("digite b : "))
c = float(input("digite c : "))
d = float(input("digite d : "))
e = float(input("digite e : "))
f = float(input("digite f : "))
if(a * e - b * d != 0) :
	x = (c * e - b * f) / (a * e - b * d)
	y = (a * f - c * d) / (a * e - b * d) 
	print(x)
	print(y)
else :
	print("Nao tem solucao")	

-- EXECUTION TIME:
0.197227
-- TEST CASE 1:
---- input:
10.0
10.0
12.0
10.0
10.0
12.0
---- correct output:
Nao tem solucao
---- user output:
Nao tem solucao
-- TEST CASE 2:
---- input:
1.0
8.0
12.0
16.0
22.0
30.0
---- correct output:
-0.22641509433962265
1.528301886792453
---- user output:
-0.22641509433962265
1.528301886792453
-- TEST CASE 3:
---- input:
24.0
48.0
52.0
112.0
16.0
1.0
---- correct output:
-0.15705128205128205
1.1618589743589745
---- user output:
-0.15705128205128205
1.1618589743589745
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
