== TEST (2019-05-02 09:39:57) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b :"))
c = float(input("lado c :"))

if a > (b + c) or b > (a + c) or c > (a + b):
	print "Não pode ser um triangulo"
elif (a == b == c):
	print "Equilatero"
elif (a == b or a == c or b == c):
	print "Isósceles"
else:
print "Escaleno"
-- ERROR:
File "XXXX", line 6
    print "Não pode ser um triangulo"
                                    ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print("Não pode ser um triangulo")?
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:40:56) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b :"))
c = float(input("lado c :"))

if a > (b + c) or b > (a + c) or c > (a + b):
	print ("Não pode ser um triangulo")

elif (a == b == c):
	print ("Equilatero")

elif (a == b or a == c or b == c):
	print ("Isósceles")

else:
print ("Escaleno")
-- ERROR:
File "XXXX", line 15
    print ("Escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:41:24) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b :"))
c = float(input("lado c :"))

if (a > (b + c) or b > (a + c) or c > (a + b)):
	print ("Não pode ser um triangulo")

elif (a == b == c):
	print ("Equilatero")

elif (a == b or a == c or b == c):
	print ("Isósceles")

else:
print ("Escaleno")
-- ERROR:
File "XXXX", line 15
    print ("Escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:41:28) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b :"))
c = float(input("lado c :"))

if (a > (b + c) or b > (a + c) or c > (a + b)):
	print ("Não pode ser um triangulo")

elif (a == b == c):
	print ("Equilatero")

elif (a == b or a == c or b == c):
	print ("Isósceles")

else:
print ("Escaleno")
-- ERROR:
File "XXXX", line 15
    print ("Escaleno")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:43:46) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b :"))
c = float(input("lado c :"))

if (a > (b + c) or b > (a + c) or c > (a + b)):
	print ("Não pode ser um triangulo")

elif (a == b == c):
	print ("Equilatero")

elif (a == b or a == c or b == c):
	print ("Isósceles")

else:
	print ("Escaleno")
-- OUTPUT:
Isósceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:46:16) 
-- CODE:
import sys

print("Digite valores nao-nulos e positivos.")

try: 

   a = float(input("Entre com a medida do lado 1 do triangulo: "))
   b = float(input("Entre com a medida do lado 2 do triangulo: "))
   c = float(input("Entre com a medida do lado 3 do triangulo: "))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if a<=0 or b<=0 or c<=0 :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if a>=b+c or b>=c+a or c>=a+b :
   print("Triangulo inexistente.")
   quit()

if a==b and b==c :
   print("Triangulo equilatero.")

elif a==b or b==c or c==a :
   print("Triangulo isosceles.")

else:
   print("Triangulo escaleno.")
-- OUTPUT:
Digite valores nao-nulos e positivos.
Triangulo isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:48:10) 
-- CODE:
import sys

print("Digite valores nao-nulos e positivos.")

try: 

   a = float(input("Entre com a medida do lado 1 do triangulo: "))
   b = float(input("Entre com a medida do lado 2 do triangulo: "))
   c = float(input("Entre com a medida do lado 3 do triangulo: "))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Digite valores nao-nulos e positivos.
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:49:04) 
-- CODE:
import sys

print("Digite valores nao-nulos e positivos.")

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Digite valores nao-nulos e positivos.
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:49:14) 
-- CODE:
import sys


try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:51:05) 
-- CODE:
import sys

print("Entradas:", a ',',b,',',c)

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 3
    print("Entradas:", a ',',b,',',c)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:51:38) 
-- CODE:
import sys

print("Entradas:", a , "," ,b, ",", c)

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print("Entradas:", a , "," ,b, ",", c)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:51:58) 
-- CODE:
import sys

print("Entradas:" a , "," ,b, ",", c)

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 3
    print("Entradas:" a , "," ,b, ",", c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:52:13) 
-- CODE:
import sys

print("Entradas:" a , "," ,b "," c)

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 3
    print("Entradas:" a , "," ,b "," c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:52:27) 
-- CODE:
import sys

print("Entradas:" a , b, c)

try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 3
    print("Entradas:" a , b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:52:45) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))
	
print("Entradas:" a , b, c)

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 11
    print("Entradas:" a , b, c)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:53:09) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)
	
print("Entradas:" a , b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 16
    print("Entradas:" a , b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:53:12) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)
	
print("Entradas:" a , b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 16
    print("Entradas:" a , b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:53:42) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:54:13) 
-- CODE:


   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))



if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
  

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 3
    a = float(input())
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:54:27) 
-- CODE:


a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))



if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
  

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:54:53) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:55:38) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 13
    if (a<=0 or b<=0 or c<=0) :
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:56:36) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)
	
	print("Entradas:"a,b,c)
   sys.exit(1)
	
if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 16
    print("Entradas:"a,b,c)
                          ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:56:45) 
-- CODE:
import sys



try: 

   a = float(input("lado a :"))
   b = float(input("lado b:"))
   c = float(input("lado c:"))

except ValueError:

   print("Digite somente numeros para as medidas 1, 2 e 3.")
   sys.exit(1)
	
print("Entradas:"a,b,c)
   sys.exit(1)
	
if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 16
    print("Entradas:"a,b,c)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:58:00) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:"a,b,c)
if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 5
    print("Entradas:"a,b,c)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:58:18) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:" a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 5
    print("Entradas:" a, b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:58:48) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))


if (a<=0 or b<=0 or c<=0) :
	print("Entradas:" a, b, c)
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 7
    print("Entradas:" a, b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:59:14) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))


if (a<=0 or b<=0 or c<=0) :
	print("Entradas:", a, b, c)
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- ERROR:
File "XXXX", line 8
    print("Lados nulos ou negativos nao sao aceitos.")
                                                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:59:36) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:00:06) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("Tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:00:32) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("Tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:00:46) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("Tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:01:11) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
   quit()

if (a>=b+c or b>=c+a or c>=a+b) :
   print("Tipo de triangulo: invalido")
   quit()

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- EXECUTION TIME:
0.156046
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
isosceles.
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
escaleno.
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 10:01:24) 
-- CODE:
a = float(input("lado a :"))
b = float(input("lado b:"))
c = float(input("lado c:"))

print("Entradas:", a, b, c)

if (a<=0 or b<=0 or c<=0) :
   print("Lados nulos ou negativos nao sao aceitos.")
  

if (a>=b+c or b>=c+a or c>=a+b) :
   print("Tipo de triangulo: invalido")
   

if (a==b and b==c) :
   print("equilatero.")

elif (a==b or b==c or c==a) :
   print("isosceles.")

else:
   print("escaleno.")
-- OUTPUT:
Entradas: 2.0 4.0 4.0
isosceles.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 10:12:48) 
-- CODE:
a=float(input("lado A: "))
b=float(input("lado B: "))
c=float(input("lado C: "))

print("Entradas: ",a,", ",b,", ",c)

if a<=0 or b<=0 or c<=0:
   print("Tipo de triangulo: invalido")
	
elif a+b<=c or b+c<=a or a+c<=b:
	print("Tipo de triangulo: invalido")
	
elif a==b and b==c and a==c:
   print("Tipo de triangulo: equilatero")

elif a==b or b==c or c==a:
   print("Tipo de triangulo: isosceles")

elif a!=b and b!=c and a!=c:
	print("Tipo de triangulo: escaleno")
	



-- EXECUTION TIME:
0.153784
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 ,  4.4 ,  5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 ,  2.0 ,  7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
