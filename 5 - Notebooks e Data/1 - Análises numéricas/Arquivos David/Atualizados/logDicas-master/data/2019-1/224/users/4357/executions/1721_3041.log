== TEST (2019-05-02 19:07:25) 
-- CODE:
x=float(input("digite o numero:"))
if(-(1/(x+2)),se-1000<=x<-2) or (1/(x-2), se 2<x<=1000):
	print(round(x,4))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 2
    if(-(1/(x+2)),se-1000<=x<-2) or (1/(x-2), se 2<x<=1000):
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:07:59) 
-- CODE:
x=float(input("digite o numero:"))
if(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000):
	print(round(x,4))
else:
	print("entrada invalida")
-- OUTPUT:
-999.99
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:09:38) 
-- CODE:
x=float(input("digite o numero:"))
if(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000):
	print(round("x",4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print(round("x",4))
TypeError: type str doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:12:18) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(,4))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    print(round(,4))
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:12:33) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex,4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex,4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:13:34) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(valordex)
else:
	print("entrada invalida")
-- OUTPUT:
(0.0010020140482369562, True)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:14:19) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex,4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex,4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:14:43) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex, 4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex, 4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:19:04) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex,4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex,4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:19:56) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(valordex,4)
else:
	print("entrada invalida")
-- OUTPUT:
(0.0010020140482369562, True) 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:20:32) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print((round(valordex, 4))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:20:42) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print((round(valordex, 4))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 5
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:20:57) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print((round(valordex, 4)))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print((round(valordex, 4)))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:34:02) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex, 4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex, 4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:35:31) 
-- CODE:
x=float(input("digite o numero:"))
valordex=(-(1/(x+2)),-1000<=x<-2) or (1/(x-2), 2<x<=1000)
if(valordex==valordex):
	print(round(valordex, 4))
else:
	print("entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    print(round(valordex, 4))
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:39:49) 
-- CODE:
x=float(input("digite o numero:"))
valordex=
if(x==-1000<=x<-2):
	print(-(1/(x+2))
elif(2<x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 2
    valordex=
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:40:00) 
-- CODE:
x=float(input("digite o numero:"))
if(x==-1000<=x<-2):
	print(-(1/(x+2))
elif(2<x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(2<x<=1000):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:40:57) 
-- CODE:
x=float(input("digite o numero:"))
if(x==-1000<=x<-2):
	print(-(1/(x+2))
else:
	mensagem=(2<x<=1000)	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:41:25) 
-- CODE:
x=float(input("digite o numero:"))
if(x==-1000<=x<-2):
	print(-(1/(x+2))
elif(x==2<x<=1000)	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x==2<x<=1000)	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:44:03) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x <-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000)	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000)	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:44:32) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000)	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000)	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:44:43) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:44:49) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:45:20) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:45:39) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):	
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):	
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:46:27) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 19:46:30) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):
	print(1/(x-2)
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.191023
-- ERROR:
  File "/home/codebench/codes/1721/3041/main.py", line 4
    elif(x>2 and x<=1000):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:46:33) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):
	print(1/(x-2)
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:15) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2))
elif(x>2 and x<=1000):
	print(1/(x-2))
else:
	print("entrada invalida")
-- ERROR:
File "XXXX", line 4
    elif(x>2 and x<=1000):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:35) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	print(-(1/(x+2)))
elif(x>2 and x<=1000):
	print(1/(x-2))
else:
	print("entrada invalida")
-- OUTPUT:
0.0010020140482369562
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:50:01) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	f=round(-(1/(x+2)),4)
	print(f)
elif(x>2 and x<=1000):
	f=round((1/(x-2)),4)
	print(f)
else:
	print("entrada invalida")
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 19:50:14) 
-- CODE:
x=float(input("digite o numero:"))
if(x>=-1000 and x<-2):
	f=round(-(1/(x+2)),4)
	print(f)
elif(x>2 and x<=1000):
	f=round((1/(x-2)),4)
	print(f)
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.21035
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
