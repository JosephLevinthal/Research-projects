== TEST (2019-04-23 20:34:44) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x=y)and(y=z)):
	print("Tipo de triangulo: equilatero")
	elif((x=y)or(y=z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    elif((x=y)and(y=z)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:35:10) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x=y)and(y=z)):
	print("Tipo de triangulo: equilatero")
	elif((x=y)or(y=z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    elif((x=y)and(y=z)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:36:18) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif(y=x or y=z):
	print("Tipo de triangulo: equilatero")
	elif((x=y)or(y=z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 7
    elif(y=x or y=z):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:37:21) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x=y)or(z=y)or(x=z):
	print("Tipo de triangulo: equilatero")
	elif((x=y)or(y=z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 8
    if(x=y)or(z=y)or(x=z):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:37:41) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if((x=y)or(z=y)or(x=z)):
	print("Tipo de triangulo: equilatero")
	elif((x=y)or(y=z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 8
    if((x=y)or(z=y)or(x=z)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:38:05) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	print("x")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
x
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:38:21) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x>y):
		print("asa")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:38:34) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x>y)and(x<y):
		print("asa")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:38:48) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif(x>y)and(x<y):
		print("asa")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:38:59) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif(x=y)and(x<y):
		print("asa")

-- ERROR:
File "XXXX", line 7
    elif(x=y)and(x<y):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:39:12) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif(x = y)and(x<y):
		print("asa")

-- ERROR:
File "XXXX", line 7
    elif(x = y)and(x<y):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:39:25) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x=y):
		print("asa")

-- ERROR:
File "XXXX", line 8
    if(x=y):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:40:57) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x=y):
		print("asa")

-- ERROR:
File "XXXX", line 8
    if(x=y):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:41:11) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
	if(x==y):
		print("asa")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:42:02) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	print("Tipo de triangulo: equilatero")
	elif((x==y)or(y==z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((x==y)or(y==z)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:42:45) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	print("Tipo de triangulo: equilatero")
	elif((y==x)or(x==z)):
		print("Tipo de triangulo: isosceles")
		else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((y==x)or(x==z)):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:43:19) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	print("Tipo de triangulo: equilatero")
	 elif((y==x)or(x==z)):
		print("Tipo de triangulo: isosceles")
		 else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((y==x)or(x==z)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:43:35) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	 print("Tipo de triangulo: equilatero")
	elif((y==x)or(x==z)):
		print("Tipo de triangulo: isosceles")
	else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((y==x)or(x==z)):
                        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:43:59) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	 print("Tipo de triangulo: equilatero")
	   elif((y==x)or(x==z)):
		   print("Tipo de triangulo: isosceles")
	   else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((y==x)or(x==z)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:50:27) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	 print("Tipo de triangulo: equilatero")
	   elif((y==x)or(x==z)):
		   print("Tipo de triangulo: isosceles")
	   else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif((y==x)or(x==z)):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:51:10) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	 print("Tipo de triangulo: equilatero")
	   elif(y==x)or(x==z):
		   print("Tipo de triangulo: isosceles")
	   else:
			print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    elif(y==x)or(x==z):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:52:09) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
elif((x==y)and(y==z)):
	 print("Tipo de triangulo: equilatero")
	   else:
			if(y==x)or(x==z):
		      print("Tipo de triangulo: isosceles")
	      else:
			   print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 9
    else:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:53:05) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		if(y==x)or(x==z):
		      print("Tipo de triangulo: isosceles")
	   else:
			   print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 11
    if(y==x)or(x==z):
                    ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:53:23) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		   if(y==x)or(x==z):
		       print("Tipo de triangulo: isosceles")
	      else:
			    print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:53:43) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		   if(y==x)or(x==z):
		       print("Tipo de triangulo: isosceles")
	         else:
			      print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:53:57) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		   if(y==x)or(x==z):
		       print("Tipo de triangulo: isosceles")
	      else:
			      print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:54:11) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		   if(y==x)or(x==z):
		       print("Tipo de triangulo: isosceles")
	            else:
			      print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:57:06) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		   if(y==x)or(x==z)or(y==z):
		       print("Tipo de triangulo: isosceles")
	            else:
			      print("Tipo de triangulo: escaleno")
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:57:22) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		  if(y==x)or(x==z)or(y==z):
		       print("Tipo de triangulo: isosceles")
	            
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:57:53) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
		  if(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
			else:
				print("s")
				
-- ERROR:
File "XXXX", line 13
    else:
        ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:58:10) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
		else:
			print("s")
				
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:58:51) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
else:
	print("ajsjas")	
				
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:59:11) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   else:
	   if(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
      else:
	      print("ajsjas")	
				
-- ERROR:
File "XXXX", line 13
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:59:22) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
      else:
	      print("ajsjas")	
				
-- ERROR:
File "XXXX", line 12
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:59:36) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
   else:
	     print("ajsjas")	
				
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 20:59:56) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>y+z)or(y>z+x)or(z>y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
   else:
	     print("Tipo de triangulo: escaleno")	
				
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:00:24) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>=y+z)or(y>=z+x)or(z>=y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
   else:
	     print("Tipo de triangulo: escaleno")	
				
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 21:00:34) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>=y+z)or(y>=z+x)or(z>=y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
   else:
	     print("Tipo de triangulo: escaleno")	
				
-- EXECUTION TIME:
0.151406
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 01:26:58) 
-- CODE:
x=float(input("Digite o lado a: "))
y=float(input("Digite o lado b: "))
z=float(input("Digite o lado c: "))
print("Entradas:",x,",",y,",",z)
if((x>=y+z)or(y>=z+x)or(z>=y+x))or((x<0)or(y<0)or(z<0)):
	print("Tipo de triangulo: invalido")
else:
   if((x==y)and(y==z)):
	   print("Tipo de triangulo: equilatero")
   elif(y==x)or(x==z)or(y==z):
		   print("Tipo de triangulo: isosceles")
   else:
	     print("Tipo de triangulo: escaleno")	
				
-- EXECUTION TIME:
0.141998
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
