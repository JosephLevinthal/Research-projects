== TEST (2019-05-01 03:30:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo a, b")
-- OUTPUT:
Entradas: -56.0 kWh e tipo I
Entradas: -56.0 kWh e tipo I
Dados invalidos
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:31:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo a, b")
else:
	print(x, "nao pertence ao intervalo a, b")
-- OUTPUT:
2.0 nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:33:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo", a, ",", b)
else:
	print(x, "nao pertence ao intervalo a, b")
-- OUTPUT:
2.0 nao pertence ao intervalo a, b
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo", a, ",", b)
else:
	print(x, "nao pertence ao intervalo", a, ",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:36:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 03:36:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 03:36:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x = float(input("Digite o numero x: "))
a = float(input("Digite o numero a: "))
b = float(input("Digite o numero b: "))

if(a <= x <= b):
	print(x, "pertence ao intervalo", a, ",", b)
elif(b <= a):
	print("Entradas", a, "e", b, "invalidas")
else:
	print(x, "nao pertence ao intervalo", a, ",", b)
-- EXECUTION TIME:
0.16996
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
