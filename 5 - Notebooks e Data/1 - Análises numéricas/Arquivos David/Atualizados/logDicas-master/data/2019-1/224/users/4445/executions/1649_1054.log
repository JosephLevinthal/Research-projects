== SUBMITION (2019-04-16 17:56:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:")
b=int(input("digite a coordenada de y"))
eq= (2*a + b)
inf(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
-- EXECUTION TIME:
0.157126
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 5
    b=int(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:56:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:")
b=int(input("digite a coordenada de y"))
eq= (2*a + b)
inf(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.162298
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 5
    b=int(input())
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:56:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:")
b=int(input("digite a coordenada de y"))
eq= (2*a + b)
inf(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- ERROR:
File "XXXX", line 5
    b=int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:57:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
inf(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.151393
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 7
    inf(eq == 3):
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:57:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
inf(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- ERROR:
File "XXXX", line 7
    inf(eq == 3):
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:58:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.176724
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:58:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:58:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:58:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.178714
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:58:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 17:58:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:58:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.169637
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 17:59:09) 
-- CODE:
a=int(input("digite a coordenada de x:"))
b=int(input("digite a coordenada de y:"))
eq= (2*a + b)
if(eq == 3):
	msg="ponto nao pertence a reta"
else:
	msg="ponto nao pertence a reta"
print(msg)
		
-- EXECUTION TIME:
0.163907
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
