== TEST (2019-05-16 08:44:50) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:45:08) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*n,8))
-- EXECUTION TIME:
0.175206
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2502/main.py", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:45:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:47:00) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
print(round(sqrt(12)*n,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:47:42) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*(n,8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:47:57) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*(n,8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(1/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:48:19) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(2/(n1*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*(n,8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    n= n+sinal*(2/(n1*(3**n1)))
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:49:13) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
n=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		n= n+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*(n,8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    print(round(sqrt(12)*(n,8)))
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:24) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*(soma,8)))
-- EXECUTION TIME:
0.21744
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2502/main.py", line 16, in <module>
    print(round(sqrt(12)*(soma,8)))
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:44) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.189281
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372985
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.34372984
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.197171
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372985
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.34372985
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.311714
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372985
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.34372984
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.48734
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372985
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.564097
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372985
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.34372985
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.524365
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372984
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.547628
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.34372985
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.34372984
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:51:48) 
-- CODE:
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
from math import sqrt
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.340132
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1734/2502/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:52:23) 
-- CODE:
from math import sqrt
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- OUTPUT:
3.34372985
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:52:45) 
-- CODE:
from math import sqrt
npi=int(input("digite o numero:"))
i=0
soma=0
n1=0
n2=1
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(n2*(3**n1)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- OUTPUT:
3.34372985
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:54:06) 
-- CODE:
from math import sqrt
npi=int(input("digite o numero:"))
a=0
b=1
i=0
soma=0
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(b*(3**a)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    n1=n1+2
NameError: name 'n1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 08:54:25) 
-- CODE:
from math import sqrt
npi=int(input("digite o numero:"))
a=0
b=1
i=0
soma=0
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(b*(3**a)))
		n1=n1+2
		n2=n2+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    n1=n1+2
NameError: name 'n1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 08:55:04) 
-- CODE:
from math import sqrt
npi=int(input("digite o numero:"))
a=0
b=1
i=0
soma=0
if(npi==1):
	print(sqrt(12))
else:
	while(i<npi):
		sinal=(-1)**i
		soma= soma+sinal*(1/(b*(3**a)))
		a=a+1
		b=b+2
		i=i+1
	print(round(sqrt(12)*soma,8))
-- EXECUTION TIME:
0.164024
-- TEST CASE 1:
---- input:
11
---- correct output:
3.1415933
---- user output:
3.1415933
-- TEST CASE 2:
---- input:
15
---- correct output:
3.14159266
---- user output:
3.14159266
-- TEST CASE 3:
---- input:
8
---- correct output:
3.14156872
---- user output:
3.14156872
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
