== TEST (2019-04-04 19:13:57) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra" ,nome_obj * n_repeticoes)
-- OUTPUT:
Abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:14:19) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra" ,nome_obj * n_repeticoes)
-- EXECUTION TIME:
0.161087
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livrolivrolivrolivrolivrolivrolivrolivro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carrocarro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:14:57) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra" ,nome_obj)* n_repeticoes)
-- OUTPUT:
('Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro', 'Abra', 'livro')
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:17:45) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra ",nome_obj)
-- OUTPUT:
Abra  livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:18:11) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra",nome_obj)
-- OUTPUT:
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:18:41) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra",nome_obj) * n_repeticoes
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    print("Abra",nome_obj) * n_repeticoes
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:23:57) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = n_repeticoes + 1
while (n_repeticoes < i) :
	print("Abra",nome_obj)
	
	

-- OUTPUT:
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:25:17) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = n_repeticoes + 1
while (n_repeticoes < i) :
	print("Abra",nome_obj)
	n_repeticoes = n_repeticoes + 1
	

-- OUTPUT:
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:32:37) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = 0
while (i < n_repeticoes) :
	print("Abra",nome_obj)
	i = i + 1
	

-- OUTPUT:
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:32:55) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = 0
while (i < n_repeticoes) :
	print("Abra",nome_obj)
	i = i + 1
	

-- OUTPUT:
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:33:31) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = 0
while (i < n_repeticoes) :
	print("Abra",nome_obj)
	i = i + 1
	

-- EXECUTION TIME:
0.152408
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro
Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:35:53) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
i = 0
while (i < n_repeticoes) :
	print("Abra",nome_obj)
	i = i + 1
	

-- OUTPUT:
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:38:18) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print("Abra", nome_obj * n_repeticoes)
-- OUTPUT:
Abra livrolivrolivrolivrolivrolivrolivrolivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:39:29) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra"+nome_obj)* n_repeticoes)
-- OUTPUT:
AbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivroAbralivro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:39:47) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra "+nome_obj)* n_repeticoes)
-- OUTPUT:
Abra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:39:54) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra "+nome_obj)* n_repeticoes)
-- EXECUTION TIME:
0.213903
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carroAbra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:40:02) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra "+nome_obj)* n_repeticoes)
-- OUTPUT:
Abra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livroAbra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:40:34) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra "+nome_obj+" ")* n_repeticoes)
-- OUTPUT:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:40:46) 
-- CODE:
nome_obj = input("digite o nome:")
n_repeticoes = int(input("digite o numero de repeticoes: "))
print(("Abra "+nome_obj+" ")* n_repeticoes)
-- EXECUTION TIME:
0.160101
-- TEST CASE 1:
---- input:
livro
8
---- correct output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
---- user output:
Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro Abra livro
-- TEST CASE 2:
---- input:
carro
2
---- correct output:
Abra carro Abra carro
---- user output:
Abra carro Abra carro
-- TEST CASE 3:
---- input:
caixa
1
---- correct output:
Abra caixa
---- user output:
Abra caixa
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
