== TEST (2019-05-02 18:02:11) 
-- CODE:
x=input("Digite o ataque: ").upper()
print(x)
-- OUTPUT:
TOQUE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:04:08) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if(y=!1)and(y=!2)
-- ERROR:
File "XXXX", line 4
    if(y=!1)and(y=!2)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:04:24) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if(y!=1)and(y!=2)
-- ERROR:
File "XXXX", line 4
    if(y!=1)and(y!=2)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:04:27) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if(y!=1)and(y!=2)
-- ERROR:
File "XXXX", line 4
    if(y!=1)and(y!=2)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:04:29) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if(y!=1)and(y!=2):
-- ERROR:
File "XXXX", line 5
    
                      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:04:35) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if(y!=1)and(y!=2):
	print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:06:02) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)and(y>8))or((z<1)and(z>8)):
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:06:28) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:09:22) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    print(s)
NameError: name 's' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:09:47) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
print(h)	
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:09:54) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
print(h)	
-- EXECUTION TIME:
0.189598
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
13
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:09:59) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
print(h)	
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:10:06) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
print(h)	
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:10:50) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
print(h)	
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:11:11) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
   print(h)	
-- ERROR:
File "XXXX", line 14
    print(h)	
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:11:20) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	 print(h)
elif(x=="GRITO"):
	h=6+y+z
	 print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
    print(h)	
-- ERROR:
File "XXXX", line 8
    print(h)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:12:06) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
	g=1
if(g!=1):
	g=0
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
   
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(g!=1):
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:12:33) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
	g=1
if(g!=1):
	g=0
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
	
if(g==1):
	print(h)
   
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(g!=1):
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:13:09) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
	g=1
if(g==1):
	g=0
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
	
if(g!=1):
	print(h)
   
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(g==1):
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:14:05) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:14:11) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- EXECUTION TIME:
0.147682
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
13
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:14:17) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:14:26) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:14:31) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:15:13) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA"))
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- ERROR:
File "XXXX", line 5
    if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA"))
                                                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:15:17) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:15:20) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
g=0
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- EXECUTION TIME:
0.200459
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
Entrada invalida
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
Entrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:22:47) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	g=1
elif(x=="GRITO"):
	h=6+y+z
	g=1
elif(x=="TOQUE"):
	h=(y+z)**2
	g=1
	
if(g==1):
	print(h)
   
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 16, in <module>
    if(g==1):
NameError: name 'g' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:23:22) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:31) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
elif(x=="TOQUE"):
	h=(y+z)**2
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:35) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:44) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:24:51) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- EXECUTION TIME:
0.170423
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
Entrada invalida
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
Entrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:54) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:20) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:26:08) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8))or(x!="TOQUE")or(x!="GRITO")or(x!=("FURIA")):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:26:31) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- ERROR:
File "XXXX", line 4
    if((y<1)or(y>8))or((z<1)or(z>8):
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:26:36) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:27:31) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x!="FURIA")and(x!="GRITO")and(x!="TOQUE"):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- OUTPUT:
100
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:27:37) 
-- CODE:
x=input("Digite o ataque: ").upper()
y=int(input("Digite o  valor do dado sorteador :"))
z=int(input("Digite o valor do outro dado: "))
if((y<1)or(y>8))or((z<1)or(z>8)):
	print("Entrada invalida")
elif(x!="FURIA")and(x!="GRITO")and(x!="TOQUE"):
	print("Entrada invalida")
elif(x=="FURIA"):
	h=10+y+z
	print(h)
elif(x=="GRITO"):
	h=6+y+z
	print(h)
elif(x=="TOQUE"):
	h=(y+z)**2
	print(h)
	

   
-- EXECUTION TIME:
0.112378
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
13
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:32:55) 
-- CODE:
x=input("Digite o tipo do ataque: ")
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:06) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:13) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:34) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:45) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:50) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:53) 
-- CODE:
x=input("Digite o tipo do ataque: ").upper()
y=int(input("Digite o valor de um dado: "))
z=int(input("Digite o numero de turnos da magia: "))
if(y<1)or(y>4):
	print("Entrada invalida")
elif(x!="CAUDA")and(x!="CUSPE")and(x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
Entrada invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:49:57) 
-- CODE:
from math import*
x=float(input("Digite o valor em graus: "))
if((x>=-1)and(x<-1/2))or((x>1/2)and(x<=1)):
	z=radians(x)
	h=asin(z)
	print(h)
	
if(x<-1000)or(x>1000):
	print("Entrada invalida")
elif(x>=-1000)and(x<-2):
	print(-1/x+2)
elif(x>2)and(x<=1000):
	print(1/x-2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    x=float(input())
ValueError: could not convert string to float: 'TOQUE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
