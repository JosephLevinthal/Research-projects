== TEST (2019-04-25 18:38:22) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
elif(a=b or c=b):
	print("escaleno")
elif("isocles")
else: 
	print(Tipo de triangulo: invalido)
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:40:28) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
elif(a=b or c=b):
	print("escaleno")
elif("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 18:42:24) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
elif(a=b or c=b):
	print("escaleno")
elif(a!=b and c!=b and a!=c)
	print("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.148451
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:42:26) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
elif(a=b or c=b):
	print("escaleno")
elif(a!=b and c!=b and a!=c)
	print("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:43:40) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
	if(a=b or c=b):
	print("escaleno")
	else(a!=b and c!=b and a!=c)
	print("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:43:41) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))

if(a=b and b=c and c=a):
	print("equilatero")
	if(a=b or c=b):
	print("escaleno")
	else(a!=b and c!=b and a!=c)
	print("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:46:08) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))
if(a<c+b or b<c+a or c<a+b )
	if(a=b and b=c and c=a):
		print("equilatero")
		if(a=b or c=b):
			print("escaleno")
		else(a!=b and c!=b and a!=c)
			print("isocles")
else: 
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 4
    if(a<c+b or b<c+a or c<a+b )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:52:42) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))
if(a<c+b or b<c+a or c<a+b )
	if(a=b and b=c and c=a):
		print("equilatero")
	else:	
		if(a=b or c=b):
			print("isoceles")
	else(a!=b and c!=a and b!=c)
			print("escaleno")
else: 
	print("Tipo de triangulo: invalido") 
-- ERROR:
File "XXXX", line 4
    if(a<c+b or b<c+a or c<a+b )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:52:57) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))
if(a<c+b or b<c+a or c<a+b)
	if(a=b and b=c and c=a):
		print("equilatero")
	else:	
		if(a=b or c=b):
			print("isoceles")
	else(a!=b and c!=a and b!=c)
			print("escaleno")
else: 
	print("Tipo de triangulo: invalido") 
-- ERROR:
File "XXXX", line 4
    if(a<c+b or b<c+a or c<a+b)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:52:58) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))
if(a<c+b or b<c+a or c<a+b)
	if(a=b and b=c and c=a):
		print("equilatero")
	else:	
		if(a=b or c=b):
			print("isoceles")
	else(a!=b and c!=a and b!=c)
			print("escaleno")
else: 
	print("Tipo de triangulo: invalido") 
-- ERROR:
File "XXXX", line 4
    if(a<c+b or b<c+a or c<a+b)
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:53:04) 
-- CODE:
a = int(input ("Lado 1: "))
b = int(input ("Lado 2: "))
c = int(input ("Lado 3: "))
if(a<c+b or b<c+a or c<a+b):
	if(a=b and b=c and c=a):
		print("equilatero")
	else:	
		if(a=b or c=b):
			print("isoceles")
	else(a!=b and c!=a and b!=c)
			print("escaleno")
else: 
	print("Tipo de triangulo: invalido") 
-- ERROR:
File "XXXX", line 5
    if(a=b and b=c and c=a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-25 18:56:17) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
		print("equilatero")
else:
print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.175138
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 11
    print("equilatero")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 18:56:20) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
		print("equilatero")
else:
print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    print("equilatero")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:02:41) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if(a=b=c)
		print("equilatero")	
	else:
		if((a=b) or(c=b))
			print("escaleno")
			else:
				print("isoceles")
else:
print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if(a=b=c)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:03:08) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b))
		print("equilatero")	
	else:
		if((a=b) or(c=b))
			print("escaleno")
			else:
				print("isoceles")
else:
print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:04:19) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b))
		print("equilatero")	
	else:
		if((a=b) or(c=b))
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:04:27) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b))
		print("equilatero")	
	else:
		if((a=b) or(c=b))
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b))
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:04:50) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:04:51) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:05:30) 
-- CODE:
x = int(input("Lado x: "))
y = int(input("Lado y: "))
z = int(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:05:32) 
-- CODE:
x = int(input("Lado x: "))
y = int(input("Lado y: "))
z = int(input("Lado z: "))
if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 5
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:06:45) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 8
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-25 19:06:52) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((a+b) and (c=b)):
		print("equilatero")	
	else:
		if((a=b) or(c=b)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 8
    if((a+b) and (c=b)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:24:35) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((x+y) and (y=z)):
		print("equilatero")	
	else:
		if((x=y) or(z=y)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 8
    if((x+y) and (y=z)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:31:00) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((x+y) and (y=z)):
		print("equilatero")	
	else:
		if((x=y) or(z=y)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 8
    if((x+y) and (y=z)):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:31:21) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if((x+y) or (y=z)):
		print("equilatero")	
	else:
		if((x=y) or(z=y)):
			print("escaleno")
			else:
				print("isoceles")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 8
    if((x+y) or (y=z)):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:34:44) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
	else:
		print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:34:46) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
	else:
		print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:36:28) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 00:36:49) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.139201
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:36:59) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 00:37:23) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) and (y != z) and (z != x)):
		print("escaleno")
	else:
		if ((x != y) or (y != z)):
			print("isosceles")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.152737
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:38:59) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 00:39:05) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.11997
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
isosceles
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:40:35) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z)>0) and ((y < x + z)>0) and ((z < y + x)>0):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z)>0) and ((y < x + z)>0) and ((z < y + x)>0):
                                                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:40:59) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z)>0) or ((y < x + z)>0) and ((z < y + x)>0):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z)>0) or ((y < x + z)>0) and ((z < y + x)>0):
                                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:45:13) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:45:14) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:45:14) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:45:15) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 6
    if (((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 00:45:33) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 00:45:40) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.20815
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
isosceles
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 01:00:17) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 01:00:33) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.185754
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
equilatero
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
isosceles
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:14:38) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
	else:	
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 15:14:46) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x != y) or (y != z)):
		print("isosceles")
	else:	
		if ((x != y) and (y != z) and (z != x)):
			print("escaleno")
		else:
			print("equilatero")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.142553
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
isosceles
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:20:57) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if((x=y) and (y=z)):
		print("equilatero")
	else:
		if((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if((x=y) and (y=z)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:21:27) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if(x=y) and (y=z):
		print("equilatero")
	else:
		if((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if(x=y) and (y=z):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:23:48) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if((x=y) and (y=z)):
		print("equilatero")
	else:
		if((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if((x=y) and (y=z)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:23:50) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if((x=y) and (y=z)):
		print("equilatero")
	else:
		if((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if((x=y) and (y=z)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:24:50) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:25:04) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:28:29) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
-- ERROR:
File "XXXX", line 9
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:07) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) and (y=z)):
		print("equilatero")
	
-- ERROR:
File "XXXX", line 9
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:11) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) and (y=z)):
		print("equilatero")
	
-- ERROR:
File "XXXX", line 9
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:21) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	
	
-- ERROR:
File "XXXX", line 11
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:30:35) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("jdfbks")
	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:31:24) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("jdfbks")
	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:32:03) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")
	
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:32:16) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
else:
	print("Tipo de triangulo: invalido")
	
-- ERROR:
File "XXXX", line 7
    else:
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:33:50) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:34:12) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) or (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 9
    if ((x=y) or (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:40:47) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x=y) or (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (z=y) or (x=z)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if ((x=y) or (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:41:25) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (y=z) or (z=x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:42:52) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		print("jd")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:42:59) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if((x=y) and (y=z)):
		print("equilatero")
	else:
		print("jd")
else:
	print("Tipo de triangulo: invalido")
-- ERROR:
File "XXXX", line 7
    if((x=y) and (y=z)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:44:43) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("hdaj")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:45:40) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <! y + z) and (y <! x + z) and (z <! y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("hdaj")
-- ERROR:
File "XXXX", line 6
    if ((x <! y + z) and (y <! x + z) and (z <! y + x) and (x>0) and (y>0) and (z>0)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:45:56) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x !< y + z) and (y !< x + z) and (z !< y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("hdaj")
-- ERROR:
File "XXXX", line 6
    if ((x !< y + z) and (y !< x + z) and (z !< y + x) and (x>0) and (y>0) and (z>0)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:46:21) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x =< y + z) and (y =< x + z) and (z =< y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("hdaj")
-- ERROR:
File "XXXX", line 6
    if ((x =< y + z) and (y =< x + z) and (z =< y + x) and (x>0) and (y>0) and (z>0)):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:46:37) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	print("hdaj")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:47:17) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
else:
	if ((x=y) and (y=z)):
		print("equilatero")
	else:
		if ((x=y) or (y=z) or (z=x)):
			print("isoceles")
		else:
			print("escaleno")
-- ERROR:
File "XXXX", line 9
    if ((x=y) and (y=z)):
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:48:15) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
elif ((x=y) and (y=z)):
	print("equilatero")
elif ((x=y) or (y=z) or (z=x)):
	print("isoceles")
else:
	print("escaleno")
-- ERROR:
File "XXXX", line 8
    elif ((x=y) and (y=z)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:48:22) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
elif ((x=y) and (y=z)):
	print("equilatero")
elif ((x=y) or (y=z) or (z=x)):
	print("isoceles")
else:
	print("escaleno")
-- ERROR:
File "XXXX", line 8
    elif ((x=y) and (y=z)):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:48:42) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
elif ((x = y) and (y = z)):
	print("equilatero")
elif ((x=y) or (y=z) or (z=x)):
	print("isoceles")
else:
	print("escaleno")
-- ERROR:
File "XXXX", line 8
    elif ((x = y) and (y = z)):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:49:36) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
elif ((x == y) and (y == z)):
	print("equilatero")
elif ((x==y) or (y==z) or (z==x)):
	print("isoceles")
else:
	print("escaleno")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 15:49:43) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x <= y + z) and (y <= x + z) and (z <= y + x) and (x>0) and (y>0) and (z>0)):
	print("Tipo de triangulo: invalido")
elif ((x == y) and (y == z)):
	print("equilatero")
elif ((x==y) or (y==z) or (z==x)):
	print("isoceles")
else:
	print("escaleno")
-- EXECUTION TIME:
0.161371
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: invalido
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: invalido
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:50:43) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 15:50:52) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.193856
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 15:51:25) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:47:29) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 16:47:34) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 16:48:09) 
-- CODE:
x = float(input("Lado x: "))
y = float(input("Lado y: "))
z = float(input("Lado z: "))
print("Entradas:", x, ",", y, ",", z)

if ((x < y + z) and (y < x + z) and (z < y + x) and (x>0) and (y>0) and (z>0)):
	if ((x==y) and (y==z)):
		print("equilatero")
	else:
		if ((x==y) or (y==z) or (z==x)):
			print("isoceles")
		else:
			print("escaleno")
else:
	print("Tipo de triangulo: invalido")
-- EXECUTION TIME:
0.211813
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:46) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)
x=("equilatero")
	ifx=("equilatero")
	((a==b) and (b==c)):
	else:
		


-- ERROR:
File "XXXX", line 7
    ifx=("equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:43:55) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)
x=("equilatero")
	if x=("equilatero")
	((a==b) and (b==c)):
	else:
		


-- ERROR:
File "XXXX", line 7
    if x=("equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:21) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)
x=("equilatero")
	if x=("equilatero")
		if((a==b) and (b==c)):
	else:
		print("gdd")
		


-- ERROR:
File "XXXX", line 7
    if x=("equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:38) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)

	if x=("equilatero")
		if((a==b) and (b==c)):
	else:
		print("gdd")
		


-- ERROR:
File "XXXX", line 7
    if x=("equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:44:43) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)
	if x=("equilatero")
		if((a==b) and (b==c)):
	else:
		print("gdd")
		


-- ERROR:
File "XXXX", line 6
    if x=("equilatero")
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:48:08) 
-- CODE:
a = float(input("Lado x: "))
b = float(input("Lado y: "))
c = float(input("Lado z: "))

print("Entradas:", a, ",", b, ",", c)
x=("equilatero")
if((a==b) and (b==c))
	print("Tipo de triangulo:" x )
		


-- ERROR:
File "XXXX", line 7
    if((a==b) and (b==c))
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:58:07) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if((a==b) and (b==c)):
	print("Tipo de triangulo: equilatero")
elif(a==b)or(b==c)or(c==a):
	print("Tipo de triangulo: isosceles")
elif(a!=b)and(b!=c)and(c!=a):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- EXECUTION TIME:
0.217018
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 ,  4.4 ,  5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 ,  2.0 ,  7.0
Tipo de triangulo: escaleno
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:58:11) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if((a==b) and (b==c)):
	print("Tipo de triangulo: equilatero")
elif(a==b)or(b==c)or(c==a):
	print("Tipo de triangulo: isosceles")
elif(a!=b)and(b!=c)and(c!=a):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- OUTPUT:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:59:32) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if(a<b+c)and(c<a+b)and(b<c+a):
	if((a==b) and (b==c)):
	print("Tipo de triangulo: equilatero")
	elif(a==b)or(b==c)or(c==a):
	print("Tipo de triangulo: isosceles")
	elif(a!=b)and(b!=c)and(c!=a):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- EXECUTION TIME:
0.167781
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 7
    print("Tipo de triangulo: equilatero")
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 17:59:35) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if(a<b+c)and(c<a+b)and(b<c+a):
	if((a==b) and (b==c)):
	print("Tipo de triangulo: equilatero")
	elif(a==b)or(b==c)or(c==a):
	print("Tipo de triangulo: isosceles")
	elif(a!=b)and(b!=c)and(c!=a):
	print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- ERROR:
File "XXXX", line 7
    print("Tipo de triangulo: equilatero")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 17:59:44) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if(a<b+c)and(c<a+b)and(b<c+a):
	if((a==b) and (b==c)):
		print("Tipo de triangulo: equilatero")
	elif(a==b)or(b==c)or(c==a):
		print("Tipo de triangulo: isosceles")
	elif(a!=b)and(b!=c)and(c!=a):
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- EXECUTION TIME:
0.153083
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas:  3.3 ,  4.4 ,  5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas:  1.0 ,  2.0 ,  7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 00:00:16) 
-- CODE:
a = float(input("Lado a: "))
b = float(input("Lado b: "))
c = float(input("Lado c: "))
print("Entradas: ",a, ", ",b, ", ",c)
if(a<b+c)and(c<a+b)and(b<c+a):
	if((a==b) and (b==c)):
		print("Tipo de triangulo: equilatero")
	elif(a==b)or(b==c)or(c==a):
		print("Tipo de triangulo: isosceles")
	elif(a!=b)and(b!=c)and(c!=a):
		print("Tipo de triangulo: escaleno")
else:
	print("Tipo de triangulo: invalido")
	
		


-- OUTPUT:
Entradas:  2.0 ,  4.0 ,  4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
