== TEST (2019-05-02 19:46:13) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**1/2,4))
elif(x>2):
	print(round(x**1/3,4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:46:53) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:03) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:18) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:29) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 19:47:48) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- OUTPUT:
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 19:47:59) 
-- CODE:
from math import *
x=float(input("number: "))
if(x<=0):
	print("0")
elif((x>0)and(x<=1)):
	print("1")
elif((x>1)and(x<=2)):
	print(round(x**(1/2),4))
elif(x>2):
	print(round(x**(1/3),4))
-- EXECUTION TIME:
0.152884
-- TEST CASE 1:
---- input:
0.57
---- correct output:
1
---- user output:
1
-- TEST CASE 2:
---- input:
1.99
---- correct output:
1.4107
---- user output:
1.4107
-- TEST CASE 3:
---- input:
2.01
---- correct output:
1.262
---- user output:
1.262
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
