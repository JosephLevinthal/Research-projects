== TEST (2019-05-02 18:23:43) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
Elif((x>=-1/2))and (x <=1/2)):
	fx = degrees(acos(x))
   print(round(x,2))
Else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    Elif((x>=-1/2))and (x <=1/2)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:12) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
Elif((x>=-1/2))and (x <=1/2)):
	fx = degrees(acos(x))
   print(round(fx,2))
Else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    Elif((x>=-1/2))and (x <=1/2)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:34) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
Elif((x>=-1/2))and (x <=1/2))
	fx = degrees(acos(x))
   print(round(fx,2))
Else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    Elif((x>=-1/2))and (x <=1/2))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:39) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
Elif((x>=-1/2))and (x <=1/2)
	fx = degrees(acos(x))
   print(round(fx,2))
Else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    fx = degrees(acos(x))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:56) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
Elif((x>=-1/2))and (x <=1/2)
	fx = degrees(acos(x))
   print(round(fx,2))
Else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    fx = degrees(acos(x))
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:42) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2))and (x <=1/2))
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2))and (x <=1/2))
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:53) 
-- CODE:
from math import*
x=float(input("valor de x"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2))and (x<=1/2))
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2))and (x<=1/2))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:27:12) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x >= -1 )and(x<2)) or ((x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2))and (x<=1/2))
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2))and (x<=1/2))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:27:52) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2))and (x<=1/2))
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2))and (x<=1/2))
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:28:23) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2)) and (x<=1/2)):
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2)) and (x<=1/2)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:28:40) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2)) and (x<=1/2)):
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2)) and (x<=1/2)):
                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:29:00) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 8
    print(round(fx,2))
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:29:40) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2):
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 6
    elif((x>=-1/2) and (x<=1/2):
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:29:47) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)
	fx = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    fx = degrees(acos(x))
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:29:55) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)
	f = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    f = degrees(acos(x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:30:01) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)
	 = degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    = degrees(acos(x))
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:30:07) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)
	 degrees(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 7
    degrees(acos(x))
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:30:16) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)
	(acos(x))
   print(round(fx,2))
else:
	print("entrada invalida")
  
-- ERROR:
File "XXXX", line 8
    print(round(fx,2))
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:32:32) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:33:13) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- EXECUTION TIME:
0.137436
-- TEST CASE 1:
---- input:
-0.99
---- correct output:
-81.89
---- user output:
-81.89
-- TEST CASE 2:
---- input:
1.51
---- correct output:
entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
-0.21
---- correct output:
102.12
---- user output:
-12.12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:17) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:32) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:33:35) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- EXECUTION TIME:
0.136337
-- TEST CASE 1:
---- input:
-0.99
---- correct output:
-81.89
---- user output:
-81.89
-- TEST CASE 2:
---- input:
1.51
---- correct output:
entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
-0.21
---- correct output:
102.12
---- user output:
-12.12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:37) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:33:57) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:34:22) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- EXECUTION TIME:
0.141184
-- TEST CASE 1:
---- input:
-0.99
---- correct output:
-81.89
---- user output:
-81.89
-- TEST CASE 2:
---- input:
1.51
---- correct output:
entrada invalida
---- user output:

-- TEST CASE 3:
---- input:
-0.21
---- correct output:
102.12
---- user output:
-12.12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:24) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:35:09) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<-1/2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- OUTPUT:
-81.89
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:35:16) 
-- CODE:
from math import*
x = float(input("valor de x:"))
if(((x>= -1 ) and(x<-1/2)) or ((x>1/2) and (x<=1))):
	fx = degrees(asin(x))
	print(round(fx,2))
elif((x>=-1/2) and (x<=1/2)):
	fx = degrees(acos(x))
	print(round(fx,2))
else:
	print("entrada invalida")
  
-- EXECUTION TIME:
0.191502
-- TEST CASE 1:
---- input:
-0.99
---- correct output:
-81.89
---- user output:
-81.89
-- TEST CASE 2:
---- input:
1.51
---- correct output:
entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
-0.21
---- correct output:
102.12
---- user output:
102.12
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
