== TEST (2019-04-11 18:27:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round, 4)
else:
	v=(4*pi*raio**3)/3
	print(round, 4)

-- OUTPUT:
<built-in function round> 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:27:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print(v (round, 4))
else:
	v=(4*pi*raio**3)/3
	print(v(round, 4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(v (round, 4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:28:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print=(round, 4)
else:
	v=(4*pi*raio**3)/3
	print=(round, 4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(v (round, 4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:29:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print=(round, 4)
else:
	v=(4*pi*raio**3)/3
	print=(round, 4)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(v (round, 4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:30:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print=(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print=(round(v, 4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(v (round, 4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print=(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print=(round(v, 4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(v (round, 4))
TypeError: 'float' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:37:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print(round(v, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:38:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print(round(v, 4))

-- EXECUTION TIME:
0.194778
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:40:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==1):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print(round(v, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:45:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==2):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print(round(v, 4))

-- EXECUTION TIME:
0.146294
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
19.9983
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:47:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=float(input("num desejado 1 ou 2"))
if(num==2):
	v= (pi*altura**2*(3*raio-altura))/3
	print(round(v, 4))
else:
	v=(4*pi*raio**3)/3
	print(round(v, 4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:23:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
volesf=(4*pi*raio**3)/3
volcal=(pi*altura**2*(3*raio-altura))/3
total=volesf-volval
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    total=volesf-volval
NameError: name 'volval' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:24:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
volesf=(4*pi*raio**3)/3
volcal=(pi*altura**2*(3*raio-altura))/3
total=volesf-volcal
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:25:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
volesf=((4*pi)*(raio**3))/3
volcal=(pi*(altura**2)*(3*raio-altura))/3
total=volesf-volcal
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:25:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import *
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
volesf=((4*pi)*(raio**3))/3
volcal=(pi*(altura**2)*(3*raio-altura))/3
total=volesf-volcal
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- EXECUTION TIME:
0.216984
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:25:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
from math import *
volesf=((4*pi)*(raio**3))/3
volcal=(pi*(altura**2)*(3*raio-altura))/3
total=volesf-volcal
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- EXECUTION TIME:
0.141438
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:27:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
from math import*
volesf=((4*pi)*(raio**3))/3
volcal=(pi*(altura**2)*(3*raio-altura))/3
total=volesf-volcal
if(num==1):
	print(round(volcal, 4))
else:
	print(round(volesf, 4))

-- EXECUTION TIME:
0.162706
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:32:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
from math import*
vol=((4*pi)*(raio**3))/3
volar=(pi*(altura**2)*(3*raio-altura))/3
volcom=vol-volar
if(num==1):
	print(round(volar, 4))
else:
	print(round(vol, 4))

-- EXECUTION TIME:
0.147076
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:32:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num desejado 1 ou 2"))
from math import*
vol=((4*pi)*(raio**3))/3
volar=(pi*(altura**2)*(3*raio-altura))/3
volcom=vol-volar
if(num==1):
	print(round(volar, 4))
else:
	print(round(vol, 4))

-- EXECUTION TIME:
0.11874
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:33:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio: "))
altura=float(input("altura"))
num=int(input("num"))
from math import*
vol=((4*pi)*(raio**3))/3
volar=(pi*(altura**2)*(3*raio-altura))/3
volcom=vol-volar
if(num==1):
	print(round(volar, 4))
else:
	print(round(vol, 4))

-- EXECUTION TIME:
0.140638
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:33:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio"))
altura=float(input("altura"))
num=int(input("num"))
from math import*
vol=((4*pi)*(raio**3))/3
volar=(pi*(altura**2)*(3*raio-altura))/3
volcom=vol-volar
if(num==1):
	print(round(volar, 4))
else:
	print(round(vol, 4))

-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:38:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
raio=float(input("raio"))
altura=float(input("altura"))
num=int(input("num"))
from math import*
vol=((4*pi)*(raio**3))/3
volar=(pi*(altura**2)*(3*raio-altura))/3
volcomb=vol-volar
if(num==1):
	print(round(volar,4))
else:
	print(round(volcomb,4))

-- EXECUTION TIME:
0.142474
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
