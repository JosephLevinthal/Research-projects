== TEST (2019-05-16 17:28:15) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (k>0):
	soma= soma +( 1 / factorial(i))
	i= i + 1
print(round(soma + 1, 8))

	
-- OUTPUT:
MAXIMO
6
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:28:26) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (k>0):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma + 1, 8))

	
-- OUTPUT:
2.0
2.5
2.66666667
2.70833333
2.71666667
2.71805556
2.71825397
2.71827877
2.71828153
2.7182818
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.71828183
2.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:02) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (i<=k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma + 1, 8))

	
-- OUTPUT:
2.0
2.5
2.66666667
2.70833333
2.71666667
2.71805556
2.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:14) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (i<=k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- OUTPUT:
1.0
1.5
1.66666667
1.70833333
1.71666667
1.71805556
1.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:29:21) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (i<=k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- EXECUTION TIME:
0.666406
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
1.0
1.5
1.66666667
1.70833333
1.71666667
1.71805556
1.71825397
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
1.0
1.5
1.66666667
1.70833333
1.71666667
1.71805556
1.71825397
1.71827877
1.71828153
1.7182818
1.71828183
1.71828183
1.71828183
1.71828183
1.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
1.0
1.5
1.66666667
1.70833333
1.71666667
1.71805556
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:24) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (i<=k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- OUTPUT:
1.0
1.5
1.66666667
1.70833333
1.71666667
1.71805556
1.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:29:51) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (i<=k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
print(round(soma, 8))

	
-- OUTPUT:
1.71825397
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:27) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=0
soma= 0
while (i<k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- OUTPUT:
1.0
2.0
2.5
2.66666667
2.70833333
2.71666667
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:35) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=0
soma= 0
while (i<k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- OUTPUT:
1.0
2.0
2.5
2.66666667
2.70833333
2.71666667
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:31:42) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=0
soma= 0
while (i<k):
	soma= soma +( 1 / factorial(i))
	i= i + 1
	print(round(soma, 8))

	
-- OUTPUT:
1.0
2.0
2.5
2.66666667
2.70833333
2.71666667
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:33:30) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	soma= soma + 1 / factorial(i)
	i= i + 1
print(round(soma, 8))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    soma= soma + 1 / factorial(i)
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:33:49) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	s= s + 1 / factorial(i)
	i= i + 1
print(round(soma, 8))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(soma, 8))
NameError: name 'soma' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:33:59) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	s= s + 1 / factorial(i)
	i= i + 1
print(round(s, 8))

	
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 17:34:03) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	s= s + 1 / factorial(i)
	i= i + 1
print(round(s, 8))

	
-- OUTPUT:
2.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:34:10) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	s= s + 1 / factorial(i)
	i= i + 1
print(round(s, 8))

	
-- EXECUTION TIME:
0.770356
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:46:01) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (k>0):
	soma= soma +( 1 / factorial(i))
	i= i + 1
print(soma + 1)

	
-- EXECUTION TIME:
1086.17
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:47:01) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (k>0):
	soma= soma +( 1 / factorial(i))
	i= i + 1
print(round(soma + 1, 8))

	
-- EXECUTION TIME:
1127.69
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:47:01) 
-- CODE:
from math import*
k=int(input("digite k: "))
i=1
soma= 0
while (k>0):
	soma= soma +( 1 / factorial(i))
	i= i + 1
print(round(soma + 1, 8))

	
-- EXECUTION TIME:
1126.65
-- ERROR:
Killed

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 17:59:23) 
-- CODE:
from math import factorial
k=int(input("digite k: "))
i=0
s= 0
while (i<k):
	s= s + 1 / factorial(i)
	i= i + 1
print(round(s, 8))

	
-- EXECUTION TIME:
0.125067
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
