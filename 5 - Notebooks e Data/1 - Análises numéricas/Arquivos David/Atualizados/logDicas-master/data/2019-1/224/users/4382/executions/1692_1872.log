== SUBMITION (2019-05-02 01:58:42) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- EXECUTION TIME:
0.198938
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1692/1872/main.py", line 2, in <module>
    if(x > 0 and y > 0):
NameError: name 'x' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:58:47) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    if(x > 0 and y > 0):
NameError: name 'x' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 01:59:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(digite x: ))
y = float(input(digite y: ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- EXECUTION TIME:
0.200705
-- ERROR:
  File "/home/codebench/codes/1692/1872/main.py", line 2
    x = float(input(digite x: ))
                           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 01:59:49) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(digite x: ))
y = float(input(digite y: ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- ERROR:
File "XXXX", line 2
    x = float(input(digite x: ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:00:46) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(digite x: ))
y = float(input(digite y: ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- ERROR:
File "XXXX", line 2
    x = float(input(digite x: ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:01:39) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input(digite x: ))
y = float(input(digite y: ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- ERROR:
File "XXXX", line 2
    x = float(input(digite x: ))
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:02:45) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 02:02:51) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- EXECUTION TIME:
0.207036
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:

-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:02:55) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:03:12) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 02:03:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- EXECUTION TIME:
0.138569
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:

-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:04:22) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 02:04:43) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- OUTPUT:
Q4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 17:14:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.
x = float(input("digite x:" ))
y = float(input("digite y:" ))
if(x > 0 and y > 0):
	print("Q1")
if(x > 0 and y < 0):
	print("Q4")
if(x < 0 and y < 0):
	print("Q3")
if(x < 0 and y > 0):
	print("Q2")
if(x == 0 and y == 0):
	print("Origem")
-- EXECUTION TIME:
0.189262
-- TEST CASE 1:
---- input:
4.5
-2.2
---- correct output:
Q4
---- user output:
Q4
-- TEST CASE 2:
---- input:
0.1
0
---- correct output:
Eixo X
---- user output:

-- TEST CASE 3:
---- input:
0.0
0.0
---- correct output:
Origem
---- user output:
Origem
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
