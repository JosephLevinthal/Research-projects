== TEST (2019-03-21 19:50:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= float(int("escolha um numero com 4 casas decimais"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    numero= float(int("escolha um numero com 4 casas decimais"))
ValueError: invalid literal for int() with base 10: 'escolha um numero com 4 casas decimais'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:51:17) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(float("escolha um numero com 4 casas decimais"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    numero= int(float("escolha um numero com 4 casas decimais"))
ValueError: could not convert string to float: 'escolha um numero com 4 casas decimais'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:51:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= input(int("escolha um numero com 4 casas decimais"))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    numero= input(int("escolha um numero com 4 casas decimais"))
ValueError: invalid literal for int() with base 10: 'escolha um numero com 4 casas decimais'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:52:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= input("escolha um numero inteiro com 4 algarismos ")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    numero= input(int("escolha um numero com 4 casas decimais"))
ValueError: invalid literal for int() with base 10: 'escolha um numero com 4 casas decimais'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:52:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= input("escolha um numero inteiro com 4 algarismos ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    numero= input(int("escolha um numero com 4 casas decimais"))
ValueError: invalid literal for int() with base 10: 'escolha um numero com 4 casas decimais'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:59:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= input("escolha um numero inteiro com 4 algarismos ")
x= int(numero//1000)
y= int(numero//100)
z= int(numero//10)
t= int(numero%10)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x= int(numero//1000)
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:01:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero//100)
z= int(numero//10)
t= int(numero%10)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x= int(numero//1000)
TypeError: unsupported operand type(s) for //: 'str' and 'int'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:02:23) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero//100)
z= int(numero//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- OUTPUT:
9
91
917
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:03:24) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero//100-x)
z= int(numero//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- OUTPUT:
9
82
917
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:05:15) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- OUTPUT:
9
1
917
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:06:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero%1000/100//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- OUTPUT:
9
1
0
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:06:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero%1000%100//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- OUTPUT:
9
1
7
3
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 20:06:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero%1000%100//10)
t= int(numero%10)
print(x)
print(y)
print(z)
print(t)
-- EXECUTION TIME:
0.146049
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
9
1
7
3
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
1
0
1
0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 20:07:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero%1000%100//10)
t= int(numero%10)
soma= x+y+z+t
print(soma)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 20:08:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero= int(input("escolha um numero inteiro com 4 algarismos "))
x= int(numero//1000)
y= int(numero%1000//100)
z= int(numero%1000%100//10)
t= int(numero%10)
soma= x+y+z+t
print(soma)
-- EXECUTION TIME:
0.190311
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
