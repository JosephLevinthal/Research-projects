== TEST (2019-05-02 18:20:44) 
-- CODE:
ataque = input("escolha o ataque")
d1 = int(input("qual o resultado do primeiro dado jogado"))
d2 = int (input("resultado do segundo dado"))

-- OUTPUT:
0.7071
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:23:46) 
-- CODE:
ataque = input("escolha o ataque")
d1 = int(input("qual o resultado do primeiro dado jogado"))
d2 = int (input("resultado do segundo dado"))
if (ataque == "Grito"):
	

-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:23:53) 
-- CODE:
ataque = input("escolha o ataque")
d1 = int(input("qual o resultado do primeiro dado jogado"))
d2 = int (input("resultado do segundo dado"))
if (ataque == "Grito"):
	
-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:36:25) 
-- CODE:
ATAQUE = input("escolha o ataque")
D1 = int(input("qual o resultado do primeiro dado jogado"))
D2 = int (input("resultado do segundo dado"))
if (ATAQUE == "FURIA"):
	if (1 < D1 < 8) and (1 <D2 < 8):
		DANO = 10 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif (ATAQUE == "GRITO"):
	if (1 < D1 < 8) and (1 < D2 < 8):
		DANO = 6 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
	
-- ERROR:
File "XXXX", line 6
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:46:28) 
-- CODE:
ATAQUE = input("escolha o ataque")
D1 = int(input("qual o resultado do primeiro dado jogado"))
D2 = int (input("resultado do segundo dado"))
if (ATAQUE == "FURIA"):
	if (1 < D1 < 9) and (1 <D2 < 9):
		DANO = 10 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif (ATAQUE == "GRITO"):
	if (1 < D1 < 9) and (1 < D2 < 9):
		DANO = 6 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif ( ATAQUE == "TOQUE"):
	if (1 < D1 < 9 ) and ( 1 < D2 < 9):
		DANO = (D1 + D2)**2
		print(DANO)
	else:
		print("Entrada invalida")
else:
	print("Entrada invalida")
	
-- EXECUTION TIME:
0.234402
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
Entrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:46:57) 
-- CODE:
ATAQUE = input("escolha o ataque")
D1 = int(input("qual o resultado do primeiro dado jogado"))
D2 = int (input("resultado do segundo dado"))
if (ATAQUE == "FURIA"):
	if (1 < D1 < 8) and (1 <D2 < 8):
		DANO = 10 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif (ATAQUE == "GRITO"):
	if (1 < D1 < 8) and (1 < D2 < 8):
		DANO = 6 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif ( ATAQUE == "TOQUE"):
	if (1 < D1 < 8 ) and ( 1 < D2 < 8):
		DANO = (D1 + D2)**2
		print(DANO)
	else:
		print("Entrada invalida")
else:
	print("Entrada invalida")
	
-- EXECUTION TIME:
0.206093
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
Entrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:47:24) 
-- CODE:
ATAQUE = input("escolha o ataque")
D1 = int(input("qual o resultado do primeiro dado jogado"))
D2 = int (input("resultado do segundo dado"))
if (ATAQUE == "FURIA"):
	if (1 < D1 <= 8) and (1 <D2 <= 8):
		DANO = 10 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif (ATAQUE == "GRITO"):
	if (1 < D1 <= 8) and (1 < D2 <= 8):
		DANO = 6 + D1 + D2
		print(DANO)
	else:
		print("Entrada invalida")
elif ( ATAQUE == "TOQUE"):
	if (1 < D1 < 8 ) and ( 1 < D2 < 8):
		DANO = (D1 + D2)**2
		print(DANO)
	else:
		print("Entrada invalida")
else:
	print("Entrada invalida")
	
-- EXECUTION TIME:
0.219077
-- TEST CASE 1:
---- input:
TOQUE
5
5
---- correct output:
100
---- user output:
escolha o ataquequal o resultado do primeiro dado jogadoresultado do segundo dado100
-- TEST CASE 2:
---- input:
GRITA
6
1
---- correct output:
Entrada invalida
---- user output:
escolha o ataquequal o resultado do primeiro dado jogadoresultado do segundo dadoEntrada invalida
-- TEST CASE 3:
---- input:
GRITO
6
1
---- correct output:
13
---- user output:
escolha o ataquequal o resultado do primeiro dado jogadoresultado do segundo dadoEntrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
