== TEST (2019-05-02 11:08:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("Num x: "))
a= float(input("Num a: "))
b= float(input("Num b: "))
if(b>a):
	if(a<= x <=b):
		print(x, "pertence ao intervalo a, b")
	elif((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, ",", b)
else: 
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:09:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("Num x: "))
a= float(input("Num a: "))
b= float(input("Num b: "))
if(b>a):
	if(a<= x <=b):
		print(x, "pertence ao intervalo a, b")
	elif((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, ",", b)
else: 
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.164312
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo a, b
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 11:10:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("Num x: "))
a= float(input("Num a: "))
b= float(input("Num b: "))
if(b>a):
	if(a<= x <=b):
		print(x, "pertence ao intervalo", a,",", b")
	elif((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, ",", b)
else: 
	print("Entradas", a, "e", b, "invalidas")
-- ERROR:
File "XXXX", line 9
    print(x, "pertence ao intervalo", a,",", b")
                                               ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:10:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("Num x: "))
a= float(input("Num a: "))
b= float(input("Num b: "))
if(b>a):
	if(a<= x <=b):
		print(x, "pertence ao intervalo", a,",", b")
	elif((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, ",", b)
else: 
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.207101
-- ERROR:
  File "/home/codebench/codes/1692/1103/main.py", line 9
    print(x, "pertence ao intervalo", a,",", b")
                                               ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 11:12:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x= float(input("Num x: "))
a= float(input("Num a: "))
b= float(input("Num b: "))
if(b>a):
	if(a<= x <=b):
		print(x, "pertence ao intervalo", a,",", b)
	elif((x<a) or (x>b)):
		print(x, "nao pertence ao intervalo", a, ",", b)
else: 
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.147233
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
