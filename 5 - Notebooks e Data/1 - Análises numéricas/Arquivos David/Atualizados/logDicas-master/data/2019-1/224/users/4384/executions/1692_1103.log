== TEST (2019-05-01 14:41:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x "pertence ao intervalo" a, b)
else:
	print(x "nao pertence ao intervalo" a, b)
-- ERROR:
File "XXXX", line 8
    print(x "pertence ao intervalo" a, b)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:41:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x "pertence ao intervalo", a, b)
else:
	print(x "nao pertence ao intervalo" a, b)
-- ERROR:
File "XXXX", line 8
    print(x "pertence ao intervalo", a, b)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:41:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x "pertence ao intervalo", a, b)
else:
	print(x "nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 8
    print(x "pertence ao intervalo", a, b)
                                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:41:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:52:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	elif(b<a) or (a=b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif(b<a) or (a=b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:52:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	elif(b<a) or (a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif(b<a) or (a==b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:52:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	elif (b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif (b<a)or(a==b):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:53:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.2208
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:53:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:53:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.150382
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:53:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:53:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.220994
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:57:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.145715
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:57:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 14:57:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.170384
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:57:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:57:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:57:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	elif (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif (b<=a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	elif (b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif (b<=a):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:58:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
	if(b<=a):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<=a):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 14:59:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<=a):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:00:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<=a):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.158068
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:00:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a=b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- ERROR:
File "XXXX", line 9
    elif(b<a)or(a=b):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:00:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:00:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- EXECUTION TIME:
0.157845
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:00:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a, b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:01:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a "," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:07:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a "," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a "," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a "," b)
                                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,"," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a ,"," b)
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,"," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a ,"," b)
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,"," b)
-- ERROR:
File "XXXX", line 12
    print(x ,"nao pertence ao intervalo", a ,"," b)
                                                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:08:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.289149
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:08:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:10:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.145474
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:10:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:10:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.121974
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:10:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:11:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:11:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a, b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:12:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:12:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- EXECUTION TIME:
0.204468
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:14:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a ,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:15:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x<b):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.140654
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:17:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:18:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.227032
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:22:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
if(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:22:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
if(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.179468
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas a e b invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
6.5 nao pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:22:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:22:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.207768
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:22:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:24:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.144978
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
5.5 nao pertence ao intervalo 6.5 , 3.5
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:24:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:24:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
	if(b<a)or(a==b):
		print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:24:42) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas a e b invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:25:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas" ,"a", e ,"b", "invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:26:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas" a ,"e", b "invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- ERROR:
File "XXXX", line 10
    print("Entradas" a ,"e", b "invalidas")
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 15:26:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas", a ,"e", b ,"invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 15:26:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas", a ,"e", b ,"invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.182973
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 15:23:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas", a ,"e", b ,"invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- OUTPUT:
2.0 nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 15:23:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor_de_x:" ))
a=float(input("valor_de_a:" ))
b=float(input("valor_de_b:" ))
if(a<x)and(b>x):
	print(x ,"pertence ao intervalo", a,",", b)
elif(b<a)or(a==b):
	print("Entradas", a ,"e", b ,"invalidas")
else:
	print(x ,"nao pertence ao intervalo", a,",", b)
-- EXECUTION TIME:
0.178516
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0 nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
