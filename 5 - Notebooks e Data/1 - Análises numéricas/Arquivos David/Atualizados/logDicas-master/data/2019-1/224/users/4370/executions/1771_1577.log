== SUBMITION (2019-05-28 18:30:44) 
-- CODE:
from numpy import *
a = float(input("digite a aceleracao: "))
vo = float(input("digite a velocidade inicial: "))
N = int(input("tempo em funcao do termo N: "))
vetor_t = arange(N,dtype = float)
vetor_d = ((((vetor_t)**2)*a)/2) + vo*vetor_t
print(vetor_d)
-- EXECUTION TIME:
0.444867
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[    0.     81.4   172.6   273.6   384.4   505.    635.4   775.6   925.6
  1085.4  1255.   1434.4  1623.6  1822.6  2031.4  2250.   2478.4  2716.6
  2964.6  3222.4  3490.   3767.4  4054.6  4351.6  4658.4  4975.   5301.4
  5637.6  5983.6  6339.4  6705.   7080.4  7465.6  7860.6  8265.4  8680.
  9104.4  9538.6  9982.6 10436.4 10900.  11373.4 11856.6]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 11:29:01) 
-- CODE:
from numpy import *
a = float(input("digite a aceleracao: "))
vo = float(input("digite a velocidade inicial: "))
N = int(input("tempo em funcao do termo N: "))
vetor_t = arange(N,dtype = float)
vetor_d = ((((vetor_t)**2)*a)/2) + vo*vetor_t
print(vetor_d)
-- EXECUTION TIME:
0.423266
-- TEST CASE 1:
---- input:
1.2
3.4
12
---- correct output:
[   0.     4.     9.2   15.6   23.2   32.    42.    53.2   65.6   79.2
   94.   110. ]
---- user output:
[  0.    4.    9.2  15.6  23.2  32.   42.   53.2  65.6  79.2  94.  110. ]
-- TEST CASE 2:
---- input:
9.8
76.5
43
---- correct output:
[     0.      81.4    172.6    273.6    384.4    505.     635.4    775.6
    925.6   1085.4   1255.    1434.4   1623.6   1822.6   2031.4   2250.
   2478.4   2716.6   2964.6   3222.4   3490.    3767.4   4054.6   4351.6
   4658.4   4975.    5301.4   5637.6   5983.6   6339.4   6705.    7080.4
   7465.6   7860.6   8265.4   8680.    9104.4   9538.6   9982.6  10436.4
  10900.   11373.4  11856.6]
---- user output:
[    0.     81.4   172.6   273.6   384.4   505.    635.4   775.6   925.6
  1085.4  1255.   1434.4  1623.6  1822.6  2031.4  2250.   2478.4  2716.6
  2964.6  3222.4  3490.   3767.4  4054.6  4351.6  4658.4  4975.   5301.4
  5637.6  5983.6  6339.4  6705.   7080.4  7465.6  7860.6  8265.4  8680.
  9104.4  9538.6  9982.6 10436.4 10900.  11373.4 11856.6]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
