== TEST (2019-04-14 21:14:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p=cervo):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
File "XXXX", line 5
    if(p=cervo):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:14:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p==cervo):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(p==cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    c=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:16:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.157829
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    c=input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:16:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=cervo
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.210309
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    c=cervo
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:16:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.163022
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    c=input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:16:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    c=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:17:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(p==c):
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:17:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=cervo
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    c=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:18:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
cervo=cervo
if(p==cervo):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo=cervo
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:19:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
cervo=c
if(p==cervo):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo=c
NameError: name 'c' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:19:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("se for cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    c=input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:20:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
c=input("digite c se o patrono for cervo")
if(p==c):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.181416
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    c=input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:44:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p== "cervo"):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:44:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p== "cervo"):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.135934
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:44:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p== "cervo"):
   print("cervo eh patrono do Harry Potter")
else:
	print("nao eh patrono do Harry Potter")
-- EXECUTION TIME:
0.130386
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:46:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if( p == "cervo"):
   msg="cervo eh patrono do Harry Potter"
else:
	msg= p + "" "nao eh patrono do Harry Potter"
print(msg)
-- EXECUTION TIME:
0.188372
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:48:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p == "cervo"):
   msg = "cervo eh patrono do Harry Potter"
else:
	msg = p + "" "nao eh patrono do Harry Potter"
print(msg)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:48:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("digite o nome do patrono:")
if(p == "cervo"):
   msg = "cervo eh patrono do Harry Potter"
else:
	msg = p + "" "nao eh patrono do Harry Potter"
print(msg)
-- EXECUTION TIME:
0.116639
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:50:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("nome do patrono:")
if(p == "cervo"):
   print("cervo eh patrono do Harry Potter")
else:
	print(p + "" "nao eh patrono do Harry Potter")

-- EXECUTION TIME:
0.154736
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bodenao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:51:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
p=input("nome do patrono:")
if(p == "cervo"):
   msg="cervo eh patrono do Harry Potter"
else:
	msg=p + " " "nao eh patrono do Harry Potter"
print(msg)

-- EXECUTION TIME:
0.198877
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
