== TEST (2019-04-24 19:28:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )

-- OUTPUT:
Entradas 2 , 4 , 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:38:45) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
	elif (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 9
    elif (a==b and b==c):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:38:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		elif (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 9
    elif (a==b and b==c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:38:58) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
			elif (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 9
    elif (a==b and b==c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:39:03) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		elif (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 9
    elif (a==b and b==c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:39:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
	elif (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 9
    elif (a==b and b==c):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:40:17) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
		print("Tipo de triangulo : equilatero")
	elif (a==b or b==c or c==a ):
		print("Tipo de triangulo : isoceles")
	else:
		print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- ERROR:
File "XXXX", line 10
    print("Tipo de triangulo : equilatero")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:40:43) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
else:
	print("Tipo de triangulo : invalido")

-- OUTPUT:
Entradas 2 , 4 , 4
Tipo de triangulo : isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:41:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- OUTPUT:
Entradas 2 , 4 , 4
Tipo de triangulo : isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:41:21) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- EXECUTION TIME:
0.111851
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas 2 , 4 , 4
Tipo de triangulo : isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas 1 , 2 , 7
Tipo de triangulo : invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:53:30) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- EXECUTION TIME:
0.179696
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas 2 , 4 , 4
Tipo de triangulo : isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas 1 , 2 , 7
Tipo de triangulo : invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:54:26) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- OUTPUT:
Entradas 2 , 4 , 4
Tipo de triangulo : isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:54:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- EXECUTION TIME:
0.234957
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo : isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo : invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:54:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo : equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo : isoceles")
		else:
			print("Tipo de triangulo : escaleno")
	else:
		print("Tipo de triangulo : invalido")
else:
	print("Tipo de triangulo : invalido")

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo : isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:55:11) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.16472
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:55:13) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or c==a ):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:57:39) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or c==a ):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "invalido"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.153394
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:58:24) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or c==a ):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 19:58:34) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or c==a ):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 19:58:51) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or c==a ):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.148844
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:00:18) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.148346
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:01:08) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:14) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:02:27) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- OUTPUT:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:02:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = int(input("fale ai nego, a medida do lado :"))
b = int(input("fale ai nego, a medida do outro lado:"))
c = int(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.130136
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2 , 4 , 4
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:

-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1 , 2 , 7
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:03:36) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("fale ai nego, a medida do lado :"))
b = float(input("fale ai nego, a medida do outro lado:"))
c = float(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.197985
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:03:40) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("fale ai nego, a medida do lado :"))
b = float(input("fale ai nego, a medida do outro lado:"))
c = float(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:03:42) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
a = float(input("fale ai nego, a medida do lado :"))
b = float(input("fale ai nego, a medida do outro lado:"))
c = float(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.178289
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:04:05) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado :"))
b = float(input("fale ai nego, a medida do outro lado:"))
c = float(input("fale ai nego, a medida de outro outro lado:"))
print("Entradas:" , a , "," , b , "," , c  )
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.198402
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:04:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0 and b > 0 and c > 0):
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.123012
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:06:55) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" , mensagem)
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , mensagem)
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , mensagem)
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , mensagem)
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , mensagem)

-- EXECUTION TIME:
0.164101
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:07:35) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" ,"equilatero")
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , "isoceles")
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , "escaleno")
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , "invalido")
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , "invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:07:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			mensagem = "equilatero"
			print("Tipo de triangulo:" ,"equilatero")
		elif (a==b or b==c or a==c):
			mensagem = "isoceles"
			print("Tipo de triangulo:" , "isoceles")
		else:
			mensagem = "escaleno"
			print("Tipo de triangulo:" , "escaleno")
	else:
		mensagem = "invalido"
		print("Tipo de triangulo:" , "invalido")
else:
	mensagem = "invalido"
	print("Tipo de triangulo:" , "invalido")

-- EXECUTION TIME:
0.171326
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:08:00) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo:" ,"equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo:" , "isoceles")
		else:
			print("Tipo de triangulo:" , "escaleno")
	else:
		print("Tipo de triangulo:" , "invalido")
else:
	print("Tipo de triangulo:" , "invalido")

-- EXECUTION TIME:
0.136213
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:08:48) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo:" ,"equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo:" , "isoceles")
		else:
			print("Tipo de triangulo:" , "escaleno")
	else:
		print("Tipo de triangulo:" , "invalido")
else:
	print("Tipo de triangulo:" , "invalido")

-- EXECUTION TIME:
0.114787
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:09:16) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > c and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.129436
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:10:49) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > b and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.128338
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:10:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > b and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:10:54) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > b and c + b > a):
		if (a==b and b==c):
			print("Tipo de triangulo: equilatero")
		elif (a==b or b==c or a==c):
			print("Tipo de triangulo: isoceles")
		else:
			print("Tipo de triangulo: escaleno")
	else:
		print("Tipo de triangulo: invalido")
else:
	print("Tipo de triangulo: invalido")

-- EXECUTION TIME:
0.188278
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isoceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:13:23) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
from math import * 
a = float(input("fale ai nego, a medida do lado : "))
b = float(input("fale ai nego, a medida do outro lado: "))
c = float(input("fale ai nego, a medida de outro outro lado: "))
print("Entradas:", a, ",", b, ",", c)
if (a > 0  and b > 0 and c > 0):
	
	if (a + b > c and a + c > b and c + b > a):
		if (a==b and b==c):
			x = "equilatero"
			print("Tipo de triangulo:", x)
		elif (a==b or b==c or a==c):
			x = "isosceles"
			print("Tipo de triangulo:", x)
		else:
			x = "escaleno"
			print("Tipo de triangulo:", x)
	else:
		x = "invalido"
		print("Tipo de triangulo:", x)
else:
	print("Tipo de triangulo:", x)

-- EXECUTION TIME:
0.243916
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
