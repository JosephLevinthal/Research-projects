== TEST (2019-05-20 17:23:28) 
-- CODE:
n = int(input("Numero natural: "))

while(n != 1):
	if(n % 2 == 0):
		n = n//2
	else:
		n = (n * 3) + 1
	print(n)
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 17:25:14) 
-- CODE:
n = int(input("Numero natural: "))

while(n != 1):
	if(n % 2 == 0):
		n = n//2
	else:
		n = (n * 3) + 1
	print(n)
-- EXECUTION TIME:
0.152623
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5
16
8
4
2
1
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20
10
5
16
8
4
2
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 17:26:00) 
-- CODE:
n = int(input("Numero natural: "))
while(n != 1):
	if(n % 2 == 0):
		n = n//2
	else:
		n = (n * 3) + 1
	print(n)
-- OUTPUT:
5
16
8
4
2
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 17:26:02) 
-- CODE:
n = int(input("Numero natural: "))
while(n != 1):
	if(n % 2 == 0):
		n = n//2
	else:
		n = (n * 3) + 1
	print(n)
-- EXECUTION TIME:
0.184342
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5
16
8
4
2
1
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20
10
5
16
8
4
2
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 17:26:09) 
-- CODE:
n = int(input("Numero natural: "))

while(n != 1):
	if(n % 2 == 0):
		n = n//2
	else:
		n = (n * 3) + 1
	print(n)
-- EXECUTION TIME:
0.205551
-- TEST CASE 1:
---- input:
10 
---- correct output:
5
16
8
4
2
1
---- user output:
5
16
8
4
2
1
-- TEST CASE 2:
---- input:
45
---- correct output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
---- user output:
136
68
34
17
52
26
13
40
20
10
5
16
8
4
2
1
-- TEST CASE 3:
---- input:
13
---- correct output:
40
20
10
5
16
8
4
2
1
---- user output:
40
20
10
5
16
8
4
2
1
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
