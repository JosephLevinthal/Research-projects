== TEST (2019-04-30 18:24:23) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (___COMPLETE AQUI___):
	# Testa se medidas correspondem aas de um triangulo
	if (___COMPLETE AQUI___):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- ERROR:
File "XXXX", line 13
    if (___COMPLETE AQUI___):
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:00) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
	# Testa se medidas correspondem aas de um triangulo
if ("___COMPLETE AQUI___"):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")

-- ERROR:
File "XXXX", line 19
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 08:59:25) 
-- CODE:
from math import*

ladoa=float(input("digitr a: "))
ladob=float(input("digitr b: "))
ladoc=float(input("digitr c: "))

print("entrada:", a,",", b, ",", c)

if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		
-- ERROR:
File "XXXX", line 12
    
      ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:04:02) 
-- CODE:
from math import*

ladoa=float(input("digitr a: "))
ladob=float(input("digitr b: "))
ladoc=float(input("digitr c: "))

print("entrada:", a,",", b, ",", c)

if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print("entrada:", a,",", b, ",", c)
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:04:55) 
-- CODE:
from math import*

ladoa=float(input("digitr a: "))
ladob=float(input("digitr b: "))
ladoc=float(input("digitr c: "))



if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    if( a>0 and b>0 and c>0):
NameError: name 'a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:05:24) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))



if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- OUTPUT:
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 09:05:31) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))



if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- EXECUTION TIME:
0.22956
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:05:38) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))
print("entrada:", a,",", b, ",", c)


if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- OUTPUT:
entrada: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 09:05:50) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))
print("entrada:", a,",", b, ",", c)


if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- EXECUTION TIME:
0.20565
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
entrada: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
entrada: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
entrada: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:06:21) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))
print("entrada:", a,",", b, ",", c)


if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- OUTPUT:
entrada: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 09:06:44) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))
print("Entradas:", a,",", b, ",", c)


if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 09:06:55) 
-- CODE:
from math import*

a=float(input("digitr a: "))
b=float(input("digitr b: "))
c=float(input("digitr c: "))
print("Entradas:", a,",", b, ",", c)


if( a>0 and b>0 and c>0):
	if(a<b+c and b<c+a and c<a+b):
		p= (a+b+c)/ 2.0
		area= sqrt(p * (p - a) * (p - b) * (p - c))
		area=round(area, 3)
		print ("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
	
-- EXECUTION TIME:
0.182392
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
