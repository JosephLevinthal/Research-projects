== TEST (2019-05-02 18:08:15) 
-- CODE:
comando= input("digite o comando:")
valor= input("valor sorteado:")
print (comando)

-- OUTPUT:
CAUDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:08:30) 
-- CODE:
comando= input("digite o comando:")
valor= input("valor sorteado:")
print (comando)

-- OUTPUT:
CAUDA
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:14:29) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if():

-- ERROR:
File "XXXX", line 8
    
         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:15:56) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==perda de n pontos de vida):
	

-- ERROR:
File "XXXX", line 7
    if(comando==perda de n pontos de vida):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:16:46) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==perda de n pontos de vida):
	elif()
	

-- ERROR:
File "XXXX", line 7
    if(comando==perda de n pontos de vida):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:16:59) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perda de n pontos de vida):
	elif()
	

-- ERROR:
File "XXXX", line 7
    if(comando==cauda==perda de n pontos de vida):
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:17:10) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif()
	

-- ERROR:
File "XXXX", line 8
    elif()
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:17:17) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	
	

-- ERROR:
File "XXXX", line 10
    
     ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:17:27) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
-- ERROR:
File "XXXX", line 8
    
                                             ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:18:23) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida)
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:18:31) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida):
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:19:49) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida):
		elif(comando==patada==2*n5pontosdevida):
			
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:20:14) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida):
		elif(comando==patada==2*n5pontosdevida):
			print(comando)
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:20:35) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida):
		elif(comando==patada==2*n5pontosdevida):
			print(comando)
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:21:40) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==cauda==perdadenpontosdevida):
	elif(comando==cuspe==2*npontosdevida):
		elif(comando==patada==2*n5pontosdevida):
			print(comando)

if
-- ERROR:
File "XXXX", line 8
    elif(comando==cuspe==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:22:08) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
if(comando==CAUDA==perdadenpontosdevida):
	elif(comando==CUSPE==2*npontosdevida):
		elif(comando==PATADA==2*n5pontosdevida):
			print(comando)

if
-- ERROR:
File "XXXX", line 8
    elif(comando==CUSPE==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:12) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno

if(comando==CAUDA==perdadenpontosdevida):
	elif(comando==CUSPE==2*npontosdevida):
		elif(comando==PATADA==2*n5pontosdevida):
			print(comando)

if():
-- ERROR:
File "XXXX", line 9
    elif(comando==CUSPE==2*npontosdevida):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:35) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno

if(comando==CAUDA==perdadenpontosdevida):
	
elif(comando==CUSPE==2*npontosdevida):
		elif(comando==PATADA==2*n5pontosdevida):
			print(comando)

if():
-- ERROR:
File "XXXX", line 10
    elif(comando==CUSPE==2*npontosdevida):
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:26:06) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno

if(comando==perdadenpontosdevida):
	print(CAUDA)
elif(comando==2*npontosdevida):
	print(CUSPE)
elif(comando==2*n5pontosdevida):
		print(PATADA)


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    if(comando==perdadenpontosdevida):
NameError: name 'perdadenpontosdevida' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:27:39) 
-- CODE:
comando= input("digite o comando:")
dado= input("valor sorteado:")
turno=input("digite o numero")
#cauda perde N pontos de vida por turno
#cuspe perde 2*N pontos de vida por turno
#patada 2*N-5pontos de vida por turno
perdadenpontosdevida= CAUDA
e2*npontosdevida= CUSPE
e2*n5pontosdevida= PATADA
if(comando==perdadenpontosdevida):
	print(CAUDA)
elif(comando==e2*npontosdevida):
	print(CUSPE)
elif(comando==2*n5pontosdevida):
		print(PATADA)


-- ERROR:
File "XXXX", line 8
    e2*npontosdevida= CUSPE
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:28:26) 
-- CODE:
x=input

-- ERROR:
File "XXXX", line 8
    e2*npontosdevida= CUSPE
    ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:34:10) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	PRINT("entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- EXECUTION TIME:
0.159337
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:15) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	PRINT("entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:34:55) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	PRINT("entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:35:15) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	PRINT("entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)
	
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:36:47) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("Entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)

	
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:37:03) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("Entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)

	
-- EXECUTION TIME:
0.139697
-- TEST CASE 1:
---- input:
CAUDA
2
6
---- correct output:
12
---- user output:
12
-- TEST CASE 2:
---- input:
PATADA
5
5
---- correct output:
Entrada invalida
---- user output:
Entrada invalida
-- TEST CASE 3:
---- input:
CUSPE
3
2
---- correct output:
12
---- user output:
12
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:43:18) 
-- CODE:
x=input("digite o ataque:").upper()
y=int(input("digite o valor:"))
z=int(input("digite o turno: "))

if(y<1) or (y>4):
	print("Entrada invalida")
elif(x!="CAUDA") and (x!="CUSPE") and (x!="PATADA"):
	print("Entrada invalida")
elif(x=="CAUDA"):
	h=y*z
	print(h)
elif(x=="CUSPE"):
	h=2*y*z
	print(h)
elif(x=="PATADA"):
	h=2*y-(5*z)
	print(h)

	
-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
