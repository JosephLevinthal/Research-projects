== TEST (2019-04-10 15:08:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))


-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:08:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))


-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:11:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço > 200
	mensagem = preço - (preço*5)/100
	


-- ERROR:
File "XXXX", line 5
    if preço > 200
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço > 200:
	mensagem = preço - (preço*5)/100
	


-- ERROR:
File "XXXX", line 5
    if preço > 200
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:11:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200:
	mensagem = preço - (preço*5)/100
	


-- ERROR:
File "XXXX", line 5
    if preço > 200
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:11:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200:
	mensagem = preço - (preço*5)/100
print(mensagem)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:11:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200:
	mensagem = preço - (preço*5)/100
print(mensagem)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:12:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200:
	mensagem = preço - (preço*5)/100
else:
	mensagem = preço
print(mensagem)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:12:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200:
	mensagem = preço - (preço*5)/100
else:
	mensagem = preço
print(mensagem)
	


-- EXECUTION TIME:
0.147727
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:13:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	mensagem = preço - (preço*5)/100
else:
	mensagem = preço
print(mensagem)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:13:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	mensagem = preço - (preço*5)/100
else:
	mensagem = preço
print(mensagem)
	


-- EXECUTION TIME:
0.284407
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:14:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = (5/100)* preço


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:14:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = (5/100)* preço
print(preço)


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:15:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = 5* preço
print(preço)


-- OUTPUT:
1000.45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:15:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = 5*preço/100
print(preço)


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:15:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = (5*preço)/100
print(preço)


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:16:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço*5/100
print(preço)


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:16:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = (preço*5)/100
print(preço)


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:17:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço - (preço*5)/100
	


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:17:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço - (preço*5)/100
	print(preço)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:17:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço - (preço*5)/100
	print(preço)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:17:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço - (preço*5)/100
	print(preço)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:17:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("digite o valor a ser pago:"))
if preço >= 200.00:
	preço = preço - (preço*5)/100
	print(preço)
	


-- EXECUTION TIME:
0.180398
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
	print(preço)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(preço)
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:25:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
print(preço)
	


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(preço)
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:26:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:26:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:26:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
print(compra)
	


-- EXECUTION TIME:
0.164636
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:27:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:27:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
else:
	compra = compra
print(compra)
	


-- EXECUTION TIME:
0.205862
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:30:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
	print(compra)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:31:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
	print(compra)
else:
	compra = compra
   print(compra)
	


-- ERROR:
File "XXXX", line 10
    print(compra)
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:31:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
	print(compra)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
190.0855
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:31:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:31:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*5/100)
else:
	compra = compra
print(compra)
	


-- EXECUTION TIME:
0.29777
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:32:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*0.25)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
150.0675
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:32:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*0.05)
else:
	compra = compra
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:32:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra >= 200.00:
	compra = compra - (compra*0.05)
else:
	compra = compra
print(compra)
	


-- EXECUTION TIME:
0.189938
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:36:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - (compra*0.05)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:36:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - (compra*0.05)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:36:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - (compra*0.05)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:36:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - (compra*0.05)
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:36:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - (compra*0.05)
print(compra)
	


-- EXECUTION TIME:
0.231808
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:41:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = 0.05%compra
print(compra)
	


-- OUTPUT:
0.05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:42:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = 0.05*compra
print(compra)
	


-- OUTPUT:
10.0045
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:42:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = 0.05*compra + compra
print(compra)
	


-- OUTPUT:
210.0945
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:42:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:42:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if compra < 200.00:
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- EXECUTION TIME:
0.142954
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:44:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if 199.99 <compra<200 .:
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- ERROR:
File "XXXX", line 5
    if 199.99 <compra<200 .:
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:44:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if 199.99 <compra<200 :
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:44:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if 199.99 <compra<200 :
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- EXECUTION TIME:
0.18666
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:44:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
compra = float(input("digite o valor a ser pago:"))
if 199.99 <compra<200 :
	compra = compra
else:
	compra = compra - 0.05*compra
print(compra)
	


-- EXECUTION TIME:
0.202333
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:47:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qualé u preçu?"))
if preço >= 200.00:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:47:46) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u preçu?"))
if preço >= 200.00:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:48:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u valor?"))
if preço >= 200.00:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:48:21) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u valor?"))
if preço >= 200.00:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
print(imprima)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 15:48:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u valor?"))
if preço >= 200.00:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
print(imprima)
-- EXECUTION TIME:
0.161776
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:52:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u valor?"))
if preço >= 200:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
print(imprima)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 15:57:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("qual u valor?"))
if preço >= 200:
	imprima = preço - (preço*5/100)
else:
	imprima = preço
print(round(imprima,2)
-- ERROR:
File "XXXX", line 10
    
                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:00:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra:"))

if (preço >= 200):
	preço = preço*0.95
else:
	imprima = preço
print(round(imprima,2)
-- ERROR:
File "XXXX", line 11
    
                          ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:00:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra:"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print(round(preço,2)
-- ERROR:
File "XXXX", line 11
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:00:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra:"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print(round(preço,2)
-- ERROR:
File "XXXX", line 11
    
                         ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:00:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra:"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (preço)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:00:54) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra:"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (preço)
-- EXECUTION TIME:
0.273379
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:01:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (preço)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:01:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (preço)
-- EXECUTION TIME:
0.200239
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:01:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (round (preço))
-- OUTPUT:
190
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:01:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preço = float(input("valor de compra"))

if (preço >= 200):
	preço = preço*0.95
else:
	preço = preço
print (round (preço))
-- EXECUTION TIME:
0.22618
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
191
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:02:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preço))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (round (preço))
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:02:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preço))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (round (preço))
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:02:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preço))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (round (preço))
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:02:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preço))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print (round (preço))
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:03:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:03:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:03:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:03:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- EXECUTION TIME:
0.212508
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:04:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:04:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (preco)
-- OUTPUT:
190.0855
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:04:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (preco)
-- EXECUTION TIME:
0.160544
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.0855
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5035
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:04:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:04:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco*0.95
else:
	preco = preco
print (round (preco , 2))
-- EXECUTION TIME:
0.196861
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:07:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco - preço*5/100
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    preco = preco - preço*5/100
NameError: name 'preço' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:07:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco - (preco*5/100)
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:07:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco - (preco*5/100)
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- EXECUTION TIME:
0.125124
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-10 16:07:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200):
	preco = preco - (preco*5/100)
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- EXECUTION TIME:
0.150322
-- TEST CASE 1:
---- input:
200.09
---- correct output:
190.09
---- user output:
190.09
-- TEST CASE 2:
---- input:
200.53
---- correct output:
190.5
---- user output:
190.5
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:09:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200): # se for maior ou igual ocorrerá desconto, macho.
	preco = preco - (preco*5/100) # lembrar que o desconto de um número pode ser escrito de varias formas (todas funcionam).
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:09:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200): # se for maior ou igual ocorrerá desconto, macho.
	preco = preco - (preco*5/100) # lembrar que o desconto de um número pode ser escrito de varias formas (todas funcionam).
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:09:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200): # se for maior ou igual ocorrerá desconto, macho.
	preco = preco - (preco*5/100) # lembrar que o desconto de um número pode ser escrito de varias formas (todas funcionam).
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-10 16:09:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
preco = float(input("valor de compra:"))

if (preco >= 200): # se for maior ou igual ocorrerá desconto, macho.
	preco = preco - (preco*5/100) # lembrar que o desconto de um número pode ser escrito de varias formas (todas funcionam).
else:
	preco = preco
print (round (preco , 2)) #use o "round" para arredondar o bagulho tipo se ficar 199.99 ele não
-- OUTPUT:
190.09
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
