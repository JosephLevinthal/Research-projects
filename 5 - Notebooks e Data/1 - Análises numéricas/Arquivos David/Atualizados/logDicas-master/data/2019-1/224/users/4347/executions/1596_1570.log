== TEST (2019-03-26 19:27:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
stringdeteste= "TUDO MAIUSCULO"
tudomaiusculo= stringdeteste.lower()
-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:27:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
stringdeteste= "TUDO MAIUSCULO"
tudomaiusculo= stringdeteste.lower()
-- EXECUTION TIME:
0.149077
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:27:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
stringdeteste= "TUDO MAIUSCULO"
tudomaiusculo= stringdeteste.lower()
print (tudomaiusculo)
-- EXECUTION TIME:
0.209245
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:27:46) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
stringdeteste= "TUDO MAIUSCULO"
tudo_maiusculo= stringdeteste.lower()
print (tudo_maiusculo)
-- EXECUTION TIME:
0.1592
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print (tudo_maiusculo)
-- EXECUTION TIME:
0.18809
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:28:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print (tudo_maiusculo)
-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print (tudo_maiusculo)
-- EXECUTION TIME:
0.195971
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print (tudo_maiusculo)
-- EXECUTION TIME:
0.210212
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:37) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste = "TUDO MAIUSCULO"
tudo_maiusculo = string_de_teste.lower()
print (tudo_maiusculo)
-- EXECUTION TIME:
0.162054
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:28:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.165777
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:01) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.165888
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.198179
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:05) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.135962
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.207467
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.127885
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.113768
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.150438
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.11052
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.129502
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.117149
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.143743
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.114902
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:29:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.179709
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:31:07) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"
tudo_maiusculo= string_de_teste.lower()
print(tudo_maiusculo)
-- EXECUTION TIME:
0.178006
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:32:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"

print (string_de_teste.lower())
-- EXECUTION TIME:
0.202835
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:32:14) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
string_de_teste= "TUDO MAIUSCULO"

print (string_de_teste.lower())
-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:32:43) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "TUDO MAIUSCULO"

print texto.lower()
-- EXECUTION TIME:
0.164643
-- ERROR:
  File "/home/codebench/codes/1596/1570/main.py", line 6
    print texto.lower()
              ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:32:44) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "TUDO MAIUSCULO"

print texto.lower()
-- ERROR:
File "XXXX", line 6
    print texto.lower()
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:32:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "TUDO MAIUSCULO"

print (texto.lower())
-- EXECUTION TIME:
0.207881
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:32:58) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "TUDO MAIUSCULO"

print (texto.lower())
-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:33:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.16097
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:33:49) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.175369
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.154053
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.137068
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.103119
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1596/1570/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:54) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.153929
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.140062
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.11344
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.121751
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.1101
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:33:55) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "BATMAN"

print (texto.lower())
-- EXECUTION TIME:
0.104867
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:34:35) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "Banana De Pijama"

print (texto.lower())
-- EXECUTION TIME:
0.187651
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
banana de pijama
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:34:39) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "Banana De Pijama"

print (texto.lower())
-- OUTPUT:
banana de pijama
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:35:20) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= "Banana De Pijama"
print (texto.lower())
-- EXECUTION TIME:
0.184387
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
banana de pijama
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:35:53) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

texto= "BANANA" print (texto.lower())
-- EXECUTION TIME:
0.140283
-- ERROR:
  File "/home/codebench/codes/1596/1570/main.py", line 5
    texto= "BANANA" print (texto.lower())
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 08:16:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

texto= "BANANA"
print (texto.lower())
-- EXECUTION TIME:
0.123268
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
banana
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 08:17:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

texto=input("BANANA")
print (texto.lower())
-- EXECUTION TIME:
0.133295
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
primeiro_caso_de_teste
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
