== SUBMITION (2019-04-15 00:27:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r=float(input("valor do raio:"))
h=float(input("valor da altura:"))
n=int(input("opcao desejada:"))
v1=((4*pi*(r)**3))/3
v2=((pi*(h)**2)*((3*r)-h))/3
eq=(v1-v2)
if(h==1):
	print(round(v2,4))
else:
	print(round(eq,4))
-- EXECUTION TIME:
0.15575
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 00:30:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
from math import*
r=float(input("valor do Raio:"))
h=float(input("valor da Altura:"))
n=int(input("Opcao desejada:"))
v1=((4*pi*(r)**3))/3
v2=((pi*(h)**2)*((3*r)-h))/3
eq=(v1-v2)
if(h==3):
	print(round(v2,4))
else:
	print(round(eq,4))
-- EXECUTION TIME:
0.188401
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
170.5687
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
