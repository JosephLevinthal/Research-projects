== TEST (2019-04-15 19:39:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if (num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if (num % 2 == 0)
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:39:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num = input("Digite um numero: ")

if ==(num % 2 == 0)
	mensagem = "Par"
else
	mensagem = "Impar"

print(mensagem)

-- ERROR:
File "XXXX", line 7
    if ==(num % 2 == 0)
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:57:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
	print("par":.lower)
else
	mensagem = "Impar"
	print("par":.lower)

print(mensagem)

-- EXECUTION TIME:
0.148788
-- ERROR:
  File "/home/codebench/codes/1649/2442/main.py", line 9
    print("par":.lower)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:57:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
	print("par":.lower)
else
	mensagem = "Impar"
	print("par":.lower)

print(mensagem)

-- EXECUTION TIME:
0.231841
-- ERROR:
  File "/home/codebench/codes/1649/2442/main.py", line 9
    print("par":.lower)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:57:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
	print("par":.lower)
else
	mensagem = "Impar"
	print("par":.lower)

print(mensagem)

-- ERROR:
File "XXXX", line 9
    print("par":.lower)
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:57:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
	print("par":.lower)
else
	mensagem = "Impar"
	print("par":.lower)

print(mensagem)

-- EXECUTION TIME:
0.199558
-- ERROR:
  File "/home/codebench/codes/1649/2442/main.py", line 9
    print("par":.lower)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 19:57:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
	print("par":.lower)
else
	mensagem = "Impar"
	print("par":.lower)

print(mensagem)

-- EXECUTION TIME:
0.162933
-- ERROR:
  File "/home/codebench/codes/1649/2442/main.py", line 9
    print("par":.lower)
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:59:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
print("par")
else
	mensagem = "Impar"
print(mensagem).lower()

-- ERROR:
File "XXXX", line 10
    else
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:59:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "Par"
print("par")
else:
	mensagem = "Impar"
print(mensagem).lower()

-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 20:00:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "par"
print("par")
else:
	mensagem = "impar"
print(mensagem).lower()

-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 20:01:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem)

-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 20:01:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

num=int(input("Digite um numero: "))

if num % 2 == 0 :
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem)

-- EXECUTION TIME:
0.184161
-- TEST CASE 1:
---- input:
55
---- correct output:
impar
---- user output:
impar
-- TEST CASE 3:
---- input:
842
---- correct output:
par
---- user output:
par
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 20:02:32) 
-- CODE:


num=int(input("Digite um numero: "))
if num % 2 == 0 :
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem)

-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 20:02:45) 
-- CODE:


num=int(input("Digite um numero: "))
if num % 2 == 0 :
	mensagem = "par"
else:
	mensagem = "impar"
print(mensagem)

-- OUTPUT:
impar
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
