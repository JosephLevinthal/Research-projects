== TEST (2019-04-09 18:39:11) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= conta//100
resto2= resto1%100
d3= conta//10
resto3=resto2%10
print(d1)
-- OUTPUT:
2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:39:29) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= conta//100
resto2= resto1%100
d3= conta//10
resto3=resto2%10
print(d2)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:39:58) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= conta//10
resto3=resto2%10
print(d2)
-- OUTPUT:
20
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:40:12) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= conta//10
resto3=resto2%10
print(d3)
-- OUTPUT:
200
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:42:40) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto3//10
d4=resto3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    d3= resto3//10
NameError: name 'resto3' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:43:14) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
resto3= resto2//10
d4=resto3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
NameError: name 'd3' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:44:05) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(*3)+(d4*2))%11
print(verificador)
-- ERROR:
File "XXXX", line 8
    verificador= ((d1*5)+(d2*4)+(*3)+(d4*2))%11
                                ^
SyntaxError: can't use starred expression here
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:44:13) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(*3)+(d4*2))%11
print(verificador)
-- ERROR:
File "XXXX", line 8
    verificador= ((d1*5)+(d2*4)+(*3)+(d4*2))%11
                                ^
SyntaxError: can't use starred expression here
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:44:24) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:44:39) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%1
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:45:00) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(d2)

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:45:08) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(d3)

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:45:18) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=d3%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(d4)

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:46:08) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=resto2%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)

-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:46:14) 
-- CODE:
conta= int(input("numero de quatro digitos"))
d1= conta//1000
resto1=conta%1000
d2= resto1//100
resto2= resto1%100
d3= resto2//10
d4=resto2%10
verificador= ((d1*5)+(d2*4)+(d3*3)+(d4*2))%11
print(verificador)

-- EXECUTION TIME:
0.114263
-- TEST CASE 1:
---- input:
2000
---- correct output:
10
---- user output:
10
-- TEST CASE 2:
---- input:
3550
---- correct output:
6
---- user output:
6
-- TEST CASE 3:
---- input:
0007
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
