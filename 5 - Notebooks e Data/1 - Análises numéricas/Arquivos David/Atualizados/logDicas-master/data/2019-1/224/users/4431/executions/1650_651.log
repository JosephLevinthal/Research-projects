== TEST (2019-04-05 13:45:37) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	x=(72.7*x)-58
	print(round(x,2))
else:
	x=(62.1*x)-44,7
	print(x)
-- OUTPUT:
(18.1, 7)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:46:37) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	x=(72.7*x)-58
else:
	x=(62.1*x)-44,7
print(round(x,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:47:06) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	x=(72.7*x)-58
	print(round(x,2))	
else:
	x=(62.1*x)-44,7
   print(round(x,2))	
	
-- ERROR:
File "XXXX", line 8
    print(round(x,2))	
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:54:23) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	z=(72.7*x)- 58
	print(round(z,2))	
else:
	x=(62.1*x)- 44,7
   print(round(z,2))	
	
-- ERROR:
File "XXXX", line 8
    print(round(z,2))	
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:54:29) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	z=(72.7*x)- 58
	print(round(z,2))	
else:
	z=(62.1*x)- 44,7
   print(round(z,2))	
	
-- ERROR:
File "XXXX", line 8
    print(round(z,2))	
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:54:52) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	z=(72.7*x)- 58	
else:
	z =(62.1*x)- 44,7
print(round(z,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(z,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:55:07) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	z=(72.7*x)- 58	
else:
	z =(62.1*x)- 44,7
	
print(round(z,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(z,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:55:18) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper=="M"):
	z=(72.7*x)- 58	
else:
	z =(62.1*x)- 44,7
	
print(round(z,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(z,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:55:52) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	z=(72.7*x)- 58	
else:
	z =(62.1*x)- 44,7
	
print(round(z,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(z,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:56:04) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	z=(72.7*x)- 58	
else:
	z =(62.1*x)- 44,7
	
print(round(z,2))	
	
-- EXECUTION TIME:
0.205897
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1650/651/main.py", line 8, in <module>
    print(round(z,2))	
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:56:30) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
	print(round(x,2))	
else:
	x =(62.1*x)- 44,7
   print(round(x,2))	
	
-- ERROR:
File "XXXX", line 8
    print(round(x,2))	
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:57:57) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
else:
	x =(62.1*x)- 44,7
print(round(x,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 13:58:10) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
else:
	x =(62.1*x)- 44,7
print(round(x,2))	
	
-- EXECUTION TIME:
0.185598
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1650/651/main.py", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:27:12) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
else:
	x =(62.1*x)- 44,7
print(round(x,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:27:24) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
else:
	x =(62.1*x)- 44,7
print(round(x,2))	
	
-- EXECUTION TIME:
0.124004
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1650/651/main.py", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:28:02) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
else:
	x =(62.1*x)- 44,7
print(round(x,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(round(x,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:28:37) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
if(s.upper()=="M"):
	x=(72.7*x)- 58
	print(round(x,2))	
else:
	x =(62.1*x)- 44,7
   print(round(x,2))	
	
-- ERROR:
File "XXXX", line 8
    print(round(x,2))	
                     ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:29:20) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
y=(62.1*x)- 44,7
if(s.upper()=="M"):
	print(round(x,2))	
else:
   print(round(y,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(y,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:30:57) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
y=(62.1*x)- 44,7
if(s.upper()!="M"):
	print(round(y,2))	
else:
   print(round(x,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    print(round(y,2))	
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:31:37) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
y=(62.1*x)- 44,7
if(s.upper()!="M"):
	print(round(y,2))	
else:
	x=round(x,2)
   print(x)	
	
-- ERROR:
File "XXXX", line 9
    print(x)	
            ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:32:15) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
y=(62.1*x)- 44,7
if(s.upper()=="M"):
	print(x)	
else:
   print(y)	
	
-- OUTPUT:
(868.8700000000002, 7)
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:32:59) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
x=round(x,2)
y=(62.1*x)- 44,7
y=round(y,2)
if(s.upper()=="M"):
	print(x)	
else:
   print(y)	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    y=round(y,2)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:33:38) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
g=round(x,2)
y=(62.1*x)- 44,7
a=round(y,2)
if(s.upper()=="M"):
	print(g)	
else:
   print(a)	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=round(y,2)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 14:38:40) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
g=round(x,2)
y=(62.1*x)- 44,7
a=round(y,2)
if(s.upper()=="M"):
	print(g)	
else:
   print(a)	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=round(y,2)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 14:39:18) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
g=round(x,2)
y=(62.1*x)- 44,7
a=round(y,2)
if(s.upper()=="F"):
	print(a)	
else:
   print(g)	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    a=round(y,2)
TypeError: type tuple doesn't define __round__ method
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 14:40:07) 
-- CODE:
x=float(input("Digite a aultura em metros: "))
s=input("Digite M ou F: ")
x=(72.7*x)- 58
g=round(x,2)
if(s.upper()=="F"):
	y=(62.1*x)- 44,7
   a=round(y,2)
	print(a)	
else:
   print(g)	
	
-- ERROR:
File "XXXX", line 7
    a=round(y,2)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 15:19:32) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper=="M"):
	m=(72.7*h)-58
	print(round(h,2))
	
-- ERROR:
File "XXXX", line 7
    a=round(y,2)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 15:19:37) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper=="M"):
	m=(72.7*h)-58
	print(round(m,2))
	
-- ERROR:
File "XXXX", line 7
    a=round(y,2)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 15:20:01) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper()=="M"):
	m=(72.7*h)-58
	print(round(m,2))
	
-- ERROR:
File "XXXX", line 7
    a=round(y,2)
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 15:20:50) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper()=="M"):
	m=(72.7*h)-58
	print(round(m,2))
else:
	f:(62.1*h)-44.7
	print(round(f,2))	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(round(f,2))	
NameError: name 'f' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 15:20:58) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper()=="M"):
	m=(72.7*h)-58
	print(round(m,2))
else:
	f=(62.1*h)-44.7
	print(round(f,2))	
	
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 15:21:08) 
-- CODE:
h=float(input("Digite a altura em metros: "))
s=input("Digite F ou M:")
if(s.upper()=="M"):
	m=(72.7*h)-58
	print(round(m,2))
else:
	f=(62.1*h)-44.7
	print(round(f,2))	
	
-- EXECUTION TIME:
0.123041
-- TEST CASE 1:
---- input:
1.0
F
---- correct output:
17.4
---- user output:
17.4
-- TEST CASE 2:
---- input:
1.234
M
---- correct output:
31.71
---- user output:
31.71
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
