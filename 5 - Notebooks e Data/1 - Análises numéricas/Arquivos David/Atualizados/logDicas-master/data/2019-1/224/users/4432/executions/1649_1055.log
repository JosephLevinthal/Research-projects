== SUBMITION (2019-04-11 19:04:46) 
-- CODE:
from math import*
v=float(input("v inicial:   "))
a=float(input("angulo:   "))
d=float(input("distancia:   "))
r=((v**2)*(sin(2*(radians(a)))))/9.8
r=abs(d)
if(d-r)<0.1:
	print("sim")
else:
	print("nao")
	
	

-- EXECUTION TIME:
0.151956
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:04:49) 
-- CODE:
from math import*
v=float(input("v inicial:   "))
a=float(input("angulo:   "))
d=float(input("distancia:   "))
r=((v**2)*(sin(2*(radians(a)))))/9.8
r=abs(d)
if(d-r)<0.1:
	print("sim")
else:
	print("nao")
	
	

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:04:54) 
-- CODE:
from math import*
v=float(input("v inicial:   "))
a=float(input("angulo:   "))
d=float(input("distancia:   "))
D=((v**2)*(sin(2*(radians(a)))))/9.8
r=abs(d)
if(d-r)<0.1:
	print("sim")
else:
	print("nao")
	
	

-- EXECUTION TIME:
0.131087
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
sim
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 19:05:08) 
-- CODE:
from math import*
v=float(input("v inicial:   "))
a=float(input("angulo:   "))
d=float(input("distancia:   "))
r=((v**2)*(sin(2*(radians(a)))))/9.8
r=abs(r)
if(d-r)<0.1:
	print("sim")
else:
	print("nao")
	
	

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 19:05:18) 
-- CODE:
from math import*
v=float(input("v inicial:   "))
a=float(input("angulo:   "))
d=float(input("distancia:   "))
r=((v**2)*(sin(2*(radians(a)))))/9.8
r=abs(r)
if(d-r)<0.1:
	print("sim")
else:
	print("nao")
	
	

-- EXECUTION TIME:
0.125729
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
