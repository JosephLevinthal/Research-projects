== SUBMITION (2019-05-14 18:47:24) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0)
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.148356
-- ERROR:
  File "/home/codebench/codes/1734/2495/main.py", line 3
    if(n%2==0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:47:45) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0)
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.177754
-- ERROR:
  File "/home/codebench/codes/1734/2495/main.py", line 3
    if(n%2==0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:47:45) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0)
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.214657
-- ERROR:
  File "/home/codebench/codes/1734/2495/main.py", line 3
    if(n%2==0)
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:48:11) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0)
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 3
    if(n%2==0)
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:48:23) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.17609
-- ERROR:
  File "/home/codebench/codes/1734/2495/main.py", line 5
    print(mensagem)
                  ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:48:27) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.198436
-- ERROR:
  File "/home/codebench/codes/1734/2495/main.py", line 5
    print(mensagem)
                  ^
TabError: inconsistent use of tabs and spaces in indentation

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:48:28) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		print(mensagem)
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:48:43) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.14642
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:

-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
IMPAR
IMPAR
IMPAR
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:48:47) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:48:49) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.14903
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:

-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
IMPAR
IMPAR
IMPAR
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:48:50) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.178762
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:

-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
IMPAR
IMPAR
IMPAR
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:48:53) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
TabError: inconsistent use of tabs and spaces in indentation
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:49:04) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"67
		
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 4
    mensagem = "PAR"67
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:49:10) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 4
    mensagem = "PAR"67
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:49:17) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 4
    mensagem = "PAR"67
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:49:17) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		
	else:
		mensagem = "IMPAR"
		print(mensagem)
	n= int(input("Digite um numero: "))

-- ERROR:
File "XXXX", line 4
    mensagem = "PAR"67
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-14 18:49:43) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		
	else:
		mensagem = "IMPAR"
	print(mensagem)
	n= int(input("Digite um numero: "))

-- OUTPUT:
PAR
PAR
PAR
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-14 18:49:45) 
-- CODE:
n=int(input("Digite um numero: "))
while (n!=-1):
	if(n%2==0):
	   mensagem = "PAR"
		
	else:
		mensagem = "IMPAR"
	print(mensagem)
	n= int(input("Digite um numero: "))

-- EXECUTION TIME:
0.139667
-- TEST CASE 1:
---- input:
0
22
44
-1
---- correct output:
PAR
PAR
PAR
---- user output:
PAR
PAR
PAR
-- TEST CASE 2:
---- input:
1
33
55
777
9999
-1
---- correct output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
---- user output:
IMPAR
IMPAR
IMPAR
IMPAR
IMPAR
-- TEST CASE 3:
---- input:
10528
4999
123
45
6
-1
---- correct output:
PAR
IMPAR
IMPAR
IMPAR
PAR
---- user output:
PAR
IMPAR
IMPAR
IMPAR
PAR
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
