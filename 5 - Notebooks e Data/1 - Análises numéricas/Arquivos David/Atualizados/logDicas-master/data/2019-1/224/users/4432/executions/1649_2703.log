== TEST (2019-04-08 23:09:43) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18)
	print("leitor")
	else
	print("nao_leitor")
-- ERROR:
File "XXXX", line 2
    if(idade>=18)
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 23:10:00) 
-- CODE:
idade=int(input("digite sua idade:   "))
 if(idade>=18)
	print("leitor")
	else
	print("nao_leitor")
-- ERROR:
File "XXXX", line 2
    if(idade>=18)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 23:11:17) 
-- CODE:
idade=int(input("digite sua idade:   "))
 if(idade>=18):
	print("leitor")
	else:
	print("nao_leitor")
-- ERROR:
File "XXXX", line 2
    if(idade>=18):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 23:12:02) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("leitor")
	else:
	print("nao_leitor")
-- ERROR:
File "XXXX", line 4
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-08 23:12:13) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("leitor")
else:
	print("nao_leitor")
-- OUTPUT:
nao_leitor
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 23:12:27) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("leitor")
else:
	print("nao_leitor")
-- EXECUTION TIME:
0.208107
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
nao_leitor
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
leitor
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
leitor
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-08 23:12:54) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitor")
else:
	print("nao_eleitor")
-- EXECUTION TIME:
0.192723
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
nao_eleitor
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
eleitor
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
eleitor
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:42:06) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitoidade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitor")
else:
	print("nao_eleitor")
-- EXECUTION TIME:
0.13435
-- ERROR:
  File "/home/codebench/codes/1649/2703/main.py", line 3
    print("eleitoidade=int(input())
                                  ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:42:23) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitoidade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitor")

	print("nao_eleitor")
-- EXECUTION TIME:
0.208691
-- ERROR:
  File "/home/codebench/codes/1649/2703/main.py", line 3
    print("eleitoidade=int(input())
                                  ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:49:28) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitoidade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitor")
else:
	print("nao_eleitor")
-- ERROR:
File "XXXX", line 3
    print("eleitoidade=int(input())
                                  ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:50:55) 
-- CODE:
idade=int(input("digite sua idade:   "))
if(idade>=18):
	print("eleitor")
else:
	print("nao_eleitor")
-- EXECUTION TIME:
0.169151
-- TEST CASE 1:
---- input:
15
---- correct output:
nao_eleitor
---- user output:
nao_eleitor
-- TEST CASE 2:
---- input:
21
---- correct output:
eleitor
---- user output:
eleitor
-- TEST CASE 3:
---- input:
60
---- correct output:
eleitor
---- user output:
eleitor
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
