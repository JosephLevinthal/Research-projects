== TEST (2019-04-14 20:07:59) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor)
	mensagem(suficiente)
else:
	mensagem(insuficiente)
	print(mensagem.upper())

-- ERROR:
File "XXXX", line 6
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor)
                                                                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:08:33) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem(suficiente)
else:
	mensagem(insuficiente)
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:08:43) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem(suficiente)
else:
	mensagem(insuficiente)
	print(mensagem.upper())

-- EXECUTION TIME:
0.160105
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:09:09) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem(suficiente)
else:
	mensagem(insuficiente)
	print(mensagem)

-- EXECUTION TIME:
0.151204
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:11:04) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- EXECUTION TIME:
0.177949
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:11:34) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.156067
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:11:48) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.187332
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:12:00) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes==valor):
NameError: name 'quantidade_de_passes' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:33:40) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes=<valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- EXECUTION TIME:
0.133273
-- ERROR:
  File "/home/codebench/codes/1649/2711/main.py", line 6
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes=<valor):
                                                                            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:34:02) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes=<valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
File "XXXX", line 6
    if(quantidade_de_tickets+valor_tickets+quantidade_de_passes+valor_passes=<valor):
                                                                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:38:08) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total=>valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
File "XXXX", line 7
    if(total=>valor):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:40:44) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total => valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
File "XXXX", line 7
    if(total => valor):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:41:13) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if("total" => valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
File "XXXX", line 7
    if("total" => valor):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:45:49) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:45:54) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- EXECUTION TIME:
0.179511
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:47:06) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:47:11) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.156951
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:47:15) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:48:15) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:52:22) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    total=(quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes)
NameError: name 'quantidade_de_passes_de_onibua' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:53:33) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:53:41) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.150475
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:53:43) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 20:54:19) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.146204
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
INSUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:54:39) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:16) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:39) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total =< valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
File "XXXX", line 7
    if(total =< valor):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:52) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total =< valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
File "XXXX", line 7
    if(total =< valor):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:56:07) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total = valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
File "XXXX", line 7
    if(total = valor):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:56:25) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibua+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:57:51) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets-valor_tickets-quantidade_de_passes_de_onibus-valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:59:02) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets-valor_tickets-quantidade_de_passes_de_onibus-valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:59:37) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets-valor_tickets-quantidade_de_passes_de_onibus-valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:00:37) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:01:11) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total > valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(total > valor):
TypeError: '>' not supported between instances of 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:08:01) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total >= valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(total >= valor):
TypeError: '>=' not supported between instances of 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:08:51) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem.upper())
else:
	mensagem= "insuficiente"
	print(mensagem.upper())

-- OUTPUT:
INSUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:09:13) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem.upper())
else:
	mensagem= "suficiente"
	print(mensagem.upper())

-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:09:33) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem.upper())
else:
	mensagem= "suficiente"
	print(mensagem.upper())

-- EXECUTION TIME:
0.150481
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
SUFICIENTE
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:09:53) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.160046
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
suficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:10:17) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- OUTPUT:
suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:10:53) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.174116
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
suficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:12:29) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(total,mensagem)
else:
	mensagem= "suficiente"
	print(total,mensagem)

-- EXECUTION TIME:
0.186319
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes suficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:12:35) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(total,mensagem)
else:
	mensagem= "suficiente"
	print(total,mensagem)

-- OUTPUT:
quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:13:04) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total=("quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes")
if(total == valor):
	mensagem= "insuficiente"
	print(total,mensagem)
else:
	mensagem= "suficiente"
	print(total,mensagem)

-- OUTPUT:
quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:13:44) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- OUTPUT:
suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:14:42) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:15:05) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
   else:
	mensagem= "insuficiente"
	print(mensagem)

-- ERROR:
File "XXXX", line 10
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:21:46) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets+valor_tickets+quantidade_de_passes_de_onibus+valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:23:21) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:24:03) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- EXECUTION TIME:
0.20805
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
insuficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:25:04) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == "valor"):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:30:55) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total.upper() == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:31:00) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total.upper() == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- EXECUTION TIME:
0.227656
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
insuficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:31:53) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total.upper() == valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(mensagem,upper())
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:31:57) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total.upper() == valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- EXECUTION TIME:
0.127355
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 12, in <module>
    print(mensagem,upper())
NameError: name 'upper' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:32:08) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- EXECUTION TIME:
0.154117
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 12, in <module>
    print(mensagem,upper())
NameError: name 'upper' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:33:42) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total < valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- EXECUTION TIME:
0.209537
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 7, in <module>
    if(total < valor):
TypeError: unorderable types: str() < float()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:33:46) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total < valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(total < valor):
TypeError: '<' not supported between instances of 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 21:34:58) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total <= valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- EXECUTION TIME:
0.193912
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 7, in <module>
    if(total <= valor):
TypeError: unorderable types: str() <= float()

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:35:01) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total <= valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if(total <= valor):
TypeError: '<=' not supported between instances of 'str' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:38:31) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem,upper())
else:
	mensagem= "insuficiente"
	print(mensagem,upper())

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    print(mensagem,upper())
NameError: name 'upper' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:39:07) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="quantidade_de_tickets*valor_tickets+quantidade_de_passes_de_onibus*valor_passes"
if(total == valor):
	mensagem= "suficiente"
	print(mensagem)
else:
	mensagem= "insuficiente"
	print(mensagem)

-- OUTPUT:
insuficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 22:44:46) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="(quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- OUTPUT:
suficiente
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:45:06) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())
total="(quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)"
if(total == valor):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.211682
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
suficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:47:17) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())

i fvalor < ((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.184278
-- ERROR:
  File "/home/codebench/codes/1649/2711/main.py", line 7
    i fvalor < ((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:47:32) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())

if valor < ((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.145935
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:48:38) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())

if valor<((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
	mensagem= "insuficiente"
	print(mensagem)
else:
	mensagem= "suficiente"
	print(mensagem)

-- EXECUTION TIME:
0.163942
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:50:24) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())

if valor < ((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
	print("insuficiente")

else:
	print("suficiente")


-- EXECUTION TIME:
0.16843
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
suficiente
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
insuficiente
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 22:52:07) 
-- CODE:
valor=float(input())
quantidade_de_tickets=int(input())
valor_tickets=float(input())
quantidade_de_passes_de_onibus=int(input())
valor_passes=float(input())

if valor < ((quantidade_de_tickets*valor_tickets)+(quantidade_de_passes_de_onibus*valor_passes)):
	print("INSUFICIENTE")

else:
	print("SUFICIENTE")


-- EXECUTION TIME:
0.122178
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
