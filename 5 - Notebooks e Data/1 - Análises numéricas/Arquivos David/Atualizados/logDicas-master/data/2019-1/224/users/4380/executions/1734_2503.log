== SUBMITION (2019-05-09 18:52:32) 
-- CODE:
from math import factorial
k=int(input()
e=1
indice=1
while( ):
	e - e + (1/ factorial(indice))
	indice-indice+1
print(round(e,8))
-- EXECUTION TIME:
0.742903
-- ERROR:
  File "/home/codebench/codes/1734/2503/main.py", line 3
    e=1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 18:52:52) 
-- CODE:
from math import factorial
k=int(input()
e=1
indice=1
while( ):
	e = e + (1/ factorial(indice))
	indice-indice+1
print(round(e,8))
-- EXECUTION TIME:
0.422699
-- ERROR:
  File "/home/codebench/codes/1734/2503/main.py", line 3
    e=1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 18:53:02) 
-- CODE:
from math import factorial
k=int(input()
e=1
indice=1
while( ):
	e = e + (1/ factorial(indice))
	indice=indice+1
print(round(e,8))
-- EXECUTION TIME:
0.786928
-- ERROR:
  File "/home/codebench/codes/1734/2503/main.py", line 3
    e=1
    ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:53:35) 
-- CODE:
from math import factorial
k=int(input()
e=1
indice=1
while( indice<=k ):
	e = e + (1/ factorial(indice))
	indice=indice+1
print(round(e,8))
-- ERROR:
File "XXXX", line 3
    e=1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:53:56) 
-- CODE:
from math import factorial
k = int(input()
e = 1
indice=1
while( indice<=k ):
	e = e + (1/ factorial(indice))
	indice=indice+1
print(round(e,8))
-- ERROR:
File "XXXX", line 3
    e = 1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-16 10:57:24) 
-- CODE:
n=int(input("numero: "))
s=0
i=0
f=n-1
while(i<=f):
	s=s+((-1)**i)*(4/(2*i+1))
	i=i+1
print(round(s,8))
-- OUTPUT:
3.13423981
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-16 10:57:35) 
-- CODE:
n=int(input("numero: "))
s=0
i=0
f=n-1
while(i<=f):
	s=s+((-1)**i)*(4/(2*i+1))
	i=i+1
print(round(s,8))
-- EXECUTION TIME:
0.171398
-- TEST CASE 1:
---- input:
136
---- correct output:
3.13423981
---- user output:
3.13423981
-- TEST CASE 2:
---- input:
22
---- correct output:
3.09616153
---- user output:
3.09616153
-- TEST CASE 3:
---- input:
15
---- correct output:
3.20818565
---- user output:
3.20818565
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
