== SUBMITION (2019-05-02 18:22:33) 
-- CODE:
x = float(input("digite x: "))

if(-1000<=x<-2 and x !=-2):
	y = -(1/x+2)
	print(y)
elif(2<x<=1000 and x != 2):
	y = (1/x-2)
	print(y)
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.143815
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
-1.9989999899999
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
-1.5024875621890548
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:22:39) 
-- CODE:
x = float(input("digite x: "))

if(-1000<=x<-2 and x !=-2):
	y = -(1/x+2)
	print(y)
elif(2<x<=1000 and x != 2):
	y = (1/x-2)
	print(y)
else:
	print("entrada invalida")
-- OUTPUT:
-1.9989999899999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:24:58) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/x+2)
	print(y)
elif(2<x<=1000 and x != 2):
	y = (1/x-2)
	print(y)
else:
	print("entrada invalida")
-- OUTPUT:
-1.9989999899999
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:25:24) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(y)
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(y)
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.13257
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.0010020140482369562
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.00000000000213
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:25) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(y)
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(y)
else:
	print("entrada invalida")
-- OUTPUT:
0.0010020140482369562
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:49) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:25:50) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.139936
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:25:52) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.159441
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
0.001
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
entrada invalida
entrada invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:25:52) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.20909
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
entrada invalida
entrada invalida
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
100.0
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:25:52) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.207377
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
entrada invalida
entrada invalida
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
100.0
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:25:54) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-02 18:26:02) 
-- CODE:
x = float(input("digite x: "))

if(-2<=x<=2):
	print("entrada invalida")
if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- OUTPUT:
0.001
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-02 18:26:13) 
-- CODE:
x = float(input("digite x: "))


if(-1000<=x<-2 and x !=-2):
	y = -(1/(x+2))
	print(round(y,4))
elif(2<x<=1000 and x != 2):
	y = (1/(x-2))
	print(round(y,4))
else:
	print("entrada invalida")
-- EXECUTION TIME:
0.14763
-- TEST CASE 1:
---- input:
-999.99
---- correct output:
0.001
---- user output:
0.001
-- TEST CASE 2:
---- input:
1.5
---- correct output:
entrada invalida
---- user output:
entrada invalida
-- TEST CASE 3:
---- input:
-2.01
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
