== TEST (2019-07-04 18:25:49) 
-- CODE:
from numpy import*
u=array(eval(input("digite um vetor de numeros inteiros: ")))
v=zeros(size(u), dtype=int)
c=0
for i in range(size(u)):
	if(u[i]!=1):
		v[c]=v[c]+u[i]
		c=c+1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 18:27:28) 
-- CODE:
from numpy import*
u=array(eval(input("digite um vetor de numeros inteiros: ")))
v=zeros(size(u), dtype=int)
c=0
for i in range(size(u)):
	if(u[i]!=1):
		v[c]=v[c]+u[i]
		c=c+1
for i in range(size(u)):
	if(u[i]==1):
		v[c]=v[c]+u[i]
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-04 18:28:50) 
-- CODE:
from numpy import*
u=array(eval(input("digite um vetor de numeros inteiros: ")))
v=zeros(size(u), dtype=int)
c=0
for i in range(size(u)):
	if(u[i]!=1):
		v[c]=v[c]+u[i]
		c=c+1
for i in range(size(u)):
	if(u[i]==1):
		v[c]=v[c]+u[i]
		c=c+1
print(v)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-04 18:28:57) 
-- CODE:
from numpy import*
u=array(eval(input("digite um vetor de numeros inteiros: ")))
v=zeros(size(u), dtype=int)
c=0
for i in range(size(u)):
	if(u[i]!=1):
		v[c]=v[c]+u[i]
		c=c+1
for i in range(size(u)):
	if(u[i]==1):
		v[c]=v[c]+u[i]
		c=c+1
print(v)
-- EXECUTION TIME:
0.934173
-- TEST CASE 1:
---- input:
[2,3,4,1,1,1,-1]
---- correct output:
[ 2  3  4 -1  1  1  1]
---- user output:
[ 2  3  4 -1  1  1  1]
-- TEST CASE 2:
---- input:
[1,1,1,5,4,3,2]
---- correct output:
[5 4 3 2 1 1 1]
---- user output:
[5 4 3 2 1 1 1]
-- TEST CASE 3:
---- input:
[1,0,1,2,0,1,4,1,5]
---- correct output:
[0 2 0 4 5 1 1 1 1]
---- user output:
[0 2 0 4 5 1 1 1 1]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
