== TEST (2019-03-26 18:00:13) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto= estou com fome 
print(texto,lowe())
-- ERROR:
File "XXXX", line 4
    texto= estou com fome 
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:00:56) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto=ESTOU COM FOME 
print(texto.lower())
-- ERROR:
File "XXXX", line 4
    texto=ESTOU COM FOME 
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:01:30) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="ESTOU COM FOME"
print(texto.lower())
-- OUTPUT:
estou com fome
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:01:32) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="ESTOU COM FOME"
print(texto.lower())
-- EXECUTION TIME:
0.165861
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou com fome
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:01:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto = "ESTOU COM FOME"
print(texto.lower())
-- OUTPUT:
estou com fome
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:01:50) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto = "ESTOU COM FOME"
print(texto.lower())
-- EXECUTION TIME:
0.157172
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou com fome
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:02:45) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto = "Estou Aprendendo Python"
print(texto.lower())
-- OUTPUT:
estou aprendendo python
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:02:47) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto = "Estou Aprendendo Python"
print(texto.lower())
-- EXECUTION TIME:
0.142628
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou aprendendo python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:03:00) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="Estou Aprendendo Python"
print(texto.lower())
-- OUTPUT:
estou aprendendo python
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:03:03) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="Estou Aprendendo Python"
print(texto.lower())
-- EXECUTION TIME:
0.152675
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou aprendendo python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:03:21) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="Estou Aprendendo Python"
print(texto.lower())
-- OUTPUT:
estou aprendendo python
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:03:26) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
texto="Estou Aprendendo Python"
print(texto.lower())
-- EXECUTION TIME:
0.139609
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou aprendendo python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:28:45) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:28:47) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- EXECUTION TIME:
0.15379
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:28:51) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:28:53) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- EXECUTION TIME:
0.165568
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:28:55) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:28:57) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- EXECUTION TIME:
0.153996
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:29:07) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:29:09) 
-- CODE:
texto="BATMAN"
print(texto.lower())


-- EXECUTION TIME:
0.146228
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
batman
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:07:21) 
-- CODE:
texto="Estou_Aprendendo_Python"
print(texto.lower())


-- OUTPUT:
estou_aprendendo_python
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:07:23) 
-- CODE:
texto="Estou_Aprendendo_Python"
print(texto.lower())


-- EXECUTION TIME:
0.224856
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou_aprendendo_python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:07:31) 
-- CODE:
texto="EstouAprendendoPython"
print(texto.lower())


-- OUTPUT:
estouaprendendopython
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:07:36) 
-- CODE:
texto="Estou Aprendendo Python"
print(texto.lower())


-- EXECUTION TIME:
0.153555
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou aprendendo python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:07:36) 
-- CODE:
texto="Estou Aprendendo Python"
print(texto.lower())


-- OUTPUT:
estou aprendendo python
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:07:38) 
-- CODE:
texto="Estou Aprendendo Python"
print(texto.lower())


-- EXECUTION TIME:
0.135801
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou aprendendo python
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:08:22) 
-- CODE:
texto="ESTOU COM FOME"
print(texto.lower())


-- OUTPUT:
estou com fome
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:08:24) 
-- CODE:
texto="ESTOU COM FOME"
print(texto.lower())


-- EXECUTION TIME:
0.180516
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou com fome
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:08:33) 
-- CODE:
texto="ESTOU_COM_FOME"
print(texto.lower())


-- OUTPUT:
estou_com_fome
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:08:40) 
-- CODE:
texto="ESTOU COM FOME"
print(texto.lower())


-- OUTPUT:
estou com fome
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:08:41) 
-- CODE:
texto="ESTOU COM FOME"
print(texto.lower())


-- EXECUTION TIME:
0.139821
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
estou com fome
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:27:32) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lowe()
print(tudo_minusculo)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    tudo_minusculo=string_de_teste.lowe()
AttributeError: 'str' object has no attribute 'lowe'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:27:42) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lower()
print(tudo_minusculo)

-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:27:44) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lower()
print(tudo_minusculo)

-- EXECUTION TIME:
0.253124
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:27:52) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lower()
print(tudo_minusculo)

-- EXECUTION TIME:
0.154316
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 19:28:13) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lower()
print(tudo_minusculo)

-- OUTPUT:
tudo maiusculo
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 19:28:16) 
-- CODE:
string_de_teste="TUDO MAIUSCULO"
tudo_minusculo=string_de_teste.lower()
print(tudo_minusculo)

-- EXECUTION TIME:
0.25304
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
tudo maiusculo
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-27 00:05:13) 
-- CODE:
texto=input("TUDO MAIUSCULO")
print(texto.lower())

-- EXECUTION TIME:
0.189055
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
primeiro_caso_de_teste
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
