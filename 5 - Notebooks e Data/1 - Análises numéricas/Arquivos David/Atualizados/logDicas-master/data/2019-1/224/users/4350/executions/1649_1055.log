== TEST (2019-04-15 23:33:32) 
-- CODE:
import math
-- OUTPUT:
SUFICIENTE
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:37:00) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = radians(input("angulo"))
d = float(input("distancia"))
g = 9,8


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = radians(input())
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:37:44) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.cos(math.radians(input("angulo")))
d = float(input("distancia"))
g = 9,8


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = math.cos(math.radians(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:38:00) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(input("angulo")))
d = float(input("distancia"))
g = 9,8


-- ERROR:
File "XXXX", line 3
    a = math.radians(input()))
                             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:38:08) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(input("angulo"))
d = float(input("distancia"))
g = 9,8


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = math.radians(input())
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:38:23) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = float(math.radians(input("angulo")))
d = float(input("distancia"))
g = 9,8


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = float(math.radians(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:38:45) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = float(math.radians(input()))
TypeError: must be real number, not str
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:47:23) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nÃ£o")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * math.sin(2*a))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 23:47:31) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.198625
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1055/main.py", line 6, in <module>
    r = ((v**2) * math.sin(2*a))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:47:31) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * math.sin(2*a))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:48:01) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * sin(2*a))/g
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:48:23) 
-- CODE:
from math import
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
File "XXXX", line 1
    from math import
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:49:16) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * sin(2*a))/g
NameError: name 'sin' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:49:25) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * math.sin(2*a))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:50:51) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a)) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * math.sin(2*a)) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:50:57) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a)) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * math.sin(2*a)) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:51:15) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
nao
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:51:41) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
t = ((v**2) * math.sin(2*a))
r = t/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    r = t/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:53:07) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
t = ((v**2) * math.sin(2*a))
r = t/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = radians(float(input()))
NameError: name 'radians' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:54:15) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
t = ((v**2) * math.sin(2*a))/9,8
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if abs(r-d) <= 0.1:
NameError: name 'r' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:54:24) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * math.sin(2*a))/9,8
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    if abs(r-d) <= 0.1:
TypeError: unsupported operand type(s) for -: 'tuple' and 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:55:32) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * (math.sin(2*a)))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * (math.sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:55:35) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = ((v**2) * (math.sin(2*a)))/g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = ((v**2) * (math.sin(2*a)))/g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:56:08) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = (v**2) * math.sin(2*a) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:56:40) 
-- CODE:
from math import *
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = math.radians(float(input()))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:56:49) 
-- CODE:
from math import *
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    a = math.radians(float(input()))
NameError: name 'math' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:57:00) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9,8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    r = (v**2) * math.sin(2*a) / g
TypeError: unsupported operand type(s) for /: 'float' and 'tuple'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 23:58:54) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9.8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- OUTPUT:
sim
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 23:59:02) 
-- CODE:
import math
v = float(input("velocidade inicial"))
a = math.radians(float(input("angulo")))
d = float(input("distancia"))
g = 9.8
r = (v**2) * math.sin(2*a) / g
if abs(r-d) <= 0.1:
	print("sim")
else:
	print("nao")

-- EXECUTION TIME:
0.156684
-- TEST CASE 1:
---- input:
10.5
45.5
11.3
---- correct output:
sim
---- user output:
sim
-- TEST CASE 2:
---- input:
29.5
17.1
51.0
---- correct output:
nao
---- user output:
nao
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
