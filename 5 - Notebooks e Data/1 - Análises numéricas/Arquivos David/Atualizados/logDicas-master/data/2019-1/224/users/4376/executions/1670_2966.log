== TEST (2019-04-16 19:06:09) 
-- CODE:
preco=float(input("valor do ingresso:  "))
quantyidade=float(input("qtd de ingressos:  "))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:09:37) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:11:22) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    preco=float(input())
ValueError: could not convert string to float: 'S'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:13:17) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()==S):
	x=bonificacao+bonificacao*0.2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(bonificacao.upper()==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:13:28) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()==S):
	x=bonificacao+bonificacao*0.2
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    if(bonificacao.upper()==S):
NameError: name 'S' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:04) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=bonificacao+bonificacao*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
-- ERROR:
File "XXXX", line 9
    
                                  ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:21) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=bonificacao+bonificacao*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x=bonificacao+bonificacao*0.2
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:18:33) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x="bonificacao+bonificacao*0.2"
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- OUTPUT:
bonificacao+bonificacao*0.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:18:50) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x="bonificacao+bonificacao*0.2"
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- OUTPUT:
bonificacao+bonificacao*0.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:19:28) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=bonificacao+bonificacao*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    x=bonificacao+bonificacao*0.2
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:21:02) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=27*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- OUTPUT:
5.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:21:16) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=27*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- EXECUTION TIME:
0.154665
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
5.4
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
5.4
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:
N
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:22:54) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- OUTPUT:
45.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:23:56) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(round(x))
else:
	if(bonificacao.upper()=="N"):
		print(bonificacao)
-- OUTPUT:
45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:24:50) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(round(x))
else:
	if(bonificacao.upper()=="N"):
		print(round(bonificacao))
-- OUTPUT:
45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:25:54) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:  "))
ingressos=int(input("qtd de ing:  "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(round(x))
else:
	if(bonificacao.upper()=="N"):
		print(round(bonificacao))
-- EXECUTION TIME:
0.174123
-- TEST CASE 1:
---- input:
S
37.50
6
---- correct output:
180
---- user output:
45
-- TEST CASE 2:
---- input:
S
26.95
8
---- correct output:
172.48
---- user output:
32
-- TEST CASE 3:
---- input:
N
42.45
3
---- correct output:
127.35
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:30) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:   "))
ingressos=int(input("qtd de ing:   "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(round(x))
else:
	if(bonificacao.upper()=="N"):
		print(round(bonificacao))
-- OUTPUT:
45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:48) 
-- CODE:
bonificacao=input("recebera bonificacao:?   (S/N) ")
preco=float(input("valor do ing:   "))
ingressos=int(input("qtd de ing:   "))
if(bonificacao.upper()=="S"):
	x=preco+preco*0.2
	print(round(x))
else:
	if(bonificacao.upper()=="N"):
		print(round(bonificacao))
-- OUTPUT:
45
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
