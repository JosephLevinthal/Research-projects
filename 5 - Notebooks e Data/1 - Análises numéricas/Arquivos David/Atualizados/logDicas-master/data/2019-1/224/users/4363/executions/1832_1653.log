== TEST (2019-06-13 18:59:29) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')]
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper():
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))		
-- ERROR:
File "XXXX", line 2
    n=input().split(',')]
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 18:59:36) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper():
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))		
-- ERROR:
File "XXXX", line 5
    if(n[1]==("ar").upper():
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:00:50) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper:
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:01:48) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()}:
		s[0]=s[0]+1
	if(n[1])==("br").upper}:
      s[1]=s[1]+1
	if(n[1])==("cl").upper()}:
		s[2]=s[2]+1
	if(n[1])==("co").upper()}:
		s[3]=s[3]+1
	if(n[1])==("uy").upper()}:
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 5
    if(n[1]==("ar").upper()}:
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:01:55) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper}:
      s[1]=s[1]+1
	if(n[1])==("cl").upper()}:
		s[2]=s[2]+1
	if(n[1])==("co").upper()}:
		s[3]=s[3]+1
	if(n[1])==("uy").upper()}:
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 7
    if(n[1])==("br").upper}:
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:01:59) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper}:
      s[1]=s[1]+1
	if(n[1])==("cl").upper()}:
		s[2]=s[2]+1
	if(n[1])==("co").upper()}:
		s[3]=s[3]+1
	if(n[1])==("uy").upper()}:
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 7
    if(n[1])==("br").upper}:
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:02:12) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:02:17) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper():
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 5
    if(n[1]==("ar").upper():
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:02:25) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper() :
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 5
    if(n[1]==("ar").upper() :
                            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:02:30) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:02:53) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1])==("br").upper():
      s[1]=s[1]+1
	if(n[1])==("cl").upper():
		s[2]=s[2]+1
	if(n[1])==("co").upper():
		s[3]=s[3]+1
	if(n[1])==("uy").upper():
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
0.751758
-- ERROR:
  File "/home/codebench/codes/1832/1653/main.py", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:04:02) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
      s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:10:31) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+ 1
	if(n[1]==("br").upper()):
      s[1]=s[1]+ 1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+ 1
	if(n[1]==("co").upper()):
		s[3]=s[3]+ 1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+ 1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+ 1
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:10:40) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0] + 1
	if(n[1]==("br").upper()):
      s[1]=s[1] + 1
	if(n[1]==("cl").upper()):
		s[2]=s[2] + 1
	if(n[1]==("co").upper()):
		s[3]=s[3] + 1
	if(n[1]==("uy").upper()):
		s[4]=s[4] + 1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1] + 1
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:11:02) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5,dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
      s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
File "XXXX", line 8
    s[1]=s[1]+1
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:12:27) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0] + 1
	if(n[1]==("br").upper()):
		s[1]=s[1] + 1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+ 1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:12:32) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0] + 1
	if(n[1]==("br").upper()):
		s[1]=s[1] + 1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+ 1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
0.837582
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:12:34) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0] + 1
	if(n[1]==("br").upper()):
		s[1]=s[1] + 1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+ 1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:13:00) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:13:10) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:13:21) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
0.864217
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
15
[ 0 15  0  0  0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:13:23) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:13:23) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
1.94512
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:13:24) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
2.54328
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
6
[0 0 0 6 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:

-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:15:20) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:16:09) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:16:11) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:16:22) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
2.08534
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
digite o  vetor:7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:16:22) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
1.86438
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:16:22) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
4.28343
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:16:23) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
6.31129
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:16:23) 
-- CODE:
from numpy import*
n=input("digite o  vetor:").split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
6.49903
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
digite o  vetor:15
[ 0 15  0  0  0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:19:04) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:19:05) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)
-- EXECUTION TIME:
0.746043
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
7
[0 7 0 0 0]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
15
[ 0 15  0  0  0]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:6
[0 0 0 6 0]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:19:29) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
print(n)
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[1]==("ar").upper()):
		s[0]=s[0]+1
	if(n[1]==("br").upper()):
		s[1]=s[1]+1
	if(n[1]==("cl").upper()):
		s[2]=s[2]+1
	if(n[1]==("co").upper()):
		s[3]=s[3]+1
	if(n[1]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:20:15) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]==("ar").upper()):
		s[0]=s[0]+1
	if(n[i]==("br").upper()):
		s[1]=s[1]+1
	if(n[i]==("cl").upper()):
		s[2]=s[2]+1
	if(n[i]==("co").upper()):
		s[3]=s[3]+1
	if(n[i]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:20:17) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]==("ar").upper()):
		s[0]=s[0]+1
	if(n[i]==("br").upper()):
		s[1]=s[1]+1
	if(n[i]==("cl").upper()):
		s[2]=s[2]+1
	if(n[i]==("co").upper()):
		s[3]=s[3]+1
	if(n[i]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- EXECUTION TIME:
0.811956
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
3
[1 2 0 3 1]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
3
[1 2 0 3 1]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:2
[1 0 1 2 2]
-- GRADE:
33%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:20:19) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]==("ar").upper()):
		s[0]=s[0]+1
	if(n[i]==("br").upper()):
		s[1]=s[1]+1
	if(n[i]==("cl").upper()):
		s[2]=s[2]+1
	if(n[i]==("co").upper()):
		s[3]=s[3]+1
	if(n[i]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- EXECUTION TIME:
2.30318
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
digite o  vetor:3
[1 2 0 3 1]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
digite o  vetor:4
[3 4 3 2 3]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:2
[1 0 1 2 2]
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:21:40) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]==("ar").upper()):
		s[0]=s[0]+1
	if(n[i]==("br").upper()):
		s[1]=s[1]+1
	if(n[i]==("cl").upper()):
		s[2]=s[2]+1
	if(n[i]==("co").upper()):
		s[3]=s[3]+1
	if(n[i]==("uy").upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:22:22) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="ar".upper()):
		s[0]=s[0]+1
	if(n[i]=="br".upper()):
		s[1]=s[1]+1
	if(n[i]=="cl".upper()):
		s[2]=s[2]+1
	if(n[i]=="co".upper()):
		s[3]=s[3]+1
	if(n[i]=="uy".upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:22:23) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="ar".upper()):
		s[0]=s[0]+1
	if(n[i]=="br".upper()):
		s[1]=s[1]+1
	if(n[i]=="cl".upper()):
		s[2]=s[2]+1
	if(n[i]=="co".upper()):
		s[3]=s[3]+1
	if(n[i]=="uy".upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- EXECUTION TIME:
0.767517
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
3
[1 2 0 3 1]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
4
[3 4 3 2 3]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
digite o  vetor:2
[1 0 1 2 2]
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:22:39) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="ar".upper()):
		s[0]=s[0]+1
	if(n[i]=="br".upper()):
		s[1]=s[1]+1
	if(n[i]=="cl".upper()):
		s[2]=s[2]+1
	if(n[i]=="co".upper()):
		s[3]=s[3]+1
	if(n[i]=="uy".upper()):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:24:05) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="AR"):
		s[0]=s[0]+1
	if(n[i]=="BR"):
		s[1]=s[1]+1
	if(n[i]=="CL"):
		s[2]=s[2]+1
	if(n[i]=="CO"):
		s[3]=s[3]+1
	if(n[i]=="UY"):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 19:24:50) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.upper()
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="AR"):
		s[0]=s[0]+1
	if(n[i]=="BR"):
		s[1]=s[1]+1
	if(n[i]=="CL"):
		s[2]=s[2]+1
	if(n[i]=="CO"):
		s[3]=s[3]+1
	if(n[i]=="UY"):
		s[4]=s[4]+1
print(max(s))
print(s)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 19:25:00) 
-- CODE:
from numpy import*
n=input("digite o  vetor:")
n=n.upper()
n=n.split(',')
s= zeros(5, dtype=int)
for i in range(size(n)):
	if(n[i]=="AR"):
		s[0]=s[0]+1
	if(n[i]=="BR"):
		s[1]=s[1]+1
	if(n[i]=="CL"):
		s[2]=s[2]+1
	if(n[i]=="CO"):
		s[3]=s[3]+1
	if(n[i]=="UY"):
		s[4]=s[4]+1
print(max(s))
print(s)

-- EXECUTION TIME:
1.10114
-- TEST CASE 1:
---- input:
CO,BR,CO,CO,BR,AR,UY
---- correct output:
3
[1 2 0 3 1]
---- user output:
3
[1 2 0 3 1]
-- TEST CASE 2:
---- input:
CL,BR,CL,AR,AR,AR,BR,BR,CO,UY,BR,CL,UY,CO,UY
---- correct output:
4
[3 4 3 2 3]
---- user output:
4
[3 4 3 2 3]
-- TEST CASE 3:
---- input:
UY,CO,CO,AR,CL,UY
---- correct output:
2
[1 0 1 2 2]
---- user output:
2
[1 0 1 2 2]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
