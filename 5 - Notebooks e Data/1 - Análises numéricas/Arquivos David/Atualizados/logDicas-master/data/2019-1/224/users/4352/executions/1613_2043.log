== TEST (2019-03-29 11:58:25) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 11:58:35) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- EXECUTION TIME:
0.182892
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 11:58:46) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 11:59:07) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- EXECUTION TIME:
0.126252
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 11:59:08) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 11:59:15) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 11:59:19) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- EXECUTION TIME:
0.170715
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 11:59:21) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 11:59:54) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:00:03) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- EXECUTION TIME:
0.112512
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.0
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:00:03) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)//4
print(round(mp, 2))
-- OUTPUT:
20.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:00:35) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:00:55) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:01:00) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- EXECUTION TIME:
0.173342
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1613/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:01:04) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:01:13) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:01:18) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- EXECUTION TIME:
0.138889
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1613/2043/main.py", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:01:19) 
-- CODE:
n1 = int(input("digite uma nota: "))
n2 = int(input("digite uma nota: "))
n3 = int(input("digite uma nota: "))
n4 = int(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    n2 = int(input())
ValueError: invalid literal for int() with base 10: '8.5'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:01:39) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:01:48) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- EXECUTION TIME:
0.129281
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:01:49) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4)/4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:11:14) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:11:26) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:11:37) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 4
print(round(mp, 2))
-- EXECUTION TIME:
0.202557
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:11:39) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:20:01) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:20:06) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- EXECUTION TIME:
0.153917
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:20:07) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:22:09) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:22:13) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- EXECUTION TIME:
0.141444
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:22:14) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:22:19) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- EXECUTION TIME:
0.19572
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
20.5
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
17.5
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
19.84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:22:19) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = ((n1*1) + (n2*2) + (n3*3) + (n4*4)) / 4
print(round(mp, 2))
-- OUTPUT:
20.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:22:49) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 16
print(round(mp, 2))
-- OUTPUT:
5.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:22:56) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 16
print(round(mp, 2))
-- EXECUTION TIME:
0.164672
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
5.12
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
4.38
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
4.96
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:22:56) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 16
print(round(mp, 2))
-- OUTPUT:
5.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:23:05) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 16
print(round(mp, 2))
-- OUTPUT:
5.12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-29 12:23:26) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 10
print(round(mp, 2))
-- OUTPUT:
8.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-29 12:23:35) 
-- CODE:
n1 = float(input("digite uma nota: "))
n2 = float(input("digite uma nota: "))
n3 = float(input("digite uma nota: "))
n4 = float(input("digite uma nota: "))
mp = (n1*1 + n2*2 + n3*3 + n4*4) / 10
print(round(mp, 2))
-- EXECUTION TIME:
0.153604
-- TEST CASE 1:
---- input:
8
8.5
7
9
---- correct output:
8.2
---- user output:
8.2
-- TEST CASE 2:
---- input:
7
7
7
7
---- correct output:
7.0
---- user output:
7.0
-- TEST CASE 3:
---- input:
5.75
6.9
7.95
8.99
---- correct output:
7.94
---- user output:
7.94
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
