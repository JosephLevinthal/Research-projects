== TEST (2019-04-16 19:06:46) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	
-- ERROR:
File "XXXX", line 2
    if (quantidade<=20):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:07:04) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    if (quantidade<=20):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:07:42) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    if (quantidade<=20):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:07:50) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if (quantidade<=20):
	x= 50+quantidade
print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
print(pagamento)
-- ERROR:
File "XXXX", line 2
    if (quantidade<=20):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:07:59) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if ("quantidade"<=20):
	x= 50+quantidade
print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
print(pagamento)
-- ERROR:
File "XXXX", line 2
    if ("quantidade"<=20):
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:08:15) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if quantidade <= 20:
	x= 50+quantidade
print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
print(pagamento)
-- ERROR:
File "XXXX", line 2
    if quantidade <= 20:
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:08:20) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if quantidade<=20:
	x= 50+quantidade
print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
print(pagamento)
-- ERROR:
File "XXXX", line 2
    if quantidade<=20:
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:09:45) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
if quantidade<=20:
	x= 50+quantidade
print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
print(pagamento)
-- ERROR:
File "XXXX", line 2
    if quantidade<=20:
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:11:29) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= 50.0*quantidade
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= 50.0*quantidade
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:11:41) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= 50.0*quantidade
if (pagamento<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= 50.0*quantidade
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:11:51) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= 50.0*quantidade
if(pagamento<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= 50.0*quantidade
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:12:11) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= 50.0*quantidade
if ("quantidade"<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= 50.0*quantidade
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:12:16) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= 50*quantidade
if ("quantidade"<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= 50*quantidade
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:12:40) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= quantidade*50
if ("quantidade"<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= quantidade*50
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:12:51) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
pagamento= quantidade*50
if (quantidade=<20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    pagamento= quantidade*50
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:13:00) 
-- CODE:
quantidade= float(input("quantidade de horas: ")

if (quantidade=<20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 3
    if (quantidade=<20):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:14:49) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quntidade * 50
if (quantidade=<20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    y= quntidade * 50
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:14:59) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quntidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    y= quntidade * 50
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:05) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    y= quantidade * 50
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:18) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quantidade * 50.0
if (quantidade<=20.0):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    y= quantidade * 50.0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:28) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quantidade * 50.0
if (quantidade<=20.0):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50.0 + 70.0*quantidade
	print(pagamento)
-- ERROR:
File "XXXX", line 2
    y= quantidade * 50.0
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:15:57) 
-- CODE:
quantidade= float(input("quantidade de horas: ")
y= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    y= quantidade * 50
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:16:28) 
-- CODE:
quantidade= float(input("horas: ")
y= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    y= quantidade * 50
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:17:31) 
-- CODE:
quantidade= float(input("horas: ")
sem= input("semana: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    sem= input()
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:18:03) 
-- CODE:
quantidade= float(input("horas: ")
sem= input("semana: ")
if (quantidade<=20*sem):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    sem= input()
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:21:01) 
-- CODE:
quantidade= float(input("horas: ")
sem= input("semana: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    sem= input()
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:21:43) 
-- CODE:
quantidade= float(input("horas: ")
sem= input("semana: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    sem= input()
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:21:49) 
-- CODE:
quantidade= float(input("horas: ")
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 2
    if (quantidade<=20):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:22:13) 
-- CODE:
quantidade= float(input("horas: "))
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
65 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:22:17) 
-- CODE:
quantidade= float(input("horas: "))
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.179367
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
65 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:22:25) 
-- CODE:
quantidade= float(input("horas: "))
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
65 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:22:33) 
-- CODE:
quantidade= float(input("horas: "))
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.129409
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
65 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:23:17) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
65 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:23:22) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.139205
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
65 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:23:24) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50+quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.259096
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
65 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:24:22) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:24:26) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.222221
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:24:52) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:25:11) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= quantidade*50.0
	
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:25:16) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= quantidade*50.0
	
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:25:26) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= quantidade*50.00
	
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:25:32) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= quantidade*50.00
	
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:01) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
		print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- ERROR:
File "XXXX", line 5
    print(round(x),2)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:07) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
	print(round(x),2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:17) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
	print(round(x), 2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:26:26) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
	print(round(x), 2)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.14633
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:26:38) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:26:42) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= sem
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.200187
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:27:04) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
50
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:27:12) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
50
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:27:27) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:27:30) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:27:35) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	pagamento= 50 + 70*quantidade
	print(round(pagamento),2)
-- EXECUTION TIME:
0.190842
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3200 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3410 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:28:31) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(round(pagamento),2)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:28:35) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(round(pagamento),2)
-- EXECUTION TIME:
0.300103
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:

-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:28:36) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(round(pagamento),2)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:28:45) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
print(round(pagamento),2)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    print(round(pagamento),2)
NameError: name 'pagamento' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:28:57) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:29:08) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:29:12) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(r)
-- EXECUTION TIME:
0.195136
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2320.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2470.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:29:16) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(r)
-- EXECUTION TIME:
0.181104
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
2320.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
2470.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:29:16) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:29:27) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:30:57) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70* quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:31:01) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70* quantidade
	print(r)
-- EXECUTION TIME:
0.147735
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
5400.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
5760.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:31:23) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.146581
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
5400.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
5760.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:31:24) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:31:31) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.219304
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
5400.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
5760.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:32:01) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x,2))

else:
	r= sem + 70 * quantidade
	print(round(r,2))
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:32:05) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x,2))

else:
	r= sem + 70 * quantidade
	print(round(r,2))
-- EXECUTION TIME:
0.168515
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
5400.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
5760.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:32:21) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	r= sem + 70 * quantidade
	print(round(r),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:32:26) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	r= sem + 70 * quantidade
	print(round(r),2)
-- EXECUTION TIME:
0.107861
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750 2
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
5400 2
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
5760 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:32:27) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(round(x),2)

else:
	r= sem + 70 * quantidade
	print(round(r),2)
-- OUTPUT:
750 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:32:56) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:33:06) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:33:19) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 25
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:33:53) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:34:05) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:35:05) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:36:41) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:36:49) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:36:53) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.168984
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
57150.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
60960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:36:55) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.290202
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
60960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:36:55) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.134859
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
57150.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:36:55) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50*24
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.356684
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
60960.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:

-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
60960.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:02) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 50
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:37:23) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 7
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- EXECUTION TIME:
0.185573
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3465.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
3696.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:24) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 7
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:31) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 4
if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:39) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 2

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:46) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 1

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:37:57) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 2

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:38:02) 
-- CODE:
quantidade= float(input("horas: "))
sem= quantidade * 20

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:39:21) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade *

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- ERROR:
File "XXXX", line 4
    sem= quantidade *
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:39:26) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade * 50

if (quantidade<=20):
	x= 50*quantidade
	print(x)

else:
	r= sem + 70 * quantidade
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:40:17) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	print(pagamento)

else:
	r= sem + 70 * quantidade
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:40:30) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	print(pagamento)

else:
	r= sem + 70 * quantidade
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:40:43) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	print(pagamento)

else:
	r= sem + 50 * quantidade
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:43:39) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= 
	print(pagamento)

else:
	r=
	print(r)
-- ERROR:
File "XXXX", line 7
    x= 
      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:43:44) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem
	print(pagamento)

else:
	r=
	print(r)
-- ERROR:
File "XXXX", line 11
    r=
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:43:51) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r=
	print(r)
-- ERROR:
File "XXXX", line 11
    r=
     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:44:36) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:44:46) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- EXECUTION TIME:
0.139652
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1670/1394/main.py", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:44:46) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:44:53) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:00) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:11) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:18) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:45:22) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:15) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:32) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50-30
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:36) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50-30
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:46:59) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:47:41) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:47:49) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- EXECUTION TIME:
0.157701
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1670/1394/main.py", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:47:52) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= sem + 70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:48:37) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= 20-70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:48:56) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= 20+70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:49:27) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= quantidade - 20 +70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:49:40) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= quantidade - 20
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:49:55) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= quantidade - 20*70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:51:04) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= (quantidade - 20)*50
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:51:40) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:51:47) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- EXECUTION TIME:
0.155019
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1670/1394/main.py", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:51:48) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= sem*50
	print(pagamento)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:52:14) 
-- CODE:
quantidade= float(input("horas: "))
pagamento= float(input("valor: "))

sem= quantidade*pagamento

if (quantidade<=20):
	x= quantidade*pagamento*50
	print(pagamento)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    pagamento= float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:52:53) 
-- CODE:
quantidade= float(input("horas: "))


sem= 50*pagamento

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    sem= 50*pagamento
NameError: name 'pagamento' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:53:07) 
-- CODE:
quantidade= float(input("horas: "))


sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	r= (quantidade - 20)*50+70
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:53:23) 
-- CODE:
quantidade= float(input("horas: "))


sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	r= (quantidade - 20)*50
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:54:30) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	r= (quantidade - 20)*50+70*
	print(r)
-- ERROR:
File "XXXX", line 10
    r= (quantidade - 20)*50+70*
                              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:54:41) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	r= (quantidade - 20)*50+70*2
	print(r)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:55:15) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*2
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:56:16) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*sem
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:56:20) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*sem
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:56:20) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*sem
	print(pagamento)
-- EXECUTION TIME:
0.264216
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
158750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
horas: 169400.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:56:20) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*sem
	print(pagamento)
-- EXECUTION TIME:
0.140421
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
158750.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
horas: 169400.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:56:37) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:56:58) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:57:04) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- EXECUTION TIME:
0.219442
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3900.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4260.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:57:07) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:57:19) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- EXECUTION TIME:
0.13958
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
750.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3900.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4260.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:57:21) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:57:47) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:57:52) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:58:01) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
750.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:58:22) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50+70
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- OUTPUT:
820.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 19:58:26) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50+70
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade-500
	print(pagamento)
-- EXECUTION TIME:
0.147434
-- TEST CASE 1:
---- input:
15
---- correct output:
750.0
---- user output:
820.0
-- TEST CASE 2:
---- input:
45
---- correct output:
2750.0
---- user output:
3900.0
-- TEST CASE 3:
---- input:
48
---- correct output:
2960
---- user output:
4260.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:58:29) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50+70
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade
	print(pagamento)
-- OUTPUT:
820.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:58:42) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50+70
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade
	print(pagamento)
-- OUTPUT:
820.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 19:58:52) 
-- CODE:
quantidade= float(input("horas: "))

sem= 50*quantidade

if (quantidade<=20):
	x= quantidade*50+70-500
	print(x)

else:
	pagamento= (quantidade - 20)*50+70*quantidade
	print(pagamento)
-- OUTPUT:
320.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
