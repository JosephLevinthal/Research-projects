== TEST (2019-03-31 01:11:13) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(dano)

-- OUTPUT:
12.105672378589148
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:11:56) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:12:08) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.133356
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:12:47) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:14:01) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = (sqrt(5*D1) + pi**(D2/3))
print(int(dano))

-- EXECUTION TIME:
0.199844
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:16:02) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + (pi**(D2/3))
print(int(dano))

-- EXECUTION TIME:
0.19869
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:16:12) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = (sqrt(5*D1)) + (pi**(D2/3))
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:16:23) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = (sqrt(5*D1)) + (pi**(D2/3))
print(int(dano))

-- EXECUTION TIME:
0.136927
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:18:15) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + (pi**(D2/3))
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:18:24) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + (pi**(D2/3))
print(int(dano))

-- EXECUTION TIME:
0.12244
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:19:14) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.141999
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:19:41) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.19567
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
11
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
14
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:19:43) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
11
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:20:38) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.16537
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:20:47) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:21:58) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = float(input("Digite valor 1: "))
D2 = float(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:22:07) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = float(input("Digite valor 1: "))
D2 = float(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:22:17) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = float(input("Digite valor 1: "))
D2 = float(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.219971
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:04) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
pi = 3.14
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.195888
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:37) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.145375
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
Digite pontos de vida: Digite valor 1: Digite valor 2: 12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
Digite pontos de vida: Digite valor 1: Digite valor 2: 15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
Digite pontos de vida: Digite valor 1: Digite valor 2: 3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:42) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.133225
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
12
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:42) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.161467
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
15
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
3
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
12
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:43) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.145595
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
15
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
3
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
15
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:43) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.393558
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:

-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:23:43) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.436884
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
3
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
3
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:23:45) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:24:48) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 01:25:02) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.137002
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:26:17) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 01:31:58) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:24:42) 
-- CODE:
from math import*
pv = float(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.159419
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:25:01) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.126272
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:25:07) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- EXECUTION TIME:
0.181759
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
12
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
15
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
3
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:25:09) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
print(int(dano))

-- OUTPUT:
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:26:02) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
f = pv - dano
print(int(f))

-- EXECUTION TIME:
0.219286
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:26:06) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
dano = sqrt(5*D1) + pi**(D2/3)
f = pv - dano
print(int(f))

-- EXECUTION TIME:
0.171472
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
187
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
284
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
496
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:27:35) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
d = int(sqrt(5*D1) + pi**(D2/3))
f = pv - dano
print(f)

-- EXECUTION TIME:
0.190774
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1613/1802/main.py", line 6, in <module>
    f = pv - dano
NameError: name 'dano' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:27:37) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
d = int(sqrt(5*D1) + pi**(D2/3))
f = pv - dano
print(f)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    f = pv - dano
NameError: name 'dano' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-04 19:27:52) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
d = int(sqrt(5*D1) + pi**(D2/3))
f = pv - d
print(f)

-- OUTPUT:
188
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-04 19:27:57) 
-- CODE:
from math import*
pv = int(input("Digite pontos de vida: "))
D1 = int(input("Digite valor 1: "))
D2 = int(input("Digite valor 2: "))
d = int(sqrt(5*D1) + pi**(D2/3))
f = pv - d
print(f)

-- EXECUTION TIME:
0.147476
-- TEST CASE 1:
---- input:
200
1
6
---- correct output:
188
---- user output:
188
-- TEST CASE 2:
---- input:
300
6
6
---- correct output:
285
---- user output:
285
-- TEST CASE 3:
---- input:
500
1
1
---- correct output:
497
---- user output:
497
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
