== TEST (2019-05-09 18:58:31) 
-- CODE:
hab_A = int(input("numero de habitantes de A: "))
hab_B = int(input("numero de habitantes de B: "))
p_A = float(input("percentual de crescimento de A"))
p_B = float(input("percentual de crescimento de B"))
t = 0 
while (hab_A < hab_b):
	hab_A = hab_A + hab_A*(p_A/100)
	hab_B = hab_B + hab_B*(p_B/100)
	t = t + 1
	print(t)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    while (hab_A < hab_b):
NameError: name 'hab_b' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:59:09) 
-- CODE:
hab_A = int(input("numero de habitantes de A: "))
hab_B = int(input("numero de habitantes de B: "))
p_A = float(input("percentual de crescimento de A: "))
p_B = float(input("percentual de crescimento de B: "))
t = 0 
while (hab_A < hab_B):
	hab_A = hab_A + hab_A*(p_A/100)
	hab_B = hab_B + hab_B*(p_B/100)
	t = t + 1
print(t)
	
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 18:59:21) 
-- CODE:
hab_A = int(input("numero de habitantes de A: "))
hab_B = int(input("numero de habitantes de B: "))
p_A = float(input("percentual de crescimento de A: "))
p_B = float(input("percentual de crescimento de B: "))
t = 0 
while (hab_A < hab_B):
	hab_A = hab_A + hab_A*(p_A/100)
	hab_B = hab_B + hab_B*(p_B/100)
	t = t + 1
print(t)
	
-- EXECUTION TIME:
0.132871
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 18:31:06) 
-- CODE:
hab_A = int(input("numero de habitantes de A: "))
hab_B = int(input("numero de habitantes de B: "))
p_A = float(input("percentual de crescimento de A: "))
p_B = float(input("percentual de crescimento de B: "))
t = 0 
while (hab_A < hab_B):
	hab_A = hab_A + hab_A*(p_A/100)
	hab_B = hab_B + hab_B*(p_B/100)
	t = t + 1
	print(t)
	
-- OUTPUT:
1
2
3
4
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
