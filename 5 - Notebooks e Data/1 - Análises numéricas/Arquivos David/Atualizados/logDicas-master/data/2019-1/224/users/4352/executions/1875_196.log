== TEST (2019-07-02 18:23:17) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if i,j == "B":
			print("BOMBA")
		elif i,j == "L":
			print("LIVRE")
		
-- ERROR:
File "XXXX", line 10
    if i,j == "B":
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:23:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B":
			print("BOMBA")
		elif i,j == "L":
			print("LIVRE")
		
-- ERROR:
File "XXXX", line 12
    elif i,j == "L":
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:23:39) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B":
			print("BOMBA")
		elif m[i,j] == "L":
			print("LIVRE")
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:24:40) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = (input("digite um numero: "))
coluna = (input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B":
			print("BOMBA")
		elif m[i,j] == "L":
			print("LIVRE")
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:24:59) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = (input("digite um numero: "))
coluna = (input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B":
			print("BOMBA")
		elif m[i,j] == "L":
			print("LIVRE")
		
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:36:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
			print("BOMBA")
		elif m[i,j] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:39:09) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = linha.shape [0]
c = coluna.shape [1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
			print("BOMBA")
		elif m[i,j] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:41:20) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
			print("BOMBA")
		elif m[i,j] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:41:54) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
			print("BOMBA")
		elif m[i,j] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:42:50) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
print("BOMBA")
		elif m[i,j] == "L".upper():
print("LIVRE")

-- ERROR:
File "XXXX", line 11
    print("BOMBA")
    ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:43:11) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	for j in range(c):
		if m[i,j] == "B".upper():
			print("BOMBA")
		elif m[i,j] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:45:26) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	if m[i,j] == "B".upper():
		print("BOMBA")
	elif m[i,j] == "L".upper():
		print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:46:05) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	if m[i,c] == "B".upper():
		print("BOMBA")
	elif m[i,c] == "L".upper():
		print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:49:24) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
for i in range(l):
	for j in range(c):
		if m[linha,coluna] == "B".upper():
			print("BOMBA")
		elif m[linha,coluna] == "L".upper():
			print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-02 18:50:42) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
if m[linha,coluna] == "B".upper():
	print("BOMBA")
elif m[linha,coluna] == "L".upper():
	print("LIVRE")

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 18:50:44) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
if m[linha,coluna] == "B".upper():
	print("BOMBA")
elif m[linha,coluna] == "L".upper():
	print("LIVRE")

-- EXECUTION TIME:
0.952112
-- TEST CASE 1:
---- input:
[['B','L','L'],['L','L','L'],['L','B','B']]
2
1
---- correct output:
BOMBA
---- user output:
BOMBA
-- TEST CASE 2:
---- input:
[['B','L','L'],['L','L','L'],['L','B','B'],['L','B','L']]
3
2
---- correct output:
LIVRE
---- user output:
LIVRE
-- TEST CASE 3:
---- input:
[['B','L','L'],['B','B','B'],['L','B','B'],['L','B','L']]
2
2
---- correct output:
BOMBA
---- user output:
digite uma matriz NxN (N=N) com as letras B e L: digite um numero: digite outro numero: BOMBA
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-02 18:50:52) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite uma matriz NxN (N=N) com as letras B e L: ")))
linha = int(input("digite um numero: "))
coluna = int(input("digite outro numero: "))
l = m.shape[0]
c = m.shape[1]
if m[linha,coluna] == "B".upper():
	print("BOMBA")
elif m[linha,coluna] == "L".upper():
	print("LIVRE")

-- EXECUTION TIME:
1.18482
-- TEST CASE 1:
---- input:
[['B','L','L'],['L','L','L'],['L','B','B']]
2
1
---- correct output:
BOMBA
---- user output:
BOMBA
-- TEST CASE 2:
---- input:
[['B','L','L'],['L','L','L'],['L','B','B'],['L','B','L']]
3
2
---- correct output:
LIVRE
---- user output:
LIVRE
-- TEST CASE 3:
---- input:
[['B','L','L'],['B','B','B'],['L','B','B'],['L','B','L']]
2
2
---- correct output:
BOMBA
---- user output:
BOMBA
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
