== SUBMITION (2019-03-26 18:31:08) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%300)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- EXECUTION TIME:
0.154062
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:31:51) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- EXECUTION TIME:
0.235629
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:32:06) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- EXECUTION TIME:
0.110764
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:32:12) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- OUTPUT:
31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:32:31) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- EXECUTION TIME:
0.198682
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-26 18:33:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- OUTPUT:
31
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:33:38) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=n1+n2+n3+n4
print(soma)
-- EXECUTION TIME:
0.116001
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:34:18) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1=numero//3000
n2=(numero%3000)//300
n3=((numero%3000)%300)//30
n4=(((numero%3000)%300)%30)
soma=(n1+n2+n3+n4)
print(soma)
-- EXECUTION TIME:
0.183397
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:36:11) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1= numero // 3000
n2= (numero%3000)//300
n3= ((numero % 3000 )% 300) // 30
n4= ((( numero % 3000 ) % 300 ) % 30)
soma=(n1 + n2 + n3 + n4)
print(soma)
-- EXECUTION TIME:
0.169902
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
31
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
26
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-26 18:37:04) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
numero=int(input("digite um numero de 4 algarismo"))
n1= numero // 1000
n2= (numero%1000)//100
n3= ((numero % 1000 )% 100) // 10
n4= ((( numero % 1000 ) % 100 ) % 10)
soma=(n1 + n2 + n3 + n4)
print(soma)
-- EXECUTION TIME:
0.173727
-- TEST CASE 1:
---- input:
9173
---- correct output:
20
---- user output:
20
-- TEST CASE 2:
---- input:
1010
---- correct output:
2
---- user output:
2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
