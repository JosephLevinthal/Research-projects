== TEST (2019-03-16 15:15:19) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(''30''))

# Impressao do dobro do numero
print("30.2")
-- ERROR:
File "XXXX", line 4
    num = int(input(''30''))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 15:15:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(''30''))

# Impressao do dobro do numero
print("30.2")
-- EXECUTION TIME:
0.186396
-- ERROR:
  File "/home/codebench/codes/1577/2897/main.py", line 4
    num = int(input(''30''))
                       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:15:32) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(''30''))

# Impressao do dobro do numero
print("30.2")
-- ERROR:
File "XXXX", line 4
    num = int(input(''30''))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:16:11) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- OUTPUT:
5.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:16:24) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- OUTPUT:
5.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 15:16:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- EXECUTION TIME:
0.149893
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5.2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:16:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- OUTPUT:
5.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 15:16:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("10")
-- EXECUTION TIME:
0.175301
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
10
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:17:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("10")
-- OUTPUT:
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 15:17:15) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("30"))

# Impressao do dobro do numero
print("60")
-- EXECUTION TIME:
0.170434
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
60
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
60
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 15:17:19) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("30"))

# Impressao do dobro do numero
print("60")
-- OUTPUT:
60
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 18:14:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("30"))

# Impressao do dobro do numero
print("30.2")
-- EXECUTION TIME:
0.20095
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
30.2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
30.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:14:07) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("30"))

# Impressao do dobro do numero
print("30.2")
-- OUTPUT:
30.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 18:14:26) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- EXECUTION TIME:
0.124337
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5.2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:14:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print("5.2")
-- OUTPUT:
5.2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 18:14:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5:"))

# Impressao do dobro do numero
print("5.2")
-- EXECUTION TIME:
0.146535
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5.2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 18:15:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5:"))

# Impressao do dobro do numero
print("5")
-- EXECUTION TIME:
0.149087
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
5
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
5
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 18:15:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5:"))

# Impressao do dobro do numero
print("5")
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 19:02:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.218906
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
1234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-19 19:03:03) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-19 19:05:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("5"))

# Impressao do dobro do numero
print(2*num)
-- EXECUTION TIME:
0.228208
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
