== TEST (2019-05-14 19:23:57) 
-- CODE:
a = int(input("digite o numero de habitantes da cidade A: "))
b = int(input("digite o numero de habitantes da cidade B: "))
pa = float(input("digite o percentual da cidade A: "))
pb = float(input("digite o percentual da cidade B: "))
na = pa/100
nb = pb/100
cont = 0
while ()


-- ERROR:
File "XXXX", line 8
    while ()
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:16:11) 
-- CODE:
a = int(input("digite o numero de habitantes da cidade A: "))
b = int(input("digite o numero de habitantes da cidade B: "))
pa = float(input("digite o percentual da cidade A: "))
pb = float(input("digite o percentual da cidade B: "))
c=0
while(a>=b):
	pac=a*(pa/100)
	a=pac+a
	pbc=b*(pb/100)
	b=b+pbc
	c=c+1
print(c)
-- ERROR:
File "XXXX", line 8
    while ()
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 22:17:14) 
-- CODE:
a = int(input("digite o numero de habitantes da cidade A: "))
b = int(input("digite o numero de habitantes da cidade B: "))
pa = float(input("digite o percentual da cidade A: "))
pb = float(input("digite o percentual da cidade B: "))
c=0
while(a<b):
	pac=a*(pa/100)
	a=pac+a
	pbc=b*(pb/100)
	b=b+pbc
	c=c+1
print(c)
-- OUTPUT:
5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 22:17:39) 
-- CODE:
a = int(input("digite o numero de habitantes da cidade A: "))
b = int(input("digite o numero de habitantes da cidade B: "))
pa = float(input("digite o percentual da cidade A: "))
pb = float(input("digite o percentual da cidade B: "))
c=0
while(a<b):
	pac=a*(pa/100)
	a=pac+a
	pbc=b*(pb/100)
	b=b+pbc
	c=c+1
print(c)
-- EXECUTION TIME:
0.148805
-- TEST CASE 1:
---- input:
250150
580000
35.5
10.5
---- correct output:
5
---- user output:
5
-- TEST CASE 2:
---- input:
180250
1200000
10.25
5.7
---- correct output:
45
---- user output:
45
-- TEST CASE 3:
---- input:
1000000
1650000
12.75
3.2
---- correct output:
6
---- user output:
6
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
