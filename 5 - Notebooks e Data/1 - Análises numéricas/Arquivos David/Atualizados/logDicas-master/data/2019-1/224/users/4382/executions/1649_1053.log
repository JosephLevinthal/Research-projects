== TEST (2019-04-07 15:42:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:43:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
cervo = input("patrono")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:43:44) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
cervo = input("patrono")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 15:43:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
cervo = input("patrono")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- EXECUTION TIME:
0.17475
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 15:46:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 15:46:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- EXECUTION TIME:
0.133011
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:00:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono=cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
File "XXXX", line 6
    if(patrono=cervo):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:00:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:01:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:01:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(patrono==cervo):
NameError: name 'cervo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:02:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-07 16:02:33) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- EXECUTION TIME:
0.200963
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 5, in <module>
    cervo= input()
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:04:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else:(<entrada>)
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
File "XXXX", line 8
    else:(<entrada>)
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:04:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else(<entrada>):
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
File "XXXX", line 8
    else(<entrada>):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-07 16:04:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("patrono")
cervo= input("cervo")
if(patrono==cervo):
	mensagem= ("cervo eh patrono do Harry Potter ")
else(entrada):
	mensagem= ("nao eh patrono do Harry Potter ")
print(mensagem)

-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:28:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= ("cervo eh patrono do Harry Potter ")
else(entrada):
	print= ("nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.189427
-- ERROR:
  File "/home/codebench/codes/1649/1053/main.py", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:28:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= ("cervo eh patrono do Harry Potter ")
else(entrada):
	print= ("nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:28:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= ("cervo eh patrono do Harry Potter ")
else:
	print= ("nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.172921
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:28:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= ("cervo eh patrono do Harry Potter ")
else:
	print= ("nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:28:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= (patrono,"cervo eh patrono do Harry Potter ")
else:
	print= (patrono,"nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.166954
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:29:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo"):
	print= (patrono,"cervo eh patrono do Harry Potter ")
else:
	print= (patrono,"nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:29:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo") :
	print= (patrono,"cervo eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.149976
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:29:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o nome do guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo") :
	print= (patrono,"cervo eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:30:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo") :
	print= (patrono,"cervo eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:30:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono= input("digite o guardiao: ")
patrono= patrono.lower()
if(patrono== "cervo") :
	print= (patrono,"cervo eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.130331
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:30:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- EXECUTION TIME:
0.133933
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:30:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter ")
else :
	print= (patrono,"nao eh patrono do Harry Potter ")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:32:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.297755
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:32:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:02) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.142721
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.200598
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.19555
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.144321
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.087579
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1649/1053/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print= (patrono,"eh patrono do Harry Potter")
else :
	print= (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.166714
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.221974
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.168451
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:33:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:33:59) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.14548
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:

-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 18:34:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print = (patrono,"eh patrono do Harry Potter")
else :
	print = (patrono,"nao eh patrono do Harry Potter")


-- ERROR:
File "XXXX", line 8
    else(entrada):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 18:35:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
patrono = input("digite o guardiao: ")
patrono = patrono.lower()
if(patrono == "cervo") :
	print(patrono,"eh patrono do Harry Potter")
else :
	print(patrono,"nao eh patrono do Harry Potter")


-- EXECUTION TIME:
0.204241
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
