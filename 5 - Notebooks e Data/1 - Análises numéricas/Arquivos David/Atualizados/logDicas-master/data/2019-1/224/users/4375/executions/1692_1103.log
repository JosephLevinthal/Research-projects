== TEST (2019-04-30 19:51:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("valor de a: "))
b=float(input("valor de b: "))
x=float(input("valor de x: "))
if(a<=x<=b):
	print(a + "pertence ao intervalo" + b +","+ c)
-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 22:20:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("valor de a: "))
b=float(input("valor de b: "))
x=float(input("valor de x: "))
if (x>a) and (x<b):
	print(x + "pertence ao intervalo" + a +","+ b)
elif(a<b) and (x>b):
	print(x + " nao pertence ao intervalo" + a +","+ b)
else(a<b) and (x<a):
	print("Entradas" + a "e" + b "invalidas")
-- EXECUTION TIME:
0.198858
-- ERROR:
  File "/home/codebench/codes/1692/1103/main.py", line 11
    else(a<b) and (x<a):
        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:20:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("valor de a: "))
b=float(input("valor de b: "))
x=float(input("valor de x: "))
if (a<b) and (x<b) and (x<a):
	print(x + "pertence ao intervalo" + a +","+ b)
elif(a<b) and (x>b):
	print(x + " nao pertence ao intervalo" + a +","+ b)
else(a<b) and (x<a):
	print("Entradas" + a "e" + b "invalidas")
-- ERROR:
File "XXXX", line 11
    else(a<b) and (x<a):
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:22:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("valor de a: "))
b=float(input("valor de b: "))
x=float(input("valor de x: "))
if (a<b) and (x<b) and (x<a):
	print(x + "pertence ao intervalo" + a +","+ b)
elif(a<b) and (x>b):
	print(x + " nao pertence ao intervalo" + a +","+ b)
elif(a<b) and (x<a):
	print(x + " nao pertence ao intervalo" + a +","+ b)
else:
	print("Entradas" + a "e" + b "invalidas")
-- ERROR:
File "XXXX", line 14
    print("Entradas" + a "e" + b "invalidas")
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:22:51) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
a=float(input("valor de a: "))
b=float(input("valor de b: "))
x=float(input("valor de x: "))
if (a<b) and (x<b) and (x<a):
	print(x + "pertence ao intervalo" + a +","+ b)
elif(a<b) and (x>b):
	print(x + " nao pertence ao intervalo" + a +","+ b)
elif(a<b) and (x<a):
	print(x + " nao pertence ao intervalo" + a +","+ b)
else:
	print("Entradas" + a + "e" + b + "invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(x + " nao pertence ao intervalo" + a +","+ b)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:23:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))
if (a<b) and (x<b) and (x<a):
	print(x + "pertence ao intervalo" + a +","+ b)
elif(a<b) and (x>b):
	print(x + " nao pertence ao intervalo" + a +","+ b)
elif(a<b) and (x<a):
	print(x + " nao pertence ao intervalo" + a +","+ b)
else:
	print("Entradas" + a + "e" + b + "invalidas")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(x + "pertence ao intervalo" + a +","+ b)
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:28:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))
if (a<b) and (x<b) and (x<a):
	print(x, "pertence ao intervalo", a, ",", b)
elif(a<b) and (x>b):
	print(x," nao pertence ao intervalo", a, ",", b)
elif(a<b) and (x<a):
	print(x," nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:28:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))
if (a<b) and (x<b) and (x<a):
	print(x, "pertence ao intervalo", a, ",", b)
elif(a<b) and (x>b):
	print(x," nao pertence ao intervalo", a, ",", b)
elif(a<b) and (x<a):
	print(x," nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0 pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 22:34:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))
if (a<b) and (x<b) and (x>a):
	print(x, "pertence ao intervalo", a, ",", b)
elif(a<b) and (x>b):
	print(x," nao pertence ao intervalo", a, ",", b)
elif(a<b) and (x<a):
	print(x," nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- OUTPUT:
2.0  nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 22:34:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("valor de x: "))
a=float(input("valor de a: "))
b=float(input("valor de b: "))
if (a<b) and (x<b) and (x>a):
	print(x, "pertence ao intervalo", a, ",", b)
elif(a<b) and (x>b):
	print(x," nao pertence ao intervalo", a, ",", b)
elif(a<b) and (x<a):
	print(x," nao pertence ao intervalo", a, ",", b)
else:
	print("Entradas", a, "e", b, "invalidas")
-- EXECUTION TIME:
0.145374
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0  nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
