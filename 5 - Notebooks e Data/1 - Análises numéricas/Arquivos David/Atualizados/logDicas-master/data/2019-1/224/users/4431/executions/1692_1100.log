== TEST (2019-04-23 21:09:54) 
-- CODE:
x=int(input("Digite a celula: "))
if((x=!2)or(x=!5)or(x=!10)or(x=!20)or(x=!50)or(x=!100)):
	print("Animal: Invalido")



-- ERROR:
File "XXXX", line 2
    if((x=!2)or(x=!5)or(x=!10)or(x=!20)or(x=!50)or(x=!100)):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:10:46) 
-- CODE:
x=int(input("Digite a celula: "))
if((x!=2)or(x!=5)or(x!=10)or(x!=20)or(x!=50)or(x!=100)):
	print("Animal: Invalido")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:10:55) 
-- CODE:
x=int(input("Digite a celula: "))
if((x!=2)or(x!=5)or(x!=10)or(x!=20)or(x!=50)or(x!=100)):
	print("Animal: Invalido")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:11:25) 
-- CODE:
x=int(input("Digite a celula: "))
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:11:33) 
-- CODE:
x=int(input("Digite a celula: "))
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:12:44) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal: ")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	print(y,"Tartaruga")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:12:57) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	print(y,"Tartaruga")



-- OUTPUT:
Animal: Invalido
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:13:30) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	print(y,"Tartaruga")
	elif(x==5):
		print(y,"Garça")



-- ERROR:
File "XXXX", line 7
    elif(x==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:13:45) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	print(y,"Tartaruga")
   elif(x==5):
	   print(y,"Garça")



-- ERROR:
File "XXXX", line 7
    elif(x==5):
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:14:12) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
   elif(x==5):
	   print(y,"Garça")



-- ERROR:
File "XXXX", line 7
    elif(x==5):
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:14:24) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
   elif(x==5):
	      print(y,"Garça")



-- ERROR:
File "XXXX", line 7
    elif(x==5):
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:14:39) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
   else:
		if(x==5):
	      print(y,"Garça")



-- ERROR:
File "XXXX", line 7
    else:
        ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:14:49) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
else:
		if(x==5):
	      print(y,"Garça")



-- ERROR:
File "XXXX", line 9
    print(y,"Garça")
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:15:13) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garça")



-- ERROR:
File "XXXX", line 9
    print(y,"Garça")
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:15:29) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")



-- ERROR:
File "XXXX", line 9
    print(y,"Garça")
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:16:27) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")
elif(x==10):
    print(y,"Arara")
elif(x==20):
	 print(y,"Mico-leão-dourado")



-- ERROR:
File "XXXX", line 9
    print(y,"Garça")
                    ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:17:18) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")
elif(x==10):
    print(y,"Arara")
elif(x==20):
	 print(y,"Mico-leao-dourado")
elif(x==50):
	 print(y,"Onca-pintada")
else:
	 print(y,"Garoupa")



-- OUTPUT:
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 21:17:27) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")
elif(x==10):
    print(y,"Arara")
elif(x==20):
	 print(y,"Mico-leao-dourado")
elif(x==50):
	 print(y,"Onca-pintada")
else:
	 print(y,"Garoupa")



-- EXECUTION TIME:
0.159442
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal: Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 21:17:37) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")
elif(x==10):
    print(y,"Arara")
elif(x==20):
	 print(y,"Mico-leao-dourado")
elif(x==50):
	 print(y"Onca-pintada")
else:
	 print(y,"Garoupa")



-- EXECUTION TIME:
0.193736
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 14
    print(y"Onca-pintada")
                        ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:17:38) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print(y,"Tartaruga")
elif(x==5):
    print(y,"Garca")
elif(x==10):
    print(y,"Arara")
elif(x==20):
	 print(y,"Mico-leao-dourado")
elif(x==50):
	 print(y"Onca-pintada")
else:
	 print(y,"Garoupa")



-- ERROR:
File "XXXX", line 14
    print(y"Onca-pintada")
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:18:39) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal:Invalido")
elif(x==2):
	 print("Animal:Tartaruga")
elif(x==5):
    print("Animal:Garca")
elif(x==10):
    print("Animal:Arara")
elif(x==20):
	 print("Animal:Mico-leao-dourado")
elif(x==50):
	 print("Animal:Onca-pintada")
else:
	 print("Animal:Garoupa")



-- OUTPUT:
Animal:Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 21:18:46) 
-- CODE:
x=int(input("Digite a celula: "))
y=("Animal:")
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal:Invalido")
elif(x==2):
	 print("Animal:Tartaruga")
elif(x==5):
    print("Animal:Garca")
elif(x==10):
    print("Animal:Arara")
elif(x==20):
	 print("Animal:Mico-leao-dourado")
elif(x==50):
	 print("Animal:Onca-pintada")
else:
	 print("Animal:Garoupa")



-- EXECUTION TIME:
0.186224
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Animal:Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Animal:Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Animal:Onca-pintada
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:19:17) 
-- CODE:
x=int(input("Digite a celula: "))
print("Entrada:",x)
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal:Invalido")
elif(x==2):
	 print("Animal:Tartaruga")
elif(x==5):
    print("Animal:Garca")
elif(x==10):
    print("Animal:Arara")
elif(x==20):
	 print("Animal:Mico-leao-dourado")
elif(x==50):
	 print("Animal: Onca-pintada")
else:
	 print("Animal: Garoupa")



-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-23 21:19:38) 
-- CODE:
x=int(input("Digite a celula: "))
print("Entrada:",x)
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print("Animal: Tartaruga")
elif(x==5):
    print("Animal: Garca")
elif(x==10):
    print("Animal: Arara")
elif(x==20):
	 print("Animal: Mico-leao-dourado")
elif(x==50):
	 print("Animal: Onca-pintada")
else:
	 print("Animal: Garoupa")



-- OUTPUT:
Entrada: 100
Animal: Garoupa
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-23 21:19:46) 
-- CODE:
x=int(input("Digite a celula: "))
print("Entrada:",x)
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print("Animal: Tartaruga")
elif(x==5):
    print("Animal: Garca")
elif(x==10):
    print("Animal: Arara")
elif(x==20):
	 print("Animal: Mico-leao-dourado")
elif(x==50):
	 print("Animal: Onca-pintada")
else:
	 print("Animal: Garoupa")



-- EXECUTION TIME:
0.129902
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-26 01:26:37) 
-- CODE:
x=int(input("Digite a celula: "))
print("Entrada:",x)
if((x!=2)and(x!=5)and(x!=10)and(x!=20)and(x!=50)and(x!=100)):
	print("Animal: Invalido")
elif(x==2):
	 print("Animal: Tartaruga")
elif(x==5):
    print("Animal: Garca")
elif(x==10):
    print("Animal: Arara")
elif(x==20):
	 print("Animal: Mico-leao-dourado")
elif(x==50):
	 print("Animal: Onca-pintada")
else:
	 print("Animal: Garoupa")



-- EXECUTION TIME:
0.123474
-- TEST CASE 1:
---- input:
100
---- correct output:
Entrada: 100
Animal: Garoupa
---- user output:
Entrada: 100
Animal: Garoupa
-- TEST CASE 2:
---- input:
7
---- correct output:
Entrada: 7
Animal: Invalido
---- user output:
Entrada: 7
Animal: Invalido
-- TEST CASE 3:
---- input:
50
---- correct output:
Entrada: 50
Animal: Onca-pintada
---- user output:
Entrada: 50
Animal: Onca-pintada
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
