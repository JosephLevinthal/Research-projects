== TEST (2019-03-31 23:10:34) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade)

	
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:10:51) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade)

	
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:12:57) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade + " %")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(probabilidade + " %")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:13:54) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade + /"%/"")

	
-- ERROR:
File "XXXX", line 15
    print(probabilidade + /"%/"")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:14:28) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade + /"%"/")

	
-- ERROR:
File "XXXX", line 15
    print(probabilidade + /"%"/")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:19:23) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(probabilidade + "%")

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(probabilidade + "%")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:19:53) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
ano = 365
fatorial = 1
prob = ano - n_pessoas
u = 2
while (u <= prob):
	fatorial = fatorial * u
	u = u + 1

while (u <= ano):
	fatorial = fatorial * u
	u = u + 1
	
probabilidade = 1 - (ano/prob) * 1 / 365**n_pessoas
print(float(probabilidade + "%"))

	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    print(float(probabilidade + "%"))
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-31 23:21:11) 
-- CODE:
print(10!)
	
-- EXECUTION TIME:
0.155827
-- ERROR:
  File "/home/codebench/codes/1613/1806/main.py", line 1
    print(10!)
            ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:21:13) 
-- CODE:
print(10!)
	
-- ERROR:
File "XXXX", line 1
    print(10!)
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:21:49) 
-- CODE:
var = 10!
print(var)

	
-- ERROR:
File "XXXX", line 1
    var = 10!
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:30:42) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
u = 2
fat = 1
while u <= n_pessoas :
	fat = fat * n_pessoas
	u = u + 1
	
	print(n_pessoas)

	
-- OUTPUT:
12
12
12
12
12
12
12
12
12
12
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:49) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
u = 2
fat = 1
while u <= n_pessoas:
	fat = fat * n_pessoas
	u = u + 1
	
	print(n_pessoas)

	
-- OUTPUT:
12
12
12
12
12
12
12
12
12
12
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:31:55) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
u = 2
fat = 1
while u <= n_pessoas:
	fat = fat * n_pessoas
	u = u + 1
	
	print(n_pessoas)

	
-- OUTPUT:
12
12
12
12
12
12
12
12
12
12
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:33:03) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while u <= n_pessoas:
	fat = fat * n_pessoas
	u = u + 1
	
	print(n_pessoas)

	
-- OUTPUT:
12
12
12
12
12
12
12
12
12
12
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:36:39) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u + 1
	
	print(n_pessoas)

	
-- OUTPUT:
12
12
12
12
12
12
12
12
12
12
12
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:39:36) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u - 1
	
   print(n_pessoas)

	
-- ERROR:
File "XXXX", line 8
    print(n_pessoas)
                   ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:40:46) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u + 1
	
   print(fat)

	
-- ERROR:
File "XXXX", line 8
    print(fat)
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:41:28) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u + 1
	
   print(fat)

	
-- ERROR:
File "XXXX", line 8
    print(fat)
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:41:45) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u + 1
	print(fat)

	
-- OUTPUT:
12
144
1728
20736
248832
2985984
35831808
429981696
5159780352
61917364224
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:41:51) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
	fat = fat * n_pessoas
	u = u + 1
	print(fat)

	
-- OUTPUT:
12
144
1728
20736
248832
2985984
35831808
429981696
5159780352
61917364224
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:43:44) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * n_pessoas
		u = u + 1
	
	print(fat)

	
-- ERROR:
File "XXXX", line 8
    print(fat)
             ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:43:59) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * n_pessoas
		u = u + 1
	
print(fat)

	
-- OUTPUT:
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:44:09) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * n_pessoas
		u = u + 1
	
print(fat)

	
-- OUTPUT:
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:44:23) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * n_pessoas
		u = u + 1
	
print(fat)

	
-- OUTPUT:
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:44:32) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * n_pessoas
		u = u + 1
	
print(fat)

	
-- OUTPUT:
743008370688
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:46:41) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * u
		u = u + 1
	
print(fat)

	
-- OUTPUT:
479001600
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:46:48) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * u
		u = u + 1
	
print(fat)

	
-- OUTPUT:
479001600
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-31 23:46:53) 
-- CODE:
n_pessoas = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
while (u <= n_pessoas):
		fat = fat * u
		u = u + 1
	
print(fat)

	
-- OUTPUT:
479001600
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:00:06) 
-- CODE:
n_fatorado = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
banana = 365 - n_fatorado
while (u <= banana):
		fat = fat * u
		u = u + 1

		
fat2 = 1	
ano = 365
while (u <= ano):
		fat2 = fat2 * u
		u = u + 1
	

p_n = 1 - (fat2/fat) * 1/(365**n_fatorado)
print(p_n)
	
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:00:44) 
-- CODE:
n_fatorado = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
banana = 365 - n_fatorado
while (u <= banana):
		fat = fat * u
		u = u + 1

		
fat2 = 1	
ano = 365
while (u <= ano):
		fat2 = fat2 * u
		u = u + 1
	

p_n = 1 - (fat2/fat) * 1/(365**n_fatorado)
print(p_n + "%")
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 18, in <module>
    print(p_n + "%")
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:01:05) 
-- CODE:
n_fatorado = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
banana = 365 - n_fatorado
while (u <= banana):
		fat = fat * u
		u = u + 1

		
fat2 = 1	
ano = 365
while (u <= ano):
		fat2 = fat2 * u
		u = u + 1
	

p_n = 1 - (fat2/fat) * 1/(365**n_fatorado)
print(p_n"%")
	
-- ERROR:
File "XXXX", line 18
    print(p_n"%")
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 00:02:04) 
-- CODE:
n_fatorado = int(input("digite o numero de pessoas: "))
fat = 1
u = 2
banana = 365 - n_fatorado
while (u <= banana):
		fat = fat * u
		u = u + 1

		
fat2 = 1	
ano = 365
while (u <= ano):
		fat2 = fat2 * u
		u = u + 1
	

p_n = 1 - (fat2/fat) * 1/(365**n_fatorado)
print(p_n)
	
-- OUTPUT:
1.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:56:51) 
-- CODE:
from math import *
n = int(input("Digite o numero de pessoas: "))
p_n = 1 - (factorial(365)/factorial(365-n)) * 1 / 365 ** n
porcentagem = p_n * 100
print(porcentagem,2)
	
-- EXECUTION TIME:
0.30988
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.70247888380644 2
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83442579145288 2
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
Digite o numero de pessoas: 99.99995783990275 2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:56:54) 
-- CODE:
from math import *
n = int(input("Digite o numero de pessoas: "))
p_n = 1 - (factorial(365)/factorial(365-n)) * 1 / 365 ** n
porcentagem = p_n * 100
print(porcentagem,2)
	
-- OUTPUT:
16.70247888380644 2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 15:57:24) 
-- CODE:
from math import *
n = int(input("Digite o numero de pessoas: "))
p_n = 1 - (factorial(365)/factorial(365-n)) * 1 / 365 ** n
porcentagem = p_n * 100
print(round(porcentagem,2))
	
-- OUTPUT:
16.7
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 15:57:30) 
-- CODE:
from math import *
n = int(input("Digite o numero de pessoas: "))
p_n = 1 - (factorial(365)/factorial(365-n)) * 1 / 365 ** n
porcentagem = p_n * 100
print(round(porcentagem,2))
	
-- EXECUTION TIME:
0.216142
-- TEST CASE 1:
---- input:
12
---- correct output:
16.7
---- user output:
16.7
-- TEST CASE 2:
---- input:
24
---- correct output:
53.83
---- user output:
53.83
-- TEST CASE 3:
---- input:
99
---- correct output:
100.0
---- user output:
100.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
