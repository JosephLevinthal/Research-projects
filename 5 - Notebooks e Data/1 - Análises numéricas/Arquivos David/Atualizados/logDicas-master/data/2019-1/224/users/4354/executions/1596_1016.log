== TEST (2019-03-21 23:14:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lados_triangulo_a = float(input("digite o comprimento do lado a: "))
lados_triangulo_b = float(input("digite o comprimento do lado b: "))
lados_triangulo_c = float(input("digite o comprimento do lado c: "))
semiperimetro = (lados_triangulo_a + lados_triangulo_b + lados_triangulo_c) / 2
from math import sqrt()
area_triangulo = sqrt(semiperimetro*(semiperimetro-lados_tiangulo_a)*(semiperimetro-lados_tiangulo_b)*(semiperimetro-lados_tiangulo_c))
print(round(area_triangulo,5))
-- ERROR:
File "XXXX", line 8
    from math import sqrt()
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:15:09) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lados_triangulo_a = float(input("digite o comprimento do lado a: "))
lados_triangulo_b = float(input("digite o comprimento do lado b: "))
lados_triangulo_c = float(input("digite o comprimento do lado c: "))
semiperimetro = (lados_triangulo_a + lados_triangulo_b + lados_triangulo_c) / 2
from math import sqrt
area_triangulo = sqrt(semiperimetro*(semiperimetro-lados_tiangulo_a)*(semiperimetro-lados_tiangulo_b)*(semiperimetro-lados_tiangulo_c))
print(round(area_triangulo,5))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 9, in <module>
    area_triangulo = sqrt(semiperimetro*(semiperimetro-lados_tiangulo_a)*(semiperimetro-lados_tiangulo_b)*(semiperimetro-lados_tiangulo_c))
NameError: name 'lados_tiangulo_a' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 23:15:48) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lados_triangulo_a = float(input("digite o comprimento do lado a: "))
lados_triangulo_b = float(input("digite o comprimento do lado b: "))
lados_triangulo_c = float(input("digite o comprimento do lado c: "))
semiperimetro = (lados_triangulo_a + lados_triangulo_b + lados_triangulo_c) / 2
from math import sqrt
area_triangulo = sqrt(semiperimetro*(semiperimetro-lados_triangulo_a)*(semiperimetro-lados_triangulo_b)*(semiperimetro-lados_triangulo_c))
print(round(area_triangulo,5))
-- OUTPUT:
69.41967
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 23:15:57) 
-- CODE:
# Teste seu codigo aos poucos.
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.
lados_triangulo_a = float(input("digite o comprimento do lado a: "))
lados_triangulo_b = float(input("digite o comprimento do lado b: "))
lados_triangulo_c = float(input("digite o comprimento do lado c: "))
semiperimetro = (lados_triangulo_a + lados_triangulo_b + lados_triangulo_c) / 2
from math import sqrt
area_triangulo = sqrt(semiperimetro*(semiperimetro-lados_triangulo_a)*(semiperimetro-lados_triangulo_b)*(semiperimetro-lados_triangulo_c))
print(round(area_triangulo,5))
-- EXECUTION TIME:
0.167739
-- TEST CASE 1:
---- input:
11.0
19.5
13.2
---- correct output:
69.41967
---- user output:
69.41967
-- TEST CASE 2:
---- input:
30.0
40.0
50.0
---- correct output:
600.0
---- user output:
600.0
-- TEST CASE 3:
---- input:
33.0
43.0
55.0
---- correct output:
709.16654
---- user output:
709.16654
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
