== TEST (2019-04-11 20:04:10) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
		
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 20:04:21) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
		
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 20:07:10) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 20:07:23) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:05:12) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
17.4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:06:35) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
	else:
		if(b<a):
			if(b<c):
				print(b)
		else:
			print(c)
-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:07:53) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 01:08:32) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- EXECUTION TIME:
0.161468
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
35
---- user output:

-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
55
---- user output:
55.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
123
---- user output:
123.0
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:08:46) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:09:06) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- OUTPUT:
35.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:10:13) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
	else:
		if(b<a):
		if(b<c):
			print(b)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- ERROR:
File "XXXX", line 9
    if(b<c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-12 01:10:27) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
	else:
		if(b<a):
			if(b<c):
				print(b)
else:
	if(b<a):
		if(b<c):
			print(b)
	else:
		print(c)
-- ERROR:
File "XXXX", line 9
    if(b<c):
     ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-12 01:15:46) 
-- CODE:
a=float(input("num1    "))
b=float(input("num2    "))
c=float(input("num3    "))
if(a<b):
	if(a<c):
		print(a)
	else:
		if(b<a):
			if(b<c):
				print(b)
			else:
				if(c<a):
					if(c<b):
						print(c)
		else:
			if(c<a):
				if(c<b):
					print(c)
else:
		if(b<a):
			if(b<c):
				print(b)
		else:
			if(c<a):
				if(c<b):
					print(c)
-- EXECUTION TIME:
0.160633
-- TEST CASE 1:
---- input:
258
788
35
---- correct output:
35
---- user output:
35.0
-- TEST CASE 2:
---- input:
99
55
77
---- correct output:
55
---- user output:
55.0
-- TEST CASE 3:
---- input:
123
456
789
---- correct output:
123
---- user output:
123.0
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
