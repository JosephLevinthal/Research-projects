== TEST (2019-06-13 16:20:47) 
-- CODE:
from numpy import*
from math import*
x=array(eval("digite um vetor: "))
m=sum(x)/size(x)
s=0
for i in x:
	s=s+(i-m)**2
	d=sqrt(s/(size(n)-1))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:21:21) 
-- CODE:
from numpy import*
from math import*
x=array(eval(input("digite um vetor: ")))
m=sum(x)/size(x)
s=0
for i in x:
	s=s+(i-m)**2
	d=sqrt(s/(size(n)-1))
print(d)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:21:45) 
-- CODE:
from numpy import*
from math import*
x=array(eval(input("digite um vetor: ")))
m=sum(x)/size(x)
s=0
for i in x:
	s=s+(i-m)**2
	d=sqrt(s/(size(n)-1))
print(round(d,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-13 16:22:02) 
-- CODE:
from numpy import*
from math import*
x=array(eval(input("digite um vetor: ")))
m=sum(x)/size(x)
s=0
for i in x:
	s=s+(i-m)**2
	d=sqrt(s/(size(x)-1))
print(round(d,3))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-13 16:22:13) 
-- CODE:
from numpy import*
from math import*
x=array(eval(input("digite um vetor: ")))
m=sum(x)/size(x)
s=0
for i in x:
	s=s+(i-m)**2
	d=sqrt(s/(size(x)-1))
print(round(d,3))
-- EXECUTION TIME:
1.01258
-- TEST CASE 1:
---- input:
[-4,250,-1,30,12]
---- correct output:
108.498
---- user output:
108.498
-- TEST CASE 2:
---- input:
[12.5,25.2,50.39,47.3,0.9]
---- correct output:
21.526
---- user output:
21.526
-- TEST CASE 3:
---- input:
[1.5,1.9,1.2,1.3,1.4,1.1,1.75]

---- correct output:
0.29
---- user output:
0.29
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
