== TEST (2019-04-09 19:13:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("e cervo ou nao e cervo")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:13:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono?")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:13:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono?")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- EXECUTION TIME:
0.149483
-- ERROR:
  File "/home/codebench/codes/1649/1053/main.py", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:13:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono?")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:16:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:16:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:17:20) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=cervo):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome=cervo):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:20:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome="cervo"):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(cervo,mensagem)
-- EXECUTION TIME:
0.182202
-- ERROR:
  File "/home/codebench/codes/1649/1053/main.py", line 6
    if(nome="cervo"):
           ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:21:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome="cervo"):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(cervo,mensagem)
-- ERROR:
File "XXXX", line 6
    if(nome="cervo"):
           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:21:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem="cervo eh patrono do Harry Potter"
else:
	mensagem="nao eh patrono do Harry Potter"
print(cervo,mensagem)
-- EXECUTION TIME:
0.148227
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 10, in <module>
    print(cervo,mensagem)
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:22:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(cervo,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(cervo,mensagem)
-- EXECUTION TIME:
0.15772
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1053/main.py", line 8, in <module>
    print(cervo,mensagem)
NameError: name 'cervo' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:22:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.173396
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:22:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.163653
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:22:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:22:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.187048
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:23:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:23:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem=" eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.208528
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo  eh patrono do Harry Potter
cervo  eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:23:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")
if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.164564
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:23:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.203809
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:24:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:24:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:24:22) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- EXECUTION TIME:
0.168207
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:25:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
   print(nome,mensagem)
-- EXECUTION TIME:
0.200638
-- ERROR:
  File "/home/codebench/codes/1649/1053/main.py", line 12
    print(nome,mensagem)
                       ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:25:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
   print(nome,mensagem)
-- ERROR:
File "XXXX", line 12
    print(nome,mensagem)
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:25:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:25:56) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:26:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
   print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- ERROR:
File "XXXX", line 9
    print(nome,mensagem)
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:26:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
       print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- ERROR:
File "XXXX", line 9
    print(nome,mensagem)
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:26:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- ERROR:
File "XXXX", line 10
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:26:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"
print(nome,mensagem)

else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:26:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"  
	print(nome,mensagem)

else:
	mensagem="nao eh patrono do Harry Potter"
   print(nome,mensagem)
-- ERROR:
File "XXXX", line 13
    print(nome,mensagem)
                       ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:27:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"  
	print(nome,mensagem)

else:
	mensagem="nao eh patrono do Harry Potter"
print(nome,mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:27:29) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"  
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"  
	print(nome,mensagem)
-- OUTPUT:
cervo eh patrono do Harry Potter
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:27:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.

nome=input("qual o nome do patrono? ")

if(nome=="cervo"):
	mensagem="eh patrono do Harry Potter"  
	print(nome,mensagem)
else:
	mensagem="nao eh patrono do Harry Potter"  
	print(nome,mensagem)
-- EXECUTION TIME:
0.163781
-- TEST CASE 1:
---- input:
cervo
---- correct output:
cervo eh patrono do Harry Potter
---- user output:
cervo eh patrono do Harry Potter
-- TEST CASE 2:
---- input:
bode
---- correct output:
bode nao eh patrono do Harry Potter
---- user output:
bode nao eh patrono do Harry Potter
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
