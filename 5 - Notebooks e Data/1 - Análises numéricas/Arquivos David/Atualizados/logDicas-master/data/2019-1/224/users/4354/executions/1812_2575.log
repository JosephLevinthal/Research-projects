== SUBMITION (2019-06-08 21:39:24) 
-- CODE:
from numpy import *
v = array(eval(input("digite o vetor de preferencias: ")))
n = 0
t = 0
y = 0
for i in v:
	i = i.upper()
	if(i == "NETFLIX"):
		n = n + 1
	if(i == "TV")
		t = t + 1
	if(i == "YOUTUBE"):
		y = y + 1
z = zeros(3,dtype = int)
z[0] = t
z[1] = n
z[2] = y
print(z)

-- EXECUTION TIME:
0.780935
-- ERROR:
  File "/home/codebench/codes/1812/2575/main.py", line 10
    if(i == "TV")
                ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 21:39:27) 
-- CODE:
from numpy import *
v = array(eval(input("digite o vetor de preferencias: ")))
n = 0
t = 0
y = 0
for i in v:
	i = i.upper()
	if(i == "NETFLIX"):
		n = n + 1
	if(i == "TV")
		t = t + 1
	if(i == "YOUTUBE"):
		y = y + 1
z = zeros(3,dtype = int)
z[0] = t
z[1] = n
z[2] = y
print(z)

-- ERROR:
File "XXXX", line 10
    if(i == "TV")
                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 21:39:36) 
-- CODE:
from numpy import *
v = array(eval(input("digite o vetor de preferencias: ")))
n = 0
t = 0
y = 0
for i in v:
	i = i.upper()
	if(i == "NETFLIX"):
		n = n + 1
	if(i == "TV"):
		t = t + 1
	if(i == "YOUTUBE"):
		y = y + 1
z = zeros(3,dtype = int)
z[0] = t
z[1] = n
z[2] = y
print(z)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 21:40:09) 
-- CODE:
from numpy import *
v = array(eval(input("digite o vetor de preferencias: ")))
n = 0
t = 0
y = 0
for i in v:
	i = i.upper()
	if(i == "NETFLIX"):
		n = n + 1
	if(i == "TV"):
		t = t + 1
	if(i == "YOUTUBE"):
		y = y + 1
z = zeros(3,dtype = int)
z[0] = t
z[1] = n
z[2] = y
print(z)

-- EXECUTION TIME:
1.11677
-- TEST CASE 1:
---- input:
['NETFLIX','TV','NETFLIX','NETFLIX']
---- correct output:
[1 3 0]
---- user output:
[1 3 0]
-- TEST CASE 2:
---- input:
['NETFLIX','TV','YOUTUBE']
---- correct output:
[1 1 1]
---- user output:
[1 1 1]
-- TEST CASE 3:
---- input:
['NETFLIX','TV','YOUTUBE','NETFLIX','TV','YOUTUBE']
---- correct output:
[2 2 2]
---- user output:
[2 2 2]
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
