== TEST (2019-05-30 18:03:38) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
p=(i0
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:03:39) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
p=(i0
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:03:44) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
p=(i)
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:03:45) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
p=(i)
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:03:57) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
print(i)
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:04:01) 
-- CODE:
from numpy import *
v=array(eval(input("digite o vetor": )))
i=o
print(i)
-- ERROR:
File "XXXX", line 2
    v=array(eval(input("digite o vetor": )))
                                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:07:07) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
f=v1=v2
while()
print(i)

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:07:08) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
f=v1=v2
while()
print(i)

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:12:51) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:12:55) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:13:39) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor" : )))
v2=array(eval(input("digite o vetor" : )))
i=o
f=0
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor" : )))
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:13:44) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:14:05) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:14:40) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(vetor(i)!=0)
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:14:41) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(vetor(i)!=0)
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:22:39) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i<size)
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:22:40) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i<size)
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:22:59) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:00) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:00) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:01) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:01) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:01) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:02) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:02) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:03) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:03) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:03) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:23:08) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2)
	print("JOGADOR 1")
if(v2>v1)
  print("JOGADOR 2")
	else
	    print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:31:12) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:31:13) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor": )))
v2=array(eval(input("digite o vetor": )))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 2
    v1=array(eval(input("digite o vetor": )))
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:50:15) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(v))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(v))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:50:28) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size())
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size())
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 18:50:59) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(vetor))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- EXECUTION TIME:
0.134296
-- ERROR:
  File "/home/codebench/codes/1793/1615/main.py", line 7
    while(i < size(vetor))
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 18:51:02) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(vetor))
ve=array(eval(input("digite o ganhador":)))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- EXECUTION TIME:
0.18237
-- ERROR:
  File "/home/codebench/codes/1793/1615/main.py", line 7
    while(i < size(vetor))
                         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:51:55) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(vetor))
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(vetor))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:51:56) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(vetor))
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(vetor))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:51:58) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(vetor))
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(vetor))
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:52:28) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(0))
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(0))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:52:29) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
while(i < size(0))
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 7
    while(i < size(0))
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 18:52:37) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
i=o
f=0
i=i+1
ve=array(eval(input("digite o ganhador: ")))
if(v1>v2) 
print("JOGADOR 1")
if(v2>v1)
print("JOGADOR 2")
	else
print("EMPATE")

-- ERROR:
File "XXXX", line 8
    if(v1>v2) 
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:04:33) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v1[cont]==2)
    soma2=soma2+20
elif(v1[cont]==3)
    soma2=soma2+10
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:04:34) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v1[cont]==2)
    soma2=soma2+20
elif(v1[cont]==3)
    soma2=soma2+10
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:04:35) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v1[cont]==2)
    soma2=soma2+20
elif(v1[cont]==3)
    soma2=soma2+10
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:08:07) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v1[cont]==2)
    soma2=soma2+20
elif(v1[cont]==3)
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:08:23) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v2[cont]==2)
    soma2=soma2+20
elif(v2[cont]==3)
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:08:24) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v2[cont]==2)
    soma2=soma2+20
elif(v2[cont]==3)
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:08:26) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v2[cont]==2)
    soma2=soma2+20
elif(v2[cont]==3)
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:08:27) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1)
  soma2=soma2+40
elif(v2[cont]==2)
    soma2=soma2+20
elif(v2[cont]==3)
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
File "XXXX", line 10
    if(v2[cont]==1)
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:09:04) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1):
  soma2=soma2+40
elif(v2[cont]==2):
    soma2=soma2+20
elif(v2[cont]==3):
    soma2=soma2+10
	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:09:45) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
if(v1[cont]==1):
	soma1=soma1+40
elif(v1[cont]==2):
   soma1=soma1+20
elif(v1[cont]==3):
	soma1=soma1+10
if(v2[cont]==1):
	soma2=soma2+40
elif(v2[cont]==2):
    soma2=soma2+20
elif(v2[cont]==3):
    soma2=soma2+10
		
	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:13:39) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print("JOGADOR UM")
	else:
print("JOGADOR DOIS")

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print("JOGADOR UM")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:13:40) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print("JOGADOR UM")
	else:
print("JOGADOR DOIS")

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print("JOGADOR UM")
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:13:57) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(JOGADOR UM)
	else:
print(JOGADOR DOIS)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(JOGADOR UM)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:27) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:29) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:29) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:30) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:31) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:32) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:32) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 19:14:34) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- EXECUTION TIME:
0.154671
-- ERROR:
  File "/home/codebench/codes/1793/1615/main.py", line 19
    print(V1)
        ^
IndentationError: expected an indented block

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:35) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:35) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:14:36) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
print(V1)
	else:
print(V2)

	
	
	

	
	

-- ERROR:
File "XXXX", line 19
    print(V1)
        ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:15:12) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print(V1)
else:
	print(V2)

	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:16:45) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print(V1)
else:
	print(V2)

	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:18:02) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
else:
	print("JOGADOR DOIS")

	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:19:17) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
elif:
	print("JOGADOR DOIS")
	print("EMPATE")
	


	
	
	

	
	

-- ERROR:
File "XXXX", line 23
    elif:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:20:31) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
else:
	print("JOGADOR DOIS")
elif(soma1=soma2)
	print("EMPATE")
	


	
	
	

	
	

-- ERROR:
File "XXXX", line 25
    elif(soma1=soma2)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:22:25) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
else:
	print("JOGADOR DOIS")
elif(soma1==soma2)
	print("EMPATE")
	


	
	
	

	
	

-- ERROR:
File "XXXX", line 25
    elif(soma1==soma2)
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:23:16) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
elif(soma1==soma2)
	print("EMPATE")
else:
	print("JOGADOR DOIS")
	


	
	
	

	
	

-- ERROR:
File "XXXX", line 23
    elif(soma1==soma2)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-30 19:23:39) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
elif(soma1==soma2):
	print("EMPATE")
else:
	print("JOGADOR DOIS")
	


	
	
	

	
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-30 19:24:02) 
-- CODE:
from numpy import *
v1=array(eval(input("digite o vetor: ")))
v2=array(eval(input("digite o vetor: ")))
cont=0
soma1=0
soma2=0
while(cont<size(v1)):
	if(v1[cont]==1):
		soma1=soma1+40
	elif(v1[cont]==2):
		soma1=soma1+20
	elif(v1[cont]==3):
		soma1=soma1+10
	if(v2[cont]==1):
		soma2=soma2+40
	elif(v2[cont]==2):
		 soma2=soma2+20
	elif(v2[cont]==3):
		 soma2=soma2+10
	cont=cont+1
if(soma1>soma2):
	print("JOGADOR UM")
elif(soma1==soma2):
	print("EMPATE")
else:
	print("JOGADOR DOIS")
	


	
	
	

	
	

-- EXECUTION TIME:
0.470517
-- TEST CASE 1:
---- input:
[3,2,1,1]
[1,2,1,1]
---- correct output:
JOGADOR DOIS
---- user output:
JOGADOR DOIS
-- TEST CASE 2:
---- input:
[3,2,1,5,1]
[1,5,1,2,3]
---- correct output:
EMPATE
---- user output:
EMPATE
-- TEST CASE 3:
---- input:
[3,2,1,1,2]
[4,2,1,3,3]
---- correct output:
JOGADOR UM
---- user output:
JOGADOR UM
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
