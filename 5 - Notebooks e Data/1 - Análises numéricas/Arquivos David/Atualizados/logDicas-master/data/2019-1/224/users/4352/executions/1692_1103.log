== TEST (2019-04-30 18:33:58) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a",",b)




-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo" + a",",b)
                                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:34:06) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a ",",b)




-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo" + a ",",b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:34:21) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)




-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo" + a ",",b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:34:30) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)




-- ERROR:
File "XXXX", line 6
    print(x,"pertence ao intervalo" + a ",",b)
                                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:33) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
elif a >= x >= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:37) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
elif a >= x >= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:56) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:37:03) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.108336
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:37:09) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:37:25) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.132217
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:37:26) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.219295
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:37:26) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a >= x >= b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:37:32) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a > x > b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:37:33) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a > x > b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.137008
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:

-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:37:36) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a > x > b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:00) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a > x > b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:10) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a < x < b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:38:11) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a < x < b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.135908
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
Entradas 3.0 e 4.0 invalidas
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:14) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a < x < b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:20) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a < x < b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:38:31) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif a < x < b:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
Entradas 3.0 e 4.0 invalidas
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:04) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif not(a <= x <= b) and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(x,"pertence ao intervalo" + a + "," + b)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:13) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif not(a <= x <= b) and b>a:
	print(x,"pertence ao intervalo" + a + "," + b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    print(x,"pertence ao intervalo" + a + "," + b)
TypeError: must be str, not float
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:39:30) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif not(a <= x <= b) and b>a:
	print(x," nao pertence ao intervalo",a,",",b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- OUTPUT:
2.0  nao pertence ao intervalo 3.0 , 4.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:39:42) 
-- CODE:
x = float(input("digite x: "))
a = float(input("digite a: "))
b = float(input("digite b: "))

if a <= x <= b and b>a:
	print(x,"pertence ao intervalo",a,",",b)
elif not(a <= x <= b) and b>a:
	print(x," nao pertence ao intervalo",a,",",b)
else:
	print("Entradas",a,"e",b,"invalidas")



-- EXECUTION TIME:
0.173074
-- TEST CASE 1:
---- input:
2
3
4
---- correct output:
2.0 nao pertence ao intervalo 3.0 , 4.0
---- user output:
2.0  nao pertence ao intervalo 3.0 , 4.0
-- TEST CASE 2:
---- input:
5.5
6.5
3.5
---- correct output:
Entradas 6.5 e 3.5 invalidas
---- user output:
Entradas 6.5 e 3.5 invalidas
-- TEST CASE 3:
---- input:
6.5
1.1
22.2
---- correct output:
6.5 pertence ao intervalo 1.1 , 22.2
---- user output:
6.5 pertence ao intervalo 1.1 , 22.2
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
