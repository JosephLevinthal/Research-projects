== TEST (2019-04-14 20:51:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1=round(pi*x**2*(3r-x)/3,4)
opcao2=round((4*pi*r**3/3)-(pi*x**2*(3r-x)/3),4)
if (opcao=="1"):
	print(opcao1)
else:
	print(opcao2)

-- ERROR:
File "XXXX", line 8
    opcao1=round(pi*x**2*(3r-x)/3,4)
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:52:52) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1=pi*x**2*(3r-x)/3
opcao2=(4*pi*r**3/3)-(pi*x**2*(3r-x)/3)
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1=pi*x**2*(3r-x)/3
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:53:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1=(pi*x**2)*(3r-x)/3
opcao2=(4*pi*r**3/3)-(pi*x**2*(3r-x)/3)
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1=(pi*x**2)*(3r-x)/3
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:54:34) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1=((pi*x**2)*(3r-x))/3
opcao2=((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1=((pi*x**2)*(3r-x))/3
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:55:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 20:59:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 21:00:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import pi
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:38:18) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import pi
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- EXECUTION TIME:
0.209218
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:44:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import pi
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 18:45:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- EXECUTION TIME:
0.128985
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:45:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 8
    opcao1 = ((pi*x**2)*(3r-x))/3
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:46:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (opcao=="1"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:46:50) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (opcao==1):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (opcao==1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:47:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= int(input("opcao 1 ou 2? (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (opcao==1):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (opcao==1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:47:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
opcao= int(input("opcao 1 ou 2? (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (opcao=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (opcao=="1"):
                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:48:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z= input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:49:15) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z= input("opcao 1 ou 2? ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:49:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z= input("opcao 1 ou 2? ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if(z=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if(z=="1"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 18:51:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
	print(round(opcao1,4)
else:
	print(round(opcao2,4)

-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:27) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="2":
	print(round(opcao2,4)
else:
	print(round(opcao1,4)

-- ERROR:
File "XXXX", line 10
    if (z=="2":
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 19:49:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="2"):
	print(round(opcao2,4)
else:
	print(round(opcao1,4)

-- ERROR:
File "XXXX", line 10
    if (z=="2"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:22:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="2"):
	print(round(opcao2,4)
else:
	print(round(opcao1,4)

-- ERROR:
File "XXXX", line 10
    if (z=="2"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:22:41) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if z=="2":
	print(round(opcao2,4)
else:
	print(round(opcao1,4)

-- ERROR:
File "XXXX", line 10
    if z=="2":
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:23:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if z==("2"):
	print(round(opcao2,4)
else:
	print(round(opcao1,4)

-- ERROR:
File "XXXX", line 10
    if z==("2"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:35:53) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:36:36) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2? (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z.upper()=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z.upper()=="1"):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:40:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 07:40:08) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- EXECUTION TIME:
0.198931
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 07:40:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if int(z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if int(z=="1"):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:12:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == 1):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == 1):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:13:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == "1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == "1"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:13:31) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao: (1/2)")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == "1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == "1"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:15:26) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == "1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == "1"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:15:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == 1):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == 1):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 08:16:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == 1):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- EXECUTION TIME:
0.186116
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 10
    if (z == 1):
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:18:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z == "1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z == "1"):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:19:40) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: (1/2)"))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:22:12) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z==1):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z==1):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:22:28) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=int(input("opcao: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:31:03) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="1"):
		print(round(opcao1,4))
else:
		print(round(opcao2,4))


-- ERROR:
File "XXXX", line 10
    if (z=="1"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:31:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=!"1"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (z=!"1"):
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:33:07) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (int(z)=!1):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (int(z)=!1):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 08:33:30) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if int(z)=!1:
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if int(z)=!1:
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:28:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z==2):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (z==2):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:28:17) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="2"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (z=="2"):
               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:28:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z=="2"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- EXECUTION TIME:
0.179912
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 10
    if (z=="2"):
               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:28:32) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z==2):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (z==2):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 13:28:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z==2):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- EXECUTION TIME:
0.147594
-- ERROR:
  File "/home/codebench/codes/1649/2443/main.py", line 10
    if (z==2):
             ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 13:59:48) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if (z==2):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if (z==2):
             ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:00:10) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=float(input("opcao 1 ou 2: "))
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if(z=="2"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if(z=="2"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:00:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if(z=="2"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if(z=="2"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:00:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1 = ((pi*x**2)*(3*r-x))/3
opcao2 = ((4*pi*r**3/3)-(pi*x**2*(3*r-x))/3
if(z=="2"):
		print(round(opcao2,4))
else:
		print(round(opcao1,4))


-- ERROR:
File "XXXX", line 10
    if(z=="2"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:07:37) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao2:(4*pi*(r**3))/3
opcao1:(pi*(x**2)*(3*r-x))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao2-opcao1,4))

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 11, in <module>
    print(round(opcao1),4)
NameError: name 'opcao1' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:07:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao2=(4*pi*(r**3))/3
opcao1=(pi*(x**2)*(3*r-x))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao2-opcao1,4))

-- OUTPUT:
9 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:07:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao2=(4*pi*(r**3))/3
opcao1=(pi*(x**2)*(3*r-x))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao2-opcao1,4))

-- EXECUTION TIME:
0.124759
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9 4
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:08:45) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao2=(4*pi*(r**3))/3
opcao1=(pi*(x**2)*(3*r-x))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao2-opcao1,4))

-- OUTPUT:
9 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:09:57) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao1-opcao2,4))

-- OUTPUT:
9 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:10:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao1),4)
else:
	print(round(opcao1-opcao2,4))

-- EXECUTION TIME:
0.143464
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9 4
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:10:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao2),4)
else:
	print(round(opcao1-opcao2,4))

-- EXECUTION TIME:
0.165561
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
180 4
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:10:16) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao2),4)
else:
	print(round(opcao1-opcao2,4))

-- OUTPUT:
180 4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:10:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao1-opcao2,4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:10:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=(4*pi*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao1-opcao2,4))

-- EXECUTION TIME:
0.154205
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:11:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao1-opcao2,4))

-- EXECUTION TIME:
0.193127
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
-290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:11:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao2-opcao1,4))

-- EXECUTION TIME:
0.144895
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:11:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao2-opcao1,4))

-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:12:01) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(opcao2,4))
else:
	print(round(opcao2-opcao1,4))

-- EXECUTION TIME:
0.123614
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
179.5944
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:12:23) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
r=float(input("raio: "))
x=float(input("altura: "))
z=input("opcao 1 ou 2: ")
from math import *
opcao1=(pi*(x**2)*(3*r-x))/3
opcao2=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(opcao1,4))
else:
	print(round(opcao2-opcao1,4))

-- EXECUTION TIME:
0.147787
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
