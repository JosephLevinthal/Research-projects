== TEST (2019-07-01 15:46:14) 
-- CODE:
from numpy import *
from numpy.linalg import *

#Matriz do sistema linear
bacterias=array([[2,1,2],
					  [1,2,3],
					  [x,y,z]])
qtde=0
a=dot(inv(bacterias), qtde.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print("estafilococo")
elif a[1] == min(a):
	print("salmonela")
else:
	print(coli)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 15:47:50) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet=array(eval(input("matriz: ")))
#Matriz do sistema linear
bacterias=array([[2,1,2],
					  [1,2,3],
					  [0,0,0]])
qtde=0
a=dot(inv(bacterias), qtde.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print("estafilococo")
elif a[1] == min(a):
	print("salmonela")
else:
	print(coli)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 15:48:47) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet=array(eval(input("digite o vetor: ")))
#Matriz do sistema linear
bacterias=array([[2,1,2],
					  [1,2,3],
					  [0,0,0]])
qtde=0
a=dot(inv(bacterias), qtde.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print("estafilococo")
elif a[1] == min(a):
	print("salmonela")
else:
	print(coli)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 15:49:23) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet=array(eval(input("digite o vetor: ")))

#Matriz do sistema linear
bacterias=array([[2,1,2],
					  [1,2,3],
					  [0,0,0]])
qtde=0
a=dot(inv(bacterias), qtde.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print("estafilococo")
elif a[1] == min(a):
	print("salmonela")
else:
	print(coli)




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 15:53:33) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet=array(eval(input("digite o vetor: ")))

#Matriz do sistema linear
bacterias=array([[2,1,4],
					  [1,2,0],
					  [2,3,2]])
a=dot(inv(bacterias), vet.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print('estafilococo')
elif a[1] == min(a):
	print('salmonela')
else:
	print('coli')




-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 15:53:56) 
-- CODE:
from numpy import *
from numpy.linalg import *
vet=array(eval(input("digite o vetor: ")))

#Matriz do sistema linear
bacterias=array([[2,1,4],
					  [1,2,0],
					  [2,3,2]])
a=dot(inv(bacterias), vet.T)

#Imprimir o nome de cada tipo de bacteria
print("estafilococo:",round(a[0],1))
print("salmonela:",round(a[1],1))
print("coli:",round(a[2],1))

#Imprimir o nome da bacteria com menor populaçao
if a[0] == min(a):
	print('estafilococo')
elif a[1] == min(a):
	print('salmonela')
else:
	print('coli')




-- EXECUTION TIME:
1.19788
-- TEST CASE 1:
---- input:
[3955.25,5652.36,8562.22]
---- correct output:
estafilococo:  1923.4
salmonela:  1864.5
coli:  -439.0
coli
---- user output:
estafilococo: 1923.4
salmonela: 1864.5
coli: -439.0
coli
-- TEST CASE 2:
---- input:
[2095.52,1855.75,11295.21]

---- correct output:
estafilococo:  -31711.0
salmonela:  16783.4
coli:  12183.6
estafilococo

---- user output:
estafilococo: -31711.0
salmonela: 16783.4
coli: 12183.6
estafilococo
-- TEST CASE 3:
---- input:
[8596.14,3212.68,2652.11]
---- correct output:
estafilococo:  22647.2
salmonela:  -9717.3
coli:  -6745.3
salmonela

---- user output:
estafilococo: 22647.2
salmonela: -9717.3
coli: -6745.3
salmonela
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
