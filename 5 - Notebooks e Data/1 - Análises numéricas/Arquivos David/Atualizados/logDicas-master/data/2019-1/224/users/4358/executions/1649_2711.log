== TEST (2019-04-15 01:24:16) 
-- CODE:
var1=float(input("Digite o valor disponivel:"))
var2=input("Digite a quantidade de tickets:")
var3=float(input("Digite o valor da unid.ticket:"))
var4=input("Digite a quant. de passes:")
var5=float(input("Digite o valor da unid. passe:"))
custo=var1 + var2 + var3 + var4 + var5
if(var1==custo):
	msg1="suficiente."
	print(msg1.upper())
else:
	msg2="insufiente."
	print(msg2.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    custo=var1 + var2 + var3 + var4 + var5
TypeError: unsupported operand type(s) for +: 'float' and 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 01:26:37) 
-- CODE:
var1=float(input("Digite o valor disponivel:"))
var2=input("Digite a quantidade de tickets:")
var3=float(input("Digite o valor da unid.ticket:"))
var4=input("Digite a quant. de passes:")
var5=float(input("Digite o valor da unid. passe:"))
custo=var2*var3+var4*var5
if(var1==custo):
	msg1="suficiente."
	print(msg1.upper())
else:
	msg2="insufiente."
	print(msg2.upper())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    custo=var2*var3+var4*var5
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:13:24) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=input("Digite a quantidade de tickets do RU:")
vr3=float(input("Digite o valor dos tickets:"))
vr4=input("Digite a quantidade de passes de onibus:")
vr5=float(input("Digite o valor dos passes:"))
custo=vr2*vr3+vr4*vr5
-- EXECUTION TIME:
0.220103
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2711/main.py", line 6, in <module>
    custo=vr2*vr3+vr4*vr5
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:13:31) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=input("Digite a quantidade de tickets do RU:")
vr3=float(input("Digite o valor dos tickets:"))
vr4=input("Digite a quantidade de passes de onibus:")
vr5=float(input("Digite o valor dos passes:"))
custo=vr2*vr3+vr4*vr5
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    custo=vr2*vr3+vr4*vr5
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:24:36) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>=custo):
	print("SUFICIENTE.")
else:
	print("INSUFICIENTE.")
-- EXECUTION TIME:
0.206654
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE.
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:24:39) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>=custo):
	print("SUFICIENTE.")
else:
	print("INSUFICIENTE.")
-- EXECUTION TIME:
0.193345
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE.
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:24:42) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>=custo):
	print("SUFICIENTE.")
else:
	print("INSUFICIENTE.")
-- OUTPUT:
SUFICIENTE.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:25:03) 
-- CODE:
vr1=float(input("Digite o valor disponivel:"))
vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>=custo):
	print("SUFICIENTE.")
else:
	print("INSUFICIENTE.")
-- OUTPUT:
SUFICIENTE.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:25:45) 
-- CODE:
400vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>=custo):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.171965
-- ERROR:
  File "/home/codebench/codes/1649/2711/main.py", line 1
    400vr2=int(input())
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:26:20) 
-- CODE:
400vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>custo):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.171646
-- ERROR:
  File "/home/codebench/codes/1649/2711/main.py", line 1
    400vr2=int(input())
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:26:23) 
-- CODE:
400vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>custo):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.167061
-- ERROR:
  File "/home/codebench/codes/1649/2711/main.py", line 1
    400vr2=int(input())
         ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-15 21:26:25) 
-- CODE:
400vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>custo):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- ERROR:
File "XXXX", line 1
    400vr2=int(input())
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-15 21:29:05) 
-- CODE:
vr1=float(input("Digite a valordispoivel:"))
vr2=int(input("Digite a quantidade de tickets do RU:"))
vr3=float(input("Digite o valor dos tickets:"))
vr4=int(input("Digite a quantidade de passes de onibus:"))
vr5=float(input("Digite o valor dos passes:"))
custo=(vr2*vr3)+(vr4*vr5)
if(vr1>custo):
	print("SUFICIENTE")
else:
	print("INSUFICIENTE")
-- EXECUTION TIME:
0.158013
-- TEST CASE 1:
---- input:
400
15
1.20
30
1.50
---- correct output:
SUFICIENTE
---- user output:
SUFICIENTE
-- TEST CASE 2:
---- input:
90
22
1.20
44
1.50
---- correct output:
INSUFICIENTE
---- user output:
INSUFICIENTE
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
