== TEST (2019-04-05 18:20:15) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y - 3
if x, y == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 5
    if x, y == reta:
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:20:34) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y - 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:20:38) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y - 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 18:20:50) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y - 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.128329
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto nao pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:20:57) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y - 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:21:12) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y = 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- ERROR:
File "XXXX", line 4
    reta = 2*x + y = 3
          ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:21:27) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y -3 == 0
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:21:38) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2*x + y == 3
if ponto == reta:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:22:40) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2 * x + y 
if ponto == 3:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:22:44) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2 * x + y 
if ponto == 3:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto nao pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 18:22:59) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2 * x + y 
if reta == 3:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 18:23:02) 
-- CODE:
x = float(input("digite x: "))
y = float(input("digite y: "))
ponto = x, y
reta = 2 * x + y 
if reta == 3:
	print("ponto pertence a reta")
else:
	print("ponto nao pertence a reta")

-- EXECUTION TIME:
0.158009
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
