== TEST (2019-06-11 19:04:06) 
-- CODE:
from numpy import *
n=int(input("digite o numero: ")):
for i in range(n):
	cpo = "*"*(n-i)
print(cpo)
-- ERROR:
File "XXXX", line 2
    n=int(input()):
                  ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:04:13) 
-- CODE:
from numpy import *
n=int(input("digite o numero: "))
for i in range(n):
	cpo = "*"*(n-i)
print(cpo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:04:23) 
-- CODE:
from numpy import *
n=int(input("digite o numero: "))
for i in range(n):
	cpo = "*"*(n-i)
	print(cpo)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:06:02) 
-- CODE:
from numpy import *
n=int(input("digite o numero: "))
for i in range(n):
	cpo = "*"*(n-i)
	print(cpo)
for j in range(n):
	cpi="*"*(i+1)
	print(cpi)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 19:06:20) 
-- CODE:
from numpy import *
n=int(input("digite o numero: "))
for i in range(n):
	cpo = "*"*(n-i)
	print(cpo)
for j in range(n):
	cpi="*"*(j+1)
	print(cpi)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 19:06:31) 
-- CODE:
from numpy import *
n=int(input("digite o numero: "))
for i in range(n):
	cpo = "*"*(n-i)
	print(cpo)
for j in range(n):
	cpi="*"*(j+1)
	print(cpi)
-- EXECUTION TIME:
1.01649
-- TEST CASE 1:
---- input:
8
---- correct output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********

---- user output:
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
-- TEST CASE 2:
---- input:
11
---- correct output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********

---- user output:
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
-- TEST CASE 3:
---- input:
25
---- correct output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************

---- user output:
*************************
************************
***********************
**********************
*********************
********************
*******************
******************
*****************
****************
***************
**************
*************
************
***********
**********
*********
********
*******
******
*****
****
***
**
*
*
**
***
****
*****
******
*******
********
*********
**********
***********
************
*************
**************
***************
****************
*****************
******************
*******************
********************
*********************
**********************
***********************
************************
*************************
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
