== TEST (2019-05-20 18:47:19) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = sqrt(6/1**2)
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont+=1
	print(ap)
-- OUTPUT:
4.898979485566356
6.123724356957945
6.940220937885671
7.552593373581466
8.042491322138101
8.450739612601964
8.800666718713847
9.106852936561744
9.379018463537653
9.62396743781597
9.846648323523532
10.050772468755463
10.239194756661862
10.414158309717802
10.577457625903348
10.730550734827297
10.874638366755718
11.010721130243672
11.139641643021735
11.262116130160894
11.378758498864855
11.490098941718635
11.596598495752687
11.698660568368652
11.79664015807998
11.890851302033179
11.981573144358482
12.069054920886453
12.153520084430701
12.235169742523473
12.31418554067777
12.390732095139743
12.464959057042263
12.537002873006474
12.60698829422885
12.675029675972828
12.741232101453456
12.805692357842487
12.86849978714462
12.929737030714199
12.989480682977202
13.047801867329182
13.104766745068327
13.160436966495217
13.214870071890399
13.268119848907425
13.320236651945365
13.371267688253347
13.421257274840759
13.470247069696422
13.51827628033923
13.565381852315829
13.611598639915512
13.6569595
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:47:44) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = sqrt(6/1**2)
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 2
	print(ap)
-- OUTPUT:
4.898979485566356
5.715476066494082
6.205374015050718
6.555301121162601
6.827466648138509
7.050147533846071
7.23856982175247
7.401869137938015
7.545956769866438
7.674877282644499
7.791519651348461
7.898019205382512
7.995998795093839
8.086720637419141
8.17118580096339
8.250201599117686
8.324428561020206
8.394413982242583
8.46061640772321
8.523423837025343
8.583167489288346
8.64013236702749
8.694565472422672
8.746682275460612
8.796671862048024
8.844701072690832
8.890917860290514
8.935454037432027
8.978427541691381
9.019944316992792
9.060099886546615
9.098980676114602
9.136665133695882
9.173224682095631
9.208724533440314
9.243224388972472
9.2767790429832
9.30943890622031
9.34125046132139
9.372256660597127
9.402497274705562
9.432009199317408
9.460826725703091
9.488981780217841
9.516504136878327
9.54342160657924
9.569760205964005
9.595544308519617
9.620796780094702
9.645539100728875
9.669791474419798
9.693572928233227
9.716901401974019
9.739793829476666
9.762266212437979
9.784333687598188
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:47:47) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = sqrt(6/1**2)
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 2
	print(ap)
-- OUTPUT:
4.898979485566356
5.715476066494082
6.205374015050718
6.555301121162601
6.827466648138509
7.050147533846071
7.23856982175247
7.401869137938015
7.545956769866438
7.674877282644499
7.791519651348461
7.898019205382512
7.995998795093839
8.086720637419141
8.17118580096339
8.250201599117686
8.324428561020206
8.394413982242583
8.46061640772321
8.523423837025343
8.583167489288346
8.64013236702749
8.694565472422672
8.746682275460612
8.796671862048024
8.844701072690832
8.890917860290514
8.935454037432027
8.978427541691381
9.019944316992792
9.060099886546615
9.098980676114602
9.136665133695882
9.173224682095631
9.208724533440314
9.243224388972472
9.2767790429832
9.30943890622031
9.34125046132139
9.372256660597127
9.402497274705562
9.432009199317408
9.460826725703091
9.488981780217841
9.516504136878327
9.54342160657924
9.569760205964005
9.595544308519617
9.620796780094702
9.645539100728875
9.669791474419798
9.693572928233227
9.716901401974019
9.739793829476666
9.762266212437979
9.784333687598188
9
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:47:52) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = sqrt(6/1**2)
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(ap)
-- OUTPUT:
4.898979485566356
6.123724356957945
6.940220937885671
7.552593373581466
8.042491322138101
8.450739612601964
8.800666718713847
9.106852936561744
9.379018463537653
9.62396743781597
9.846648323523532
10.050772468755463
10.239194756661862
10.414158309717802
10.577457625903348
10.730550734827297
10.874638366755718
11.010721130243672
11.139641643021735
11.262116130160894
11.378758498864855
11.490098941718635
11.596598495752687
11.698660568368652
11.79664015807998
11.890851302033179
11.981573144358482
12.069054920886453
12.153520084430701
12.235169742523473
12.31418554067777
12.390732095139743
12.464959057042263
12.537002873006474
12.60698829422885
12.675029675972828
12.741232101453456
12.805692357842487
12.86849978714462
12.929737030714199
12.989480682977202
13.047801867329182
13.104766745068327
13.160436966495217
13.214870071890399
13.268119848907425
13.320236651945365
13.371267688253347
13.421257274840759
13.470247069696422
13.51827628033923
13.565381852315829
13.611598639915512
13.6569595
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:48:39) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(ap)
-- OUTPUT:
2.449489742783178
3.674234614174767
4.490731195102493
5.103103630798287
5.593001579354923
6.001249869818786
6.351176975930669
6.657363193778567
6.929528720754475
7.174477695032793
7.397158580740355
7.601282725972286
7.7897050138786845
7.964668566934626
8.12796788312017
8.28106099204412
8.425148623972541
8.561231387460495
8.690151900238558
8.812626387377717
8.929268756081678
9.040609198935458
9.14710875296951
9.249170825585475
9.347150415296802
9.441361559250002
9.532083401575305
9.619565178103276
9.704030341647524
9.785679999740296
9.864695797894592
9.941242352356566
10.015469314259086
10.087513130223297
10.157498551445673
10.225539933189651
10.291742358670279
10.35620261505931
10.419010044361443
10.480247287931022
10.539990940194025
10.598312124546005
10.65527700228515
10.71094722371204
10.765380329107222
10.818630106124248
10.870746909162188
10.92177794547017
10.971767532057582
11.020757326913245
11.068786537556052
11.115892109532652
11.162108897132335
11.207469818294985
11.252005995
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:48:56) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap))
-- OUTPUT:
2
4
4
5
6
6
6
7
7
7
7
8
8
8
8
8
8
9
9
9
9
9
9
9
9
9
10
10
10
10
10
10
10
10
10
10
10
10
10
10
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
13
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
16
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:49:12) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(6,ap))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 10, in <module>
    print(round(6,ap))
TypeError: 'float' object cannot be interpreted as an integer
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:49:24) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:49:32) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 0
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 8, in <module>
    ap = ap + sqrt(6/cont**2)
ZeroDivisionError: division by zero
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:49:49) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:49:51) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:50:06) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont < n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:51:01) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:51:04) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + sqrt(6/cont**2)
	cont += 1
	print(round(ap,6))
-- OUTPUT:
2.44949
3.674235
4.490731
5.103104
5.593002
6.00125
6.351177
6.657363
6.929529
7.174478
7.397159
7.601283
7.789705
7.964669
8.127968
8.281061
8.425149
8.561231
8.690152
8.812626
8.929269
9.040609
9.147109
9.249171
9.34715
9.441362
9.532083
9.619565
9.70403
9.78568
9.864696
9.941242
10.015469
10.087513
10.157499
10.22554
10.291742
10.356203
10.41901
10.480247
10.539991
10.598312
10.655277
10.710947
10.76538
10.81863
10.870747
10.921778
10.971768
11.020757
11.068787
11.115892
11.162109
11.20747
11.252006
11.295747
11.33872
11.380953
11.42247
11.463295
11.50345
11.542958
11.581839
11.620112
11.657797
11.69491
11.73147
11.767492
11.802991
11.837984
11.872484
11.906505
11.940059
11.97316
12.00582
12.03805
12.069862
12.101266
12.132272
12.162891
12.193131
12.223003
12.252515
12.281676
12.310493
12.338975
12.367131
12.394966
12.422488
12.449705
12.476622
12.503247
12.529586
12.555644
12.581428
12.606944
12.632196
12.657191
12.681933
12.706428
12.73068
12.754695
12.778476
12.802029
12.825358
1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:53:01) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(ap,6))
-- OUTPUT:
6.0
7.5
8.166667
8.541667
8.781667
8.948333
9.070782
9.164532
9.238606
9.298606
9.348193
9.38986
9.425363
9.455975
9.482642
9.506079
9.52684
9.545359
9.561979
9.576979
9.590585
9.602982
9.614324
9.62474
9.63434
9.643216
9.651447
9.6591
9.666234
9.672901
9.679144
9.685004
9.690513
9.695704
9.700601
9.705231
9.709614
9.713769
9.717714
9.721464
9.725033
9.728434
9.731679
9.734779
9.737742
9.740577
9.743293
9.745897
9.748396
9.750796
9.753103
9.755322
9.757458
9.759516
9.761499
9.763412
9.765259
9.767043
9.768766
9.770433
9.772046
9.773606
9.775118
9.776583
9.778003
9.779381
9.780717
9.782015
9.783275
9.784499
9.78569
9.786847
9.787973
9.789069
9.790135
9.791174
9.792186
9.793172
9.794134
9.795071
9.795986
9.796878
9.797749
9.798599
9.79943
9.800241
9.801034
9.801809
9.802566
9.803307
9.804031
9.80474
9.805434
9.806113
9.806778
9.807429
9.808066
9.808691
9.809303
9.809903
9.810492
9.811068
9.811634
9.812189
9.812733
9.813267
9.813791
9.814305
9.81481
9.815306
9.815793
9.816271
9.816741
9.8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:53:39) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- OUTPUT:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:53:43) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- OUTPUT:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:53:45) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- OUTPUT:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 18:53:50) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1
while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- EXECUTION TIME:
0.147715
-- TEST CASE 1:
---- input:
500
---- correct output:
3.139684
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
-- TEST CASE 2:
---- input:
159863
---- correct output:
3.141587
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
-- TEST CASE 3:
---- input:
100
---- correct output:
3.132077
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-20 18:53:57) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1

while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- OUTPUT:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 18:53:59) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1

while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1
	print(round(sqrt(ap),6))
-- EXECUTION TIME:
0.154316
-- TEST CASE 1:
---- input:
500
---- correct output:
3.139684
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
-- TEST CASE 2:
---- input:
159863
---- correct output:
3.141587
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
3.13217
3.132262
3.132353
3.132441
3.132528
3.132613
3.132697
3.132779
3.13286
3.132939
3.133017
3.133093
3.1
-- TEST CASE 3:
---- input:
100
---- correct output:
3.132077
---- user output:
2.44949
2.738613
2.857738
2.922613
2.963388
2.991376
3.011774
3.027298
3.039508
3.049362
3.057482
3.064288
3.070075
3.075057
3.07939
3.083193
3.086558
3.089556
3.092245
3.09467
3.096867
3.098868
3.100697
3.102377
3.103923
3.105353
3.106678
3.107909
3.109057
3.110129
3.111132
3.112074
3.112959
3.113792
3.114579
3.115322
3.116025
3.116692
3.117325
3.117926
3.118499
3.119044
3.119564
3.120061
3.120535
3.12099
3.121425
3.121842
3.122242
3.122627
3.122996
3.123351
3.123693
3.124022
3.12434
3.124646
3.124941
3.125227
3.125503
3.125769
3.126027
3.126277
3.126519
3.126753
3.12698
3.1272
3.127414
3.127621
3.127823
3.128018
3.128209
3.128394
3.128574
3.128749
3.128919
3.129085
3.129247
3.129404
3.129558
3.129708
3.129854
3.129996
3.130136
3.130271
3.130404
3.130534
3.13066
3.130784
3.130905
3.131023
3.131139
3.131252
3.131363
3.131471
3.131578
3.131681
3.131783
3.131883
3.131981
3.132077
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-20 18:54:07) 
-- CODE:
from math import *

n = int(input("insira o number de termos: "))

ap = 0
cont = 1

while (cont <= n):
	ap = ap + 6/cont**2
	cont += 1

print(round(sqrt(ap),6))
-- EXECUTION TIME:
0.123019
-- TEST CASE 1:
---- input:
500
---- correct output:
3.139684
---- user output:
3.139684
-- TEST CASE 2:
---- input:
159863
---- correct output:
3.141587
---- user output:
3.141587
-- TEST CASE 3:
---- input:
100
---- correct output:
3.132077
---- user output:
3.132077
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
