== TEST (2019-05-09 18:29:59) 
-- CODE:


qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = (4*qi)/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (tempo>0):
	rend = qi + juros
	saldo = rend- qi
	qi    = float(input("Quantia inicial: "))
	tempo = int(input("Tempo de investimento: "))
	

print(round(saldo, 2)) # Exibicao de resultados

	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 15, in <module>
    qi    = float(input())
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:30:37) 
-- CODE:


qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = (4*qi)/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (tempo>0):
	rend = qi + juros
	saldo = rend- qi
	print(round(saldo, 2)) # Exibicao de resultados
qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
	

-- OUTPUT:
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.01
23.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:33:48) 
-- CODE:

qi    = int(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = (4*qi)/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	t = t + 1

print(round(saldo, 2)) # Exibicao de resultados
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    qi    = int(input())
ValueError: invalid literal for int() with base 10: '575.25'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:36:43) 
-- CODE:

qi    = int(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	t = t + 1

print(round(saldo, 2)) # Exibicao de resultados
	

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    qi    = int(input())
ValueError: invalid literal for int() with base 10: '575.25'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:40:05) 
-- CODE:

qi    = int(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	print(round(saldo, 2)) # Exibicao de resultados
	t = t + 1



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    qi    = int(input())
ValueError: invalid literal for int() with base 10: '575.25'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 18:40:15) 
-- CODE:

qi    = int(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	print(round(saldo, 2)) # Exibicao de resultados
	t = t + 1



-- EXECUTION TIME:
0.14149
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2497/main.py", line 2, in <module>
    qi    = int(input())
ValueError: invalid literal for int() with base 10: '575.25'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:40:24) 
-- CODE:
qi    = int(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	print(round(saldo, 2)) # Exibicao de resultados
	t = t + 1



-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    qi    = int(input())
ValueError: invalid literal for int() with base 10: '575.25'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 18:40:48) 
-- CODE:
qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	print(round(saldo, 2)) # Exibicao de resultados
	t = t + 1



-- OUTPUT:
598.26
622.19
647.08
672.96
699.88
727.87
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 18:40:55) 
-- CODE:
qi    = float(input("Quantia inicial: "))
tempo = int(input("Tempo de investimento: "))
juros = 4/100
saldo = qi      # Variavel acumuladora

# Valor inicial da variavel contadora
t = 0

# Atualizacao de saldo
while (t != tempo):
	rend = saldo * juros
	saldo = saldo + rend
	print(round(saldo, 2)) # Exibicao de resultados
	t = t + 1



-- EXECUTION TIME:
0.17164
-- TEST CASE 1:
---- input:
575.25
6
---- correct output:
598.26
622.19
647.08
672.96
699.88
727.87
---- user output:
598.26
622.19
647.08
672.96
699.88
727.87
-- TEST CASE 2:
---- input:
825.4
3

---- correct output:
858.42
892.75
928.46
---- user output:
858.42
892.75
928.46
-- TEST CASE 3:
---- input:
1275.65
5
---- correct output:
1326.68
1379.74
1434.93
1492.33
1552.02
---- user output:
1326.68
1379.74
1434.93
1492.33
1552.02
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
