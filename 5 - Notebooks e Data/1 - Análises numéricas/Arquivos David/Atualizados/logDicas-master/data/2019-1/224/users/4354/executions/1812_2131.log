== TEST (2019-06-08 22:39:22) 
-- CODE:
from math import *
ang = radians(float(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)*i 
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
-8.56761e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:39:44) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)*i 
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
-8.56761e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:40:24) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)*i 
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
-8.56761e-05
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:40:52) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
0.99991432757
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:41:37) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
0.99991432757
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:41:49) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
0.99991432757
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:44:50) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo: ")))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
0.99991432757
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-08 22:46:04) 
-- CODE:
from math import *
ang = eval(input("digite o angulo: "))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- OUTPUT:
0.73168886887
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-08 22:46:22) 
-- CODE:
from math import *
ang = eval(input("digite o angulo: "))
k = int(input("digite a quantidade de termos: "))
if(-1 < ang < 1):
	soma = 0
	b = 0
	for i in range(k):
		sinal = (-1)**i
		soma = soma + sinal*((ang**b)/factorial(b))
		b = b + 2
print(round(soma,11))
-- EXECUTION TIME:
0.857043
-- TEST CASE 1:
---- input:
0.75
36
---- correct output:
0.73168886887
---- user output:
0.73168886887
-- TEST CASE 2:
---- input:
0.26
47
---- correct output:
0.96638997813
---- user output:
0.96638997813
-- TEST CASE 3:
---- input:
0.47
58
---- correct output:
0.8915682882
---- user output:
0.8915682882
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
