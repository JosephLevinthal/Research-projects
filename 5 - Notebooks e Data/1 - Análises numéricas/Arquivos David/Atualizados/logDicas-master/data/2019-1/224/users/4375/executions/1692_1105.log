== TEST (2019-04-28 21:21:53) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada:" + descr)
-- OUTPUT:
Entrada:lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:22:15) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
-- OUTPUT:
Entrada: lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:27:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr==lobo):
	print("Casa: Stark")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if(descr==lobo):
NameError: name 'lobo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:27:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr=lobo):
	print("Casa: Stark")
-- ERROR:
File "XXXX", line 5
    if(descr=lobo):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:28:19) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if descr==lobo :
	print("Casa: Stark")
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 5, in <module>
    if descr==lobo :
NameError: name 'lobo' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:28:41) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if descr=="lobo" :
	print("Casa: Stark")
-- OUTPUT:
Entrada: lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:29:52) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr=="lobo"):
	print("Casa: Stark")
elif(descr=="leao"):
	print("Casa: Lannister")
-- OUTPUT:
Entrada: lula
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:33:29) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr=="lobo"):
	print("Casa: Stark")
elif(descr=="leao"):
	print("Casa: Lannister")
elif(descr=="veado"):
	print("Casa: Baratheon")
elif(descr=="dragao"):
	print("Casa: Targaryen")
elif(descr=="rosa"):
	print("Casa: Tyrell")
elif(descr=="sol"):
	print("Casa: Martell")
elif(descr=="lula"):
	print("Casa: Greyjoy")
elif(descr=="esfolado"):
	print("Casa: Bolton")
elif(descr=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
	
	
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-28 21:33:38) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr=="lobo"):
	print("Casa: Stark")
elif(descr=="leao"):
	print("Casa: Lannister")
elif(descr=="veado"):
	print("Casa: Baratheon")
elif(descr=="dragao"):
	print("Casa: Targaryen")
elif(descr=="rosa"):
	print("Casa: Tyrell")
elif(descr=="sol"):
	print("Casa: Martell")
elif(descr=="lula"):
	print("Casa: Greyjoy")
elif(descr=="esfolado"):
	print("Casa: Bolton")
elif(descr=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
	
	
-- OUTPUT:
Entrada: lula
Casa: Greyjoy
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-28 21:33:44) 
-- CODE:
# Teste seu código aos poucos. Não teste tudo no final, pois fica mais difícil de identificar erros.
# Ao testar sua solução, não se limite ao caso de exemplo. Teste as diversas possibilidades de saída
descr=input("descricao do brasao: ")
print("Entrada: " + descr)
if(descr=="lobo"):
	print("Casa: Stark")
elif(descr=="leao"):
	print("Casa: Lannister")
elif(descr=="veado"):
	print("Casa: Baratheon")
elif(descr=="dragao"):
	print("Casa: Targaryen")
elif(descr=="rosa"):
	print("Casa: Tyrell")
elif(descr=="sol"):
	print("Casa: Martell")
elif(descr=="lula"):
	print("Casa: Greyjoy")
elif(descr=="esfolado"):
	print("Casa: Bolton")
elif(descr=="turta"):
	print("Casa: Tully")
else:
	print("Brasao invalido")
	
	
-- EXECUTION TIME:
0.123782
-- TEST CASE 1:
---- input:
lula
---- correct output:
Entrada: lula
Casa: Greyjoy
---- user output:
Entrada: lula
Casa: Greyjoy
-- TEST CASE 2:
---- input:
tambaqui
---- correct output:
Entrada: tambaqui
Brasao invalido
---- user output:
Entrada: tambaqui
Brasao invalido
-- TEST CASE 3:
---- input:
dragao
---- correct output:
Entrada: dragao
Casa: Targaryen
---- user output:
Entrada: dragao
Casa: Targaryen
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
