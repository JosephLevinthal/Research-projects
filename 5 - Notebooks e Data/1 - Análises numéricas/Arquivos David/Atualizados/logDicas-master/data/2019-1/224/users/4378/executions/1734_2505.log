== TEST (2019-05-15 19:22:05) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print(3)
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo*sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:22:11) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print(3)
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo*sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- EXECUTION TIME:
0.167478
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:23:46) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:23:52) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:24:00) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- EXECUTION TIME:
0.134701
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:27:29) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- EXECUTION TIME:
0.201518
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:27:31) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- EXECUTION TIME:
0.180177
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:27:32) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal=(-1)**i
		termo=termo + sinal*(4/(a1*a2*a3))
		a1=a1+2
		a2=a2+2
		a3=a3+2
		i=i+1
print(round(3+termo,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:29:17) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal= (-1)**i
		termo= termo + sinal*(4/(a1*a2*a3))
		a1= a1+2
		a2= a2+2
		a3= a3+2
		i= i+1
print(round(3 + termo,8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:29:21) 
-- CODE:
k=int(input("numero de termos: "))
a1=2
a2=3
a3=4
i=0
termo=0
if(k==1):
	print("3")
else:
	while(i+1<k):
		sinal= (-1)**i
		termo= termo + sinal*(4/(a1*a2*a3))
		a1= a1+2
		a2= a2+2
		a3= a3+2
		i= i+1
print(round(3 + termo,8))
-- EXECUTION TIME:
0.269361
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1734/2505/main.py", line 1, in <module>
    k=int(input())
ValueError: invalid literal for int() with base 10: 'pi/2'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:35:10) 
-- CODE:
from math import*
ang=eval(input("digite o angulo x: "))
k=int(input("numero de termos: "))
soma=0
b=1
i=0
while(i<k):
	sinal= (-1)**i
	sen= sinal*((ang*b)/factorial(b))
	soma=soma+sen
	b=b+2
	i=i+1
print(round(soma, 10))
-- OUTPUT:
0.848705307
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:35:19) 
-- CODE:
from math import*
ang=eval(input("digite o angulo x: "))
k=int(input("numero de termos: "))
soma=0
b=1
i=0
while(i<k):
	sinal= (-1)**i
	sen= sinal*((ang*b)/factorial(b))
	soma=soma+sen
	b=b+2
	i=i+1
print(round(soma, 10))
-- EXECUTION TIME:
0.190841
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
0.848705307
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.8486663488
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.5672320069
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-15 19:37:47) 
-- CODE:
from math import *
ang= eval(input("digite o angulo x: "))
k= int(input("numero de termos: "))
soma= 0
b= 1
i= 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma=soma+sen
	b=b+2
	i=i+1
print(round(soma, 10))
-- OUTPUT:
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-15 19:37:54) 
-- CODE:
from math import *
ang= eval(input("digite o angulo x: "))
k= int(input("numero de termos: "))
soma= 0
b= 1
i= 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma=soma+sen
	b=b+2
	i=i+1
print(round(soma, 10))
-- EXECUTION TIME:
0.218715
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
