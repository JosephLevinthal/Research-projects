== TEST (2019-04-05 01:11:56) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
x=input("Digite 1 para o volume de ar ou 2 para volume de combustivel: ")
if(x==1):
	v=4*pi*(r**3)/3
	print(v)
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(v)	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    x=input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:13:14) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
x=int(input("Digite 1 para o volume de ar ou 2 para volume de combustivel: "))
if(x==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    x=int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:14:01) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
y=input("Digite 1 para o volume de ar ou 2 para volume de combustivel: "))
if(y==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    y=input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:14:11) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
y=input("Digite 1 para o volume de ar ou 2 para volume de combustivel: ")
if(y==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    y=input()
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:14:39) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
numero=input("Digite 1 para o volume de ar ou 2 para volume de combustivel: ")
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    numero=input()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:15:31) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
numero=int(input("Digite um para o volume de ar ou dois para volume de combustivel: "))
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    numero=int(input())
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:15:42) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
numero=int(input("Digite um para o volume de ar ou dois para volume de combustivel: 1/2 "))
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    numero=int(input())
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 01:16:10) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
numero=input("1 ou 2 : ")
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    numero=input()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:19:32) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
numero=input("1 ou 2 : ")
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    numero=input()
         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:20:16) 
-- CODE:
from math import*
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
x=int(input("Digite um ou dois : "))
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 4
    x=int(input())
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:29:15) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
if(numero==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    if(numero==1):
                 ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:29:30) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
if(x==1):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    if(x==1):
            ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:29:44) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
if(x=="1"):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    if(x=="1"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:29:58) 
-- CODE:

from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
if(x=="1"):
	v=4*pi*(r**3)/3
	print(round(v,4))
else:
	 v=r*(h**2)*(3*r-h)/3
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 6
    if(x=="1"):
              ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:30:57) 
-- CODE:

from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=4*pi*(r**3)/3
z=r*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 6
    v=4*pi*(r**3)/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 13:31:22) 
-- CODE:

from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=(4*pi)*(r**3)/3
z=r*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 6
    v=(4*pi)*(r**3)/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:03:19) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=(4*pi)*(r**3)/3
z=r*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=(4*pi)*(r**3)/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:03:41) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=((4*pi)*(r**3))/3
z=r*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=((4*pi)*(r**3))/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:04:53) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=((4*pi)*(r**3))/3
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=((4*pi)*(r**3))/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:05:07) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=(4*pi)*(r**3)
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=(4*pi)*(r**3)
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:05:38) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v = 4*pi
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v = 4*pi
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:05:44) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v = 4
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v = 4
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:05:54) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:05:59) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
v=1
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    v=1
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:06:08) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: ")
z=pi*(h**2)*(3*r-h)/3
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
File "XXXX", line 5
    z=pi*(h**2)*(3*r-h)/3
    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:06:25) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x=="1"):
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:07:26) 
-- CODE:
from math import*
x=int(input("Digite um ou dois : "))
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(v,4))
else:
	 print(round(v,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    x=int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:08:29) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=pi*(h**2)*(3*r-h)/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
1.9373
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:09:09) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
1.9373
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:09:27) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
1.9373
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 14:09:45) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- EXECUTION TIME:
0.10414
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
3.5914
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
9.2028
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:09:51) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
3.5914
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:30:11) 
-- CODE:
from math import*
x=input("Digite um ou dois : ")
r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
3.5914
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:30:26) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:30:47) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 14:31:12) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- EXECUTION TIME:
0.171509
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:32:40) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=((4*pi)*(r**3))
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:33:36) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=(4*pi)
	T=T*(r**3)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:34:20) 
-- CODE:


r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")

if(x!="1"):
	T=(4*pi)
	T=T*(r**3)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    T=(pi*(h**2)*(3*r-h))/3
NameError: name 'pi' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:34:39) 
-- CODE:


r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)
	T=T*(r**3)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    T=(pi*(h**2)*(3*r-h))/3
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:35:22) 
-- CODE:


r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)
	T=T*(r*r*r)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    T=(pi*(h**2)*(3*r-h))/3
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:35:28) 
-- CODE:


r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)
	T=T*(r*r*r)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 13, in <module>
    T=(pi*(h**2)*(3*r-h))/3
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:36:00) 
-- CODE:


r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)*(r*r*r)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 12, in <module>
    T=(pi*(h**2)*(3*r-h))/3
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:36:21) 
-- CODE:


r=int(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)*(r*r*r)
	T=T/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:36:41) 
-- CODE:


r=int(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
pi=3,14
if(x!="1"):
	T=(4*pi)*(r*r*r)/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    r=int(input())
ValueError: invalid literal for int() with base 10: '3.50'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:38:39) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-05 14:39:13) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-05 14:39:33) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
if(x!="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- EXECUTION TIME:
0.273532
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
310.3391
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:02:28) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:02:44) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
h=float(input("Digite a altura da coluna de ar: "))
x=input("Digite um ou dois : ")
if(x=="1"):
	T=((4*pi)*(r**3))/3
	print(round(T,4))
else:
	T=(pi*(h**2)*(3*r-h))/3
	print(round(T,4))	  
		  
		  
		  
-- OUTPUT:
179.5944
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-06 02:08:08) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
x=float(input("Digite a altura da coluna de ar: "))
z=input("Digite um ou dois : ")
v=(pi*(x**2))*((3*r)-x)/3
y=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(v,4))
else:
	print(round(y-v,4))
	
	
		  
		  
		  
		  
-- OUTPUT:
9.0257
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-06 02:08:22) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
x=float(input("Digite a altura da coluna de ar: "))
z=input("Digite um ou dois : ")
v=(pi*(x**2))*((3*r)-x)/3
y=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(v,4))
else:
	print(round(y-v,4))
	
	
		  
		  
		  
		  
-- EXECUTION TIME:
0.128548
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:38:51) 
-- CODE:
from math import*

r=float(input("Digite o raio do tanque: "))
x=float(input("Digite a altura da coluna de ar: "))
z=input("Digite um ou dois : ")
v=(pi*(x**2))*((3*r)-x)/3
y=((4*pi)*(r**3))/3
if(z=="1"):
	print(round(v,4))
else:
	print(round(y-v,4))
	
	
		  
		  
		  
		  
-- EXECUTION TIME:
0.214581
-- TEST CASE 1:
---- input:
3.50
0.95
1
---- correct output:
9.0257
---- user output:
9.0257
-- TEST CASE 2:
---- input:
4.20
1.30
2
---- correct output:
290.3408
---- user output:
290.3408
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
