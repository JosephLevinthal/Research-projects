== TEST (2019-06-06 18:26:08) 
-- CODE:
from numpy import*
vet=array(eval(input("digite o numero: ")))
soma=0
i=0
while (i < size(notas)):
soma = soma + notas[i]
i = i + 1
media = soma / size(notas)
print(media)

for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 18:55:59) 
-- CODE:
from numpy import*
vet=array(eval(input("digite o numero: ")))
soma=0
i=0
while (i < size(notas)):
soma = soma + notas[i]
i = i + 1
media = soma / size(notas)
print(media)

for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:05:09) 
-- CODE:
from numpy import*
vet=array(eval(input("digite o numero: ")))
soma=
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 3
    soma=
        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:05:17) 
-- CODE:
from numpy import*
vet=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:05:31) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:05:44) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:06:27) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print (round(media,2))
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:07:22) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:07:53) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 6
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:09:39) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while(i<size(notas)):
	soma=soma+notas
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 8
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:10:08) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while(i<size(notas)):
	soma=soma+notas
for i in range(size(notas)):
soma = soma + notas[i]
media = soma / size(notas)
print(media)
-- ERROR:
File "XXXX", line 8
    soma = soma + notas[i]
       ^
IndentationError: expected an indented block
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:14:16) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
while(i<size(notas)):
	soma=soma+notas
	i=i+1

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:15:12) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
while(i<size(notas)):
	soma=soma+notas
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:15:41) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
while(i<size(notas)):
	soma=soma+notas
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:17:16) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
while(i<size(notas):
	soma=soma/size(notas)
	i=i+1
print(soma)

-- ERROR:
File "XXXX", line 5
    while(i<size(notas):
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:17:30) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:18:15) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:18:55) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=7
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:19:16) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=7
i=5
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-06 19:22:18) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)
	for elemento in vet:
      	if (elemento>=5):
        	soma = soma + 1
			print(soma)
-- ERROR:
File "XXXX", line 9
    for elemento in vet:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:08:04) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)
	for elemento in vet:
      	if (elemento>=5):
        	soma = soma + 1
			print(soma)
-- ERROR:
File "XXXX", line 9
    for elemento in vet:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:08:27) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:09:41) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)
  notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    notas = array(eval(input()))	
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:09:52) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while(i<size(notas)):
	soma=soma/size(notas)
	i=i+1
print(soma)
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:13:40) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
print(soma)
 for elemento in vet:
      if (elemento <7):
         npar = npar + 1

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    for elemento in vet:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:13:57) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
print(soma)
 for elemento in vet:
      if (elemento<7):
         npar = npar + 1

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    for elemento in vet:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:16:22) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
print(soma)
 for i in vet:
      if (i < 7):
         npar = npar + 1

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    for i in vet:
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:16:54) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in vet:
      if (i < 7):
         npar = npar + 1

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 10
    if (i < 7):
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:24:00) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in notas:
      if (i < 7):
         npar = npar + 1

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 10
    if (i < 7):
              ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:25:12) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(vet)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in notas:
		soma = soma + notas[i]

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:25:44) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=5
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in notas:
		soma = soma + notas[i]

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:26:55) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in range(notas):
		soma = soma + notas[i]

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:27:29) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in range(size/notas):
		soma = soma + notas[i]

notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:29:26) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in range(size/notas):
		soma = soma + notas[i]
	media = soma / size(notas)
		print(media)
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 12
    print(media)
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:29:36) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in range(size/notas):
		soma = soma + notas[i]
	media = soma / size(notas)
	print(media)
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:31:04) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
while (size(notas)>=5):
	soma=soma/size(notas)
	i=i+1
	print(soma)
	for i in range(size(notas)):
		soma = soma + notas[i]
	media = soma / size(notas)
	print(media)
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:34:52) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
	soma = soma + notas[i]
	media = soma / size(notas)
	print(media)
	i=i+1
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:37:00) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
	soma = soma + notas[i]
	media = soma / size(notas)
print(media)
	i=i+1
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:37:17) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
	soma = soma + notas[i]
media = soma / size(notas)
print(media)
	i=i+1
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
File "XXXX", line 9
    i=i+1
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:37:24) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0
i=0
for i in range(size(notas)):
	soma = soma + notas[i]
media = soma / size(notas)
print(media)
i=i+1
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:38:17) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
soma=0

for i in range(size(notas)):
	soma = soma + notas[i]
media = soma / size(notas)
print(media)
i=i+1
notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-06-11 18:51:03) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
while(size(notas)>1):
	soma=0
	for i in range(size(notas)):
		if(notas[i]>=5 and notas[i]<7):
			soma = soma + 1
	print(soma)
	notas = array(eval(input("Proximo vetor: ")))	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-06-11 18:51:53) 
-- CODE:
from numpy import*
notas=array(eval(input("digite o numero: ")))
while(size(notas)>1):
	soma=0
	for i in range(size(notas)):
		if(notas[i]>=5 and notas[i]<7):
			soma = soma + 1
	print(soma)
	notas = array(eval(input("Proximo vetor: ")))	
-- EXECUTION TIME:
1.18418
-- TEST CASE 1:
---- input:
[6.3,6.4,6.0,6.9,5.5,5.2]
[4.5,3.8,7.8,4.8,9.6,9.2,8.7,2.3,2.9]
[5.6,4.7,3.8,7.5,8.2,8.4,7.1,6.9,6.7]
[1.1,3.1,2.7,7.8,6.7,4.6,4.9,7.0]
[1]
---- correct output:
6
0
3
1
---- user output:
6
0
3
1
-- TEST CASE 2:
---- input:
[5.1,5.2,5.4,5.3,5.7,5.8,6.1,5.6,5.5,5.9,6.2]
[2.7,6.8,4.7,5.7,3.5,6.6,7.0,5.4]
[8.7,8.6,8.9,8.6,7.5,7.2,6.9,7.4,7.2]
[1]
---- correct output:
11
4
1
---- user output:
11
4
1
-- TEST CASE 3:
---- input:
[8.5,7.5,6.8,6.9,7.0,5.6,5.8,6.3]
[7.3,7.1,7.0,6.8,6.0,5.0]
[1]
---- correct output:
5
3
---- user output:
5
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
