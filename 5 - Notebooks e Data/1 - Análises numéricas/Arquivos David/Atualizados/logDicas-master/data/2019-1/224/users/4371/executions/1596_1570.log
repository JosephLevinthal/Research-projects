== TEST (2019-04-01 22:27:35) 
-- CODE:
 "BATMAN"
print(BATMAN.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
File "XXXX", line 1
    "BATMAN"
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:28:00) 
-- CODE:
input("BATMAN")
print(BATMAN.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(BATMAN.lower())
NameError: name 'BATMAN' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 22:28:05) 
-- CODE:
input("BATMAN")
print(BATMAN.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.143305
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1570/main.py", line 2, in <module>
    print(BATMAN.lower())
NameError: name 'BATMAN' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 22:28:08) 
-- CODE:
input("BATMAN")
print(BATMAN.lower())
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.144132
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1570/main.py", line 2, in <module>
    print(BATMAN.lower())
NameError: name 'BATMAN' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 22:28:36) 
-- CODE:
input("BATMAN")
print(BATMAN.lower())


-- EXECUTION TIME:
0.145118
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1596/1570/main.py", line 2, in <module>
    print(BATMAN.lower())
NameError: name 'BATMAN' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:28:38) 
-- CODE:
input("BATMAN")
print(BATMAN.lower())


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    print(BATMAN.lower())
NameError: name 'BATMAN' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:29:07) 
-- CODE:
input("BATMAN")
print("BATMAN".lower())


-- OUTPUT:
batman
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:29:23) 
-- CODE:
input("BATMAN")
print("BATMAN.lower()")


-- OUTPUT:
BATMAN.lower()
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-01 22:29:27) 
-- CODE:
input("BATMAN")
print("BATMAN.lower()")


-- EXECUTION TIME:
0.144242
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
BATMAN.lower()
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:29:35) 
-- CODE:
input("BATMAN")
print"BATMAN.lower()"


-- ERROR:
File "XXXX", line 2
    print"BATMAN.lower()"
                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:30:13) 
-- CODE:
input("BATMAN")
print("BATMAN.lower()")


-- OUTPUT:
BATMAN.lower()
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:30:28) 
-- CODE:
batman
print("BATMAN.lower()")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    batman
NameError: name 'batman' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:30:40) 
-- CODE:
batman
print("batman.lower()")


-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    batman
NameError: name 'batman' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-01 22:32:20) 
-- CODE:

print("batman.lower()")


-- OUTPUT:
batman.lower()
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-02 02:26:28) 
-- CODE:
texto=input("Batman")
print(texto.lower())


-- OUTPUT:
primeiro_caso_de_teste
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-02 02:26:33) 
-- CODE:
texto=input("Batman")
print(texto.lower())


-- EXECUTION TIME:
0.141452
-- TEST CASE 1:
---- input:
PRIMEIRO_CASO_DE_TESTE
---- correct output:
primeiro_caso_de_teste
---- user output:
primeiro_caso_de_teste
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
