== TEST (2019-04-09 19:09:35) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ponto x=float(input("digite a coordenada x:"))
ponto y= float(input("digite a coordenada y:"))
if(ponto=="reta"):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 4
    ponto x=float(input())
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:10:04) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ponto x=input("digite a coordenada x:")
ponto y=input("digite a coordenada y:")
if(ponto=="reta"):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 4
    ponto x=input()
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:10:14) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
ponto x=input("digite a coordenada:")
ponto y=input("digite a coordenada:")
if(ponto=="reta"):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 4
    ponto x=input()
          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:10:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=input("digite a coordenada x:")
y=input("digite a coordenada y:")
if(ponto=="reta"):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 6, in <module>
    if(ponto=="reta"):
NameError: name 'ponto' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:12:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite a coordenada x:"))
y=float(input("digite a coordenada y:"))
r=2*x+y=3
if(r):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 6
    r=2*x+y=3
     ^
SyntaxError: can't assign to operator
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:14:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite a coordenada x:"))
y=float(input("digite a coordenada y:"))
r=2*x+y
if(r):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:14:19) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite a coordenada x:"))
y=float(input("digite a coordenada y:"))
r=2*x+y
if(r):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- EXECUTION TIME:
0.165613
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto pertence a reta
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 19:14:55) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite a coordenada x:"))
y=float(input("digite a coordenada y:"))
r=(2*x)+y==3
if(r):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 19:15:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
x=float(input("digite a coordenada x:"))
y=float(input("digite a coordenada y:"))
r=(2*x)+y==3
if(r):
	mensagem="ponto pertence a reta"
	print(mensagem.lower())
else:
	mensagem="ponto nao pertence a reta"
	print(mensagem.lower())
-- EXECUTION TIME:
0.158191
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
