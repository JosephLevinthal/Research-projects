== TEST (2019-04-24 20:27:59) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
	elif(a==b) and (b==c):
		print("equilatero")
		elif(a==b) or (b==c) or (c==a):
			print("isosceles")
			else:
				print("escaleno")
    
     










-- ERROR:
File "XXXX", line 7
    elif(a==b) and (b==c):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:28:44) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		print("equilatero")
elif(a==b) or (b==c) or (c==a):
	   print("isosceles")
else:
		print("escaleno")
    
     










-- OUTPUT:
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:34:10) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas" "," a "," b "," c)
print(p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas" "," a "," b "," c)
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:36:49) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas"                    ,        a      ,          b     ,    c)
print(p)
    
     










-- OUTPUT:
Entradas 2.0 4.0 4.0
isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:38:55) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print("Entradas"                    ","     a     ","         b     ","    c)
print("Tipo de triangulo"      ","         p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas"                    ","     a     ","         b     ","    c)
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:39:19) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print("Entradas"                    ,     a     ,         b     ,   c)
print("Tipo de triangulo"      ,         p)
    
     










-- OUTPUT:
Tipo de triangulo isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:39:24) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print("Entradas"                    ,     a     ,         b     ,   c)
print("Tipo de triangulo"      ,         p)
    
     










-- OUTPUT:
Tipo de triangulo isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:39:54) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print("Entradas"                    :    a     ,         b     ,   c)
print("Tipo de triangulo"      :        p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas"                    :    a     ,         b     ,   c)
                                        ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:40:25) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print(     "Entradas:"                      a     ,         b     ,   c )
print(     "Tipo de triangulo:"              p     )
    
     










-- ERROR:
File "XXXX", line 13
    print(     "Entradas:"                      a     ,         b     ,   c )
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:40:52) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print(     "Entradas:"     a     ,         b     ,   c )
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print(     "Entradas:"     a     ,         b     ,   c )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:41:19) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
		print(     "Entradas:"     a     ","         b     ","   c )
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print(     "Entradas:"     a     ","         b     ","   c )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:41:33) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print(     "Entradas:"     a     ","         b     ","   c )
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print(     "Entradas:"     a     ","         b     ","   c )
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:41:38) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas:"     a     ","         b     ","   c )
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas:"     a     ","         b     ","   c )
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:42:08) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas:" a "," b "," c)
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas:" a "," b "," c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:44:01) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas:" a , b , c)
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas:" a , b , c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:44:03) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas:" a , b , c)
print("Tipo de triangulo:" p)
    
     










-- EXECUTION TIME:
0.202353
-- ERROR:
  File "/home/codebench/codes/1692/1099/main.py", line 13
    print("Entradas:" a , b , c)
                      ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:44:24) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		p="equilatero"
elif(a==b) or (b==c) or (c==a):
	   p="isosceles"
else:
		p="escaleno"
print("Entradas:" a , b , c)
print("Tipo de triangulo:" p)
    
     










-- ERROR:
File "XXXX", line 13
    print("Entradas:" a , b , c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:45:32) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		merda="equilatero"
elif(a==b) or (b==c) or (c==a):
	   merda="isosceles"
else:
		merda="escaleno"

print("Entradas:" a , b , c)
print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 14
    print("Entradas:" a , b , c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:46:29) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		merda="equilatero"
elif(a==b) or (b==c) or (c==a):
	   merda="isosceles"
else:
		merda="escaleno"

print("Entradas:" a, b, c)

print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 14
    print("Entradas:" a, b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:46:50) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		merda="equilatero"
elif(a==b) or (b==c) or (c==a):
	   merda="isosceles"
else:
		merda="escaleno"

print("Entradas:"a, b, c)

print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 14
    print("Entradas:"a, b, c)
                     ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:48:02) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		merda="equilatero"
elif(a==b) or (b==c) or (c==a):
	   merda="isosceles"
else:
		merda="escaleno"

print("Entradas:" a, b, c)

print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 14
    print("Entradas:" a, b, c)
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:48:09) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	print("invalido")
elif(a==b) and (b==c):
		merda="equilatero"
elif(a==b) or (b==c) or (c==a):
	   merda="isosceles"
else:
		merda="escaleno"



print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo:" merda)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:50:58) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"



print("Tipo de triangulo:" merda)
    
     










-- ERROR:
File "XXXX", line 16
    print("Tipo de triangulo:" merda)
                                   ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:51:23) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"



print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:53:44) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a, b, c)
print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:53:53) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a, b, c)
print("Tipo de triangulo:", merda)
    
     










-- EXECUTION TIME:
0.221084
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:54:07) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a, b, c)
print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:54:09) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a, b, c)
print("Tipo de triangulo:", merda)
    
     










-- EXECUTION TIME:
0.175124
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:18) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , b , c)
print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:55:36) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , b , c)
print("Tipo de triangulo:", merda)
    
     










-- EXECUTION TIME:
0.213035
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 4.4 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 2.0 7.0
Tipo de triangulo: invalido
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:55:36) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , b , c)
print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Entradas: 2.0 4.0 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:56:14) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , "," b , "," c)
print("Tipo de triangulo:", merda)
    
     










-- ERROR:
File "XXXX", line 15
    print("Entradas:", a , "," b , "," c)
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-24 20:56:51) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , "," , b , ",", c)
print("Tipo de triangulo:", merda)
    
     










-- OUTPUT:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-24 20:56:53) 
-- CODE:
a=float(input("a"))
b=float(input("b"))
c=float(input("c"))

if(a>=b+c) or (b>=a+c) or (c>=b+a) or (a<0) or (b<0) or (c<0):
	merda=("invalido")
elif(a==b) and (b==c):
	merda="equilatero"
elif(a==b) or (b==c) or (c==a):
   merda="isosceles"
else:
	merda="escaleno"


print("Entradas:", a , "," , b , ",", c)
print("Tipo de triangulo:", merda)
    
     










-- EXECUTION TIME:
0.138534
-- TEST CASE 1:
---- input:
2
4
4
---- correct output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
---- user output:
Entradas: 2.0 , 4.0 , 4.0
Tipo de triangulo: isosceles
-- TEST CASE 2:
---- input:
3.3
4.4
5.5
---- correct output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
---- user output:
Entradas: 3.3 , 4.4 , 5.5
Tipo de triangulo: escaleno
-- TEST CASE 3:
---- input:
1
2
7
---- correct output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
---- user output:
Entradas: 1.0 , 2.0 , 7.0
Tipo de triangulo: invalido
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
