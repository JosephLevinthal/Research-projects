== TEST (2019-03-21 19:28:44) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
max(x,y,z)
min(x,y,z)
c=x+y+z/2
print(max,c,min)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
<built-in function max> 8.0 <built-in function min>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:29:02) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
max(x,y,z)
print(max)
min(x,y,z)
c=x+y+z/2
print(max,c,min)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
<built-in function max>
<built-in function max> 8.0 <built-in function min>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:30:15) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
print(p)
min(x,y,z)
c=x+y+z/2
print(max,c,min)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10
<built-in function max> 8.0 <built-in function min>
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:30:40) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z/2
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 8.0 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:30:54) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 8.0 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:31:15) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 8.0 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:31:27) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 8.0 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:31:44) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 2.6666666666666665 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:31:48) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 2.6666666666666665 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:31:55) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.168038
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10 2.6666666666666665 -2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:32:00) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.230558
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10 2 -2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:32:05) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
10 2 -2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:32:09) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(p,c,q)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.137152
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
10 2 -2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:32:41) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2 2 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:32:44) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2 2 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:32:50) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.11988
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 2 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:13) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.195216
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 2 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:18) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.156202
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 2 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:33:18) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2 2 10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:23) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q,c,p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.145686
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2 2 10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:43) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.155369
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-21 19:33:44) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2
2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:50) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.15282
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.220467
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.128898
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.229317
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.200919
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.124716
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1596/1015/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.102295
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1596/1015/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.224079
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.237123
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-21 19:33:51) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.153447
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1596/1015/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 20:44:02) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2
2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 20:44:25) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.207036
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:37:55) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2
2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:38:08) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.12335
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:39:57) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.195381
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2.6666666666666665
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:40:01) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.170559
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2.6666666666666665
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:40:07) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- OUTPUT:
-2
2.6666666666666665
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:40:25) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c/3
print(q)
print(c)
print(p)
# Nao teste tudo no final, pois fica mais dificil de identificar erros.
# Nao se intimide com as mensagens de erro. Elas ajudam a corrigir seu codigo.

-- EXECUTION TIME:
0.12619
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2.6666666666666665
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:45:43) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)


-- EXECUTION TIME:
0.175017
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
2
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:45:45) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z
c=c//3
print(q)
print(c)
print(p)


-- OUTPUT:
-2
2
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 21:46:04) 
-- CODE:
x=int(input("Digite um valor inteiro: "))
y=int(input("Digite um valor inteiro: "))
z=int(input("DIgite um valor inteiro: "))
p=max(x,y,z)
q=min(x,y,z)
c=x+y+z//3
print(q)
print(c)
print(p)


-- EXECUTION TIME:
0.195156
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
8
10
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 21:50:32) 
-- CODE:
a=int(input("Digite um valor inteiro: "))
b=int(input("Digite um valor inteiro: "))
c=int(input("DIgite um valor inteiro: "))
p=max(a,b,c)
q=min(a,b,c)
c=a+b+c//3
print(q)
print(c)
print(p)


-- OUTPUT:
-2
8
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-22 22:30:13) 
-- CODE:
a=int(input("Digite um valor inteiro: "))
b=int(input("Digite um valor inteiro: "))
c=int(input("DIgite um valor inteiro: "))
p=max(a,b,c)
q=min(a,b,c)
c=a+b+c-p-q
print(q)
print(c)
print(p)


-- OUTPUT:
-2
0
10
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-22 22:30:24) 
-- CODE:
a=int(input("Digite um valor inteiro: "))
b=int(input("Digite um valor inteiro: "))
c=int(input("DIgite um valor inteiro: "))
p=max(a,b,c)
q=min(a,b,c)
c=a+b+c-p-q
print(q)
print(c)
print(p)


-- EXECUTION TIME:
0.133759
-- TEST CASE 1:
---- input:
10 -2 0
---- correct output:
-2 0 10
---- user output:
-2
0
10
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
