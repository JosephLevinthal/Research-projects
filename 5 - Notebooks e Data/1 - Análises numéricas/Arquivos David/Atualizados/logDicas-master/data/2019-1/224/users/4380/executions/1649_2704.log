== TEST (2019-04-14 18:08:45) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificaçao? (S/N) ")
if (boni.upper()== "S")
	print(nota*1,1)
-- ERROR:
File "XXXX", line 3
    if (boni.upper()== "S")
                          ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:09:21) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificaçao? (S/N) ")
if (boni.upper()== "S"):
	print(nota*1,1)
-- OUTPUT:
5.0 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:10:03) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(nota*1,1)
-- OUTPUT:
5.0 1
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:10:24) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(nota*1.1)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:11:11) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(round(nota*1.1,1)
-- ERROR:
File "XXXX", line 5
    
                            ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:11:25) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(round(nota*1.1,1))
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-14 18:12:36) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(round(nota*1.1,1))
else:
	print(round(nota,1))
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-14 18:12:48) 
-- CODE:
nota=float(input("nota do meliante:"))
boni= input("bonificacao? (S/N) ")
if (boni.upper()== "S"):
	print(round(nota*1.1,1))
else:
	print(round(nota,1))
-- EXECUTION TIME:
0.136685
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
