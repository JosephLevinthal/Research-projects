== TEST (2019-03-16 11:38:46) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:41:49) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
41234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:43:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
41234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:45:36) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:46:12) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(4*2)
-- OUTPUT:
48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:46:49) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
42468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:47:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:47:45) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:48:09) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print()
-- OUTPUT:
4
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:48:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(4*2)
-- OUTPUT:
48
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:49:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num(8))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num(8))
TypeError: 'int' object is not callable
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:50:01) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(dobro)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(dobro)
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:50:25) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:50:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:05) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
81234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:21) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("8"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:52) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:51:56) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:52:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
81234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 11:52:59) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.150205
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
81234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
8444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:53:07) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
81234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:53:31) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
88
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 11:53:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- EXECUTION TIME:
0.197148
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
88
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
88
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:54:48) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
42468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:55:41) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
4num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:55:55) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4'))

# Impressao do dobro do numero
print("num*2")
-- ERROR:
File "XXXX", line 4
    num = int(input("4'))
                        ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:56:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4"))

# Impressao do dobro do numero
print("num*2")
-- OUTPUT:
num*2
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 11:56:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4"))

# Impressao do dobro do numero
print("num*2")
-- EXECUTION TIME:
0.128746
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
num*2
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
num*2
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:57:13) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
42468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:57:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(#4))

# Impressao do dobro do numero
print(num*2)
-- ERROR:
File "XXXX", line 8
    
                ^
SyntaxError: unexpected EOF while parsing
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:57:51) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("quatro"))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:58:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4"))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:59:33) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
41234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 11:59:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
42468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:00:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- OUTPUT:
84
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:00:18) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4)
-- EXECUTION TIME:
0.196958
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
84
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
84
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:00:43) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(num)
-- EXECUTION TIME:
0.139362
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
81234
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
8444
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:01:17) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(dobro)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(dobro)
NameError: name 'dobro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:02:46) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("Digite o numero:"))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:03:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
88
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:03:22) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- EXECUTION TIME:
0.128127
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
88
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
88
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:03:50) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4*2)
-- OUTPUT:
88
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:03:53) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(8))

# Impressao do dobro do numero
print(4*2)
-- EXECUTION TIME:
0.270151
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
88
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
88
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:04:30) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(quatro))

# Impressao do dobro do numero
print(8)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    num = int(input(quatro))
NameError: name 'quatro' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:04:39) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("quatro'))

# Impressao do dobro do numero
print(8)
-- ERROR:
File "XXXX", line 4
    num = int(input("quatro'))
                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:04:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("quatro'))

# Impressao do dobro do numero
print(8)
-- ERROR:
File "XXXX", line 4
    num = int(input("quatro'))
                             ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:04:52) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("quatro"))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:05:28) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(print(4)))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
4
None8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:05:42) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(print(4)))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
4
None8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:05:44) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(print(4)))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
4
None8
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:05:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(print(4)))

# Impressao do dobro do numero
print(num)
-- OUTPUT:
4
None1234
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:07:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num = int(input(8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(num = int(input(8)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:07:20) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num = int(input(8)))
-- EXECUTION TIME:
0.22405
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1577/2897/main.py", line 7, in <module>
    print(num = int(input(8)))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:09:27) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(num*2)
-- OUTPUT:
42468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:09:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(int(input(8)))
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 7, in <module>
    print(int(input(8)))
EOFError: EOF when reading a line
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:10:02) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4))

# Impressao do dobro do numero
print(int(input(8)))
-- EXECUTION TIME:
0.133856
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1577/2897/main.py", line 7, in <module>
    print(int(input(8)))
EOFError: EOF when reading a line

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:13:14) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- OUTPUT:
88
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:13:16) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input(4*2))

# Impressao do dobro do numero
print(8)
-- EXECUTION TIME:
0.190972
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
88
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
88
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-03-16 12:21:57) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4"))

# Impressao do dobro do numero
print(num * 2)
-- OUTPUT:
2468
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-03-16 12:22:00) 
-- CODE:
# Use este codigo como ponto de partida

# Leitura de valores de entrada e conversao para inteiro
num = int(input("4"))

# Impressao do dobro do numero
print(num * 2)
-- EXECUTION TIME:
0.130663
-- TEST CASE 1:
---- input:
1234
---- correct output:
2468
---- user output:
2468
-- TEST CASE 2:
---- input:
444
---- correct output:
888
---- user output:
888
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
