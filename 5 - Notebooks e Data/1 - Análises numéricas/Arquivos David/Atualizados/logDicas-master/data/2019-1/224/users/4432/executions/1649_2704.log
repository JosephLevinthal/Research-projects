== SUBMITION (2019-04-09 00:19:19) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=bonificacao+bonificacao*0.1
	print(x)
-- EXECUTION TIME:
0.170753
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/2704/main.py", line 4, in <module>
    x=bonificacao+bonificacao*0.1
TypeError: can't multiply sequence by non-int of type 'float'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:19:22) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=bonificacao+bonificacao*0.1
	print(x)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    x=bonificacao+bonificacao*0.1
TypeError: can't multiply sequence by non-int of type 'float'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 00:20:30) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
-- EXECUTION TIME:
0.15214
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:

-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:20:34) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 00:29:32) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N")
		print(nota)
-- EXECUTION TIME:
0.211534
-- ERROR:
  File "/home/codebench/codes/1649/2704/main.py", line 7
    if(bonificacao.upper()=="N")
                               ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-09 00:29:49) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N")
		print(nota)
-- ERROR:
File "XXXX", line 7
    if(bonificacao.upper()=="N")
                               ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 00:29:59) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.136088
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-09 17:51:14) 
-- CODE:
nota=float(input("nota de zero a dez:    "))
bonificacao=input("recebera bonificacao:?    (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.15038
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
