== SUBMITION (2019-07-01 20:58:13) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.77685
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
               ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 20:58:22) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
    if x == 'A':
        xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
        xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
        ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
        ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
    if tabuleiro[ytab,xtab] == 11:
        moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
        life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 24
    if x == 'A':
               ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:02:58) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.886019
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:08) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.997333
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
2.34799
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
3.5693
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
4.11834
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
4.56973
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:09) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
5.1462
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:15) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.581795
-- ERROR:
sh: 1: cannot open /home/codebench/codes/1850/1280/cbtemp.txt: No such file

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:18) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
2.71308
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:19) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
1.65556
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:19) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
3.67978
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:19) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
4.29959
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:03:19) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
5.34973
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:05:08) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if x == 'A':
			xtab = xtab-1
    # Move personagem para DIREITA
    elif x == 'D':
			xtab = xtab+1
    # Move personagem para CIMA
    elif x == 'W':
			ytab = ytab-1
    # Move personagem para BAIXO
    elif x == 'S':
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 24
    if x == 'A':
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:08:38) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if(x == "A"):
			xtab = xtab-1
    # Move personagem para DIREITA
    elif(x == "D"):
			xtab = xtab+1
    # Move personagem para CIMA
    elif(x == "W"):
			ytab = ytab-1
    # Move personagem para BAIXO
    elif(x == "S"):
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 24
    if(x == "A"):
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:10:04) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
		if(x=="A"):
			xtab = xtab-1
    # Move personagem para DIREITA
    elif(x=="D"):
			xtab = xtab+1
    # Move personagem para CIMA
    elif(x=="W"):
			ytab = ytab-1
    # Move personagem para BAIXO
    elif(x=="S"):
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.901137
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 24
    if(x=="A"):
    ^
IndentationError: unexpected indent

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 21:11:54) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
	if(x=="A"):
		xtab = xtab-1
    # Move personagem para DIREITA
   elif(x=="D"):
		xtab = xtab+1
    # Move personagem para CIMA
   elif(x=="W"):
		ytab = ytab-1
    # Move personagem para BAIXO
   elif(x=="S"):
		ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- ERROR:
File "XXXX", line 27
    elif(x=="D"):
                ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 21:13:05) 
-- CODE:
from numpy import *

# Leitura do tabuleiro
tabuleiro = array(eval(input("Tabuleiro: ")))

# Sequencia de movimentos do personagem
mov = input("Movimentos: ")
i=tabuleiro.shape [0]
c=tabuleiro.shape [1]

# Posicao inicial do personagem
xtab = 0
ytab = 0

# Contadores de atributos do personagem
moeda = 0
life = 100

# Analise da jogada
for x in mov:
	tx=xtab
	ty=ytab
    # Move personagem para ESQUERDA
	if(x=="A"):
		xtab = xtab-1
    # Move personagem para DIREITA
    elif(x=="D"):
			xtab = xtab+1
    # Move personagem para CIMA
    elif(x=="W"):
			ytab = ytab-1
    # Move personagem para BAIXO
    elif(x=="S"):
			ytab = ytab+1
	if(xtab > c-1):
		xtab=xtab-1
	if(ytab > i-1):
		ytab=ytab-1
	if(xtab < 0):
		xtab=xtab +1
	if(ytab < 0):
		ytab=ytab+1

    # Trata evento
    # Moeda
		if tabuleiro[ytab,xtab] == 11:
			moeda = moeda+1
        # Apaga moeda do tabuleiro
        tabuleiro[ytab,xtab] = 0
    # Zumbi
    elif tabuleiro[ytab,xtab] == 22:
			life = life-5
	elif tabuleiro[ytab,xtab] ==33:
		xtab=tx
		ytab=ty

# Imprime saidas
print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)

-- EXECUTION TIME:
0.634394
-- ERROR:
  File "/home/codebench/codes/1850/1280/main.py", line 27
    elif(x=="D"):
                ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 22:03:14) 
-- CODE:
from numpy import *
tabuleiro= array(eval(input("Tabuleiro: ")))
mov=input("Movimentos: ")
l=tabuleiro.shape [0]
c=tabuleiro.shape [1]

xtab=0
ytab=0
moeda=0
life=100

for x in mov:
	tx=xtab
	ty=ytab
	if x == 'A':
		xtab= xtab - 1
	elif x== 'D':
		xtab= xtab + 1
	elif x=='W':
		ytab= ytab - 1
	elif x == 'S':
		ytab= ytab + 1
	if (xtab > c - 1):
		xtab== xtab - 1
	if (ytab > l - 1):
		ytab= ytab - 1
	if (xtab < 0):
		xtab= xtab + 1
	if (ytab <0):
		ytab= ytab + 1
		
	if tabuleiro[ytab,xtab] == 11:
		moeda= moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5 
	elif tabuleiro[ytab,xtab] == 33:
		xtab= tx
		ytab= ty

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import *
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 22:03:20) 
-- CODE:
from numpy import *
tabuleiro= array(eval(input("Tabuleiro: ")))
mov=input("Movimentos: ")
l=tabuleiro.shape [0]
c=tabuleiro.shape [1]

xtab=0
ytab=0
moeda=0
life=100

for x in mov:
	tx=xtab
	ty=ytab
	if x == 'A':
		xtab= xtab - 1
	elif x== 'D':
		xtab= xtab + 1
	elif x=='W':
		ytab= ytab - 1
	elif x == 'S':
		ytab= ytab + 1
	if (xtab > c - 1):
		xtab== xtab - 1
	if (ytab > l - 1):
		ytab= ytab - 1
	if (xtab < 0):
		xtab= xtab + 1
	if (ytab <0):
		ytab= ytab + 1
		
	if tabuleiro[ytab,xtab] == 11:
		moeda= moeda + 1
		tabuleiro[ytab,xtab] = 0
	elif tabuleiro[ytab,xtab] == 22:
		life = life - 5 
	elif tabuleiro[ytab,xtab] == 33:
		xtab= tx
		ytab= ty

print("posicao x: ", xtab)
print("posicao y: ", ytab)
print("moedas: ", moeda)
print("life: ", life)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
-- EXECUTION TIME:
0.84676
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1850/1280/main.py", line 32, in <module>
    if tabuleiro[ytab,xtab] == 11:
IndexError: index 13 is out of bounds for axis 1 with size 13

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
