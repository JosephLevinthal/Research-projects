== TEST (2019-04-11 11:13:11) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de \"x\":))
coordenada_y=float(input("Qual o valor de \"y\":))
x=y-3/2
y=2*x+3
if("coordenda_x"=y ,"coordenda_y"=x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 4
    coordenada_x=float(input("Qual o valor de \"x\":))
                                                     ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:13:58) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x":))
coordenada_y=float(input("Qual o valor de y":))
x=y-3/2
y=2*x+3
if("coordenda_x"=y ,"coordenda_y"=x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 4
    coordenada_x=float(input("Qual o valor de x":))
                                                ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:14:38) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"=y ,"coordenda_y"=x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"=y ,"coordenda_y"=x"):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:15:06) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:00) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x")
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x")
                                          ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 11:16:13) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 14:14:09) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 14:14:24) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 14:25:43) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- EXECUTION TIME:
0.181751
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 14:25:47) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:04:25) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:04:49) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"=y ,"coordenda_y"=x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"=y ,"coordenda_y"=x"):
                    ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:05:05) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:14:39) 
-- CODE:
# Teste seu código aos poucos.
# Não teste tudo no final, pois fica mais difícil de identificar erros.
# Use as mensagens de erro para corrigir seu código.
coordenada_x=float(input("Qual o valor de x:"))
coordenada_y=float(input("Qual o valor de y:"))
x=y-3/2
y=2*x+3
if("coordenda_x"==y ,"coordenda_y"==x"):
	mensagem="ponto pertence a reta."
print(mensagem,lower())
else:
	mensagem="ponto nao pertence a reta."
print(mensagem,lower())
-- ERROR:
File "XXXX", line 8
    if("coordenda_x"==y ,"coordenda_y"==x"):
                                           ^
SyntaxError: EOL while scanning string literal
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:26:22) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem("ponto pertencea reta.")
   print(mensagem)
else:
	mensagem("ponto nao pertence a reta.")
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:26:40) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem("ponto pertencea reta.")
else:
	mensagem("ponto nao pertence a reta.")
	print(mensagem)
-- EXECUTION TIME:
0.13182
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1649/1054/main.py", line 4, in <module>
    mensagem("ponto pertencea reta.")
NameError: name 'mensagem' is not defined

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:26:42) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem("ponto pertencea reta.")
else:
	mensagem("ponto nao pertence a reta.")
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem("ponto pertencea reta.")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:27:34) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem("ponto pertencea reta.")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:27:42) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- EXECUTION TIME:
0.28012
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:27:44) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 4, in <module>
    mensagem("ponto pertencea reta.")
NameError: name 'mensagem' is not defined
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:27:48) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- EXECUTION TIME:
0.129786
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:28:19) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
   print(mensagem)
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- EXECUTION TIME:
0.151813
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:28:22) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertencea reta."
   print(mensagem)
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:28:42) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:28:52) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- EXECUTION TIME:
0.159992
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:28:54) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:29:18) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:29:22) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem.lower())
-- EXECUTION TIME:
0.182377
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:

-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta.
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:29:33) 
-- CODE:
x= float(input("Valor de x:"))
y=float(input("Valor de y: "))
if(2*x+y==3):
	mensagem="ponto pertence a reta."
else:
	mensagem="ponto nao pertence a reta."
	print(mensagem.lower())
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:31:41) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta."
   print(mensagem)
else:
	mensagem= "ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:32:44) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta."
   print(mensagem)
else:
	mensagem= "ponto nao pertence a reta."
	print(mensagem)
-- EXECUTION TIME:
0.17876
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:32:47) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta."
   print(mensagem)
else:
	mensagem= "ponto nao pertence a reta."
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:33:06) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
   print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- EXECUTION TIME:
0.166821
-- ERROR:
  File "/home/codebench/codes/1649/1054/main.py", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:33:08) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
   print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- ERROR:
File "XXXX", line 5
    print(mensagem)
                  ^
IndentationError: unindent does not match any outer indentation level
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-11 18:33:25) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- OUTPUT:
ponto pertence a reta
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-11 18:33:26) 
-- CODE:
x=float(input())
y=float(input())
if(2*x+y==3):
	mensagem= "ponto pertence a reta"
	print(mensagem)
else:
	mensagem= "ponto nao pertence a reta"
	print(mensagem)
-- EXECUTION TIME:
0.129909
-- TEST CASE 1:
---- input:
20
-37
---- correct output:
ponto pertence a reta
---- user output:
ponto pertence a reta
-- TEST CASE 2:
---- input:
5
13
---- correct output:
ponto nao pertence a reta
---- user output:
ponto nao pertence a reta
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
