== TEST (2019-04-16 14:47:38) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()--"S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()--"N"):
		print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(bonificacao.upper()--"S"):
TypeError: bad operand type for unary -: 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:47:49) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()--"S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()--"N"):
		print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(bonificacao.upper()--"S"):
TypeError: bad operand type for unary -: 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:48:07) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()--"S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()--"N"):
		print(nota)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 3, in <module>
    if(bonificacao.upper()--"S"):
TypeError: bad operand type for unary -: 'str'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:49:04) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:49:10) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:49:23) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.151642
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
0.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
0.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:50:20) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:50:40) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:50:41) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
0.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:50:44) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota=nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.213294
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
0.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
0.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:50:53) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota-nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
4.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:51:01) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota-nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.229638
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
4.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
8.1
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-16 14:51:19) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- OUTPUT:
5.5
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-16 14:51:25) 
-- CODE:
nota=float(input("nota de zero a dez:   "))
bonificacao=input("recebera bonificacao:?   (S/N) ")
if(bonificacao.upper()=="S"):
	x=nota+nota*0.1
	print(x)
else:
	if(bonificacao.upper()=="N"):
		print(nota)
-- EXECUTION TIME:
0.147564
-- TEST CASE 1:
---- input:
5.0
S
---- correct output:
5.5
---- user output:
5.5
-- TEST CASE 2:
---- input:
9.0
S
---- correct output:
9.9
---- user output:
9.9
-- TEST CASE 3:
---- input:
4.4
N
---- correct output:
4.4
---- user output:
4.4
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
