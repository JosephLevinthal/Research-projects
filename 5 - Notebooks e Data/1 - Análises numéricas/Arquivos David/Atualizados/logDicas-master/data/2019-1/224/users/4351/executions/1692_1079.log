== TEST (2019-04-30 18:21:22) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
 print("Entradas: "a, "b,"c""
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas: "a, "b,"c""
    ^
IndentationError: unexpected indent
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:21:28) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas: "a, "b,"c""
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas: "a, "b,"c""
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:21:38) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas: "a, "b,"c
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas: "a, "b,"c
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:21:45) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas: "a, "b,"c"
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas: "a, "b,"c"
                      ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:22:35) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:" , a","b "," c
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas:" , a","b "," c
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:22:46) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:",a","b "," c
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas:",a","b "," c
                         ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:23:28) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a ",", b, ",", c
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 4
    print("Entradas:", a ",", b, ",", c
                           ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:23:44) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 6
    from math import*
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:24:04) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print(round(x, 3)
else:
	print("Invalida")
		else:
		 print("Invalida")
		 
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:24:55) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
	print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:27) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
	print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:25:50) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
		 
from math import*

if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 13
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:15) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:17) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:17) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:17) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:18) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:19) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:19) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:20) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:21) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:22) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:23) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:23) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:24) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:24) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:25) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:25) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:25) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:27:46) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
		 
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:28:21) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:29:04) 
-- CODE:
a=float(input(" numero a: "))
b=float(input(" numero b: "))
c=float(input(" numero c: "))
print("Entradas:", a, ",", b, ",", c)
from math import*
if (a<=0 or b<=0 or c<=0):
	if (a<=b+c or b<= a+c or c<=a+b):
		s=(a+b+c)/2
		x=sqrt(p*(p-a)*(p-b)*(p-c))
		print("area",round(x, 3)
	else:
		print("Invalida")
else:
	print("Invalida")
-- ERROR:
File "XXXX", line 11
    else:
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:31:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a<=0 or b<=0 or c<=0):
	# Testa se medidas correspondem aas de um triangulo
	if (a<= b+c or b<= a+c or c<= a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:31:19) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a<=0 or b<=0 or c<=0):
	# Testa se medidas correspondem aas de um triangulo
	if (a<= b+c or b<= a+c or c<= a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.30678
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:31:28) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a<=0 or b<=0 or c<=0):
	# Testa se medidas correspondem aas de um triangulo
	if (a<= b+c or b<= a+c or c<= a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.178985
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:31:40) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a<=0 or b<=0 or c<=0):
	# Testa se medidas correspondem aas de um triangulo
	if (a<= b+c or b<= a+c or c<= a+b):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:32:54) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:33:16) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:33:38) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.160504
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:34:58) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:35:04) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.161988
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: invalida
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:35:17) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if ((a<=0) or (b<=0) or (c<=0)):
	# Testa se medidas correspondem aas de um triangulo
	if ((a<= b+c) or (b<= a+c) or (c<= a+b)):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: -0.0
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-04-30 18:36:56) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a+b>c):
	# Testa se medidas correspondem aas de um triangulo
	if (a+b>c):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- OUTPUT:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-04-30 18:37:03) 
-- CODE:
# Ao testar sua solução, não se limite ao caso de exemplo.

from math import *

# Leitura dos lados do triangulo a, b, and c
a = float(input ("Lado 1: "))
b = float(input ("Lado 2: "))
c = float(input ("Lado 3: "))

print("Entradas:", a, ",", b, ",", c)

# Testa se pelo menos uma das entradas eh negativa 
if (a+b>c):
	# Testa se medidas correspondem aas de um triangulo
	if (a+b>c):
		s = (a + b + c) / 2.0
		area = sqrt(s * (s-a) * (s-b) * (s-c))
		area = round(area, 3)
		print("Area:", area)
	else:
		print("Area: invalida")
else:
	print("Area: invalida")
-- EXECUTION TIME:
0.183104
-- TEST CASE 1:
---- input:
-11.0
22.0
33.0
---- correct output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: -11.0 , 22.0 , 33.0
Area: invalida
-- TEST CASE 2:
---- input:
1.61
2.40
2.89
---- correct output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
---- user output:
Entradas: 1.61 , 2.4 , 2.89
Area: 1.932
-- TEST CASE 3:
---- input:
11.0
22.0
33.0
---- correct output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
---- user output:
Entradas: 11.0 , 22.0 , 33.0
Area: invalida
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
