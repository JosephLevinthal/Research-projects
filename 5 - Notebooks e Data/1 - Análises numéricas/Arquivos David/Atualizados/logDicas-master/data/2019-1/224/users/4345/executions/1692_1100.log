== SUBMITION (2019-05-01 20:39:27) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:" , "Tartaruga")
elif (a==2):
	print("Animal:" , "Tartaruga")
	elif (a==5):
	print("Animal:" , "Garça")
	elif (a==10):
	print("Animal:" , "Arara")
	elif (a==20):
	print("Animal:" , "Mico-leao-dourada")
	elif (a==50):
	print("Animal:" , "Onca-pintada")
	elif (a==100):
	print("Animal:" , "Garoupa")
	elif (a==2):
	print("Animal:" , "invalido")
-- EXECUTION TIME:
0.131547
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:40:10) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:" , "Tartaruga")
elif (a==2):
	print("Animal:" , "Tartaruga")
	elif (a==5):
	print("Animal:" , "Garça")
	elif (a==10):
	print("Animal:" , "Arara")
	elif (a==20):
	print("Animal:" , "Mico-leao-dourada")
	elif (a==50):
	print("Animal:" , "Onca-pintada")
	elif (a==100):
	print("Animal:" , "Garoupa")
	else:
	print("Animal:" , "invalido")
-- EXECUTION TIME:
0.145108
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:40:13) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:" , "Tartaruga")
elif (a==2):
	print("Animal:" , "Tartaruga")
	elif (a==5):
	print("Animal:" , "Garça")
	elif (a==10):
	print("Animal:" , "Arara")
	elif (a==20):
	print("Animal:" , "Mico-leao-dourada")
	elif (a==50):
	print("Animal:" , "Onca-pintada")
	elif (a==100):
	print("Animal:" , "Garoupa")
	else:
	print("Animal:" , "invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:40:31) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:" , "Tartaruga")
elif (a==2):
	print("Animal:" , "Tartaruga")
	elif (a==5):
	print("Animal:" , "Garça")
	elif (a==10):
	print("Animal:" , "Arara")
	elif (a==20):
	print("Animal:" , "Mico-leao-dourada")
	elif (a==50):
	print("Animal:" , "Onça-pintada")
	elif (a==100):
	print("Animal:" , "Garoupa")
	else:
	print("Animal:" , "invalido")
-- EXECUTION TIME:
0.165383
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:40:33) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:" , "Tartaruga")
elif (a==2):
	print("Animal:" , "Tartaruga")
	elif (a==5):
	print("Animal:" , "Garça")
	elif (a==10):
	print("Animal:" , "Arara")
	elif (a==20):
	print("Animal:" , "Mico-leao-dourada")
	elif (a==50):
	print("Animal:" , "Onça-pintada")
	elif (a==100):
	print("Animal:" , "Garoupa")
	else:
	print("Animal:" , "invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:41:22) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Tartaruga")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupa")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:41:27) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Tartaruga")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupa")
	else:
	print("Animal:", "Invalido")
-- EXECUTION TIME:
0.176506
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:41:40) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Tartaruga")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:41:43) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Tartaruga")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- EXECUTION TIME:
0.172658
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:42:42) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:42:57) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- EXECUTION TIME:
0.217829
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:42:59) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif (a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif (a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:43:19) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif(a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif(a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:43:44) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif(a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- EXECUTION TIME:
0.145778
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 8
    elif(a==5):
       ^
SyntaxError: invalid syntax

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-01 20:43:48) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
elif (a==2):
	print("Animal:", "Tartaruga")
	elif(a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- ERROR:
File "XXXX", line 8
    elif(a==5):
       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-01 20:44:42) 
-- CODE:
a=int(input("digite valor da celula:"))

print("Entrada:", a)
if ((a>100) or (a<0)):
	print("Animal:", "Invalido")
   elif (a==2):
	print("Animal:", "Tartaruga")
	elif(a==5):
	print("Animal:", "Garça")
	elif (a==10):
	print("Animal:", "Arara")
	elif (a==20):
	print("Animal:", "Mico-leao-dourada")
	elif (a==50):
	print("Animal:", "Onça-pintada")
	elif (a==100):
	print("Animal:", "Garoupe")
	else:
	print("Animal:", "Invalido")
-- EXECUTION TIME:
0.153348
-- ERROR:
  File "/home/codebench/codes/1692/1100/main.py", line 6
    elif (a==2):
               ^
IndentationError: unindent does not match any outer indentation level

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
