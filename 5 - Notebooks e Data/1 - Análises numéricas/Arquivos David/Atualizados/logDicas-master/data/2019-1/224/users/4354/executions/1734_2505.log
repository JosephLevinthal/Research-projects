== TEST (2019-05-09 19:44:12) 
-- CODE:
from math import *
ang = radians(float(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ang = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:44:26) 
-- CODE:
from math import *
ang = radians(float(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ang = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:45:26) 
-- CODE:
from math import *
ang = radians(float(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 1
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ang = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:45:36) 
-- CODE:
from math import *
ang = radians(float(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 1
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 2, in <module>
    ang = radians(float(input()))
ValueError: could not convert string to float: 'pi/2'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:46:25) 
-- CODE:
from math import *
ang = eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- ERROR:
File "XXXX", line 2
    ang = eval(input()))
                       ^
SyntaxError: invalid syntax
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:46:34) 
-- CODE:
from math import *
ang = eval(input("angulo x: "))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
-2.2448088122322445
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:44:58) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.054803665138453604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:45:09) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.054803665138453604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:45:17) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	while(b < k):
		sinal = (-1)**b
		ang = ang + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.054803665138453604
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:47:00) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:47:37) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:47:42) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:48:43) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:48:56) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:49:04) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:50:51) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
print(ang)

-- OUTPUT:
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:53:56) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/factorial(i))
		i = i + 2
		b = b + 1
		print(ang)

-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:57:51) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + sinal*((ang**i)/(factorial(i)))
		i = i + 2
		b = b + 1
		print(ang)

-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:58:14) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + (sinal*((ang**i)/(factorial(i))))
		i = i + 2
		b = b + 1
		print(ang)

-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 12:59:03) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + (sinal*((ang**i)/(factorial(i))))
		i = i + 2
		b = b + 1
		print(ang)

-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:05:02) 
-- CODE:
from math import *
ang = radians(eval(input("angulo x: ")))
k = int(input("termos: "))
if(-pi <= ang <= pi):
	i = 1
	b = 0
	soma = 0
	while(b < k):
		sinal = (-1)**b
		soma = soma + (sinal*(((ang)**i)/(factorial(i))))
		i = i + 2
		b = b + 1
		print(ang)

-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:28:16) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:28:18) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
-- OUTPUT:
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
0.027415567780803774
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:28:44) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(soma)
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.027412133592046604
0.027412133592044294
0.027412133592044294
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:29:45) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(soma)
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.027412133592046604
0.027412133592044294
0.027412133592044294
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:29:50) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(soma)
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.027412133592046604
0.027412133592044294
0.027412133592044294
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:33:04) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(soma)
-- OUTPUT:
0.027415567780803774
0.027412133462982647
0.027412133592046604
0.027412133592044294
0.027412133592044294
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:35:37) 
-- CODE:
from math import *
ang = radians(eval(input("digite o angulo x: ")))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(round(soma,10))
-- OUTPUT:
0.0274155678
0.0274121335
0.0274121336
0.0274121336
0.0274121336
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:36:06) 
-- CODE:
from math import *
ang = eval(input("digite o angulo x: "))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(round(soma,10))
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-11 13:36:20) 
-- CODE:
from math import *
ang = eval(input("digite o angulo x: "))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
	print(round(soma,10))
-- OUTPUT:
1.5707963268
0.9248322293
1.0045248555
0.9998431014
1.0000035426
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-11 13:36:32) 
-- CODE:
from math import *
ang = eval(input("digite o angulo x: "))
k = int(input("numero de termos: "))
soma  = 0
b = 1
i = 0

while(i < k):
	sinal = (-1)**i
	sen = sinal*((ang**b)/factorial(b))
	soma = soma + sen
	b = b + 2
	i = i + 1
print(round(soma,10))
-- EXECUTION TIME:
0.139768
-- TEST CASE 1:
---- input:
pi/2
5
---- correct output:
1.0000035426
---- user output:
1.0000035426
-- TEST CASE 2:
---- input:
-pi/2
4
---- correct output:
-0.9998431014
---- user output:
-0.9998431014
-- TEST CASE 3:
---- input:
pi/3
3
---- correct output:
0.8662952838
---- user output:
0.8662952838
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
