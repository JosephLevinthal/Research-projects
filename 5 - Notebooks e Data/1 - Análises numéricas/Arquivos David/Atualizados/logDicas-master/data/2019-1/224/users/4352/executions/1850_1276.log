== SUBMITION (2019-07-01 22:34:03) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
ma = mat.shape[0]
z = zeros(ma,dtype=int)
for i in range(ma):
	z[i] = sum(mat[i,:])
print(z)
-- EXECUTION TIME:
1.22222
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1850/1276/main.py", line 4, in <module>
    ma = mat.shape[0]
AttributeError: 'function' object has no attribute 'shape'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 22:34:15) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
ma = mat.shape[0]
z = zeros(ma,dtype=int)
for i in range(ma):
	z[i] = sum(mat[i,:])
print(z)
-- EXECUTION TIME:
0.969643
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1850/1276/main.py", line 4, in <module>
    ma = mat.shape[0]
AttributeError: 'function' object has no attribute 'shape'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:05:12) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = mat.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for m in range(size(z)):
	if z[m] == max(z):
		print(m+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:06:43) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = mat.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for m in range(size(z)):
	if z[m] == max(z):
		print(m+1)
-- EXECUTION TIME:
1.06668
-- ERROR:
Traceback (most recent call last):
  File "/home/codebench/codes/1850/1276/main.py", line 4, in <module>
    n = mat.shape [1]
AttributeError: 'function' object has no attribute 'shape'

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:11:43) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = m.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for m in range(size(z)):
	if z[m] == max(z):
		print(m+1)
-- EXECUTION TIME:
1.10177
-- TEST CASE 1:
---- input:
[[4,4,4,4,4,4,4],[3,3,3,3,3,3,3],[6,6,6,6,6,6,6],[1,2,1,2,1,2,7],[9,8,9,3,4,6,8],[5,6,5,6,5,6,8],[2,1,2,3,6,5,2]]
---- correct output:
7
---- user output:
7
-- TEST CASE 2:
---- input:
[[9,8,8,5,3,2,4],[9,9,2,4,5,6,7],[7,8,6,4,3,5,6],[9,9,8,8,8,8,8],[6,6,1,2,1,2,1],[5,6,4,3,4,3,2],[5,9,3,4,5,6,8],[8,7,8,5,6,5,2],[4,9,5,6,8,7,2]]
---- correct output:
2
---- user output:
2
-- TEST CASE 3:
---- input:
[[1,1,7,9,9,9,9],[1,2,7,5,5,5,5],[2,3,7,4,4,4,4],[2,4,7,6,6,6,6],[2,6,6,3,4,3,2],[6,5,6,4,5,6,8],[8,7,7,5,6,5,2],[7,8,9,6,8,7,2]]
---- correct output:
3
---- user output:
digite a matriz: 3
-- GRADE:
67%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:18:28) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = m.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for k in range(size(z)):
	if z[k] == max(z):
		print(k+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-07-01 23:19:22) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = m.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for k in range(size(z)):
	if z[k] == max(z):
		print(k+1)
-- ERROR:
Traceback (most recent call last):
  File "XXXX", line 1, in <module>
    from numpy import*
ModuleNotFoundError: No module named 'numpy'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-07-01 23:20:01) 
-- CODE:
from numpy import*
from numpy.linalg import*
m = array(eval(input("digite a matriz: ")))
n = m.shape [1]
z = zeros(n, dtype=int)
for j in range(n):
	z[j] = sum(m[:,j])
for k in range(size(z)):
	if z[k] == max(z):
		print(k+1)
-- EXECUTION TIME:
1.07259
-- TEST CASE 1:
---- input:
[[4,4,4,4,4,4,4],[3,3,3,3,3,3,3],[6,6,6,6,6,6,6],[1,2,1,2,1,2,7],[9,8,9,3,4,6,8],[5,6,5,6,5,6,8],[2,1,2,3,6,5,2]]
---- correct output:
7
---- user output:
7
-- TEST CASE 2:
---- input:
[[9,8,8,5,3,2,4],[9,9,2,4,5,6,7],[7,8,6,4,3,5,6],[9,9,8,8,8,8,8],[6,6,1,2,1,2,1],[5,6,4,3,4,3,2],[5,9,3,4,5,6,8],[8,7,8,5,6,5,2],[4,9,5,6,8,7,2]]
---- correct output:
2
---- user output:
2
-- TEST CASE 3:
---- input:
[[1,1,7,9,9,9,9],[1,2,7,5,5,5,5],[2,3,7,4,4,4,4],[2,4,7,6,6,6,6],[2,6,6,3,4,3,2],[6,5,6,4,5,6,8],[8,7,7,5,6,5,2],[7,8,9,6,8,7,2]]
---- correct output:
3
---- user output:
3
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
