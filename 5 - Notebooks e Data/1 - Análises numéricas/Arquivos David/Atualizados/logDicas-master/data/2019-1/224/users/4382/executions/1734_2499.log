== SUBMITION (2019-05-09 19:17:52) 
-- CODE:
from math import factorial
k = int(input("termos :"))
e = 1 
i = 0
while(i < k):
	e = e + 1/factorial(i)
	i = i + 1
print(round(e,8))

-- EXECUTION TIME:
0.179795
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
3.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
3.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
3.71666667
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 19:18:03) 
-- CODE:
from math import factorial
k = int(input("termos :"))
e = 1 
i = 0
while(i < k):
	e = e + 1/factorial(i)
	i = i + 1
print(round(e, 8))

-- EXECUTION TIME:
0.210886
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
3.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
3.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
3.71666667
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== TEST (2019-05-09 19:18:07) 
-- CODE:
from math import factorial
k = int(input("termos :"))
e = 1 
i = 0
while(i < k):
	e = e + 1/factorial(i)
	i = i + 1
print(round(e, 8))

-- OUTPUT:
3.71805556
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 19:18:14) 
-- CODE:
from math import factorial
k = int(input("termos :"))
e = 1 
i = 0
while(i < k):
	e = e + 1/factorial(i)
	i = i + 1
print(round(e , 8))

-- EXECUTION TIME:
0.124115
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
3.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
3.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
3.71666667
-- GRADE:
0%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
== SUBMITION (2019-05-09 19:18:39) 
-- CODE:
from math import factorial
k = int(input("termos : "))
e = 0 
i = 0
while(i < k):
	e = e + 1/factorial(i)
	i = i + 1
print(round(e , 8))

-- EXECUTION TIME:
0.163626
-- TEST CASE 1:
---- input:
7
---- correct output:
2.71805556
---- user output:
2.71805556
-- TEST CASE 2:
---- input:
15
---- correct output:
2.71828183
---- user output:
2.71828183
-- TEST CASE 3:
---- input:
6
---- correct output:
2.71666667
---- user output:
2.71666667
-- GRADE:
100%
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
